<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>何当共剪西窗烛</title>
    <url>/2018/05/18/%E4%BD%95%E5%BD%93%E5%85%B1%E5%89%AA%E8%A5%BF%E7%AA%97%E7%83%9B/</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 时光：“你说你以前为什么没有女朋友。” <br> 我：“因为你没有出现呀 “ <br> 时光：” 那你以后为什么没有。“  <br> 时光：”emmm... 因为我不让她出现。” </blockquote>

<p>时光来了南京，今晚接她下班的时候，我们在路上买了两份面回去，一份鸡腿面，一份呢，是青菜的。在夫子庙地铁站旁上海商业储蓄银行旧址拐角的地方发现一只喵，猫很乖，我们路过的时候它乖兮兮地向我们咪咪叫，眼睛看着我们。我和时光都觉得它是饿了，刚好我们手里拿着打包的面，想喂它鸡腿。猫也闻到了味道，一直意欲走向我们的面。打包的袋子还没打开，它就想往上边蹭。我们便一人挡着猫咪，一人去开袋子，银行墙上有许多的窗子，我们便在一个个窗子上与猫做游击战，它跳过来，我们就换个窗户开袋子。两人一猫，交相流转，好不笑闹。费了好大的功夫，我们终于打开了饭盒，用筷子夹了鸡腿放在窗台上给猫主子。结果猫主子闻了闻，走在了一边，没有吃。当时我就慌了，妈耶，这可是我俩唯一的鸡腿呀，没有吃喂给主子了主子却不待见，我俩只有青菜了，TAT。我和时光用手指指着鸡腿，想告诉猫咪来这里吃鸡腿，它闻了闻，还是没有次。我们猜可能是整个鸡腿太大又有些烫，它不好下嘴，时光又特意用窗台上的签子给它分开。时光欺负起我来的时候凶巴巴，这时候却是温柔的要死，我站在一旁注视着她。晚风刚好，时间像是暂停了，满心的幸福。这曾是异地时幻想多少次的场景呀，晚上接她下班，回家的路上牵着手，想着一天的生活。一霎时，突然想写篇文章来记录和时光在一起的生活，记录下生活中那些触动心灵的点点滴滴。<span id="more"></span></p>
<p>像我这样的起名困难综合征来说给文章、角色、账号起名字实是困扰，每次都想着能够起一个好些的名字，文艺悠雅一些，说起来的时候也要好听一些，当想起几个题目时又开始纠结选这个还是选那个好。给这篇文章起题目的时候又是一番纠结，从喂猫回来的路上就开始想，有着 “雪沫乳花浮午盏 ，人间有味是清欢”，也有着 “矮纸斜行闲作草，晴窗细乳戏分茶 ”，总之是些清快欢愉的诗词。回到家中吃过晚饭，说起这件事，时光说：“我觉得不如叫做‘何当共剪西窗烛’呢 ”。一语说出，我的心灵和脑海像读到自己最心爱的文字，那般欢畅。</p>
<p>恰到好处。君问归期未有期，巴山夜雨涨秋池。何当共剪西窗烛，却话巴山夜雨时。好美好有意境的一首诗，归期的希望与未有期的失望交融在一起，当下离别的不舍又与期望日后相逢的美好交融在一起，不知诗人霎那的感情变化与多少离人的心意相汇相通。“何当共剪西窗烛” 一句，不知给了异地时期的自己多少期望与力量，恰好，李商隐是自己最喜欢的诗人，时光所在的 QQ 好友分栏的名字，也恰好是 “何当共剪西窗烛”。一切像是天意注定的缘分。文章本天成，妙手偶得之，这句诗或许便是天意所成吧。一段时间，自己社交网络的名字喜欢叫之伊，不曾向别人解释它的意思，其实之取文言 “到…… 去” 之意，之伊两个字的意思便是 “到你身边”。这是异地时所朝思暮想的愿望，遂以此为名，非常感谢时光，用着巨大的勇气跨越山水，人海茫茫中来到一个陌生的城市，让一个男孩子的梦想变成现实。</p>
<p align="right">2018 年 5 月 18 日</p>
<hr>

<blockquote class="blockquote-center">每次往后加都要翻到最后，因为自己用的 typora，会自动把图片加载出来，所以要翻好久好久，所以决定从现在开始逆序更新啦～</blockquote>


<ul>
<li><p>时光想早上起来趁猫睡觉时给它剪指甲，结果人还没起猫先起来了。</p><p align="right">2021 年 4 月 5 日</p><p></p>
</li>
<li><p>时光：“记得小蘋初见，两重心字罗衣。” 当我正准备接的时候，时光突然加快语速：“稻花香里说丰年，听取蛙声一片。”…… 魔鬼</p><p align="right">2019 年 5 月 10 日</p><p></p>
</li>
<li><p>买了三只松鼠的零食，包装上写着 “我们的草莓和钻石一样珍贵。” 时光读了一遍后，：“放屁，钻石劳资买不起，你这蓝莓我还是买得起的。”</p><p align="right">2019 年 4 月 1 日</p><p></p>
</li>
<li><p>接时光下班回家，旁边有人骑摩托车过去后回头看她。时光：“那人看后肯定惊讶，天！怎么会有背影这么好看，脸也这么好看的人！”</p><p align="right">2019 年 3 月 31 日</p><p></p>
</li>
<li><p>今天有小姐姐夸小姐姐漂亮，嘻嘻嘻嘻，开心得我，决定再放些照 pian。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/IMG_20190310_160347.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/IMG_20190310_160551.jpg"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/IMG_20190310_144631.jpg"></p>
</li>
<li><p>“你不要一口喝完”， “嗯，好。” <br>于是， 我喝完一口愣了下，两口喝完了。</p>
</li>
<li><p>“cmh<del>cmh</del>” 上班路上，时光不厌烦的喊着我的名字。<br>这种情况想不让她喊是不可能的，直接说也是不可能的，于是便说着自恋的话搪塞她。<br>“怎么这么帅～诶呀，这么帅的小伙子不知道便宜了哪家小姑娘。”</p><p align="right">每天上班路上的日常</p><p></p>
</li>
<li><p>“ennn~~~~”“假装自己有电动牙刷，我感觉我这是声控牙刷， wenwenwenwen~” 时光怎么可以这么可爱。</p><p align="right">2018 年 12 月不知道几日</p><p></p>
</li>
<li><p>“这雪鸽了”“这雪是鸽子牌的，咕咕咕，咕咕咕。” 时光睡眼惺忪地说。时光在的时候南京下场雪吧，真得期待了好久。</p><p align="right">2018 年 12 月 8 日</p><p></p>
</li>
<li><p>聊起《果宝特攻》，时光：“那个香蕉叫菠萝吹雪。” 两人哈哈哈哈哈。</p><p align="right">2018 年 11 月 30 日</p><p></p>
</li>
<li><p>今天也是元气满满的两个人。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20181129/0YEDSaRaQsK7.jpg" alt="mark"></p><p align="right"> 2018 年 11 月 27 日</p><p></p>
</li>
<li><p>今天有学妹公众号写文章的时候写到了我们两个，这样描述：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/Screenshot_2018-06-02-19-56-26-586_com.tencent.mm.png" alt="学妹描写截图"> </p><p align="right">2018 年 5 月 21 日</p><p></p>
</li>
<li><p>和青青聊起了和时光的生活，小姐姐做饭吃，我刷锅洗碗，青青说她发现有点甜（洛天依）那首歌，特别特别适合我们两个，歌词都适配。我听了一下，好像我们两个，嗯，有点甜。<br></p><blockquote class="blockquote-center">六月我就开始实习工作<br>哎呀怎么这样我有好多话没对你说<br> 算了算了只有每天晚上电话告诉我<br>那你千万要开机<br>我一个也不错过<br>因为我想和你一起生活<br>请你少打游戏早点睡觉按时去上课<br>你也认真工作注意身体要劳逸结合<br>周围漂亮姑娘多<br>可我经得住诱惑<br>你不老实我就找小帅哥<br>下班早一点回家不要在大街上漂泊<br>想起从前你载着我变身摩的大镖客<br>天黑有坏人出没<br>那就你来保护我<br>生活最佳伴侣非你不可<br>是你让我的世界在那刻变成粉红色<br>是你让我的生活从此都只要你配合<br>青椒肉丝我来做<br>饭后洗碗交给我<br>因为想要和你一起生活<br>因为想要和你一起生活<br><p align="right">—— 洛天依、言和 《有点甜》</p></blockquote>有点甜链接： <audio src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/%E6%B4%9B%E5%A4%A9%E4%BE%9D,%E8%A8%80%E5%92%8C%20-%20%E6%9C%89%E7%82%B9%E7%94%9C%20%28%E5%8D%95%E6%9B%B2%E7%89%88%29.mp3" controls="controls">您的浏览器不支持该音乐播放控件。</audio><p></p>
<p align="right">2018 年 5 月 25 日</p> 
</li>
<li><p>今天是学骑车的时光和教时光骑车的崔明浩。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/IMG_20180527_175254.jpg" alt="骑车"></p><p align="right">2018 年 5 月 27 日</p><p></p>
</li>
<li><p>“时光，快看，这里有只捉住的小老鼠。”<br> “你加个‘小’字是想说它可爱吗？她们说仓鼠白白的可爱，而且没有尾巴，我觉得这种老鼠有尾巴，灰色的，不可爱。”<br> “OK，我懂你的意思，我这就养一只老鼠。”<br> “那你就跟老鼠睡。” <br> “那我养只小猪。”<br> “那你就跟猪睡去，反正你养啥就跟啥睡。”<br> “那我当然要养你啦。”<br> “你 (和谐) 现在还花着劳资的养老钱。”</p>
</li>
<li><p>早上送时光的时候过马路，转弯的地方来了一辆并不是很快的摩托，时光在我前边些，要过马路，摩托越来越近，我想牵着时光，给她说 “你看着摩托些”。刚说 “你看….” 看刚出口，还没说一半的时候，就见时光 biu 地一下已经跑到了马路对面，（没办法呀，人家大长腿）骑摩托的小哥一脸懵比，我站在原地也是一脸懵比，大脑像是停滞呆住了那么一两秒，转过头来对小哥不好意思的说 “你看着些”。等小哥开过后，我才走了过去，和时光说起这件事，两个人在大街上笑得像两个傻子。<br>时光视角：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/mmexport1527665651762.jpg"> 不得不承认我果真不会写记事，每写起来句子总会很冗余，时光写起来就很精简而有趣，好生羡慕。她又想炫一下文技，以我的视角写了篇：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/mmexport1527665645322.jpg"></p>
</li>
<li><p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/Screenshot_2018-05-30-08-46-44-897_com.tencent.mo.png" alt="买衣服"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/Screenshot_2018-05-30-08-46-53-477_com.tencent.mo.png" alt="买衣服"></p>
</li>
</ul>
<p align="right"> 2018 年 5 月 30 日</p>

<ul>
<li>童年已逝，童心不老。无论生活什么滋味，都要童心不老。时光节日快乐。(・̀ .̫・́)✧ <p align="right">2018 年 6 月 1 日</p></li>
<li>送时光上班的路上给时光背着包，提着饭盒，苦笑着自己是苦力。时光说：“我要努力工作多赚些钱。”<br>春心萌动，心弦撩拨<br> “买个好的包让你背，这样你就是一个倍儿有面子的苦力了。”<br>我…</li>
<li> 今天是第一次烧厨房的崔明浩。<br>老干妈真好吃。嘻嘻嘻。<p align="right">2018 年 6 月 2 日</p></li>
<li> “咱俩老了怎么办，广场舞看起来好难呀。”<p align="right">从地铁口出来的日常</p></li>
<li>这几天没有在地铁口看到跳广场舞的阿姨，但两个人还是会向往常一样感慨 “广场舞看起来好难呀。”</li>
<li>“咱家地上好多头发。”<br>“知道了吧，有女生的地方就会有头发。”<br>“尼姑庵。”</li>
<li> 虽然今天因为坑比 “房东” 闹得很生气， 但刚刚刷锅的时候小姐姐看抖音看到情侣背着过雨天地上积水， 说：“你当时都是抱着我过的。” 一下想起去年暑假的时候公主抱着过雨水比较深的地方，突然觉得超甜。 开心。  <p align="right">2018 年 6 月 19 日</p></li>
<li> “哇，逆水寒今天开了好多服呀，有浮生若梦…..（以下服务器读一遍）”<br>“我们去巴山夜雨吧，巴山夜雨涨秋池”<br>“只有我喜欢吹梦西洲吗，吹梦到西洲，诶，上一句是啥来着”<br>“南风知我意”<br>“哦对对，应该有个服叫南风我意”<br>“666, 情侣服”<br>“厉害了，异地恋”<br>“异服恋异服恋” <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/psb.jpg"><p align="right">2018 年 6 月 22 日</p></li>
<li>夏天，接她下班，走在路上，右手边是她，左边的裤兜是钥匙和手机。</li>
<li>地铁闸机前，提着饭盒，挎着包包，我笨拙滑稽地掏着地铁卡，时光则一身轻松地刷卡进去，一脸催促地给我说：“车来了！”，我慌张仓促地刷卡、下楼梯，跑到地铁门前，回头望，时光却在悠闲地下着楼梯，不紧不慢，“你快点，车来啦！” 我像她一样地催促着。她依旧从容自若，泰然迈步。哼，给我说车来的是你，不上车的也是你。&nbsp;(๑¯ิε ¯ิ๑) <p align="right">2018 年 6 月 28 日</p></li>
<li>千万不要让女票拿到你手机，尤其是装作你和你妈聊天。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180701/b17fh6F2ha.png" alt="mark"><p align="right">2018 年 9 月 3 日</p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180701/Fa5kefCgI7.png" alt="mark"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180701/m1bjimiELl.png" alt="mark"></li>
<li>打开前置摄像头，“啊～我怎么这么丑，你快救救我”，边走边嚎着。<br>“救不了救不了，只能回炉重造了”<p align="right">2018 年 7 月 1 日</p></li>
<li><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180713/17JA93jccL.png" alt="mark"><p align="right"> 2018 年 7 月 11 日</p></li>
<li>火车晚点了，时光打了电话来。火车晚了很久，但我一点也不难过。<p align="right">2018 年 7 月 17 日</p></li>
<li> “我要秃顶啦” <br> “秃顶哪有那么容易”<br> “哪不容易” <br> “人们以后就说秃顶秃得跟蒋泽萍一样。” <br> “你是不是活得不耐烦了” （过了片刻） “以后人们就说作死作得跟崔明浩一样。” <p align="right">2018 年 7 月 17 日</p></li>
<li> “你转过头来，我看看。（片刻）我觉得你没那么丑了，甚至还有些小帅。” <br>内心：啊哈哈，开心，终于不被嫌弃了。 “你终于开始反思你以前的审美并为之忏悔了。” <br> 简直实力作死，啊哈哈。 <p align="right">2018 年 7 月 18 日</p></li>
<li>暑假集训的第一天，是多校的题目，脑袋又痛了起来。晚上趴在小姐姐腿上卖乖，小姐姐给我揉脑袋。天呐，幸福到爆炸。小姐姐超好呀～<p align="right">2018 年 7 月 23 日</p></li>
<li>夜里有些肚子痛，早起也还有些，QAQ，小姐姐担心我难受今天没有去上班，早上还热了水给我。晚上她打游戏不开心说了我几句，出去买米的时候本来蛮委屈的但想起这事又很开心。 <p align="right">2018 年 7 月 27 日</p></li>
<li>记忆越来越不好了，上午要记的事情下午就已然忘记了。记不太清楚上午发生的事情，我和小姐姐笑得很开心。</li>
<li>大概是上午我们一起打扫家里，小姐姐夸耀自己扫地很干净，说 “时光真是个小天才，扫地这么干净”。我在擦厨房墙上的油渍，过了会，说：“崔明浩真是个小天才，擦了跟没擦一样。”</li>
<li> 我们买来了饺子皮，却没有盛饺子的东西，就把饺子放进了铁锅里放入了冰箱的冷冻，今天的时候饺子一并冻在了锅壁上 =。= 取饺子的时候那是一个不堪。喝饺子汤的时候吃到了肉。<br>“嘿，你看，这饺子汤里有肉！”<br>两个人又是笑个不停。你看，饺子里丢的肉在饺子汤里还给了你，属于你的总不会少的。</li>
<li>我可能是最不好的男朋友了，小姐姐来南京快三个月了，我只带小姐姐去了夫子庙。<p align="right">2018 年 8 月 5 日</p></li>
<li>和你在一起的时候，<br>每一天都是七夕。<p align="right">2018 年 8 月 17 日   七夕</p></li>
<li>抱小姐姐的时候好暖呀。<p align="right">2018 年 9 月 3 日</p></li>
<li>千万不要让女票玩你手机，并和你妈聊天（第二弹）<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/181104/mmLA39EJLf.png" alt="mark"> <p align="right">2018 年 10 月 22 日</p></li>
<li> “嘿 <del>我看不见”<br>“白</del> 我看得见。黑白相间<del>我一会看不见一会看得见</del>”<p align="right">2018 年 11 月 3 日</p></li>
<li>不更博客有一段时间了，这段时间内自己忙得可以说是急头乱额（虽然现在也是），有着许多要做的事，而更新技术文章要用很多时间，所以极少地来写。平常和时光在一起时有着愉快的事情，心里念着要写上博客，可因为更博客要在电脑上，事情一拖，后来便错过了。这段时间有着许许多多开心的事情，抱着她的时候觉得超暖超暖，有时聊天会让你觉得幸福感爆炸。在家能用电脑敲代码的时间逐渐多了起来，时光也一点点放开了时间（QAQ，当然也因为我洗碗变快了，当当当当）。这让我觉得蛮棒的。哦对，我们 10 月 1 国庆的时候回了我家，时光见过了我家里。总体来说我觉得还好吧，不过我总觉得自己没有做好，或许在我家会让她有一种孤独的感觉，回来后被批斗说我吃饭的时候没有给她夹菜。（TAT， 天呐，我居然忘了这个，不可饶恕。以后有别人吃饭一定记得 = w = 嘿！）家里给了时光光红包，我保险的 3000 也下来了，加上之前剩下的和时光的工资，减去房租， 我们 10 月份有些余钱。和时光商量后我买了心心念念的机械键盘，之前说阿米洛樱花是我第二个机械键盘，可现在实在忍不住它的秀丽，第一个就买了它。没有错，我现在就在用着它来敲这篇文章。天呐，机械键盘和非机械键盘真的相差甚远！让人忍不住想敲它，手感超棒！如果我能早些买我觉得我得和键盘吸在一起，天天敲代码（虽然现在就这样，一有时间就想跑到键盘面前敲一段）。和时光在家里也发生了一些好玩的事，等下用图片发下。时光在家里也不开心了几次，唔，或许是觉得孤单和遥远吧，想起来也是蛮伤的。（写到这里莫名想摸下她的头）10 月这一个月呢，也是有着开心和难过。10 月我见了她哭的最厉害的一次。 事情的一开始是诗词大会决赛的周六，结束后红楼社、读协想一起去吃个饭，国学社这边有学习会，我觉得国学社没人过去不太好，又想早些回去陪宝宝，和他们去吃饭的话可以中途走早些回，就跟他们一起去吃了饭。还没有开始，时光便打了电话来，问我在哪，什么时候回，我支支吾吾地说在外面吃饭（当然是因为怂），时光说知道了，便挂了电话。我当时就知道大事不妙，心情也瞬间暗了下来。草草和他们一起吃了饭（虽然心根本没在那），便赶回了家，果然 = =。这次我没有过多解释，因为我觉得好累（不是说解释会累啦，而是自己累），只是抱着她。晚上我哭得很厉害，和青青说想一点点退了国学社。青青是性格蛮好的姑娘，给我说了一些话，也理解我。退国学社真得很不舍…… 一直很想为国学社做些事情，可现在的我，真的做不出来了。第二天，我看到垃圾桶里有着泡好的粉，瞬间明白时光昨晚想等我回来一起吃粉，已经泡好。可我没有告诉她。自觉给她买了早餐，送她去上班，回来她告诉我生气是因为我没有告诉她在外面吃，回来要晚些，告诉她一声很难吗。我没有告诉她我想早些回来陪着她，可要在外面不能回来心里觉得很愧疚，自己觉得没有脸告诉她不能早些回。其实我们都知道矛盾算差不多和解了，可我偏偏脑抽筋 = =。想告诉她其实我要做的事情蛮多的，其实有些累，平常时间少，很努力地空出时间来多陪着她了。觉得这些话等她下班回来面对面捧着脸说比较好，在手机上发文字显得矫情（事实上也的确是当时矫情了一下，平常开心的时候并不会想这些）。她要我当时就告诉她，我没有。她说我不说她就不回家，我只以为是在气头上唬我的开玩笑，并没有当真。谁知道接她下班的时候下了楼她并没有走向回家的方向，而是走了反方向，一句话不说，也没有看我。一开始我以为要放东西什么的有些事情，心里有些疑惑与不安，可后来我突然觉得不对，却拦不住她，时光撇开我接着走，我也没能抱住她。我便陪着她一起。公司另一个门是通往高速的路，我们又一次步行上了高速，我几次想抱住她拦住可都没能成功，就这样一直陪着她走。进了一块路障围住的地方，我们终是停了下来。时光哭得很厉害，是我见过最痛的一次，让我不要跟着她。我想抱着她哄却不能。过了会她哭着看回贵阳的机票，当时我的心里很杂陈，有些是不舍，有些是释然。因为突然觉得我现在能力还不足以照顾好她，不能够好好陪着她，让她在南京是一种受苦。当时想假若她要回去的话我去借钱帮她买机票。趁她看的时候在后边抱了她，摸了摸她头发。当时的心里真的蛮难说的。后来我们回了家，回去的路是在高速上逆行，心知很危险，我打开了手机的电筒，会让我们明显一些，自己走在了路靠外的一侧，迎面的车有些摁了喇叭，我只想她好好的。回去后她问我当时要说什么，我支支吾吾搪塞了过去，因为又觉得累这些东西要自己来承担，告诉别人并不太好。后来这件事也就翻了过去，两个人又是快快乐乐的，不过她偶尔会用回贵州唬我，她吓我的时候我只是笑笑，告诉自己快快长大。<img src="http://blogphotograph.oss-cn-beijing.aliyuncs.com/18-11-7/99808852.jpg"><img src="http://blogphotograph.oss-cn-beijing.aliyuncs.com/18-11-7/67790864.jpg"><img src="http://blogphotograph.oss-cn-beijing.aliyuncs.com/18-11-7/48852190.jpg"><p align="right"> 2018 年 11 月 6 日 </p></li>
</ul>
]]></content>
      <categories>
        <category>与时光</category>
      </categories>
      <tags>
        <tag>感情</tag>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>小结</title>
    <url>/2025/03/05/%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<p>虽然没有达成幻想中的最速传说，但一步一个脚印走来也还算安心。</p>
<p>之前以为到达这里就可以独当一面，没想到自己还是一个喜欢抱团取暖哭哭抱抱举高高的嘤嘤怪。</p>
<p>接受自己过去的不安、难堪以及各种黑历史，甚至逐渐喜欢上曾困于其间苦苦挣扎的自己、为一件如今看来微不足道的小事而反复内耗的小心翼翼。我已能明白那是我来时的路。</p>
<p>苦难造就了我，幸福滋养了我。如果春天要来，大地会一点点完成它。</p>
]]></content>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>gdb 显示具体代码</title>
    <url>/2024/07/29/gdb%E6%98%BE%E7%A4%BA%E5%85%B7%E4%BD%93%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<p>若想 gdb 调试时可以显示代码，需满足以下两个条件：</p>
<ol>
<li>二进制文件中带有调试信息</li>
<li>机器上有源代码</li>
</ol>
<h2 id="1-二进制文件带有调试信息"><a href="#1-二进制文件带有调试信息" class="headerlink" title="1. 二进制文件带有调试信息"></a>1. 二进制文件带有调试信息</h2><p>编译代码时，使用 <code>-g</code> 或 <code>-gz</code>  标志，用于生成调试信息。</p>
<p>注：<code>-gz</code> 表示压缩调试信息。</p>
<p><strong>查看一个二进制文件是否带有调试信息：</strong></p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">objdump -S /path/to/bin</span><br></pre></td></tr></tbody></table></figure>

<p>若输出中含有 <code>.debug_xxx</code> 段或 <code>.zdebug_xxx</code> 段，则表示该二进制文件含调试信息。</p>
<h2 id="2-机器上有源代码"><a href="#2-机器上有源代码" class="headerlink" title="2. 机器上有源代码"></a>2. 机器上有源代码</h2><p>二进制文件中有调试信息后，gdb 就知道了 xxx 地址的代码对应于 <code>/path/of/code/xxx</code> 文件中的 yy 行，然后 gdb 就会根据路径去机器上查看这里的代码。<strong>这也就意味着，使用 gdb 调试的机器上必须要有源代码！</strong></p>
<p>一般情况下，将代码上传线上服务肯定是不现实的，因此我们一般是将 core 文件下载到开发机上进行调试。<strong>请注意，要保证本地使用的二进制程序的源代码和 core 文件使用的二进制的源代码是相同的版本！</strong></p>
<p>我们可以使用在 gdb 中使用 dir 设置代码查找路径（当调试信息中的文件路径为相对地址时）。比如 gdb 显示代码路径为 <code>cika/cika_server/logic/xxx.cc</code> ，我们源代码的根路径为 <code>/data/code/main</code>，使用 <code>dir /data/code/main</code> 就可以为 gdb 搜索代码时指明去该路径下查找代码。<span id="more"></span></p>
<h1 id="调试的原理"><a href="#调试的原理" class="headerlink" title="调试的原理"></a>调试的原理</h1><p>使用 <code>-g</code>  标志进行编译后，编译器 / 链接器会在生成的二进制文件上加入 <code>.debug_xxx</code> 段，这里面便存在着相关的调试信息。</p>
<p>调试信息一般以 <code>DWARF（Debugging With Attributed Record Formats）</code> 格式存储。</p>
<h3 id="DWARF-基本结构"><a href="#DWARF-基本结构" class="headerlink" title="DWARF 基本结构"></a>DWARF 基本结构</h3><p>DWARF 调试信息通常包含以下几部分：</p>
<ol>
<li><strong>编译单元（Compilation Unit, CU）</strong>：每个编译单元对应一个源文件及其包含的所有调试信息。</li>
<li><strong>调试信息条目（Debugging Information Entry, DIE）</strong>：每个 DIE 描述一个调试信息实体，如变量、函数、类型等。</li>
<li><strong>属性（Attributes）</strong>：每个 DIE 包含若干属性，描述该实体的详细信息，如名称、类型、地址等。</li>
<li><strong>行号信息（Line Number Information）</strong>：记录源代码行号与机器代码地址的对应关系。</li>
</ol>
<h3 id="简单的-DWARF-例子"><a href="#简单的-DWARF-例子" class="headerlink" title="简单的 DWARF 例子"></a>简单的 DWARF 例子</h3><p>假设我们有一个简单的 C++ 程序 example.cpp：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">()</span> </span>{</span><br><span class="line">    std::cout &lt;&lt; <span class="string">"Inside foo"</span> &lt;&lt; std::endl;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="built_in">foo</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>编译这个程序并生成调试信息：</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">g++ -g -o example example.cpp</span><br></pre></td></tr></tbody></table></figure>

<p>我们可以使用 readelf 工具查看生成的 DWARF 调试信息：</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">readelf --debug-dump=info example</span><br></pre></td></tr></tbody></table></figure>

<p>输出可能会非常详细，但我们可以简化并解释其中的一部分。假设输出的一部分如下：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">&lt;1&gt;&lt;0x0000000b&gt;    DW_TAG_compile_unit</span><br><span class="line">                     DW_AT_producer    ("GNU C++14 9.3.0 -mtune=generic -march=x86-64 -g")</span><br><span class="line">                     DW_AT_language    (DW_LANG_C_plus_plus)</span><br><span class="line">                     DW_AT_name        ("example.cpp")</span><br><span class="line">                     DW_AT_stmt_list   (0x00000000)</span><br><span class="line">                     DW_AT_comp_dir    ("/path/to/directory")</span><br><span class="line">                     DW_AT_low_pc      (0x00000000004004a0)</span><br><span class="line">                     DW_AT_high_pc     (0x00000000004004d0)</span><br><span class="line"></span><br><span class="line"> &lt;2&gt;&lt;0x0000001b&gt;    DW_TAG_subprogram</span><br><span class="line">                     DW_AT_name        ("foo")</span><br><span class="line">                     DW_AT_decl_file   (0x00000001)</span><br><span class="line">                     DW_AT_decl_line   (0x00000003)</span><br><span class="line">                     DW_AT_prototyped  (true)</span><br><span class="line">                     DW_AT_low_pc      (0x00000000004004b0)</span><br><span class="line">                     DW_AT_high_pc     (0x00000000004004c0)</span><br><span class="line"></span><br><span class="line"> &lt;2&gt;&lt;0x0000002b&gt;    DW_TAG_subprogram</span><br><span class="line">                     DW_AT_name        ("main")</span><br><span class="line">                     DW_AT_decl_file   (0x00000001)</span><br><span class="line">                     DW_AT_decl_line   (0x00000007)</span><br><span class="line">                     DW_AT_prototyped  (true)</span><br><span class="line">                     DW_AT_low_pc      (0x00000000004004c0)</span><br><span class="line">                     DW_AT_high_pc     (0x00000000004004d0)</span><br></pre></td></tr></tbody></table></figure>

<h3 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h3><ol>
<li><strong>编译单元（CU）</strong>：<ul>
<li>&lt;1&gt;&lt;0x0000000b&gt; DW_TAG_compile_unit：表示一个编译单元。</li>
<li>DW_AT_producer：编译器信息。</li>
<li>DW_AT_language：编程语言。</li>
<li>DW_AT_name：源文件名。</li>
<li>DW_AT_stmt_list：行号信息的偏移。</li>
<li>DW_AT_comp_dir：编译目录。</li>
<li>DW_AT_low_pc 和 DW_AT_high_pc：该编译单元的代码地址范围。</li>
</ul>
</li>
<li><strong>子程序（Subprogram）</strong>：<ul>
<li>&lt;2&gt;&lt;0x0000001b&gt; DW_TAG_subprogram：表示一个子程序（函数）。</li>
<li>DW_AT_name：函数名。</li>
<li>DW_AT_decl_file：声明该函数的源文件索引。</li>
<li>DW_AT_decl_line：声明该函数的源代码行号。</li>
<li>DW_AT_prototyped：是否有原型。</li>
<li>DW_AT_low_pc 和 DW_AT_high_pc：该函数的代码地址范围。</li>
</ul>
</li>
</ol>
<h3 id="行号信息"><a href="#行号信息" class="headerlink" title="行号信息"></a>行号信息</h3><p>行号信息记录了源代码行号与机器代码地址的对应关系。可以使用 readelf –debug-dump=decodedline example 查看行号信息：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">readelf --debug-dump=decodedline example</span><br></pre></td></tr></tbody></table></figure>

<p>输出可能如下：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">CU: example.cpp:</span><br><span class="line">File name                            Line number    Starting address</span><br><span class="line">example.cpp                          3              0x00000000004004b0</span><br><span class="line">example.cpp                          4              0x00000000004004b5</span><br><span class="line">example.cpp                          5              0x00000000004004ba</span><br><span class="line">example.cpp                          7              0x00000000004004c0</span><br><span class="line">example.cpp                          8              0x00000000004004c5</span><br><span class="line">example.cpp                          9              0x00000000004004ca</span><br></pre></td></tr></tbody></table></figure>

<h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><h2 id="GNU-binutils-GNU-二进制工具集"><a href="#GNU-binutils-GNU-二进制工具集" class="headerlink" title="GNU binutils (GNU 二进制工具集)"></a>GNU binutils (GNU 二进制工具集)</h2><p>GNU binutilds：<a href="https://www.gnu.org/software/binutils/">https://www.gnu.org/software/binutils/</a></p>
<p>常用的：</p>
<ul>
<li>ld</li>
<li>as</li>
<li>gold</li>
<li>c++filt</li>
<li>nm</li>
<li>addr2line</li>
<li>objdump</li>
<li>objcopy</li>
<li>size</li>
<li>strings</li>
<li>strip</li>
<li>gprof</li>
</ul>
<h2 id="线上的C-服务-coredump-了，其使用的二进制没有带debug调试信息，我可以用本地相同代码编译出来的带debug信息的二进制文件来调试吗？"><a href="#线上的C-服务-coredump-了，其使用的二进制没有带debug调试信息，我可以用本地相同代码编译出来的带debug信息的二进制文件来调试吗？" class="headerlink" title="线上的C++服务 coredump 了，其使用的二进制没有带debug调试信息，我可以用本地相同代码编译出来的带debug信息的二进制文件来调试吗？"></a>线上的 C++ 服务 coredump 了，其使用的二进制没有带 debug 调试信息，我可以用本地相同代码编译出来的带 debug 信息的二进制文件来调试吗？</h2><p>可以。</p>
<p><strong>注意事项：</strong></p>
<ol>
<li><p><strong>确保代码一致性</strong>：确保本地编译的代码与线上运行的代码完全一致，包括源代码、编译选项、依赖库等。</p>
</li>
<li><p><strong>地址空间布局随机化（ASLR）</strong>：ASLR 可能会影响调试过程。如果遇到问题，可以在调试时临时禁用 ASLR：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">echo 0 | sudo tee /proc/sys/kernel/randomize_va_space</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p><strong>确保 core dump 文件和本地二进制文件的内存地址匹配。</strong> 如果不匹配，可能需要使用 <code>set solib-absolute-prefix</code> 或 <code>set solib-search-path</code> 等 gdb 命令来调整。</p>
</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>为什么我的眼里常含泪水</title>
    <url>/2024/07/21/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E7%9A%84%E7%9C%BC%E9%87%8C%E5%B8%B8%E5%90%AB%E6%B3%AA%E6%B0%B4/</url>
    <content><![CDATA[<p>深圳三年，活得拧巴的我没有带老婆去过海边，于是老婆一直还没看过真正的大海。在谋划我们忘崽旅行时我们的目的地就在海边，离我们较近的有三个可选的城市：秦皇岛、青岛、威海。在犹豫不定去哪里时，猛得想起今年是甲午战争 130 年，便注定去了威海。<span id="more"></span></p>
<p>农历六月初八给小满过一周岁生日的时候，在饭桌上我爹提起了丰岛海战刚好发生在甲午年的 7 月 25 日，和小满的生日在同一天。让我觉得去威海更多了一层意义。</p>
<p>刘公岛上参观时，看着那些我知或不知的历史，哽咽的情绪一直在我的心头。初中历史书上的几页，在当时学习时还尚且不能知道它的重量。如今来看时，才能知这其中的生离死别、国恨家仇。长大后、娶妻后、生子后，如此的情感时常萦绕在我的心头，很多时候觉得自己离列祖列宗们在时空上、在情感上近了许多。博物馆里看到陈京莹家书时，更是不能自已。想象当时他写这封家书时，该是怎样的心境！小满生日时，父亲用 “悲壮” 一词来形容这段历史，在刘公岛上观看时，我觉得确是如此。甲午那年的春天，官员们在海军公所写下 “万里天风永靖鲸鲵波浪，三山海日照来龙虎云雷”，祈盼着海清河晏风波平，却不想正是风雨飘摇的一年，出师未捷，上将星沉，几千年的美梦破碎一地，血淋淋的现实横在眼前。这般历史总是令人扼腕惋惜。</p>
<p>我亦知世间无恒强恒弱的道理，如今距离那年不过是 130 年的距离，却是真实地 “换了人间”。70 年前，美军的传单上质问着 “拿人的身躯能把河流阻塞吗”，我却真实地知道我出生那年人的身躯真的把洪流给阻塞了。当顾方舟给自己孩子喂下第一个糖丸时，当歼 10 试飞雷强说出那句 “只要发动机还在，就是摔我也要摔到跑道上，把飞机带回来” 时，当今年海军开放日上稚子问核时，距离那年，不过是两个甲子多些的时间。稚子问核后，网友拼接出一张对比图，初次看时便是湿了眼眶。如果可以，真想能够回去摸摸他的头。</p>
<p>总会想起很多战士牺牲时，也不过是我这般年纪。总会臆想假若没有战争，他们会过着怎样的人生。大一第一节近现代史课，老师问学历史意义是什么，暑假刚买了中华书局一套《资治通鉴》的我说以史为鉴，老师说是了解历史也是鲜活的，有血有肉的。（事情大概如此，记不得了）我和老师都是对的。我总觉得，一代人有一代人的使命，正是《诗经》中说的，周虽旧邦，其命维新。正如博物馆里说的 “擦清历史的镜子，走好未来的路”。</p>
<p>之前亦不懂人民英雄纪念碑碑文的重量。如今再念时，总是令人不觉热泪盈眶。由此上溯到一千八百四十年，从那时起，为了反对内外敌人，争取民族独立和人民自由幸福，在历次斗争中牺牲的人民英雄们永垂不朽！</p>
<p>如果你问我 “为什么我的眼里常含泪水”，我想艾青在八十多年前就已经给出了我心中最好的答案：“因为我对这土地爱得深沉”。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/a1cb9e0b78482a1b12ef8f378fe9cc"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/f2141dba8bc85b6e03dfa593cd8d78"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/f54b62c9d6b52d833583ed419c0072"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/3b1fe0428d68301ed7287798c46ecc"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/a18155a56b3a8337f42b29e8094d5d"></p>
]]></content>
  </entry>
  <entry>
    <title>名子瞻说</title>
    <url>/2024/07/15/%E5%90%8D%E5%AD%90%E7%9E%BB%E8%AF%B4/</url>
    <content><![CDATA[<p>一年来，朋友会不时问起孩子的名字，我亦逐渐觉得子瞻实是天赐般的好名字，便想着写文说下名字的含义与期冀。<span id="more"></span></p>
<p>子瞻在 “子” 字辈上，说是子字辈，其实在他这一辈也没有了严格地要求，不过是大哥的孩子取名子厚，二哥和我便默认因寻着取了相同的字辈。有字辈后，取名不再能任意发挥，但另一方面也简单了许多，有目标后想个字就好了。</p>
<p>说到子，最先想起的便是君子一词，随之而来的，是温润如玉，温文尔雅一系列温暖美好的品质。又想起《诗经 淇奥》中 “有匪君子，如切如磋，如琢如磨” 一句，谓君子切磋琢磨，精益求精。但另有一条思路，即子厚是柳宗元的字，也想着能不能与之相通。再读《淇奥》时，便选首字 “瞻” 作为名字。一来，我很喜欢 “如切如磋，如琢如磨” 一句，瞻作为全诗首字总起全文，后随猗猗绿竹，是君子之质。二来，子瞻是苏轼的字，和子厚都是唐宋八大家，亦希望他们能文以载道，摒弃浮夸，而继唐宋文章之风。后来，我爹还提醒我，《淇奥》中还有 “瑟兮僩兮，赫兮咺兮” 之句，又有二哥儿子子赫的名字，与子赫相得益彰。从这开始，我觉得子瞻实在是天赐的好名字。一年来，每想起子瞻的寓意，都有如此想法。在别人看来虽不免有牵强附会之感，但在我心中一直觉得很难再有更好的名字了。子瞻的名字如同乐章一般，击而皆中节，合于桑林之舞，乃中经首之会。愿他们兄弟三人手足齐心，整个家族团结和睦，他年筚路中兴，这实在是可以预见的事。“万钧家风惟孝悌，百年基业在读书。” 子瞻这名字实是与这幅联相映。</p>
<p>去年子瞻十二晌时，我发了篇《得子》。整篇文章我都很喜欢，如果说最喜欢的，那肯定是最后一段的最后一句了。“有匪君子，克家其长。切磋琢磨，与会众芳。” 有这样一位君子，能够齐家是他的长处，他不断地修身磨炼自己，与其他美好之人一同，参与到一切美好之中。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/a02e71cd0231047331d95da464523d"></p>
]]></content>
  </entry>
  <entry>
    <title>万物至此，小得盈满。</title>
    <url>/2024/05/20/%E4%B8%87%E7%89%A9%E8%87%B3%E6%AD%A4%EF%BC%8C%E5%B0%8F%E5%BE%97%E7%9B%88%E6%BB%A1%E3%80%82/</url>
    <content><![CDATA[<p>我从小就是个很喜欢小孩子的人，之前希望着可以有个龙凤胎，实现儿女双全。近年来觉得生活渐得小满，所以想着在孩子小名上大的叫惊蛰，小的叫小满。惊蛰与小满是我对孩子们的期许，也是对自己生活的一段注解。<span id="more"></span></p>
<p>生孩子的前一天晚上，我、妻子、父母、姐姐在病房里畅聊到很晚，从过往到未来，从贫瘠到小康，一代一代，几十年的烟云就这样在我们身边流过，包裹着我的是幸福与期待。我敏锐地感知到这样的场景人一生中不会太多，内心里又生起这段时光飞逝不反的惆怅。在亲历生育后，我便不再想妻子受此痛苦，又觉得在此阶段我已是小得圆满，索性越过了惊蛰，唤儿小满。人生百年，或许我的年轮也刚好到达小满时节。</p>
<p>我固然有着我这个阶段所面对的迷茫、困顿与突围，但同时亦感受着这个年龄段的幸福与安好：父母身体尚且健康，自己还不算老去，暂且不愁吃穿，生活有着买房的远景，如同史铁生笔下的琴弦，引诱着为之上班。我自知这也是一段人生难得的好时光，他年回首时同样会无比的怀念，走过了春天的生长，抵达了初夏的小满，像是周五的下午五点半，过年前腊月二十三。小满的美好便在于它未满。</p>
<p>所以，小满呀，你要记得，既济之后是未济。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/9286505428d575d093bb386de5c023"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/0bca5e9e724cc156ad2286d343d28c"></p>
]]></content>
  </entry>
  <entry>
    <title>皮皮写给小满的诗</title>
    <url>/2024/04/06/%E7%9A%AE%E7%9A%AE%E5%86%99%E7%BB%99%E5%B0%8F%E6%BB%A1%E7%9A%84%E8%AF%97/</url>
    <content><![CDATA[<blockquote class="song">
  <p>
    <tt>皮皮写给小满的诗</tt><br><br>
    我曾在春日的树梢上看着年轻的父母<br>
    老父亲说那是他心中最美的诗<br>
    兄弟啊兄弟<br>
    你可知像你一般大时<br>
    我看到的是秦淮怎样一湾风月<br><br>
    老父亲将我高高举起<br>
    又将我紧紧抱入怀中<br>
    我从那强烈的心跳声里<br>
    感受到世间最美好的存在<br>
    兄弟呀兄弟<br>
    不知在父亲的肩头上<br>
    你我看到的风景是否一样<br>
  </p>
</blockquote>

<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/8cf99a3ea76d945628a3c99a1e993d"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/9d16a284d47a300c1f6a4210a5d370"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/7ed2be1cf1a6d5bb5bf29e7749bd46"></p>
]]></content>
  </entry>
  <entry>
    <title>携妻子猫进京</title>
    <url>/2024/03/17/%E6%90%BA%E5%A6%BB%E5%AD%90%E7%8C%AB%E8%BF%9B%E4%BA%AC/</url>
    <content><![CDATA[<blockquote class="song">
  <p>
    <tt>携妻子猫进京</tt><br><br>
    我是田间雀，翻飞恨不能。<br>
    青苹难借力，羊角畏身凭。<br>
    常羡鸿鹄志，数习奋翅升。<br>
    南薰时佐翊，乃幸仰鲲鹏。<br>
    幼领儒经教，持修克复怀。<br>
    风轻云水故，有意弃非财。<br>
    郤冀共梁孟，贫时贵案眉。<br>
    清平还乐道，积玉更学诗。<br>
    三月春雷动，千花次第生。<br>
    雏羽知试翼，飒露待长缨。<br>
    抚爪空山响，揉毛漫水晴。<br>
    昔年寻北斗，辘辘入京城。<br>
  </p>
</blockquote>]]></content>
  </entry>
  <entry>
    <title>雪后相思</title>
    <url>/2023/12/17/%E9%9B%AA%E5%90%8E%E7%9B%B8%E6%80%9D/</url>
    <content><![CDATA[<p>“快雪时晴，佳想安善”，这是 1700 年前王羲之写给友人信札中的一句，也是我今年在第一次读到时便为之心动的一句，雪霁天晴，我想你一定安好吧。</p>
<p>上月东北大雪，手机上看着东北苍茫的雪景，一股温暖却莫名地包裹住了我。晚上洗完澡，回到自己暖和的小屋里，酒足饭饱，舒适想要睡去时，突然想问候东北的亲戚，问问是否安好，一时间一种美好的情感摇荡在心头。一看时间已是 11 点了，不知道会不会已睡去打扰到他们。想到这里，我才猛地想起斯人已逝，心里空落落的，这情景如同在深圳看到 “整只牛火锅店” 想要等他们来时请他们吃一般。不过，这次并没有太多的难过，或许是雪的原故，我想姑姑在天国也一定幸福安好。雪带给我这般情思的同时抚慰了我内心的罅漏。那天我发的 “欲颂雪绥，鱼雁难托” 的朋友圈，配了沈阳故宫和中街的图，正是这件事。最近这几年，我总觉得中国人的骨子里是极致浪漫的，他们善于在不着眼的平朴之中，匿含自己骤雪激湍般的感情。如同这个朋友圈一般，懂的人自然懂了，不必太多地补充什么。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/2023_1210_20383300.jpg"><span id="more"></span></p>
<p>我向来觉得，雪能让人的心灵变纯洁。“鸢飞戾天者，望峰息心”，雪也一样，不管怎样的人，看到雪时心里应该总有一瞬会萌发出人类最美好的感情，人们忘却营营，回到真挚与自然。初来北京时，我预算着今年雪不会太小，便想好初雪时定要请上午假去踏雪，晚上再与二三好友火锅到深夜，以效仿白居易、刘禹锡、裴度。我就怀着这般的感情一直期待着雪的到来。只是初雪来时，又觉得年假请上午太亏了，于是便早起进城玩耍。朱墙金瓦，坠玉飞琼，此间真意又该如何表述呢，只是觉得一时间感谢自己没有赖床，方能看到世间如此绝色，觉得自己会永远折服于中式美学之中。我想着几百年前宫内宫外的人们，会如何迎接今日的雪呢？</p>
<p>我想起古剑三中姬轩辕回忆的轩辕丘第一场雪，</p>
<blockquote>
<p>“杜康嚷着说他酿成了酒，带来给我们尝一尝。”<br>“记得。可他出门前拿错了罐子，难喝。”<br>“哈哈，但所有人还是喝得很高兴。只可惜那一天立下了誓，说好要一起变成了老头子老婆子，活到彼此都看不顺眼的时候，却没能做到。“<br>“上天若是不生我们，这世间该有多无趣啊。”<br>” 诸君，共饮。“</p>
</blockquote>
<p>如同在大学听古琴曲《石上流泉》时仿佛听到月光打到水面上的声音，下雪时我真实地听到了雪的声音，我惊奇于自己已多久没有这样心流般的感受，又觉得世间美好，一些事情本无必要一直担心忧虑，整个人的心境也变得澄澈通透起来。夜晚并没有叫到人一起火锅沉酣到深夜，倒叫我想起裴度的《雪中讶诸公不相访》，” 忆昨雨多泥又深，犹能携妓远过寻。满空乱雪花相似，何事居然无赏心 “，所以，你看吧，古往今来大家都是一样的。不过事情总是两面的，倒也避免了风流云散后，让人心起” 不曾一度不低眉 “的徘徊与感伤。</p>
<p>最近听人聊天时又聊起高考云云，心里也会不时想起自己的高考。所想的无非还是那些事情，在最后改错了一道生物选择题，自己高中时英语一直很好英语卷又那么简单怎么可能才考了 120，平时物理动量题从没忘过重力却在最后忘记了，数学圆锥曲线不可思议地竟第一问没做出来。我并不为高考后的经历感到后悔，遗憾的只是自己没有做到更好。九月翻初中同学录时无意间发现里面夹着一张高中还不错的成绩单，看着上面的分数和每科都是年级前几的排名，我在想自己有没有成为那时自己想成为的人。或许有，或许没有。昨天刷小红书看到有办法查历年高考成绩，自己也查了下，没有上下文无由地给妻子发了个 “124+127+120+256=627” 以作备忘，老婆回了句 “这是你这个月饭钱？”，一时倒是有些黑色幽默和温暖。</p>
<p>周六也是父亲的生日，这周末本该轮到双周汇报回家的，京冀大雪却取消了高铁车次。好在我爹替我写好了词：“最恨一场大暴雪，误我贺寿万里船”。这才帮我减去了许多想词的苦恼。人是矛盾的，在渴望大雪的同时，又操心着雪给世间生灵带来的灾难，如同《雪赋》里说的：“盈尺则呈瑞于丰年，袤丈则表沴于阴德”。希望再也不要见到 “大雪褪去，操场上睡着我最爱的小猫” 这般事情。长安有贫者， 为瑞不宜多。</p>
<p>这便是 2023 年雪天发生的故事。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/2023_1210_20361800.jpg"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/2017_0101_13570000.jpg"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/2017_0101_13562800.jpg"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/2017_0101_13561100.jpg"></p>
]]></content>
      <tags>
        <tag>随笔</tag>
        <tag>记录</tag>
      </tags>
  </entry>
  <entry>
    <title>得子</title>
    <url>/2023/08/09/%E5%BE%97%E5%AD%90/</url>
    <content><![CDATA[<p>癸卯季夏，月依上弦，妻经两日之苦，历难摹之痛，近子时分，诞子一枚，四柱相应，八字相求。余因是为父，世间五味，杂然相陈。又余父望子久矣，故取喜一味，以记之。</p>
<p>去岁于深圳，秋，妻梦虺蛇相逐，余梦黄仙引路，始有感，疑将有子。少日后购可丽蓝，喜吾将为父。兴深处，至书城购《周易》一册，起名事也。晚于家煮火锅，贺此天伦。是冬罹染新冠，惴惴难安，今幸无大事也。</p>
<p>余年方廿五，于朋于友年少。决意生子者，非父母相催，非以延香火，实乃世间有无尽美好者，欲分享于一新生也。每读诗词文章，中心摇动，情如泉发，手之舞之，叹珠玑交错之美，咏志情比兴之深；览历史更替，白衣苍狗，风云变幻，知余生之来路，求吾族之去处；或学万物之理，依据清晰，深幽微妙，拔除愚昧，始见光芒，知惟科学之土，能开思维之花，果实常在高山之上，乐之者得；或临山拟志，对水思长，清风山峦，明月照江，散发扁舟，欲与之欣然同去耶！然得子亦有操心者，堪愁无非金籯常空，解忧不过枕边一经。周虽旧邦，其命维新。于吾一身，实惟砥砺，去远渐跻。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/52de77d738d91f9cb7dad8be7a4cb71d.jpg" alt="Hello, world!"><span id="more"></span></p>
<p>取名事者，族中字辈为子，余故思 “君子”，不由诵 “有匪君子，如切如磋，如琢如磨” 之章，君子如玉，温润尔雅，岂非余终生慕之求之者乎？少番思索，便取《淇奥》首字 “瞻” 为名，总率全诗，后随猗猗绿竹，君子之质也。又与兄子厚，继唐宋文章之风。后经父提醒，诗又有 “赫兮咺兮” 之句，与兄子赫相得益彰。汝兄弟三人今日手足齐心，吾一族团结和睦，他年筚路中兴，实可见也。余初至深圳时，引东坡 “九死南荒吾不恨，兹游奇绝冠平生”，以舒其志，今因子去深抵京，名之子瞻，实非天意耶？</p>
<p>譬如芝兰玉树，欲使其生于庭阶。吾何愿也？一曰平安身健，二曰 “独立之精神，自由之思想”。有此二者，余无忧矣。若有四时之闲，则诵春风秋月之章，临风对曲，徽榭之间，吾侪相遇。倘有志者，则穷尽物理，宗悫长风。苟利于国于民以至全人类者，不求青云，不必床前。</p>
<p>尾曰：盛世兮年昌，悬弧兮弄璋。芳草兮杜若，美酒兮桂浆。白日照梁，明月舒光。鸣鸾啾啾，佩玉锵锵。有匪君子，克家其长。切磋琢磨，与会众芳。</p>
<p align="right">2023.08.05<br>于子十二晌</p>

]]></content>
      <tags>
        <tag>子瞻</tag>
      </tags>
  </entry>
  <entry>
    <title>2023 上半年记录</title>
    <url>/2023/07/01/2023-%E4%B8%8A%E5%8D%8A%E5%B9%B4%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>我没有半年总结的习惯，只是 “人在大多时间里徘徊，只在少数几个时刻瞬间成长”，今年上半年来说我确实感觉到自己变化了许多，而且去南京玩、换工作后总觉得要写些东西，却一直拖着没写（王国之泪实在太好玩辣！）。于是刚好今天是下半年的开始，又恰好是双休日，便不妨记录下上半年。</p>
<p>前段时间，我翻看着去年年底的 “总结” <a href="https://zhiyi.live/2023/01/26/24%E5%B2%81%E5%86%99%E7%BB%99%E5%AD%A9%E5%AD%90%E7%9A%84%E4%BF%A1/">24 岁写给孩子的信</a>时，突然发现我去年年底几个目标或是心愿在上半年已完成了许多，不由得十分诧异，毕竟我这种拖延症总是在时间的末尾或是过后才草草去行动。或许是这些心愿已经到了不得不做的地步了吧。</p>
<p>上半年我个人一个比较重要的事情就是换了工作，离开了深圳，来到北京。我毕业后就来到 LGame（准确来说是毕业前，狗头），做为我的第一份正式工作，其对我的意义是不言而喻的。我依然记得第一个月发下工资时就给家里买了一套中华书局版的《史记》。我能狠下心来做出换工作的决定，我想最主要的还是在这份工作中感受到成就感不再能抵抗其痛苦。我事后回想，对我个人而言，我在这份工作中做的比较自豪的事情，基本都发生在入职初期的一年内。那时候我眼里总是使程序变得更快更好的优化机会，也甘愿为此排除万难，而后面眼中却只有困难与风险，我再也没能想出令我快乐的 idea，再也没能写出令我骄傲快乐的代码。我感受到心中的激情已不再像初来时澎湃，心中的那团火已奄奄一息。况且各种角度各种事情上的方方面面似乎都在告诉我，是时候离开了。<span id="more"></span></p>
<p>新工作的机会也比较巧，网上经常聊天的朋友 chanchan 所在部门刚好在招人，而且部门用的语言恰好是我喜欢的 C++，因此我决定试一试。我是一个做事比较专一，不能留退路的人，又因为我心里比较想去这个部门，于是决定先只投这一家，面过了就去，没面上再海投。回想起来，从小到大我这 20 多年似乎没遇到什么坎坷，总是比较顺利，这一次面试也顺利地通过了，在我需要一份工作时恰好有这样一个好朋友，也得到了一份工作。我总在想，我前面都这么顺利，假如我遇到什么挫折坎坷，我能否去面对、解决，我一路这么顺利会不会让我失去直面不如意的勇气。4 月里，我打包好所有能打包的东西，从深圳来到了北京，向过去三年挥手告别，触摸新的生活，其中辛酸喜悦，同古往今来亿万同胞的感受一起，融入进这片土地古老的记忆中。新工作到底是新鲜，接触到了原来项目中不曾接触到的东西，感觉视野一下被打开。原来不曾有的想法，在来到新工作后，如泉涌似的出现在脑海中，程序员到底还是要多换工作多长见识的。新工作里，我开始思考原来不曾思考的东西，如怎样设计出一个好的接口、在这种场景下我应该以怎样的模型进行并发、在什么时候设计成成员函数好些、什么场景下设计成非成员函数好些，但这些思考都还不太深入，因为王国之泪实在太好玩辣！新的工作里，我收到了原有工作寄给我的 2021 年的奖项奖杯，我望着魄罗出神，下面底座上的刻字好像是项目正式名字和我的名字第一次共同出现在一起，世间的荒诞总是如此。</p>
<p>毕业三年里，我总时时想念着南京，应该不会有人如我一般对一座城市如此深情了。上半年里，我也趁着清明得暇去了一趟南京。在飞机着陆的一刻，在走出机场的一刻，在我坐上机场巴士的一刻，心中总有着说不清的熟悉。这个场景这份感觉在过去是我多么熟悉的呀。凌晨的飞机在南京着陆，已经停运的地铁，20 一张的巴士票价，在我异地恋去贵阳回来时，在我打 ACM 比赛回来时，在我面试腾讯回来时，在我，在我毕业三年回来时… 我倚着车窗，看着外面，心里只想落泪，闭上眼，想着过往此时此景下内心所想的东西，此时此景下的心情。我想、我想把我不在这三年里发生的事说给它听，也想它能够把我不在那三年里发生的事讲给我听。朋友说我说话瞬间本地化了，原因无外乎是我拍了行车外面的风景发给他，说了句 “这屌司机开车慢得一批”。在秦虹桥站下车，没能找到共享单车，便打车到了宾馆。路上过武定门，依旧是那么熟悉。因曾住在秦淮河夫子庙旁，所以这晚也住在了这附近。第二天早上去曾经住过的小区，进门便看过有人在烧纸，烟纸灰间，那份浓郁的生活气息又包围住我，让我在三年深圳生活后心灵得以小憩。我去了小区旁之前常去的一家饭馆吃早餐，大气地点了一份小笼包和一碗馄饨，觉得比之前好吃了些，老板娘也比以前年轻了些，只是不见原来的那只猫猫了。心里期盼着被老板认出，却又害怕被认出，我的眼神有点躲闪。雨后的南京有些清冷，我只带了薄裤子，便穿过夫子庙，去三福买了个裤子，一切都如此的自然。</p>
<p>“如果有时间，你会来看一看我吗？” 每每听到《漠河舞厅》，我都会想起南京，想起南京故友。相思不扫，久积弥厚。我循着心里的思念，访寻着金陵城的旧友。成大后，我逐渐读懂诗句，过往觉得平常的诗句，却在某刻突然领悟到它的含义，体会到其中的深情。我看过太多与朋友聚散离合的诗句，在南京与朋友的相约，都让我觉得幸福，那种 “两心相许” 的期待，那种明天就能相见的美好，那种如约而至的到来，恰恰是这些事，让我开始逐渐重新认知生活的意义。在南京的几天里，我并没有太多地去景点玩，基本都是在找朋友玩。和朋友在一块总是快乐的，似乎不用特意做什么，单是 “久别重逢” 这几个字就很美好。 “看大雪如何衰老的，我的眼睛如何融化。” 想写和朋友的许多事情，去了哪里，玩了什么，天气如何，晴天或是下雨。但回忆回忆着，心里却不由得充满了一股暖流。“少日春怀似酒浓，插花走马醉千钟”，这种单是回忆就觉得温暖美好的事情，写成记事的流水账也太可惜了些。和朋友相见的时候，有时我只想喝酒，好让自己沉溺于此，以此来描述心底从不会表达的开心与思念，不去想明日隔山岳，世事两茫茫。</p>
<p>这一次在南京，我也特意去见了相识十年已久的妹妹。我们在游戏《新仙剑》里遇到，当时在我 “威逼利诱” 下喊了哥哥。后来一起玩了 《TNT》、《天下 3》，小时的时光每每回想起来都如此的幸福，我们十多年里一直保持着联系，后来她成了我的树洞，有时心里难过或是有不开心的事情，总会想着找她。毕业后几年里，我开始察觉到我的心理在一定程度上有点点问题，妹妹大学时刚好学习过一些心理方面的知识，和她聊心理上的一些事情，总能学到一些知识，并从中获益。大约从去年开始，我的心理发生了很多改变（后面会说到），这基本上都源于和妹妹的聊天中，因此我很感激妹妹。我们早就、一直说着面基，幻想总是美好的，但对于内向的我来说又有点紧张与害怕，想到在网上聊得 happy 的两人见面没话题聊这种尴尬场景就发怵。因此这回去见妹妹，其实自己内心也一直在给自己鼓劲加油，刚好作为自己转变的一个见证。只是在路上，我想着过往十多年里的种种，心里总有着自己不再像原来一样年轻，没能在最好年纪时去见她如此这般的遗憾。“如果你看见我的话，请转过身去再惊讶，我怕我的眼泪，我的白发像羞耻的笑话”。能遇到妹妹，一起长大，是我的幸运。</p>
<p>我之前察觉到心理上出了一些小问题，总会觉得心情上很累，很难开心起来，过得很疲惫。在发现这个问题后，我也积极开始了 “自救”，从中的获益超出了我的预期。在与妹妹的聊天中，在生活的体验上，我反思着自己的状况，思考着我为什么会这样，导致这样的原因是什么。我开始逐渐重新认识自己，我到底是一个怎样的人，不予修饰的，抛却滤镜的。古代贤者的思想有时终究是深刻的，我发现我这一步所做的，不过是苏格拉底曾说的 “<strong>认识你自己</strong>”。原来只觉得这是轻飘飘的一句话，谁还能不认识自己呢？但在我反思之后，我想，谁又能真正认识自己呢，我们看待自己，总归是带有些主观的。这一步后，我与自己达成了和解。我认识到， 这就是真实的我，我的优点，连同我的缺陷。我不再与自己的短处斗争，我欣然接受了它们，它们恰好我之所以为我的一部分。我不再因自己表现出的自己不喜欢的行为而厌恶自己，而内心挣扎，我不再纠缠自己，自己让自己不开心。我坦荡地接受了自己，不再为自己的不足或是肮脏而内疚惭愧。</p>
<p><strong>我自然而然地认识到，真实地爱自己，才是一切美好的基础。</strong>过去我或许为了他人的感受而委屈自己，觉得他人开心我也就满足了，我意识到这是不健康的。如此的心理实际上一直消磨着我内心的美好，我不能再将此视作是一种美德。我亦是需要爱的。我变得更注重自己的身体健康，去医院检查，我开始正视自己日常生活中的需求，不再因自己的物质欲望而觉得耻辱。过去我会想这些不好的东西凑合凑合也能用，为什么还要花钱买好些的呢，我是不是太奢侈了。即使是买的我所能承担的东西。带着这种想法，即使买了东西，我用的时候也带着一种罪恶感。后来我认识到，在我的天性及所受的教育中，充满了勤劳节俭，却没有及时行乐，现在我应该补足这一块。</p>
<p><strong>恰是爱自己，让我心里充满了勇气去向好的方向改变和享受美好的生活。</strong>过往我可能会苛责自己勤奋些，多学习些，生活中有懈怠的话又会有一种罪恶感，厌恶不努力的自己。现在我想，人天性就是懒的，勤奋才是反人性的东西，我们应该认识到这点。我不再如原来一般厌恶不作为的自己，欣然接受自己的平庸，恰是这样，才让我有勇气更幸福地去努力。人本身是懒的，因此努力更有意义。我变得包容起自己来，过往想到自己胆小，会觉得懦弱，现在却会想，“胆小本身就是人的本能，是千万年人来基因中一直携带的，胆小可以保护自己不受环境中不必要的伤害，不胆小的早 TM 在原始时代被野猪给拱死了”，如此想来自己就会舒服很多，才会鼓励自己更勇敢地去做一些事情。认识到自己的渺小，是人类迈向伟大的一步。来北京后，我不时会想起那个被我遗弃在楼道里，不能被带走的冰箱。在深圳时它勤勤恳恳陪伴了我们三年，最终被遗弃。我离开深圳时摸了摸它头说再见，现在却又时常想起，觉得它很可怜，自己很对不起它。每想至此，又会想自己怎么会有这种想法，是不是要去看下心理医生了，正常人不会有这种想法才对。我又会想到妹妹所说的，敏感也是一种可爱。我又觉得自己可爱，我这般的赤子之心现代社会应该不多了吧，我应该珍惜才对。我能如孩童一般，轻松想到成人所不再能想的，恰如那些天才的数学家可以自然地想到常人想不到的方法，看到常人所不能看到的，这些都是上天给予的天赋，我应该为此感到喜悦 ，而非是自我怀疑式的焦虑。我接受了我吃饭焦虑会呕吐的问题，不再尝试着与之对抗，那样只会给自己压力，变得更加焦虑。这开始正视这个问题，而非避免这个问题，吃饭焦虑呕吐是真实的我，我就是这样，我为什么不能面对呢？这样想之后，反倒是整个人放开，没什么事了。过往我太过拧巴，总想着做好充分的准备，出门带好雨伞纸巾，以防万一，每次出门前都要检查下，避免下雨却没带伞的坏心情。而现在，明知会下雨，我也故意不带伞，因为觉得找个地方躲雨未尝不是一种体验，整个人变得更加放松，不再像之前一样无意义的内耗焦虑。</p>
<p>上半年里，我还第一次尝试着烫了下头，（原来觉得烫头的都是不良少年，orz），结果许多人都说比原来精神多了。新工作里，我放下了原来使用了十多年的编程字体 <code>Courier New</code>，换成了 <code>JetBrains Mono</code>，要知道每次换新电脑，我打开 IDE 必做的第一件事就是把字体换成 <code>Courier New</code>。</p>
<p>总之，我做的不过是认识我自己、爱自己、尝试改变自己去体验新的东西。这些事让我觉得自己在思想上有着脱胎换骨般地转变。看待很多事情上的角度已经变了，也有着勇气与自信去迎接更好的生活。我很庆幸自己能在孩子出生前认识到这些，做到这些，带给我不同的培养孩子的思路，也很感谢老婆在很早的时候就看清并接受一直以来如此的我，陪伴着我。</p>
<p>希望世间众生，都有着勇气与自信，去努力创造、迎接更美好的生活，都拥有着允许努力创造、迎接美好生活的外部环境。</p>
]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>贺新郎・贺铭毓生辰及获优秀生资格毕业</title>
    <url>/2023/06/19/%E8%B4%BA%E6%96%B0%E9%83%8E%C2%B7%E8%B4%BA%E9%93%AD%E6%AF%93%E7%94%9F%E8%BE%B0%E5%8F%8A%E8%8E%B7%E4%BC%98%E7%A7%80%E7%94%9F%E8%B5%84%E6%A0%BC%E6%AF%95%E4%B8%9A/</url>
    <content><![CDATA[<blockquote class="song">
  <p>
    <tt>贺新郎・贺铭毓生辰及获优秀生资格毕业</tt><br><br>
    廿五逢端五。瑞祥祥，都成五五，起风长舞。燕赵江南多奇士，恰是金陵相聚。共披历，六朝烟雨。二陆初来年正少，意凌云，太白东坡妒。花月夜，等闲度。<br><br>
    不堪数电多劳汝。夏时风，只道寻常，几番清午。忽矣彷徨别三年，歌路险，伤日暮。叹几遍，贵贫由数。国事文章需少做，善修齐，天下君行处。沧浪水，盼屈楚。<br>
  </p>
</blockquote>

]]></content>
      <tags>
        <tag>忆旧游</tag>
      </tags>
  </entry>
  <entry>
    <title>「小满」C++ chrono 库使用学习笔记</title>
    <url>/2023/05/21/%E3%80%8C%E5%B0%8F%E6%BB%A1%E3%80%8DC-chrono-%E5%BA%93%E4%BD%BF%E7%94%A8%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<blockquote>
<p>本文是我学习 C++ chrono 库时的学习、思考的临时笔记。很多地方可能存在谬误，请读者带着批判性的目光阅读。</p>
</blockquote>
<p>学习 <code>chrono</code> 库重要点是了解其中三个重要概念及它们之间的联系：</p>
<ul>
<li>时钟 (clock)</li>
<li> 时间点 (time_point)</li>
<li> 时间间隔 (duration)</li>
</ul>
<p>上面三个重要概念是我依靠自己感觉总结出来的，名字也是自己起的，可能有失偏颇，但大体应该如此。个人觉得这三个名字也可以很直观地来理解他们的意义。在 C++ 的 <code>chrono</code> 库中，他们相互之间的联系也很直觉，如时钟可以获得时间点，两个时间点的差为时间间隔，时间点加上一个时间间隔即是另外一个时间点。<span id="more"></span></p>
<h2 id="时钟-clock"><a href="#时钟-clock" class="headerlink" title="时钟(clock)"></a>时钟 (clock)</h2><p>时钟的用途就是用来获取时间点。<code>chrono</code> 标准库中提供了三种（我目前知道的）时钟，分别为：</p>
<ul>
<li><code>std::chrono::system_clock</code> ：系统时钟，用于表示现实世界时间的时钟，如现在是几点等。该时钟不保证单调递增，受系统时间的影响，当系统时间发生调整时，<code>system_clock</code> 的读数可能会发生跳变 / 倒退。</li>
<li><code>std::chrono::steady_clock</code>：单调递增时钟，主要用于测量时间间隔，如程序运行计时等。不受系统时间的影响。类似于 <code>clock_gettime</code> 中的  <code>CLOCK_MONOTONIC</code>。</li>
<li><code>std::chrono::high_resolution_check</code>：最高精度时钟，拥有最高的时间精度，适合用于性能计时和测量时间间隔。<br>在某些实现中，<code>high_resolution_clock</code> 可能是 <code>system_clock</code> 或 <code>steady_clock</code> 的别名。因此，它可能具有 <code>system_clock</code> 或 <code>steady_clock</code> 的特点，具体取决于实现。</li>
</ul>
<p>这三种时钟类型的精度和特性可能因平台和实现而异。</p>
<p>对于时钟来说，最常用的成员函数应该是 <code>now()</code>，即获取当前的时钟时间。</p>
<p>对于 <code>system_clock</code>，还有两个较为常用的成员函数，为  <code>from_time_t</code> 和 <code>to_time_t</code>，即通过 C 风格下的 <code>time_t</code>（即以秒计的时间戳），来获取该时间戳下的时间点 (time_point)。或将时间点转换为 C 风格下的时间戳。</p>
<h2 id="时间点-time-point"><a href="#时间点-time-point" class="headerlink" title="时间点(time_point)"></a>时间点 (time_point)</h2><p>时间点即为特定时钟下的某个时刻。也就是说，<code>chrono</code> 库中，如果要指定一个时间，需要确定三个元素。</p>
<ol>
<li>是哪种时钟下的时间点</li>
<li>这种时钟下的纪元（即零点时间）是什么，（如我们熟知的 <code>UTC 1970-01-01 00:00:00</code>）</li>
<li>该时间点距离纪元的时间间隔是多久。</li>
</ol>
<h2 id="时间间隔-duration"><a href="#时间间隔-duration" class="headerlink" title="时间间隔(duration)"></a>时间间隔 (duration)</h2><p>时间间隔即两个时间点相距多久。<code>chrono</code> 库中，要表示时间间隔，要确定以下两点：</p>
<ul>
<li>Rep：数据表示方式（存储类型），如 <code>int</code>，<code>float</code>，<code>uint64_t</code>。</li>
<li>Period：时间间隔单位，如秒、毫秒、分钟。<br>在库内实现中，以 <code>std::ratio</code> 为表示，如 <code>std::ratio&lt;1, 1&gt;</code> （即 <code>1</code>），表示秒；<code>std::ratio&lt;1, 1000&gt;</code>，即 <code>0.001</code> ，表示毫秒；<code>std::ratio&lt;60, 1&gt;</code>，即 <code>60</code> ，表示分钟。</li>
</ul>
<p>对于常用的时间间隔类型，<code>chrono</code> 中已包装好，拿来即用就可，如 <code>std::chrono::seconds</code> 表示秒，<code>std::chrono::hours</code> 表示小时。 <code>std::chrono::seconds dur {5} </code>，这样，我们就定义了一个 5 秒的时间间隔变量。在 C++ 20 中，又加入了天（<code>days</code>）、月（<code>months</code>）、年（<code>years</code>）的类型。</p>
<p>从 C++14 开始，<code>chrono</code> 加入了 <code>literals</code>，可以帮我们更方便地表达时间间隔，更符合人类的语义习惯。如 <code>auto dur = 3s</code>，就定义了一个 3 秒的时间间隔。（有些小吐槽，见后面的吐槽部分）</p>
<p>不同时间间隔类型之间当然是可以相互转换的，它们通过 <code>std::chrono::duration_cast</code> 来进行转换，如，<code>auto dur = std::chrono::duration&lt;std::chrono::minutes&gt;(120s)</code>，这样，我们可以将 120 秒转换为 2 分钟。</p>
<p>对一个时间间隔变量使用 <code>count</code> 成员函数，可以获得其单位下的间隔时间，如 <code>(120s).count()</code>，我们则可以获得到 120 。</p>
<h2 id="三个概念关系"><a href="#三个概念关系" class="headerlink" title="三个概念关系"></a>三个概念关系</h2><p>时钟可获得时间点。</p>
<p>时间点是特定时钟下距离时钟纪元一定时间间隔的时刻。</p>
<p>时间点 加 / 减 时间间隔得到另一个时间点。时间间隔之间可以加减，得到新的时间间隔。时间间隔也可以乘除一个倍数，用于放大 / 倍缩该时间间隔。</p>
<p>这些都很直觉。C++ <code>chrono</code> 中的类型设计还是很符合人类语义习惯的，这也是我很喜欢 C++ 的一个地方。</p>
<h2 id="使用-fmtlib-格式化时间"><a href="#使用-fmtlib-格式化时间" class="headerlink" title="使用 fmtlib 格式化时间"></a>使用 fmtlib 格式化时间</h2><p><strong>TODO</strong></p>
<h2 id="一些小吐槽"><a href="#一些小吐槽" class="headerlink" title="一些小吐槽"></a>一些小吐槽</h2><p>上面我们提到，C++11 中，就有了 <code>seconds</code> 、<code>minutes</code> 、<code>hours</code> 等类型的时间时间，但是对于天、月、年这个级别的时间间隔的支持，拖延到了 C++20 才进入标准。</p>
<p>在 <code>chrono</code> 的  <code>literals</code> 支持上，C++14 中我们可以方便地使用 <code>60s</code>，<code>30min</code>，<code>12h</code> 来表示时间间隔，但却不支持天、月、年。C++ 20 中加入了 <code>d</code>, <code>y</code>，来表示天和年，但注意，这是日期上的日和年，而不是时间间隔上的！（如 <code>23d</code> 表示某一个月的 23 号，而非时间长度上的 23 天）年可以理解，毕竟不同年份的时间不一致，但没有加入天数上的字面词，在代码风格上不能与秒、分钟达成统一，（如，我表达 3 秒可以写作 <code>3s</code>，表达 10 天却要写成 <code>days {10}</code>）我感觉还是有些不完美、略有遗憾吧。</p>
<p>我们可以通过 <code>24h * 10</code> 来表达 10 天，却不能够使用 <code>(10 * 24)h</code>，我觉得也是在语言设计上的一点缺陷，后者这明明是 <code>constexpr</code> 的，也有些遗憾吧。</p>
<h2 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h2><p>我之所以写这篇学习笔记，是因为在新的工作中，我需要记录时间，用于计算特定时间内处理了多少条数据等，并打印出日志来进行方案评估。</p>
<p>我自诩为看过一些 C++ 书的，了解一些 C++，却从未正式地写过 C++。于是知道有这种 <code>API</code>，却没有真实地使用过这个 <code>API</code>，没有实践的经历及由此而来的肌肉记忆。因此在写代码时，不能够很流畅地写出，感觉很生涩。真实地感受到了 <strong>“纸上得来终觉浅，绝知此事要躬行。”</strong></p>
<p>我们总说，编程语言没那么重要，数据结构、算法、系统架构这些才是重要的。这句话我是认可的，但令一方面，我觉得对程序员来说，<strong>编码是我们表达我们思想的方式。语言决定者对语言底层思想的设计，我们对该语言的理解、应用能力，（一定程度上）决定了我们在写代码时表达我们思想的能力。</strong></p>
<p>写这篇笔记时，刚好是小满（虽然写完不是了）。我很喜欢这个节气，万物至此，小得圆满，很有中国传统哲学的智慧。</p>
]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>(译) C++ Coroutines: Understanding operator co_await</title>
    <url>/2023/03/01/%E8%AF%91-C-Coroutines-Understanding-operator-co-await/</url>
    <content><![CDATA[<p>这是 Lewis Baker C++ 协程介绍的第一篇文章（从 0 开始计数）。现在因为看不太懂第二篇，所以打算将第一篇翻译出来，以便后续回来反复学习。第 0 篇文章讲的通用的协程理论，比较容易理解，不涉及 C++20 协程内容，暂时没有翻译计划。翻译错误及不太好的地方，欢迎大家指正。</p>
<p><a href="https://lewissbaker.github.io/2017/11/17/understanding-operator-co-await">原文链接</a></p>
<h1 id="C-协程：理解-co-await-操作符"><a href="#C-协程：理解-co-await-操作符" class="headerlink" title="C++ 协程：理解 co_await 操作符"></a>C++ 协程：理解 co_await 操作符</h1><p>在上一篇<a href="https://lewissbaker.github.io/2017/09/25/coroutine-theory">协程理论</a>文章中，我描述了函数和协程之间的高层区别，但并没有详细介绍 C++ Coroutines TS (<a href="https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2017/n4680.pdf">N4680</a>) 所描述的协程的语法和语义。</p>
<p>Coroutines TS 向 C++ 语言添加了暂停一个协程，并允许它稍后恢复这个重要的新功能。TS 通过新的 <code>co_await</code> 操作符来提供该机制。</p>
<p>理解 <code>co_await</code> 是如何工作的，可以帮助我们揭开协程神秘的面纱，让我们理解它们是如何挂起和恢复的。在这篇文章中，我将解释 <code>co_await</code> 操作符的机制，并介绍与之相关的 <strong>Awaitable</strong> 和 <strong>Awaiter</strong> 这两个类型的概念。<span id="more"></span></p>
<p>在我们深入 <code>co_await</code> 操作符之前，我想提供一个 Coroutines TS 所提供内容的概览。</p>
<h2 id="Coroutines-带给我们了什么？"><a href="#Coroutines-带给我们了什么？" class="headerlink" title="Coroutines 带给我们了什么？"></a>Coroutines 带给我们了什么？</h2><ul>
<li>三个语言关键字：<code>co_await</code>, <code>co_yield</code> 和 <code>co_return</code></li>
<li><code>std::experimental</code> 名字空间的几个新类型：（译注：原作者文章写于 2017 年，因此位于 <code>std::experimental</code> 名字空间内）<ul>
<li><code>corotine_handle&lt;P&gt;</code></li>
<li><code>corotine_traits&lt;Ts...&gt;</code></li>
<li><code>suspend_always</code></li>
<li><code>suspend_never</code></li>
</ul>
</li>
<li>一套通用的机制，协程库作者可以使用它们来与协程进行交互并自定义他们协程的行为。</li>
<li>一种使编写异步代码更加容易的语言基础设施！</li>
</ul>
<p>C++ Coroutines TS 在语言中提供的设施可以被认为是用于协程的底层汇编语言。这些设施可以通过安全的方式被不同地使用，并主要是面向协程库开发者，让他们构建更高层的抽象，来使应用开发者们可以安全地使用、工作。</p>
<p>我们的计划是将这些新的底层工具交付到即将到来的语言标准（希望是 C++20）中，以及标准库中一些附带的高级类型，这些类型包装了这些底层的构建块，并使应用程序开发者以一种安全的方式更容易地使用协程。</p>
<h2 id="编译器-lt-gt-库-交互"><a href="#编译器-lt-gt-库-交互" class="headerlink" title="编译器 <-> 库 交互"></a>编译器 &lt;-&gt; 库 交互</h2><p>有趣的是，Coroutines TS 实际上并没有定义协程的语义。他没有定义如何产生返回给调用者的值。它没有定义返回值如何被传递给 <code>co_return</code> 语句，或者如何处理从协程传播出去的异常。它没有定义协程在哪个线程上恢复运行。</p>
<p>与之代替的是，它为库代码指定了一种通用机制，通过实现符合特定接口类型来定制协程的行为。然后，编译器生成代码，在库提供的类型实例上调用方法。这种方法与库开发者可以通过定义 <code>begin()</code> / <code>end()</code> 方法和一个 <code>iterator</code> 类型来自定义基于范围的 <code>for</code> 循环行为相似。</p>
<p>Coroutines TS 没有为协程机制规定任何特定的语义，这使得它成为一个强大的工具。它允许库开发者定义许多不同种类的协程，用于各种不同的目的。</p>
<p>举例来说，你可以定义一个协程来异步生产一个有符号的数值，或者定义一个协程来惰性产生一系列地值，或者定义一个协程来简化用于消费 <code>optional&lt;T&gt;</code> ，如果遇到 <code>nullopt</code> 值则提前退出的控制流。</p>
<p>Coroutines TS 定义了两类接口：<strong>Promise</strong> 接口和 <strong>Awaitable</strong> 接口。</p>
<p><strong>Promise</strong> 接口指定了定制协程本身行为的方法。协程库开发者可以定制当调用协程时会发生什么，协程返回时发生什么（要么通过正常方式，要么通过未处理的异常），并定制协程中任何 <code>co_await</code> 或 <code>co_yield</code> 表达式的行为。</p>
<p><strong>Awaitable</strong> 接口指定了控制 <code>co_await</code> 表达式语义的方法。当一个值被 <code>await</code> 时，代码被转换为对 awaitable 对象上方法的一系列调用，这些方法允许它进行指定：是否挂起当前协程，在挂起后执行一些用于后续恢复的逻辑，以及在协程恢复后执行一些逻辑来产生 <code>co_await</code> 表达式的结果。</p>
<p>我将在后续的文章中介绍 <strong>Promise</strong> 接口的细节，现在让我们看向 <strong>Awaitable</strong> 接口。</p>
<h2 id="Awaiters-和-Awaitable：理解-operator-co-await"><a href="#Awaiters-和-Awaitable：理解-operator-co-await" class="headerlink" title="Awaiters 和 Awaitable：理解 operator co_await"></a>Awaiters 和 Awaitable：理解 <code>operator co_await</code></h2><p><code>co_await</code> 是一个新的可以用于一个值的一元操作符，如 <code>co_await someValue</code>。</p>
<p><code>co_await</code> 操作符只可以在协程上下文中使用。这有点像一个重复，因为在定义上，任何函数体中使用了 <code>co_await</code> 操作符，他将被编译成为一个协程。</p>
<p>一个支持 <code>co_await</code> 操作符的类型被称作 <strong>Awaitable</strong> 类型。</p>
<p>注意，是否可以将 <code>co_await</code> 操作符应用于一个类型依赖于 <code>co_await</code> 表达式出现的上下文。用于协程的 promise 类型可以通过它的 <code>await_transform</code> 方法（后续详细介绍）在协程内部改变 <code>co_await</code> 表达式的含义。</p>
<p>更具体地说，我喜欢使用 <strong>Normally Awaitable</strong> 来描述在协程上下文中支持 <code>co_await</code> 操作符的类型，该类型的 promise 类型中不含有 <code>await_transform</code> 成员。我喜欢使用术语 <strong>Contextually Awaitable</strong> 来描述仅在特定类型的协程的上下文中支持 <code>co_await</code> 操作符的类型，（因这种类型协程具有 <code>await_transform</code> 方法才支持）。（我期待对这两个名字更好的建议）</p>
<p><code>Awaiter</code> 类型实现了三个特定的方法，<code>await_ready</code>, <code>await_suspend</code> 和 <code>await_resume</code>，这些方法作为 <code>co_await</code> 表达式的一部分被调用。</p>
<p>注意，我在这里 “毫不羞耻” 地从 C# <code>async</code> 关键字的机制中借用了术语 ‘Awaiter’，该机制是通过 <code>GetAwaiter()</code> 方法实现的，该方法返回一个具有接口的对象，该接口与 C++ <code>Awaiter</code> 概念惊人似的对象。有关 C# awaiters 的更多细节，请参阅<a href="https://weblogs.asp.net/dixin/understanding-c-sharp-async-await-2-awaitable-awaiter-pattern">这篇文章</a>。</p>
<p>注意，一个类型，可以既是 <code>Awaitable</code> 类型，又是 <code>Awaiter</code> 类型。</p>
<p>当编译器遇到一个 <code>co_await &lt;expr&gt;</code> 表达式时，根据所涉及到的类型，实际上可以将其转换为许多可能的内容。</p>
<h3 id="获取-Awaiter"><a href="#获取-Awaiter" class="headerlink" title="获取 Awaiter"></a>获取 Awaiter</h3><p>编译器做的第一件事是生成代码以获取被 await 值的 <strong>Awaiter</strong> 对象。在 N4680 中的第 5.3.8 (3) 节中介绍了获取 await 对象的许多步骤。</p>
<p>让我们假设正在异步等待的协程的 promise 对象类型为 P，并且这个 promise 是对当前协程 promise 对象的左值引用。</p>
<p>如果 promise 类型 P 有 <code>await_transform</code> 成员，那么 <code>&lt;expr&gt;</code> 会首先被传到 <code>promise.await_transform(&lt;expr&gt;)</code> 调用中来获取 <strong>Awaitable</strong> 值，（我们称其名字为）awaitable。否则，如果 promise 类型没有 <code>await_transform</code> 成员，我们会使用求值后的 <code>&lt;expr&gt;</code> 直接作为 <strong>Awaitable</strong> 对象，awaitable。</p>
<p>然后，如果这个 <strong>Awaitable</strong> 对象，awaitable，有一个合适的 <code>operaor co_await()</code> 重载，那么它将会被调用来获取 <strong>Awaiter</strong> 对象。否则，这个 awaitable 对象，会被作为 awaiter 对象来使用。</p>
<p>如果我们将这些规则编码到函数 <code>get_awaitable()</code> 和 <code>get_awaiter()</code> 中，它们看上去像这样：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> P, <span class="keyword">typename</span> T&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">decltype</span>(<span class="keyword">auto</span>) <span class="title">get_awaitable</span><span class="params">(P&amp; promise, T&amp;&amp; expr)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">  <span class="function"><span class="keyword">if</span> <span class="title">constexpr</span> <span class="params">(has_any_await_transform_member_v&lt;P&gt;)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">return</span> promise.<span class="title">await_transform</span><span class="params">(<span class="keyword">static_cast</span>&lt;T&amp;&amp;&gt;(expr))</span></span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;T&amp;&amp;&gt;(expr);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> Awaitable&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">decltype</span>(<span class="keyword">auto</span>) <span class="title">get_awaiter</span><span class="params">(Awaitable&amp;&amp; awaitable)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">  <span class="function"><span class="keyword">if</span> <span class="title">constexpr</span> <span class="params">(has_member_operator_co_await_v&lt;Awaitable&gt;)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">return</span> <span class="keyword">static_cast</span>&lt;Awaitable&amp;&amp;&gt;<span class="params">(awaitable)</span>.<span class="keyword">operator</span> <span class="title">co_await</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> <span class="built_in">constexpr</span> (has_non_member_operator_co_await_v&lt;Awaitable&amp;&amp;&gt;)</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">operator</span> <span class="built_in">co_await</span>(<span class="built_in">static_cast</span>&lt;Awaitable&amp;&amp;&gt;(awaitable));</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">static_cast</span>&lt;Awaitable&amp;&amp;&gt;(awaitable);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Awaiting-the-Awaiter"><a href="#Awaiting-the-Awaiter" class="headerlink" title="Awaiting the Awaiter"></a>Awaiting the Awaiter</h3><p>因此，假设我们已经将 <code>&lt;expr&gt;</code> 结果转换为一个 <strong>Awaiter</strong> 对象的逻辑封装进了上述函数中，那么，<code>co_await &lt;expr&gt;</code> 的语义将会被（大概）翻译成以下：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="keyword">auto</span>&amp;&amp; value = &lt;expr&gt;;</span><br><span class="line">  <span class="keyword">auto</span>&amp;&amp; awaitable = <span class="built_in">get_awaitable</span>(promise, <span class="built_in">static_cast</span>&lt;<span class="keyword">decltype</span>(value)&gt;(value));</span><br><span class="line">  <span class="keyword">auto</span>&amp;&amp; awaiter = <span class="built_in">get_awaiter</span>(<span class="built_in">static_cast</span>&lt;<span class="keyword">decltype</span>(awaitable)&gt;(awaitable));</span><br><span class="line">  <span class="keyword">if</span> (!awaiter.<span class="built_in">await_ready</span>())</span><br><span class="line">  {</span><br><span class="line">    <span class="keyword">using</span> <span class="type">handle_t</span> = std::experimental::coroutine_handle&lt;P&gt;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">using</span> <span class="type">await_suspend_result_t</span> =</span><br><span class="line">      <span class="keyword">decltype</span>(awaiter.<span class="built_in">await_suspend</span>(<span class="type">handle_t</span>::<span class="built_in">from_promise</span>(p)));</span><br><span class="line"></span><br><span class="line">    &lt;suspend-coroutine&gt;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">if</span> <span class="title">constexpr</span> <span class="params">(std::is_void_v&lt;<span class="type">await_suspend_result_t</span>&gt;)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">      awaiter.<span class="built_in">await_suspend</span>(<span class="type">handle_t</span>::<span class="built_in">from_promise</span>(p));</span><br><span class="line">      &lt;<span class="keyword">return</span>-to-caller-<span class="keyword">or</span>-resumer&gt;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">      <span class="built_in">static_assert</span>(</span><br><span class="line">         std::is_same_v&lt;<span class="type">await_suspend_result_t</span>, <span class="type">bool</span>&gt;,</span><br><span class="line">         <span class="string">"await_suspend() must return 'void' or 'bool'."</span>);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (awaiter.<span class="built_in">await_suspend</span>(<span class="type">handle_t</span>::<span class="built_in">from_promise</span>(p)))</span><br><span class="line">      {</span><br><span class="line">        &lt;<span class="keyword">return</span>-to-caller-<span class="keyword">or</span>-resumer&gt;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    &lt;resume-point&gt;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> awaiter.<span class="built_in">await_resume</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>当调用  <code>await_supsend() </code> 返回时， 返回 <code>void</code> 版本的 <code>await_suspend()</code> 会无条件地将执行转移回调用者 / 恢复者，而返回 <code>bool</code> 版本的会允许 awaiter 对象在满足一定条件下立即恢复协程而不返回调用者 / 恢复者。</p>
<p>当 <code>awaiter</code> 启动异步操作而该异步操作可以同步完成而不需要等待时，<code>await_suspend()</code> 返回 <code>bool</code> 的 版本会非常有用。在这种情况下，它可以同步完成， <code>await_suspend()</code> 方法可以返回 <code>false</code> 来指定协程应该立即恢复并继续执行。</p>
<p>在 <code>&lt;suspend-coroutine&gt;</code> 点，编译器生成一些代码来保存当前协程的状态，并为恢复做准备。这包括储存 <code>&lt;resume-point&gt;</code> 点位置，以及将当前保存在寄存器中的任何值保存到协程帧内存中。</p>
<p><code>&lt;suspend-coroutine&gt;</code> 操作完成后，当前协程会被认为挂起。你可以观察到挂起协程的第一个点是在 <code>await_suspend()</code> 调用的内部。一旦协程被挂起，就可以恢复或销毁它。</p>
<p><code>await_ready()</code> 方法的目的是，如果了解操作可以被同步地完成而不需要挂起，在这种情况下，你可以避免 <code>&lt;suspend_coroutine&gt;</code> 操作的消耗。</p>
<p>在 <code>&lt;return-to-caller-or-resumer&gt;</code> 点，执行权将被转移回调用者或者恢复者，弹出本地栈帧，但要保持协程帧存活。</p>
<p>当（或者如果）被挂起的协程最终被恢复时，执行会在 <code>&lt;resume-point&gt;</code> 恢复，即在调用 <code>await_resume()</code> 方法以获取操作结果之前。</p>
<p><code>await_resume</code> 方法调用的返回值会成为 <code>co_await</code> 表达式的结果。<code>await_resume()</code> 方法也可以抛出异常，在这种情况下，异常从 <code>co_await</code> 表达式传播出去。</p>
<p>注意，如果异常在 <code>await_suspend()</code> 调用中传播出去，那么会自动恢复协程，并且在 <code>co_await</code> 表达式中传播而无需调用 <code>await_resume()</code>。</p>
<h2 id="Coroutine-Handles"><a href="#Coroutine-Handles" class="headerlink" title="Coroutine Handles"></a>Coroutine Handles</h2><p>或许你已经注意到了 <code>coroutine_handle&lt;P&gt;</code> 类型的使用，该类型传递给了 <code>co_await</code> 表达式的 <code>await_suspend()</code> 调用。</p>
<p>这个类型表示一个非拥有权的协程帧的句柄，并且可以被用于恢复协程的运行或者销毁协程帧。它也可以被用于访问协程的 promise 对象。</p>
<p><code>coroutine_handle</code> 类型具有以下（缩写）接口：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> std::experimental</span><br><span class="line">{</span><br><span class="line">  <span class="keyword">template</span>&lt;<span class="keyword">typename</span> Promise&gt;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">coroutine_handle</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">template</span>&lt;&gt;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">coroutine_handle</span>&lt;<span class="type">void</span>&gt;</span><br><span class="line">  {</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">done</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">resume</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">destroy</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span>* <span class="title">address</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function"><span class="type">static</span> coroutine_handle <span class="title">from_address</span><span class="params">(<span class="type">void</span>* address)</span></span>;</span><br><span class="line">  };</span><br><span class="line"></span><br><span class="line">  <span class="keyword">template</span>&lt;<span class="keyword">typename</span> Promise&gt;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">coroutine_handle</span> : coroutine_handle&lt;<span class="type">void</span>&gt;</span><br><span class="line">  {</span><br><span class="line">    <span class="function">Promise&amp; <span class="title">promise</span><span class="params">()</span> <span class="type">const</span></span>;</span><br><span class="line">    <span class="function"><span class="type">static</span> coroutine_handle <span class="title">from_promise</span><span class="params">(Promise&amp; promise)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">static</span> coroutine_handle <span class="title">from_address</span><span class="params">(<span class="type">void</span>* address)</span></span>;</span><br><span class="line">  };</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>当实现 Awaitable 类型时，你将在 <code>coroutine_handle</code> 上使用的关键的方法是 <code>.resume()</code>，当操作完成并且你想恢复一个正在等待中的协程的执行时，应该调用它。在一个 <code>coroutine_handle</code> 上调用 <code>.resume()</code> 将会在 <code>&lt;resume-point&gt;</code> 激活一个被挂起的协程。当协程遇到下一个 <code>&lt;return-to-caller-or-resumer&gt;</code> 时，对 <code>.resume()</code> 的调用将会返回。</p>
<p><code>.destory()</code> 方法将会销毁协程帧，调用所有作用域内变量（in-scope variables）的析构函数，并且释放协程帧使用的内存。你一般不需要（实际上应该避免）调用 <code>.destroy()</code> 除非你是一个在实现协程 promise 类型的库作者。通常，协程帧将由调用协程返回的某种 RAII 类型所拥有。因此，在不与 RAII 对象合作的情况下调用 <code>.destory()</code> 可能会导致 double free bug。</p>
<p><code>.promise()</code> 方法的返回一个协程 promise 对象的引用。然后，像 <code>.destory()</code> 方法，它通常只在你正编写协程 promise 类型时才有用。你应该将协程的 promise 对象视为协程的内部实现细节。对于大多数 <strong>Normally Awaitable</strong> 类型，你应该使用 <code>coroutine_handle&lt;void&gt;</code> 作为 <code>await_suspend()</code> 方法的参数类型，而不是 <code>coroutine_handle&lt;Promise&gt;</code>。</p>
<p><code>coroutine_handle&lt;P&gt;::from_promise(P&amp; promise)</code> 函数允许从一个协程 promise 对象的引用重建它的协程句柄。注意，你必须要保证类型 P 精确地匹配协程帧使用的 promise 类型。尝试从 <code>Derived</code> 的 promise 类型创建 <code>coroutine_handle&lt;Base&gt;</code> 会导致未定义行为。</p>
<p><code>.address()</code>/<code>from_address</code> 函数允许协程句柄与 <code>void *</code> 指针间的相互转换。这主要是为了传递一个上下文参数到现有的 C 风格的 API 中，因此你会发现这在一些实现 <code>Awaitable</code> 类型的场景中是有用的。然而，在大多数情况下，我发现有必要将附加信息传递给这个上下文参数中回调函数，因此，我一般将协程句柄存储在结构体里，并在上下文参数中传递指向该结构体的指针，而不是使用 <code>.address()</code> 的返回值。</p>
<h2 id="无同步的异步代码"><a href="#无同步的异步代码" class="headerlink" title="无同步的异步代码"></a>无同步的异步代码</h2><p><code>co_await</code> 操作符一上强大的设计特性就是可以在暂停协程之后、在返回调用者 / 恢复者之前执行代码。</p>
<p>这允许一个 Awaitable 对象在协程挂起后初始化一个异步操作，将挂起的协程的 <code>coroutine_handle</code> 传递给这个操作，当操作完成（可能在另一个线程上）时，它可以安全的恢复协程，而不需要额外的同步。</p>
<p>例如，当协程已经挂起时，在 <code>await_suspend()</code> 中启动异步读操作，意味着我们可以在操作完成时恢复协程，而不需要任何线程同步来协调启动该操作的线程和完成该操作的线程。</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Time     Thread 1                           Thread 2</span><br><span class="line">  |      --------                           --------</span><br><span class="line">  |      ....                               Call OS - Wait for I/O event</span><br><span class="line">  |      Call await_ready()                    |</span><br><span class="line">  |      &lt;supend-point&gt;                        |</span><br><span class="line">  |      Call await_suspend(handle)            |</span><br><span class="line">  |        Store handle in operation           |</span><br><span class="line">  V        Start AsyncFileRead ---+            V</span><br><span class="line">                                  +-----&gt;   &lt;AsyncFileRead Completion Event&gt;</span><br><span class="line">                                            Load coroutine_handle from operation</span><br><span class="line">                                            Call handle.resume()</span><br><span class="line">                                              &lt;resume-point&gt;</span><br><span class="line">                                              Call to await_resume()</span><br><span class="line">                                              execution continues....</span><br><span class="line">           Call to AsyncFileRead returns</span><br><span class="line">         Call to await_suspend() returns</span><br><span class="line">         &lt;return-to-caller/resumer&gt;</span><br></pre></td></tr></tbody></table></figure>

<p>在利用这种方法时需要非常小心的一件事是，一旦你启动了将协程句柄发布到其他线程的操作，那么可能会在 <code>await_suspend()</code> 返回之前在另一个线程上恢复协程，并可能继续与 <code>await_suspend()</code> 方法的其余部分并发执行。</p>
<p>协程在恢复时做的第一件事就是调用 <code>await_resume</code> 来获取结果，然后它一般会立即析构 <strong>Awaiter</strong> 对象（如，<code>await_suspend()</code> 调用中的 <code>this</code> 指针）。之后，协程可能运行到完成，销毁协程和 promise 对象，这些都在 <code>await_suspend()</code> 返回之前完成。</p>
<p>因此，在 <code>await_suspend()</code> 方法中，一旦协程可以在另一个线程上并发地恢复，您需要确保避免访问 <code>this</code> 或协程的 <code>.promise()</code> 对象，因为这两个对象都可能已经被销毁。一般来说，在启动操作和调度恢复协程之后，唯一可以安全访问的对象是 <code>await suspend()</code> 中的本地变量。</p>
<h3 id="与有栈协程比较"><a href="#与有栈协程比较" class="headerlink" title="与有栈协程比较"></a>与有栈协程比较</h3><p>我想简单地比较一下 Coroutines TS 无栈协程在协程挂起后执行逻辑的能力，以及一些现有的常用的有栈协程设施，如 Win32 纤程或 boost::context。</p>
<p>在许多有栈协程框架中，一个协程的挂起操作与另一个协程的恢复结合在一起，形成上下文切换操作。使用这种上下文切换操作，通常没有机会在挂起当前协程后，恢复执行另一个协程之前执行逻辑。</p>
<p>这意味着如果我们想在有栈协程之上实现类似的异步文件读取操作，那么我们必须在挂起协程之前启动该操作。因此，在协程挂起并有资格恢复之前，操作可能在另一个线程上完成。在另一个线程上完成的操作和协程挂起之间的潜在竞争需要某种线程同步来仲裁和决定赢家。</p>
<p>通过使用蹦床上下文，可以在初始上下文挂起之后启动操作来代表初始上下文。（不太理解这，原文为 There are probably ways around this by using a trampoline context that can start the operation on behalf of the initiating context after the initiating context has been suspended. ）然而，这将需要额外的基础设施和额外的上下文切换来使其工作，这可能带来的开销将大于它试图避免的同步成本。</p>
<h2 id="避免分配内存"><a href="#避免分配内存" class="headerlink" title="避免分配内存"></a>避免分配内存</h2><p>异步操作通常需要存储一些每个操作的状态，以跟踪操作的进度。这个状态通常需要在操作期间持续，并且只应在操作完成后立即释放。</p>
<p>例如，调用异步 Win32 I/O 函数需要您分配并将指针传递给 <code>OVERLAPPED</code> 结构。调用者负责确保此指针在操作完成前保持有效。</p>
<p>对于传统的基于回调的 api，这种状态通常需要在堆上分配，以确保它具有合适的生命周期。如果您正在执行许多操作，则可能需要为每个操作分配和释放此状态。如果性能是一个问题，那么可以使用自定义分配器从池中分配这些状态对象。</p>
<p>然而，当我们使用协程时，我们可以利用协程帧内的局部变量在协程挂起时保持活跃的事实，从而避免为操作状态分配堆上存储。</p>
<p>通过将每个操作状态放在 <strong>Awaiter</strong> 对象中，我们可以高效地从协程帧中借用内存，用于存储 <code>co_await</code> 表达式期间的每个操作状态。一旦操作完成，协程将恢复，<strong>Awaiter</strong> 对象将被销毁，释放协程帧中的内存供其他局部变量使用。</p>
<p>最终，协程帧仍可能被分配到堆上。然而，一旦分配了，这个协程帧就可以使用这个单一的堆分配来执行许多异步操作。</p>
<p>如果你仔细想想，协程帧就像一种真正高性能的 arena 内存分配器。编译器在编译时计算出所有局部变量所需的总 arena 大小，然后能够根据需要将这些内存分配给局部变量，zero overhead！尝试使用自定义分配器来击败它；)</p>
<h2 id="一个栗子：实现一个简单的线程同步原语"><a href="#一个栗子：实现一个简单的线程同步原语" class="headerlink" title="一个栗子：实现一个简单的线程同步原语"></a>一个栗子：实现一个简单的线程同步原语</h2><p>现在我们已经介绍了 <code>co_await</code> 操作符的许多机制，我想通过实现一个基本的 awaitable 同步原语（异步手动重置事件）来展示如何将这些知识应用到实践中。</p>
<p>此事件的基本需求是它需要被多个并发执行的协程可等待（<strong>Awaitable</strong>），当等待时需要挂起等待的协程，直到一些线程调用 <code>.set()</code> 方法，此时任何等待的协程都将恢复。如果某个线程已经调用了 <code>.set()</code>，那么协程应该继续而不挂起。</p>
<p>理想情况下，我们还希望使它成为 <code>noexcept</code>，不需要堆分配，并有一个无锁的实现。</p>
<p><strong>2017./11/23 修改：添加 <code>async_manual_reset_event</code> 使用示例</strong></p>
<p>使用示例类似这样：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">T value;</span><br><span class="line">async_manual_reset_event event;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 单个产生值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">producer</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">  value = <span class="built_in">some_long_running_computation</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 通过 set 事件来发布值</span></span><br><span class="line">  event.<span class="built_in">set</span>();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// 支持多个并发消费</span></span><br><span class="line">task&lt;&gt; <span class="built_in">consumer</span>()</span><br><span class="line">{</span><br><span class="line">  <span class="comment">// 等待，直到 producer() 函数通过 event.set() 来设定事件</span></span><br><span class="line">  <span class="keyword">co_await</span> event;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 现在，可以安全地消费 'value'</span></span><br><span class="line">  <span class="comment">// 这个保证在 `value` 赋值后发生</span></span><br><span class="line">  std::cout &lt;&lt; value &lt;&lt; std::endl;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>让我们首先考虑下事件可能的状态：<code>未设置</code> 和 <code>已设置</code>。</p>
<p>当它处于未设置状态时，会有一个 (可能为空的) 等待中的协程列表等待它被设置。</p>
<p>当它处于设置状态时，将不会有任何等待协程，因为在此状态下等待事件的协程可以继续而不暂停。</p>
<p>这个状态实际上可以用一个 <code>std::atomic&lt;void *&gt;</code> 来表示。</p>
<ul>
<li>为 <code>已设置</code> 状态的指针保留一个特殊的指针值。在这种情况下，我们使用事件的 <code>this</code> 指针，因为我们知道它不能与任何列表项的地址相同。</li>
<li>否则，事件处于未设置状态，值是指向等待状态中的协程结构的单链表头部的指针。</li>
</ul>
<p>通过将节点存储在协程帧上的 ‘awaiter’ 对象内，我们可以避免为堆上的链表分配节点的额外调用。</p>
<p>让我们从一个类接口开始，它看起来像这样：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">async_manual_reset_event</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">async_manual_reset_event</span>(<span class="type">bool</span> initiallySet = <span class="literal">false</span>) <span class="keyword">noexcept</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 没有拷贝/移动构造函数</span></span><br><span class="line">  <span class="built_in">async_manual_reset_event</span>(<span class="type">const</span> async_manual_reset_event&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">  <span class="built_in">async_manual_reset_event</span>(async_manual_reset_event&amp;&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">  async_manual_reset_event&amp; <span class="keyword">operator</span>=(<span class="type">const</span> async_manual_reset_event&amp;) = <span class="keyword">delete</span>;</span><br><span class="line">  async_manual_reset_event&amp; <span class="keyword">operator</span>=(async_manual_reset_event&amp;&amp;) = <span class="keyword">delete</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">is_set</span><span class="params">()</span> <span class="type">const</span> <span class="keyword">noexcept</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">awaiter</span>;</span><br><span class="line">  <span class="function">awaiter <span class="keyword">operator</span> <span class="title">co_await</span><span class="params">()</span> <span class="type">const</span> <span class="keyword">noexcept</span></span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">set</span><span class="params">()</span> <span class="keyword">noexcept</span></span>;</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">reset</span><span class="params">()</span> <span class="keyword">noexcept</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">  <span class="keyword">friend</span> <span class="keyword">struct</span> <span class="title class_">awaiter</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// - 'this' =&gt; 已设置状态</span></span><br><span class="line">  <span class="comment">// - otherwise =&gt; 未设置状态, awaiter * 的链表头节点</span></span><br><span class="line">  <span class="keyword">mutable</span> std::atomic&lt;<span class="type">void</span>*&gt; m_state;</span><br><span class="line"></span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>

<p>这里我们有一个相当直接和简单的接口。此时需要注意的主要事情是，它有一个操作符  <code>co_await()</code> 方法，该方法返回一个尚未定义的类型 <code>awaiter</code>。</p>
<p>让我们现在来定义 <code>awaiter</code> 类型。</p>
<h3 id="定义-Awaiter"><a href="#定义-Awaiter" class="headerlink" title="定义 Awaiter"></a>定义 Awaiter</h3><p>首选，我们需要知道它将等待哪一个 <code>async_manual_reset_event</code>，因此它需要一个对事件的引用和一个构造函数来初始化它。</p>
<p>它还需要充当一个由 <code>awaiter</code> 值组成的链表的节点，因此它需要保存一个指向列表中下一个 <code>awaiter</code> 对象的指针。</p>
<p>它还需要存储正在执行 <code>co_await</code> 表达式的等待中协程的 <code>coroutine_handle</code>，以便事件可以在被设置时恢复协程。我们不关心协程的 promise 类型是什么，因此我们使用 <code> coroutine_handle</code> 就好，（<code>coroutine_handle&lt;void&gt;</code> 的编写）。</p>
<p>最终， 它需要实现 <strong>Awaiter</strong> 接口，因此，它需要三个特定的方法 <code>await_spend</code>，<code>await_ready</code> 和 <code>await_resume</code>。我们不需要从 <code>co_await</code> 表达式中返回值，因此 <code>await_resume</code> 可以返回 <code>void</code>。</p>
<p>一旦我们把所有这些放在一起，一个服务生的基本类接口看起来像这样。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">async_manual_reset_event</span>::awaiter</span><br><span class="line">{</span><br><span class="line">  <span class="built_in">awaiter</span>(<span class="type">const</span> async_manual_reset_event&amp; event) <span class="keyword">noexcept</span></span><br><span class="line">  : <span class="built_in">m_event</span>(event)</span><br><span class="line">  {}</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">await_ready</span><span class="params">()</span> <span class="type">const</span> <span class="keyword">noexcept</span></span>;</span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">await_suspend</span><span class="params">(std::experimental::coroutine_handle&lt;&gt; awaitingCoroutine)</span> <span class="keyword">noexcept</span></span>;</span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">await_resume</span><span class="params">()</span> <span class="keyword">noexcept</span> </span>{}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"></span><br><span class="line">  <span class="type">const</span> async_manual_reset_event&amp; m_event;</span><br><span class="line">  std::experimental::coroutine_handle&lt;&gt; m_awaitingCoroutine;</span><br><span class="line">  awaiter* m_next;</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>

<p>现在，当我们 <code>co_await</code> 一个事件时，如果事件已经被设置，我们不想挂起让协程挂起。所以，如果事件已经被设置，我们可以将 <code>await_ready()</code> 返回为 <code>true</code>。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">bool</span> async_manual_reset_event::awaiter::<span class="built_in">await_ready</span>() <span class="type">const</span> <span class="keyword">noexcept</span></span><br><span class="line">{</span><br><span class="line">  <span class="keyword">return</span> m_event.<span class="built_in">is_set</span>();</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>接下来，让我们看看 <code>await_suspend()</code> 方法。这通常是 awaitable 类型中最神奇的事情发生的地方。</p>
<p>首先，它需要将等待中协程的协程句柄存储到 <code>m_awaitingCoroutine</code> 成员中，以便事件稍后可以对其调用 <code>.resume()</code>。</p>
<p>完成这些之后，我们需要尝试将 <code>awaiter</code> 原子地入队到等待者的链表中。如果我们成功地将其入队，那么我们返回 <code>true</code>，表示我们不想立即恢复协程，否则，如果我们发现事件同时被更改为已设置状态，那么我们返回 <code>false</code>，表示应该立即恢复协程。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">bool</span> async_manual_reset_event::awaiter::<span class="built_in">await_suspend</span>(</span><br><span class="line">  std::experimental::coroutine_handle&lt;&gt; awaitingCoroutine) <span class="keyword">noexcept</span></span><br><span class="line">{</span><br><span class="line">  <span class="comment">// 特定的 m_state 值用于表示事件牌 ‘已设置’ 状态</span></span><br><span class="line">  <span class="type">const</span> <span class="type">void</span>* <span class="type">const</span> setState = &amp;m_event;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 存储等待中协程的句柄</span></span><br><span class="line">  m_awaitingCoroutine = awaitingCoroutine;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 尝试原子性地将 awaiter 放到链表头</span></span><br><span class="line">  <span class="type">void</span>* oldValue = m_event.m_state.<span class="built_in">load</span>(std::memory_order_acquire);</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  {</span><br><span class="line">    <span class="comment">// 如果已经在 ‘已设置’ 状态，立即恢复</span></span><br><span class="line">    <span class="keyword">if</span> (oldValue == setState) <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新 next 指针，指向当前头部</span></span><br><span class="line">    m_next = <span class="built_in">static_cast</span>&lt;awaiter*&gt;(oldValue);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Finally, try to swap the old list head, inserting this awaiter</span></span><br><span class="line">    <span class="comment">// as the new list head.</span></span><br><span class="line">    <span class="comment">// 最后，尝试交换旧的列表头节点，将这个 awaiter 作为新的链表头节点</span></span><br><span class="line">  } <span class="keyword">while</span> (!m_event.m_state.<span class="built_in">compare_exchange_weak</span>(</span><br><span class="line">             oldValue,</span><br><span class="line">             <span class="keyword">this</span>,</span><br><span class="line">             std::memory_order_release,</span><br><span class="line">             std::memory_order_acquire));</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 成功入队，保持挂起。</span></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>注意，当我们加载旧的状态时，我们使用 <code>acquire</code> 内存顺序，因此，如果我们读到了特定的 ‘已设置’  值，我们可以看到调用 <code>set()</code> 之前发生的写操作。</p>
<p>如果比较 - 替换成功，我们需要 <code>release</code> 语义，因此后续调用 <code>set()</code> 将看到我们写入 m_awaitingCoroutine 和写入之前协程状态。</p>
<h3 id="补充事件类的其他部分"><a href="#补充事件类的其他部分" class="headerlink" title="补充事件类的其他部分"></a>补充事件类的其他部分</h3><p>现在我们已经定义了 <code>awaiter</code> 类型，让我们回过头来看看 <code>async_manual_reset_evnet</code> 方法的实现。</p>
<p>首先，构造函数。它需要初始化到未设置状态，并使用空的等待者列表（如 <code>nullptr</code>）或初始化到 ‘已设置’ 状态（即 <code>this</code>）。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">async_manual_reset_event::<span class="built_in">async_manual_reset_event</span>(</span><br><span class="line">  <span class="type">bool</span> initiallySet) <span class="keyword">noexcept</span></span><br><span class="line">: <span class="built_in">m_state</span>(initiallySet ? <span class="keyword">this</span> : <span class="literal">nullptr</span>)</span><br><span class="line">{}</span><br></pre></td></tr></tbody></table></figure>

<p>然后，<code>is_set()</code> 方法非常直接 —— 通过判断它是否有特殊的 <code>this</code> 值表示它是否被设置。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">async_manual_reset_event::is_set</span><span class="params">()</span> <span class="type">const</span> <span class="keyword">noexcept</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">  <span class="keyword">return</span> m_state.<span class="built_in">load</span>(std::memory_order_acquire) == <span class="keyword">this</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>接下来，<code>reset()</code> 方法。如果它处于 ‘已设置’ 状态，我们希望转换回未设置时空链表的状态，而不是维持原样。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">async_manual_reset_event::reset</span><span class="params">()</span> <span class="keyword">noexcept</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">  <span class="type">void</span>* oldValue = <span class="keyword">this</span>;</span><br><span class="line">  m_state.<span class="built_in">compare_exchange_strong</span>(oldValue, <span class="literal">nullptr</span>, std::memory_order_acquire);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>在 <code>set</code> 方法中，我们希望通过将当头状态与特殊设定值 <code> this</code> 交换来转换到 ‘已设置’ 状态。然后检查原来的值是什么。如果有任务等待中的协程，那么我们希望在返回之前依次恢复每个协程。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">async_manual_reset_event::set</span><span class="params">()</span> <span class="keyword">noexcept</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">  <span class="comment">// Needs to be 'release' so that subsequent 'co_await' has</span></span><br><span class="line">  <span class="comment">// visibility of our prior writes.</span></span><br><span class="line">  <span class="comment">// Needs to be 'acquire' so that we have visibility of prior</span></span><br><span class="line">  <span class="comment">// writes by awaiting coroutines.</span></span><br><span class="line">  <span class="type">void</span>* oldValue = m_state.<span class="built_in">exchange</span>(<span class="keyword">this</span>, std::memory_order_acq_rel);</span><br><span class="line">  <span class="keyword">if</span> (oldValue != <span class="keyword">this</span>)</span><br><span class="line">  {</span><br><span class="line">    <span class="comment">// Wasn't already in 'set' state.</span></span><br><span class="line">    <span class="comment">// Treat old value as head of a linked-list of waiters</span></span><br><span class="line">    <span class="comment">// which we have now acquired and need to resume.</span></span><br><span class="line">    <span class="keyword">auto</span>* waiters = <span class="built_in">static_cast</span>&lt;awaiter*&gt;(oldValue);</span><br><span class="line">    <span class="keyword">while</span> (waiters != <span class="literal">nullptr</span>)</span><br><span class="line">    {</span><br><span class="line">      <span class="comment">// Read m_next before resuming the coroutine as resuming</span></span><br><span class="line">      <span class="comment">// the coroutine will likely destroy the awaiter object.</span></span><br><span class="line">      <span class="keyword">auto</span>* next = waiters-&gt;m_next;</span><br><span class="line">      waiters-&gt;m_awaitingCoroutine.<span class="built_in">resume</span>();</span><br><span class="line">      waiters = next;</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>最后，我们需要实现 <code>operator co_await()</code> 方法。这只需要构造一个 <code>awaiter</code> 对象。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function">async_manual_reset_event::awaiter</span></span><br><span class="line"><span class="function">async_manual_reset_event::<span class="keyword">operator</span> <span class="title">co_await</span><span class="params">()</span> <span class="type">const</span> <span class="keyword">noexcept</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">  <span class="keyword">return</span> awaiter{ *<span class="keyword">this</span> };</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>我们创造了它。一个可异步等待的手动重置事件，它具有无锁、无内存分配、<code>noexcept</code> 的实现。</p>
<p>如果您想使用代码玩耍，或查看其在 MSVC 和 Clang 上的编译，可以在 <a href="https://godbolt.org/g/Ad47tH">godbolt</a> 上查看源代码。</p>
<p>你也可以在 <a href="https://github.com/lewissbaker/cppcoro">cppcoro</a> 库中找到该类的实现，以及其他一些有用的 awaitable 类型，如 <code>async_mutex</code> 和 <code>async_auto_reset_event</code>。</p>
<h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>本文介绍了 <code>operator co_await</code> 是如何实现的，以及如何根据 <strong>Awaitable</strong> 和 <strong>Awaiter</strong> 概念定义的。</p>
<p>本文还介绍了如何实现一个可等待的异步线程同步原语，该原语利用了在协程帧上分配等待对象以避免额外堆分配的事实。</p>
<p>我希望这篇文章可以帮助你揭开新 <code>co_await</code> 操作符的神秘面纱。</p>
<p>在下一篇文章中，我将探讨 <code>Promise</code> 概念，以及协程类型作者如何定制他们协程的行为。</p>
<h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>我想特别感谢 Gor Nishanov 在过去几年中耐心和热情地回答了我关于协程的许多问题。</p>
<p>并向 Eric Niebler 审查并提供有关本文早期草案的反馈。</p>
<hr>


<h4 id="留言"><a href="#留言" class="headerlink" title="留言"></a>留言</h4><p>非常欢迎在 <a href="https://github.com/lewissbaker/lewissbaker.github.io/issues/2">这个 Github issue</a> 上进行留言。</p>
]]></content>
      <tags>
        <tag>C++</tag>
        <tag>协程</tag>
      </tags>
  </entry>
  <entry>
    <title>24 岁写给孩子的信</title>
    <url>/2023/01/26/24%E5%B2%81%E5%86%99%E7%BB%99%E5%AD%A9%E5%AD%90%E7%9A%84%E4%BF%A1/</url>
    <content><![CDATA[<p>见字如晤。</p>
<p>岁聿云暮，律回春渐，又是新的一年。每至年关，我总想写些什么东西记录下过去的一年，才不使匆匆没有痕迹。但去年好像都是一件件零碎的事情，碎碎念要更多一些，感觉不能统筹为正式的文章。大年二十九晚上，我在 B 站 [^B 站] 看到一位父亲给孩子写的信，便想着不如以后将每年的总结改为写给你们的信，将我的碎碎念说给未来的你们听，假使你们到了 24 岁时，如果能感受到共鸣或有所收获，那实在是太棒了，这种穿越时空的情感，不知是否能让你们砰然心动。<span id="more"></span></p>
<p>[^B 站]: 我这个年代的一个视频网站，bilibili.com ，不知道在你那时还有没有。</p>
<p>这是我写给你们的第一封信，我希望能与你们做朋友。我从小似乎不肯与爱我的父母打开心扉，朋友般地聊天，讲自己真实的内心。因此，我从小就将心事一直藏在心里，不肯与外人诉说，这当然有我性格的原因。现在我觉得这二十年来的埋藏让我心事重重，很多的事情一直压抑在心底，并非是什么好事。与你们写信，刚好可以找个人来说这些，我希望将我的开心、难过、焦虑、幸福一同分享给你，希望将我的所见所识所思，一一告诉你们。分享欲是世间很美好的东西，有人听分享对于分享欲旺盛的我实在是一件无比幸福的事。我希望在你出生后，我有能力来引导你的成长，引导你的性格。我很希望我能够是一个开明的父母，是一个能成为孩子朋友的父母，我希望你能够无所顾忌地把你的心事讲给我听，不用因为是父母而有所顾虑。我想，父母听完孩子说完后的反应、表现非常重要，是孩子是否继续喜欢与你分享的关键。我也恰是害怕父母的反应、或带给父母不好的感受，而不敢将内心与他们说。比如我向父母说喜欢某个玩具，就会害怕得到他们反面的情绪，又会害怕给他们带来经济上的压力（实际上当然不会，这里只是举下不恰当的例子），又会害怕父母虽然有经济压力，但为了满足我的喜欢、我的心愿，打肿脸充胖子咬牙买下玩具，这会让我的心里更难受。想起一个现实中的例子。我与父亲都很爱吃一家的板面（现在这家板面已经关门了，我很想念他），一次晚上我去他家打包，恰好姐夫过来说 “要不要打电话问问，给咱爸来一份”，我打电话后打包了两份。晚上爸妈说起这件事，说我长大了，知道打电话问问家里吃不吃了。我说是我姐夫去了让我说的。我很爱我的父母，却深藏在心里羞于表现。我固然知道父亲也爱吃板面，但我心里还想到了一个更远的事情，一个可能他人不会在意的事情。家中还有妈妈，我和爸爸吃爱吃的板面，妈妈一人吃家里普通的小米饭，妈妈会不会难过（事实上当然不会）。你看，我总会因为想的太多，心思上太过细腻，情感上太过敏感，共情能力太强，而整个人都太过扭捏，一点也不干脆。我有时很不喜欢这样的自己，后来，妹妹给我说 “敏感也是一种可爱” 后，我逐渐地开始包容接受这样的性格，开始喜欢起自己，毕竟这是上天给我的一种过人的天赋。给你讲这些，就是希望你能像朋友一样与我讲自己的事，不必有着过多的担忧，哪怕是学生时期的爱慕，我亦觉得是世间很美好的事。你们或许是幸运的，因为我的心理经历，让我会更加重视孩子们的心理健康。我爱你们，我希望我能够在你们成长的过程中，帮助你们爱上你们自己。</p>
<p>我今年最重要、最开心的事，就是得知你妈妈怀孕，我们有了小宝宝。当我们看到可丽蓝验孕棒上的结果时，彼刻的心情现在我已不能用笨拙的文字所形容出，当你们期待有一个孩子并如愿以偿时，我想你也会有着当时我同样的心情。那天，我们去超市买了很多食材晚上做火锅来庆祝这件喜悦的事，我还满怀着欣喜地去南山书城买了本《周易》，（家里已经有《诗经》啦），用来给你取名字。买书取名这件事让我觉得我（或者说很多的中国人）浪漫是在骨子里的，希望后面有机会的话我再来说这件事。当我将怀孕告诉家里时，我父母也十分高兴，让我照顾好妈妈，他们也很爱你。为了迎接你，保护你的健康，妈妈做了很多的检查，新的一年里也会有很多。因为一些原因，妈妈的医保暂时还没有下来，我看着检查的费用，在想，我们很爱你，这些费用也不会给我们带来负担，但会不会有其他的家庭，因为这些费用或是当地医疗条件的原因而放弃检查？这实在是让我很痛心的事情，我们可以用不太多的费用，在很大程度上保障肚子里小宝宝的健康、小宝宝一生的幸福，提高优生率，让社会更加美好。但世上还有着因为现实原因而放弃检查的人们，假若我们的社会能够免费提供这些关键的检查，该是多美好的一件事，这也是我们一代代人们奋斗的目标。参加工作后，我很能理解这些人们所想象的共产主义，我看到了在暴雨中劳作的工人，看到了因为没有体检未能及时发现问题而缠病的老人，那时候，一种对人类社会美好的愿望都会在心底萌生。假若你们长大后能对这份事业尽一份力，我会感到很欣慰。2022 年 12 月的时候，国家放开了新冠防护，人们面对着新冠的肆虐。因为你的存在，我痛骂了很久这件事。我们始终担心着怀孕时感染新冠会对宝宝带来什么问题，未知给我们带来了恐惧。我们在 12.24 平安夜时相继出现了症状，夜里烧得厉害，妈妈因为怀孕不能够吃降温的布洛芬。早上醒来，我忍着去了家旁边的社康买对乙酰氨基酚，却未能如愿。中午时又发烧，但在下午 2:00 时还是毅然坚持着又去了社康询问。最终我们遇到了一个很好的好心人，他在其他地方储存了很多对乙酰氨基酚，免费地送给需要的人。妈妈坚持着发烧尽量不吃药，最终也没有吃这份对乙酰氨基酚，但家里有药给了我们很大的安全感。疫情三年，给我们的世界带来了很大的变化，我真实地感受到，时代的一粒尘，落在一个人身上就是一座山。希望你出生后，人们就不必再为新冠担忧，你能够有一个快乐的童年。</p>
<p>和你讲讲父亲工作上的事情，倾诉下我现在的烦恼和想法。在知道今年的年终后，我坚定了换一份工作的决心。并非是觉得年终少，而是我觉得我的产出是在平均及以上的，但我觉得我的回报却不及我所付出的。这里面固然有目前外部大环境不好的原因，但我觉得还有着另外的因素的。对于年终，我没有沟通的渠道，也知道即使有通道，和上面沟通后也很难得到满意的结果，或者得到满意的结果后，在部门里后面可能会很难过下去。我过去一份耕耘一份收获、努力获取回报、技术实力决定论的幻想逐渐破灭，横在眼前的是我很不喜欢的人情世故。2021 年是我在工作上很不顺利的一年，我感觉我很努力，做了很多脏活累活，风险比较高的工作，默默做了很多事情，压力也很大，却出了错误（我很想甩锅，但错误确实是我直接造成的，虽然我也是很大程度上的受害者），导致有着不好的绩效。一年下来我很累，也比较委屈。在 2022 年，我学会了自己不太喜欢的那套 “职场生存法则”。有什么事就向上汇报，由领导来做决定。遇到繁琐的需求报高风险、低收益。主动与他人沟通，寻求方便的做法。对任务进行排期，缓解自己的压力。我的 2022 要比 2021 轻松许多，成为了工作上的泥鳅，但却获得了不错的绩效。我努力付出得到了不好的结果，互相推诿打太极却有着不错的结果，这让我觉得很可悲，胡兰成在《今生今世》中谈及工作时说 “现代西洋的严肃其实只是认真的儿戏”，思我这段工作的经历，我是很认同的。</p>
<p>再者，我已经很难再从工作中获得成就感，我违心地做着我不喜欢的、对用户并不友好的功能，本就狭小的界面堆积着杂乱的、牛皮癣般的东西，我看着我做出的产品不是一件精致的艺术品，变成了赤裸裸的商品。很多时候，我都觉得游戏中的策划是不懂游戏的。他们不从美的角度思考，而是从人的欲望入手。上面的老板也总是意淫，提出些可笑的功能，让下面的人来实现。在工作时，我已经感受不到我所写代码的价值，我不断地问自己，用户会喜欢我写的这份代码吗？我内心一遍又一遍地给出了否定的答案。再者，我感觉我在工作中很难学习到新知，很难进步，这也让我很痛苦。我用着老旧的服务器框架，用着过时的编程思维，写着丑陋的代码，这违背了我对编程的热爱，违背了我对技术的追求。假若你们对美有追求，应该能够理解这份感受。我感觉到我们部门的管理层存在着大问题，一将无能，累死三军，我在这里不再能看到未来。部门里，我们后台几乎没有话语权，只有黑锅没有功劳，我们做的成功的事在他人看来基本都是理所应当的（后台确实是这样），如果一有事故，就是大问题。后台的程序员们又老实，不会像其他的职位人员一样耍嘴皮推卸责任。在这里，老实、默默无闻的后果就是受人欺负。项目人力巅峰时期的时候，有着 20 多个 PM，专门负责拉会、排期，瓦釜雷鸣，极其可笑。</p>
<p>我尝试了很多说服自己的理由，把工作和梦想分开，生活、工作平衡，现在上班时间不长，下班有充足的自己的时间云云。但上面的种种原因都让我这些理由显得无力。我喜欢有挑战性的工作，我不喜欢重复繁琐的工作，我想我还年轻，我应该多去经历，多去成长，这里已经不能满足我了。让我一直不忍心离职的还有一个重要原因，我觉得我对于这份工作有一份责任感。我来项目的时间算略早一些的，因此负责着很多模块 ，对于这些模块的历史沉因也比较了解。我们组每个成员基本都有着一定程度的不可替代性，我离职的话我感觉我是不负责任的，留下一份苦活累活的摊子给别人来做。组里面的同事、leader 都很好，在这里还有着一帮快乐开心的兄弟们（可惜现在已经走了很多了），因此，我不知道该怎么给我的 leader 开口提离职，我担心我的离职会给组里面带来一些压力。但我现在实在是不再能看到这里的希望了。希望今年在工作上我能够顺利。</p>
<p>很抱歉上面说了那么多工作上的负能量，让我们来说点别的，关于身体的。我总是很焦虑，担忧未至的事情。在高中时，考试前吃早饭就会因为一直担忧考试紧张而吃不太下东西。在大学，不知道什么原因 ，一段时间里我吃完饭后总是呕吐，以至于后面吃饭的时候，一直很焦虑这件事，我吃完后会不会又吐。这种潜意识的想法总会反应到身体上，一但开始想这个，身体就会很快做出反应，有了想要呕吐的感觉。那段时间我很难受，不断地呕吐让我开始害怕吃饭，一到吃饭就会开始焦虑。后来去了医院查，先去了心胸外科又去了肠胃科，拿了吗叮啉就渐渐好了起来。但由于这段经历，这种对于吃饭的焦虑一直还在。有时吃饭起想起自己吃完可能会吐，身体又会有反应。在年底时，我染上了新冠，而后留下了咳嗽的后遗症。这段时间里，我吃一点东西，有时就会有剧烈的咳嗽，咳嗽连着胃，总是很担忧又会呕吐。我总是这样担忧着，有很大的心理压力。那天和你们妈妈出去吃烤肉，本来很开心的一件事，但我的心情又担心焦虑又开心又不希望让你们妈妈感觉到。蘸料中的粉末在我嗓子周围，让我很想剧烈的咳嗽，可我又不敢，这种纠结的心情让我很难受。我最终还是没能忍住。第二天周日我们在家吃火锅，又是差不多相同的情况，好在是在家，没有旁人，能够更自在些。也就是这一次，我决定要去改变了。害怕吃饭呕吐给我的生活上带来了极大的痛苦，我不能因为呕吐而不敢正常地吃饭，变得害怕吃饭。有时候朋友、同事之间相互约饭，我很想参加，有时却碍于自己的毛病，又总是不敢，很惋惜地拒绝掉。也因为这个，我变得很害怕出去玩，因为出门就意味着要在外面吃饭，意味着不再从自己所熟悉的环境中。我很害怕，但我其实是很想出去玩的。我想如果这种基本的必要的生活活动尚且不能完成，还谈什么其他的。过去二十多年里，我总是很逃避去医院检查，因为我一直觉得自己身体很差，如果检查的话肯定会有一堆毛病，给自己徒增压力，不如不知道，恰无知者无畏。在家吃火锅时的那次呕吐，让我彻底不再想这样继续下去，我希望去改变，我应该好好爱护我的身体。因此我打算年后，去做下胃镜，先检查下身体有没有功能性上的病症。在和妹妹聊天的中，我了解到了 “躯体化” 这个概念，根据我自己的感受，我也能明白人的焦虑、意识会反应在身体上的，如果身体器官没有病症的话，那么我想去神经、心理科室咨询下。（通过我自己的感受我也在想，单是简单的对吃饭的焦虑我尚且不能克服，那些抑郁症的人们该是多么无助。）在身体上我有着许多许多要做的事情，过往我不敢面对，现在我希望能够一步步改善过来，不让自己一直压抑着难受。今年，我想将身体的重要性排在工作赚钱的前面，好好照顾下自己。我从小比较节俭，小时看到医院中的高额的花费就对医院、检查产生了抵触的情绪，我和老一辈的人们都生活在普通的小城镇，没有身体健康方面的意识，现在我二十四了，要努力一步步地赶上。和你说这些，也是想告诉你我的心理历程，希望你从小时就能有爱护身体的意识，不要像我或者老一辈人一样自己忍着。</p>
<p>有一件事我很愧对你们，那便是教育问题。我从小时候起，就思考着假使我有了小孩子，我应该怎样培养他。随着年纪的长大，我越来越重视教育，因为我明白，教育改变了我的命运。要改变个人、家庭、国家的命运，只有教育能够做到。在接受了河北的教育后，我不希望你们再接受这里病态的教育。因此，我打小心里有着一颗种子，希望能够在一个教育好的地方安家，使你们都能接受比较优质的教育。长大后我发现这个目标比小时候想得要更加遥远，我自认为我已经朝这个目标跨了一大步，但目前来说还是不确定能否完成。一步到位太难了，我安慰自己很多事都是积几代人的努力才能达到的，但心里终究还是有些内疚的，假使我当初更加努力，会不会离得更近一些。过去我希望我准备好一切再要孩子，我希望你们能够出生在温暖的家中，可以不再像我小时候经受冬天的寒冷，可我又是那么的喜欢小孩子 ，光是想想陪伴他们长大就已经很幸福。新的一年，我就要迎接一条小生命，他是那样的可爱。再过几年你们就要开始入学了，我能否赶在这之前实现目标呢？</p>
<p>其实我把你们带到这个世界来，是有一些私心的。我希望通过你们的眼睛重新认识这个世界，我已经过了 “小时不识月” 的年纪，不再有着 “灯把黑夜烧了个洞” 如此的奇思。大人的世界是无聊的。丁是丁，卯是卯，不再像孩子一般充满了新奇的想象与乐趣。小时候，我在村庄里守着整片星空，觉得自己好像就在其间。长大再看星空，只想知道这颗星叫什么以便好卖弄。我很想保留住我的童真与想象，但显然这是不太现实的，因此我希望能够借助你再体验一次小时候，再听一次自然中的风声，无所顾忌地奔跑在广袤的草坪上。我希望通过你们的眼睛重新认识这个世界，我希望陪伴你们做各种物理实验，一起体验温柔文字带给我们的快乐，一起打我喜欢的或是你喜欢的新出的游戏（我真的有好多很好很好的游戏很想分享给你们）。世上本无父子，在你作为孩子出生的那一刻，你也把我这个父亲带到了世间。</p>
<p>我的新年愿望：</p>
<ol>
<li>希望你能顺利健康地来到世间</li>
<li>希望我能够克服对吃饭的焦虑，身体可以一点点调养好</li>
<li>希望我的工作上能有进步</li>
</ol>
<p>言不尽思，再祈珍重。</p>
<p align="right">爱你的父亲</p>



























]]></content>
      <tags>
        <tag>写给孩子的信</tag>
        <tag>年终总结</tag>
      </tags>
  </entry>
  <entry>
    <title>松松的题目集</title>
    <url>/2022/09/29/%E6%9D%BE%E6%9D%BE%E7%9A%84%E9%A2%98%E7%9B%AE%E9%9B%86/</url>
    <content><![CDATA[<p>松松的题目集中有 $n$ 道题目 $a_1, a_2, \dots, a_n$，每道题目都只考查一个知识点。松松要按顺序做完其中的所有题目，他有两种做题方法：</p>
<ul>
<li>无论当前题目考查什么知识点，都可以在 $c_0$ 时间内做完该道题目。</li>
<li>使用含有 $k$ 种知识点的小抄，可以在总共 $c_k$ 的时间内完成所有接下来可做的题目。即当遇到小抄中不包含的知识点题目或已经做完所有题目时，认为当前方法停止，此次做题方法用时 $c_k$ 。每次使用小抄都可以使用与之前不同的小抄，每份小抄最多有 $m$ 个知识点，即 $1 \le k \le m$ 。</li>
</ul>
<p>聪明的您需要编写一个算法，使得松松能在最短时间内按顺序完成所有的练习题。同时，您还需要计算出在最短时间内做完练习题的方案数。如果做完题目的使用上面两种方法的次数不同，或存在某一个整数 $i$ 满足两种做题方案中的第 $i$ 次做题使用了不同的做题方法或不同的小抄，则称两种做题方案是不同的。如果两份小抄的大小不同，或含有不同的知识点，则称两份小抄是不同的。<span id="more"></span></p>
<h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>有多组测试数据。第一行输入一个整数 $T$ 表示测试数据的组数，对于每组测试数据：</p>
<p>第一行输入一个整数 $n (1 \le n \le 6 \times 10^5)$ 表示题目数。</p>
<p>第二行输入 $n$ 个整数 $a_1, a_2, \dots, a_n$ ，表示每个题目考察的知识点。</p>
<p>第三行输入一个整数 $m (1\le m \le 30)$ 表示小抄的知识点上限。</p>
<p>第四行输入 $(m+1)$ 个整数 $c_0,c_1, \dots, c_m (1 \le c_0 \lt c_1 \lt \dots \lt c_m \le 10^9)$ ，其中 $c_0$ 表示使用做题方法一使用的时间 ，$c_i$ 表示使用大小为 $i$ 的小抄需要的时间。</p>
<p>保证所有数据 $n$ 之各不超过 $6 \times 10^5$。</p>
<h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>每组数据输出一行由单个空格分隔的两个整数，分别是完成所有题目需要的最短时间以及方案数。由于方案数可能很大，请将方案数对 $998244353$ 取模后输出。</p>
<h4 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5</span><br><span class="line">1 2 1 3 1</span><br><span class="line">3</span><br><span class="line">4 5 6 100</span><br><span class="line">5</span><br><span class="line">1 2 1 3 1</span><br><span class="line">3</span><br><span class="line">1 2 3 100</span><br><span class="line">7</span><br><span class="line">1 2 3 4 1 1 1</span><br><span class="line">3</span><br><span class="line">4 5 6 7</span><br></pre></td></tr></tbody></table></figure>

<h4 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">12 1</span><br><span class="line">5 3</span><br><span class="line">13 2</span><br></pre></td></tr></tbody></table></figure>

<h3 id="样例解释"><a href="#样例解释" class="headerlink" title="样例解释"></a>样例解释</h3><p>对于第一组样例数据，可以首先使用小抄 $\{1,2\}$ 做完前三道题目，然后使用小抄 $\{1,3\}$ 做完最后两道题目。</p>
<p>对于第二组样例数据，以下方案均可以在最短时间内完成所有题目：</p>
<ul>
<li>使用 $5$ 次方法一</li>
<li>使用小抄 $\{1,2\}$ 做完前三道题目，再使用 $2$ 次方法一</li>
<li>先使用 $2$ 次方法一，再使用小抄 $\{1,3\}$ 除做完 $3$ 个题目</li>
</ul>
<p>对于第三组样例数据，以下方案均可以在最短时间内完成所有题目：</p>
<ul>
<li>使用小抄 $\{1,2,3 \}$ 做完前 $3$ 道题目，再用小抄 $\{1, 4\}$ 完成最后两首题目</li>
<li>使用小抄 $\{1,2\}$ 做完前 $2$ 题题目，再使用小抄 $\{1,3,4\}$ 做完最后 $5$ 道题目。</li>
</ul>
<h2 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h2><h3 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h3><ul>
<li>$1 \le c_0 \lt c_1 \lt \dots \lt c_m \le 10^9$<br>当我们使用小抄时，小抄中的知识点越多，则使用小抄花费的时间就严格越多。</li>
</ul>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>题目做多后，我们可以较为容易的发现如下两个 $dp$ 。</p>
<p>我们使用 $cost [i]$ 表示完成第 $i$ 个任务花费的最少时间，使用 $f (i, j) = l$ 表示 $a [l \dots i]$ 中有 $j$ 个不同知识点的题目，（ $l$ 为满足条件的最小值）。<br>$$<br>cost[i] = min<br>\begin{cases}<br>cost[i-1]+c_0,\\<br>cost[f(i, j)]+c[j], &amp; 1 \le j \le  m \  and \  f(i,j)&gt;=1<br>\end{cases}<br>$$<br>方案数也易知，我们使用 $cnt [i]$ 表示完成第 $i$ 个题目花费最少时的方案数，当我们由 $cost [k]$ 推导 $cost [f (i,j)]$ 时，则<br>$$<br>cnt[i] =<br>\begin{cases}<br>cnt[f(i,j)], &amp; if \ cost[i] &gt; cost[f(i,j)]+c[j] \\<br>cnt[i]+cnt[f(i,j)], &amp; if \ cost[i] ==cost[f(i,j)]+c[j]<br>\end{cases}<br>$$<br>这段 dp 用代码写来就是</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">// 方法一</span></span><br><span class="line">    cost[i] = cost[i<span class="number">-1</span>]+c[<span class="number">0</span>];</span><br><span class="line">    cnt[i] = cnt[i<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=<span class="built_in">min</span>(m, i); j++)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> l = f[i][j];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(cost[i] &gt; cost[l]+c[j])</span><br><span class="line">        {</span><br><span class="line">            cost[i] = cost[l]+c[j];</span><br><span class="line">            cnt[i] = cnt[l];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cost[i] == cost[l]+c[j])</span><br><span class="line">        {</span><br><span class="line">        	cnt[i] = (cnt[i]+cnt[l])%MOD;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(l == <span class="number">0</span>)</span><br><span class="line">        	<span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>我们还要解决另一个问题，就是如何快速地求取 $f (i,j)$ 。如果我们暴力的话，每次都暴力地向前寻找， 由于 $n \le 6 \times 10^5$，这里在用例设计上会被出题者卡。这里引出这题的第三个 dp。</p>
<p>我们用 $f [i][j] = x$ 表示区间 $[x+1, j]$ 有 $j$ 个不同的知识点，$x$ 为满足该条件的最小值 。转移方程为<br>$$<br>f[i, j] =<br>\begin{cases}<br>f [i-1][j-1], &amp; 如果知识点 a [i] 没有出现在 a [f [i-1][j], \dots, i-1] 中 \\<br>f [i-1][j], &amp; 如果知识点 a [i] 出现在 a [f [i-1][j], \dots, i-1] 中<br>\end{cases}<br>$$</p>
<p>于是问题转换为，我们如何确定 $a [i]$ 有没有在指定指定区域中出现。这个问题比较简单，我们记录一个数组 $bck [i]$ 表示当我们遍历到 $i$ 时，$a [i]$ 上次出现的位置 。只要判断 $bck [i]$ 与 $f [i-1][j]$ 的关系就好了。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 600010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXM 32</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXV 1000010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MOD 998244353</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line">LL a[MAXN];</span><br><span class="line">LL c[MAXN];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LL cost[MAXN];</span><br><span class="line">LL cnt[MAXN];</span><br><span class="line"><span class="type">int</span> f[MAXN][MAXM];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> last[MAXV];</span><br><span class="line"><span class="type">int</span> bck[MAXN];      <span class="comment">// bck[i] 表示 a[i] 病毒上次出现的下标</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, a+i);</span><br><span class="line">            last[a[i]] = <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n ;i++)</span><br><span class="line">        {</span><br><span class="line">            bck[i] = last[a[i]];</span><br><span class="line">            last[a[i]] = i;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%lld"</span>, &amp;m, &amp;c[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, c+i);</span><br><span class="line"></span><br><span class="line">        f[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        f[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            f[i][<span class="number">0</span>] = i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">1</span>; k&lt;=m; k++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(bck[i] &lt;= f[i<span class="number">-1</span>][k])</span><br><span class="line">                    f[i][k] = f[i<span class="number">-1</span>][k<span class="number">-1</span>];</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    f[i][k] = f[i<span class="number">-1</span>][k];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        cost[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        cnt[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">// 通用</span></span><br><span class="line">            cost[i] = cost[i<span class="number">-1</span>]+c[<span class="number">0</span>];</span><br><span class="line">            cnt[i] = cnt[i<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=<span class="built_in">min</span>(m, i); j++)</span><br><span class="line">            {</span><br><span class="line">                <span class="type">int</span> l = f[i][j];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(cost[i] &gt; cost[l]+c[j])</span><br><span class="line">                {</span><br><span class="line">                    cost[i] = cost[l]+c[j];</span><br><span class="line">                    cnt[i] = cnt[l];</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(cost[i] == cost[l]+c[j])</span><br><span class="line">                {</span><br><span class="line">                    cnt[i] = (cnt[i]+cnt[l])%MOD;</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(l == <span class="number">0</span>)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld %lld\n"</span>,cost[n], cnt[n]);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
        <category>DP</category>
      </categories>
      <tags>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>CodeForces 1728D Letter Picking 题解</title>
    <url>/2022/09/22/CodeForces-1728D-Letter-Picking/</url>
    <content><![CDATA[<p><a href="https://codeforces.com/problemset/problem/1728/D">题目传送门</a></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给定一个长度为偶数 ($n &lt; 20000$)、均为小写字母的字符串，Alice 和 Bob 轮流从中取一个字母，可以选择从左面取一个，也可以选择从右面取，追加到自己已有的字符串末尾（两人初始 r 字符串为空）。字符串被取空后，两个自己的字符串字典序小的胜利。<span id="more"></span></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>设字符串长度为 $n$，我们使用 $dp [l][r]$ 表示当字符串剩余 $s [l \dots r-1]$ （不含 $r$）时胜负情况，则 $dp [0][n]$ 即为答案。</p>
<p>我们使用 $dp [l][r] &lt; 0$ 表示 Alice 胜， $dp [l][r] = 0$ 表示平局， $dp [l][r] &gt; 0$ 表示 Bob 胜。</p>
<p>易得，$dp [i][i] = 0$。 我们要想求 $dp [l][r]$，则要知道其更小范围（少两个字母）的 $dp$ 数据，即 $dp [l+2][r]$、$dp [l+1][r-1]$、$dp [l+2][r]$ 的值。根据这三个更小范围的 $dp$ 值，及 Alice、Bob 拿的两个字母的大小，我们可以确定出 $dp [l][r]$ 的值。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">2010</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> dp[MAXN][MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cmp</span><span class="params">(<span class="type">char</span> a, <span class="type">char</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a-b;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line"></span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="type">int</span> n = s.<span class="built_in">length</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> len=<span class="number">2</span>; len&lt;=n; len+=<span class="number">2</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">0</span>; l&lt;=n-len; l++)</span><br><span class="line">            {</span><br><span class="line">                <span class="type">int</span> r = l+len;</span><br><span class="line">                </span><br><span class="line">                dp[l][r] = INF;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Alice 拿左边字母的情况</span></span><br><span class="line">                {</span><br><span class="line">                    <span class="type">int</span> res = -INF;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// Alice 拿左边字母、Bob 拿右边字母</span></span><br><span class="line">                    <span class="keyword">if</span>(dp[l<span class="number">+1</span>][r<span class="number">-1</span>] == <span class="number">0</span>)</span><br><span class="line">                        res = <span class="built_in">max</span>(res, <span class="built_in">cmp</span>(s[l], s[r<span class="number">-1</span>]));</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        res = <span class="built_in">max</span>(res, dp[l<span class="number">+1</span>][r<span class="number">-1</span>]);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// Alice 拿左边字母、Bob 拿左边字母</span></span><br><span class="line">                    <span class="keyword">if</span>(dp[l<span class="number">+2</span>][r] == <span class="number">0</span>)</span><br><span class="line">                        res = <span class="built_in">max</span>(res, <span class="built_in">cmp</span>(s[l], s[l<span class="number">+1</span>]));</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        res = <span class="built_in">max</span>(res, dp[l<span class="number">+2</span>][r]);</span><br><span class="line">                    </span><br><span class="line">                    dp[l][r] = <span class="built_in">min</span>(dp[l][r], res);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="comment">// Alice 拿右边字母的情况</span></span><br><span class="line">                {</span><br><span class="line">                    <span class="type">int</span> res = -INF;</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// Alice 拿右边字母的情况、Bob 拿左边字母</span></span><br><span class="line">                    <span class="keyword">if</span>(dp[l<span class="number">+1</span>][r<span class="number">-1</span>] == <span class="number">0</span>)</span><br><span class="line">                        res = <span class="built_in">max</span>(res, <span class="built_in">cmp</span>(s[r<span class="number">-1</span>], s[l]));</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        res = <span class="built_in">max</span>(res, dp[l<span class="number">+1</span>][r<span class="number">-1</span>]);</span><br><span class="line">                    </span><br><span class="line">                    <span class="comment">// Alice 拿右边字母的情况、Bob 拿右边字母</span></span><br><span class="line">                    <span class="keyword">if</span>(dp[l][r<span class="number">-2</span>] == <span class="number">0</span>)</span><br><span class="line">                        res = <span class="built_in">max</span>(res, <span class="built_in">cmp</span>(s[r<span class="number">-1</span>], s[r<span class="number">-2</span>]));</span><br><span class="line">                    </span><br><span class="line">                    dp[l][r] = <span class="built_in">min</span>(dp[l][r], res);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(dp[<span class="number">0</span>][n] &lt; <span class="number">0</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">"Alice\n"</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(dp[<span class="number">0</span>][n] == <span class="number">0</span>)</span><br><span class="line">            cout &lt;&lt; <span class="string">"Draw\n"</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; <span class="string">"Bob\n"</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h3><p>这种题目，我们可以较为轻松的知道小范围的答案（如两个字母），这样我们就可以再转移到下一个状态（四个字母），如此扩下去。以长度做为 dp 的最外层循环，一步步推导出答案。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>二千里外故人心</title>
    <url>/2022/09/11/%E4%BA%8C%E5%8D%83%E9%87%8C%E5%A4%96%E6%95%85%E4%BA%BA%E5%BF%83/</url>
    <content><![CDATA[<p>略微清闲的时候，我喜欢去邂逅一些个人博客网站。你在一个时间记录下自己生活、感受或是感悟，而后不知道在哪个时间里，有人细细读你的文章。像是老友，两人交谈着自己的故事，或有一刻，两人在不同的时空中有某种感情是相同的。对于我来说，这种感觉很棒。可惜的是，现在社会中似乎愿意如此的人少了些，人们似乎更青睐更具有趣味和视觉冲击力的短视频，而那些能让人产发深思的文章逐渐失宠。因此，能够遇到一个较为优质的博客，里面有着还算不错的文章，都能让我开心一段时间。</p>
<p>前一段时间，偶然遇到一个不错的博客，博客的名称不是当前主流的网名，而就是博主的名字，<a href="https://yihui.org/">谢益辉</a>。阅读他的文章目录时，名为<a href="https://yihui.org/cn/2020/02/old-acquaintance/">《二千里外故人心》</a>的标题冲击着我的心灵。凭借着对月特有的情感与对文字的直觉，我感受到这七个字不是一般人所能写出，必出自大家之手。也许是什么东西的召唤，我自然的、没有太多意识的就点进去读了这篇文章。文章讲了身在异国的博主与中国邻居的分别 —— 大人与大人的分别、孩子与孩子的分别，讲了现代科技对人们对于分别这种情感的影响。但这篇文章让我记忆最深的，还是标题中所引用的那首诗</p>
<blockquote class="song">
<p>
           三五夜中新月色，<br>二千里外故人心。<br>
</p>
</blockquote>

<p>伟大诗人厉害的地方就在此，如此质朴简练的十四个字，却将最深厚、真挚的感情写了出来。这样的句子，不是出自名家之手，就是出自普通人感悟迸发的一刻，妙手偶得。不过能写出这十四个字，即使是普通人也基本上离大家不远了。我查了下这首诗，果真是白居易写的。诗人并没有细说新月色为何色，何种美丽，故人心为何心，心中念何，但单是如此，就让人不由得感受到两人之间的深情。如此美丽的月色，我不由得想念起你来，身在远方的你看到这月色，也会如我这般吗？两人间的深情留给读者自由发挥，留白让读者结合读者自己的经历来体验。如同中国菜谱上的少许、适量一般，具体是多少，还得你自己去体会。中国人表达感情向来是倾向含蓄的，美也在含蓄之中诞生，如曹植写洛神情态时写 “若将飞而未翔”，具体是什么样子呢，自己想象吧，单这六字就已经把美感传递给你了。</p>
<p>我在中秋前一周看到这句诗，当时就在想，中秋的文案准备好了。又仔细看了看，兀地发现这首诗刚好就是白居易在中秋写的，他所想念的人也不必多说了。《八月十五日夜禁中独直对月忆元九》。千年前，白在中秋用简练的文字写下对元稹的思念，千年后的中秋附近，我偶尔在另一人有关离别的博客中遇到了这首诗，心中又思念起谁。这种感情穿越千年，在三个时间、三个地方的三人心中浮现，却又是那样的相同。千年间，我感觉到有种东西、有种文化不变地传承了下来，会在人心中偶尔泛起。三五二八时，千里与君同。</p>
<p>昨天是中秋，吃完火锅和父母视频后，我下楼喂猫赏月思故人，这首诗一直挂念在心头。喂猫时发现地上已经有五六摞猫粮了，这是之前很少遇到的，这个小区也有着和我一样的人，在中秋时想着也让猫猫过个节呢。人类的温情，就这样在这座冰冷的钢铁城市中流淌。喂的猫各异，但都是橘，有只狸花并不在编制内。猫猫或许大多都挺喜欢我，会跟着我走，我停下它们也会趴在我周围。中秋月圆，橘猫们也很悠闲地打闹舔毛。真想把他们全拍下来，带上中秋的月亮，照张全家福。奈何猫猫们三百六十度地围着我，月和猫虽都是橘色，但又有着上下之遥，猫们又活泼好玩，光线暗淡，绝不易拍下。反倒是假若有人在看我，我成了别人眼中的一幕，旁观者倒或许能将我与月与猫一同拍下，不过我可以会遮住几只猫猫吧。又觉得此刻之心已足以让人满足，人生在世，难能有几场如此的体验，单纯地、尽情地去享受就好，来拍照反倒耽误了如此良宵。在这种心情的安慰下，也就放下了拍照的念头。</p>
<p>思念故人，不知从何时起成了我心头的一位常客，或许是自己在深圳的生活大多带着匆匆与压抑，总会想起过去的朋友，想和他们聊聊天，再见见他们，问问他们现在的生活如何，过去的心愿是否实现。把自己的生活讲给他们，不知是否如北岛所说 “那时我们有梦，关于文学，关于爱情，关于穿越世界的旅行。如今我们深夜饮酒，杯子碰在一起，都是梦碎的声音”。</p>
<p>月下，我想起昨天故乡的小伙伴给我发的 “古鸡鸣寺” 的牌坊，他去了南京读研，我在吃午饭，在 B 站看视频刚好是雪中的药师塔，我拍照发给他屏幕上的鸟瞰雪中鸡鸣药师塔，他发给我正在拍的昨日晴天仰视的药师塔视角。我说 “想念”，他说 “等你”。我是个向来不好意思表达感情的木讷男生，看着这段聊天记录，我觉得有些深情不用过多的繁饰，就如同前段台海时期我们一同挂念着另一个小伙伴一样。我又想起铭毓在秋天写成的春末想我的词。</p>
<blockquote>
<p>春朽繁花瘦。似尘缘，聚时无意，盛情别后。</p>
</blockquote>
<p>这是这首《金缕曲》的开头。虽是在他笔下写成的，却诉尽了我的心声。春暮，你看到将谢的花，一股春愁涌上你的心头，是呀，这股春愁就如同尘缘一般，初见相聚时并没有太多的心绪，却在花将谢时，人分别后，一股愁、一股盛情在心中徘徊，方知这段感情在自己心中的重量。</p>
<p>翻朋友圈，我看着室友和他女朋友在学校南操上的照片，大学里没有和舍友一起过过中秋，那时的中秋不过是普通的一天，回忆时却无由觉得当时是幸福的。</p>
<p>想起还未曾见过面的妹妹。之前也有一次月色很美，我们聊着月亮，我下楼在等点的烧烤做好的间隙里陪着猫，她说很很久之前在某个地方看到，月亮很圆的时候，如果用食指指着月亮许愿，不管是什么愿望都会实现，不过玉兔会取下你许愿的食指，拿去捣药。那段时间她心情好像不是很好，我照着她说的做，许愿她能够一直快乐。我告诉她我没有听后面的，手指也就不会去捣药。初中高中的时候，我和妹妹在网络游戏里度过了两三个寒暑假，真是美好的记忆。后面我报了南京的志愿，与她最近的时候只隔了一辆车，她在前面的地铁 2 号线回学校，我在后面一趟 2 号线回家。她手机剩余电不多，学校还很远；我要回家陪猫，内向的我也没有鼓起勇气做好见她的准备。那一次，我们终是没在大行宫见到，她回了学校，我回了家。后来 2020 我毕业，想到将离南京，问她有没有空，可恶的疫情是又一次的梦碎。看着中秋前她收到好多朋友的礼物，一时有些羡慕，想着她现在应该有着很多朋友，可能不再是初中时那个天天跟我在游戏里一块，骗我在城内开红然后被守卫打死就开心好久的小姑娘。想起西贝写的诗，又觉得有点悲伤。望月思人，不知道后面还有没有机会再见她。</p>
<p>周四晚快睡时，我想起汪曾祺写的《黄油烙饼》，想到里面描写萧胜奶奶的去世，“奶奶是饿死的，人不是一下饿死的，是慢慢饿死的”。想起萧胜奶奶在最后给他做了两双鞋，一双正合脚，一双大一些。之前读的时候便已如泉涌，那晚想起时，不免又动了些情感。又想起自己外面的老奶奶，想起她对自己的疼爱，每次回老家见到她，都会用熟悉地声音喊我一声 “明浩”，只是上高中后，能回老家的次数逐渐减少。我想着再见到她，却猛地想起老奶奶已逝，我再也见不到了。老奶奶去世在 2020，由于疫情我没能回去见最后一眼，没能参加葬礼，或许是这个原因我总对老奶奶的去世记忆有些模糊，她疼爱我的样子却又那么真实可见，我一直记得小时每次过年，去田野中请完祖先后，到她院子的树旁放一挂小鞭，再挡上木棍。想来老奶奶已经去世两年了，我却没有留意过竟这么快，疫情后的时间是用年来计了。</p>
<p>近十二点，我与猫猫告别，与那轮明月告别，回到了家中，想写这篇文章，却觉得时间已晚，明天再写，又怕明天思绪不在，不能再写出来。好在这份感情算深算真，即使是今天写时，那种感觉犹在。</p>
<p>这是我的故事，如果你愿意的话，我也很期待能够读到你最近的故事。</p>
]]></content>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>C++20 Coroutine 文章推荐</title>
    <url>/2022/07/03/C-20-Coroutine-%E6%96%87%E7%AB%A0%E6%8E%A8%E8%8D%90/</url>
    <content><![CDATA[<p>最近学习 C++ 20 Coroutine，看到了一个不错的教程系列，作者貌似是 <code>folly::coro</code> 的作者，在这里记录下来。</p>
<p><a href="https://lewissbaker.github.io/2017/09/25/coroutine-theory">Coroutine Theory</a></p>
<p><a href="https://lewissbaker.github.io/2017/11/17/understanding-operator-co-await">C++ Coroutines: Understanding operator co_await</a></p>
<p><a href="https://lewissbaker.github.io/2018/09/05/understanding-the-promise-type">C++ Coroutines: Understanding the promise type</a></p>
<p><a href="https://lewissbaker.github.io/2020/05/11/understanding_symmetric_transfer">C++ Coroutines: Understanding Symmetric Transfer</a></p>
]]></content>
      <tags>
        <tag>C++</tag>
        <tag>协程</tag>
      </tags>
  </entry>
  <entry>
    <title>日知录</title>
    <url>/2022/04/09/%E6%97%A5%E7%9F%A5%E5%BD%95/</url>
    <content><![CDATA[<h1 id="2022-年"><a href="#2022-年" class="headerlink" title="2022 年"></a>2022 年</h1><h2 id="4-月"><a href="#4-月" class="headerlink" title="4 月"></a>4 月</h2><h3 id="4-月-9-日"><a href="#4-月-9-日" class="headerlink" title="4 月 9 日"></a>4 月 9 日</h3><blockquote class="blockquote-center"> 春天有一种魔力<br>一种让人想 “成为更好的自己” 的魔力<br><p align="right">森见登美彦《春眠晓日记》</p> </blockquote>

<h4 id="破执——线程池设计"><a href="#破执——线程池设计" class="headerlink" title="破执——线程池设计"></a>破执 —— 线程池设计</h4><h2 id="6-月"><a href="#6-月" class="headerlink" title="6 月"></a>6 月</h2><h3 id="6-月-9-日"><a href="#6-月-9-日" class="headerlink" title="6 月 9 日"></a>6 月 9 日</h3><h4 id="open-系统调用如果没有指定权限，默认是什么？"><a href="#open-系统调用如果没有指定权限，默认是什么？" class="headerlink" title="open() 系统调用如果没有指定权限，默认是什么？"></a>open () 系统调用如果没有指定权限，默认是什么？</h4><h4 id="手册难读的原因"><a href="#手册难读的原因" class="headerlink" title="手册难读的原因"></a>手册难读的原因</h4><ul>
<li>手册里面有些解释，是针对特定问题而说的。如果不知道有这个问题，就不能理解到这句话的意义。感觉这么设计似乎是对的，但不清楚这样设计的用意。不知道为什么要在这里插入这么一句话。</li>
<li>需要前置知识，比如是 A 的手册，但里面有一些其他方面的知识。（dfs 学习，狗头）</li>
<li>手册内容太全面了，对于小白来说不知道哪里是重点，哪里不是当前重点，可以日后再了解。</li>
<li>手册不是教科书，内容设计上不是先易后难，逻辑上不是层层铺垫递进，而是知识的陈列。</li>
</ul>
]]></content>
      <tags>
        <tag>记录</tag>
      </tags>
  </entry>
  <entry>
    <title>2020、2021 年总结</title>
    <url>/2022/01/02/2020%E3%80%812021%E5%B9%B4%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>这是一篇两年的年终总结，做两年的年终总结很奇怪，两年不像一年或者三年、五年，是一个较有意义时间段。这次写两年年终总结的原因，是因为 2020 年没来得及完成，后续想补的时候，又少了写下去的理由。现在来做两年的总结，而不是 2021 一年的，是因为 2020 年发生了许多对我来说很重要的事情，不做总结的话总感觉少了些什么，有些遗憾，觉得这一年还是有必要作记录的。2020 的事情其实已经不再清晰了，经历事情时的感受当时也变得模糊，现在来回忆总归还是不如当时吧。此情可待成追忆，只是当时已惘然。<span id="more"></span></p>
<p>在 2020 年 12 月多的时候，就已经开始了 2020 年总结的构思和属文，觉得这样一个特殊的年份，肯定有很多要记录的，要感悟的，但写到五六百字的时候，一直觉得自己在写流水账，这个月做了什么，二月做了什么，写来甚是无趣，写着写着兴趣便衰减了下去，后面想要再继续写时，也始终提不起兴趣来。2021 年初的时候，自己负债的代码模块在线上突然出了大 bug，一时间有 “万念俱灰” 之感，心情几乎失落绝望到了极点，倒不是 bug 有多难修，而是恢复用户的数据实属恶心，处处耦合，系统框架所提供的能力不及修复数据的需求；二来获取用户数据的流程也繁琐到了极点。总之，让人绝望的不是 bug 本身，而是由于 bug 而带来的东西。用户数据的修复维持了近一周半的时间，次次与他人的交付都令人心力交瘁。bug 事件过去后，已是一月多了，错过了写总结的黄金时期，那时候是单休，一天的休息不能缓解一周上班带来的负面影响，加上前面流水账的无趣，自然也就拖延了 2020 年的总结。 2021 一年来，每每想起 2020 这样特殊的一年没有做总结，总觉得少了些什么，每次想补上，却又都没有充分的时间。现在工作双休了，元旦又有了三天假期，所以现在一同来补上吧。</p>
<p>大学时我总有个奇怪的想法，就是有时会想，自己大学生活平平无奇的，没有经历过非典疫情时那种封校、不让出去的生活。在 2019 年 12 月初的时候，隐约听到了和肺炎有关的消息，12 月中旬，国家疾控发表了一份专家赶赴武汉的白纸声明，我抱着字越少事越大看热闹的态度，并没有对这件事留太多的注意，相信以国家的力量和科学的防治，不用太久就能够控制下来。当时的我并不知道这次疫情将会对自己的生活产生多大的影响。我没有对武汉的疫情特别留意，以致于在我准备从南京去往贵州的高铁行李，纠结要不要特意拿口罩时，选择了嫌麻烦没有拿一袋口罩（为了防疫情特意准备了一袋口罩）。</p>
<p>在 1 月上中旬的时候，疫情的消息算得上是销声匿迹，我在 1 月 7 号坐高铁来到贵州，读着傅注东坡词，在祖国的大好河山间度过了自己的 21 岁生日，高铁路过了武汉站，武汉有着和德州一样的大烟囱，恍惚间竟有家乡之感，殊不知这座英雄的城市将在未来几个月里诞生多少可歌可泣的故事。晚间到了贵阳，和时光逛了夜市，买了个小生日蛋糕。8 号来到了时光家，记得初到时还是很腼腆的，干啥都觉得很不好意思，那段时间里总喜欢望站在院子里望飞鸟，惊奇地发现成群的飞鸟中数目大概率是素数，感觉窥见了自然的秘密。趁着在高铁上读东城词时的灵感，做了一个古书阅读器，主要解决读古文时美观、注释、译文的问题，自我感觉在所有读古文的软件中，舒适度能排第一。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/mmexport1641200151381.jpg"></p>
<p>在 18、19 号的时候，疫情的消息铺天盖地般地袭来，令我始终悬着一颗心，但这座小村里的人们好像并不以为意，按着风俗照常生活着。年关将近，人们依旧聚集在市场上，吆喝着、贩卖着，日子像书中的凤凰小城般流过，远方的疫情并没对这里的人们产生影响，我处在人群之中，却一直担惊受怕，生怕会爆发集中式感染，身体有一丝的不舒服都会被恐惧感无限放大。好在城镇村子如同与世隔绝一般，好像几百年来的疫情都无能波及于此。我一日日无力地看着数字的不断上涨，一日日祈祷着普天下人们的安康，对钟南山的高铁上的背影敬仰流泪，为李文亮的遭遇愤懑不平。在这场疫情里，我看到了人们的绝望无力，看到了一些伟大医生、科研工作者士人精神般地置身险境、勇往直前，看到了一些群体的无知淡薄、也看到了有同一名字的十三亿同胞们众志成城，其间我也反思了许多，思考了许多，那些由该环境而生的感受反思感悟可能能成一本《疫情回忆录》，可惜过往的那些感受早已模糊，当时发出的热叹也早已凉掉，但这段人生经历及其带给我的思考却始终鲜活。</p>
<p>在时光家住了几天后，我也逐渐不再如刚到时那么腼腆，逐渐习惯起这里的生活，开始体会这边的风土人情。在这里，我体会到与自己 20 多年来不一样的生活作息，看到了人的质朴、孩子们的纯真，也看到了人们谋一个生活时的负重与窘迫。我曾在鞭炮红纸、猪肉飘香的除夕独自北望、佳节思亲，也在新年初到拂晓的寒风月夜下与时光牵手结愿。一个人要走出他所习惯的圈子，才能看到更大的世界。在疫情、新春、与爱人在一起、在他乡种种交织的背景下，我读了《霍乱时期的爱情》、《国史大纲》序，回味着这段时间的经历，感慨不可谓不深。这段时间我也因为毕业的需要学习了 OpenCV，在 github 上给 OpenCV 提了 PR。后面又发现了 g++ 编译器的问题，给 g++ 提了 bug，作为一个还未毕业的大学生，做出这些事，自我感觉还是很骄傲的。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/mmexport1641200179679.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/mmexport1641200218595.jpg"></p>
<blockquote class="song">
<p>
           三五夜中新月色，<br>二千里外故人心。<br>
</p>
</blockquote>

<p>3 月 20 号，我和时光在贵阳北站分别，她转车前往浙江绍兴，我则乘上了回家的飞机，在当时，一别还不知道又要多久才能再见。回家的途中虽然经历了小插曲，但最终还算顺利地回到了家中，过上了在家为大王的日子。现在想来，和父母在一起，在家的一个月是两年来少有的悠闲日子了，或许外面的世界发生了许多风云变故，但好像躲在港湾里，就完全不用管这些。回老家时，遇到了邻居家很乖的猫，看它怀孕将生，想给它搭个软和的窝，却一直没找到它。再见到它时听闻孩子都没能保住。与它的分别也是仓促，不知道这次过年回家能不能再见到它。</p>
<p>在家的时候，一直盼望着来深圳实习。5 月，在飞机快在深圳机场降落的一刻，我穿越层层浮云，突然想到了李贺的那首 “少年心事当拏云”，嘴上微笑，心里却大声喊着 “Hello，深圳！”（现在看来，从此踏上了社畜之路）在深圳，实习入职，接回皮皮，与苏苏丁力学长相聚，像一切美好的开端。</p>
<p>6 月中下旬，我抱着完全没有准备好的心情，迎来了自己的毕业。回南京时，是早上的飞机，我在机场坐了一夜，眼睛发红，不愿去想自己这次去南京是为了离开，这该是怎样一种心情。自己大一大二时日夜盼望地毕业工作，到如今却一一来到眼前。自己的大学有着太多太多的遗憾，没能好好玩，也没能好好玩，这些在<a href="http://zhiyi.live/2020/07/14/%E9%87%91%E9%99%B5%E5%9B%9B%E8%BD%BD/">之前文章</a>里已经写过了，就不在这里重复了。回到南京，我住在了秦淮河畔的一家宾馆里，是夜，我在秦淮河畔徜徉徘徊了很久，不肯离去，我实在爱极了这湾秦淮风月。却不肯坐一次心心念念的游船，一是晚间坐一次要 80 块，略为昂贵，更为重要的是，我害怕的是坐了之后，像是大愿了结，对南京再无任何念想牵挂，于是，便在此处种个思念吧！第二天又去了科举博物馆，这也是之前心心念念想来的一个地方，现在工作发达了，能买得起票了，当然要来一游！馆内，听到了音响在放曾侯乙编钟演奏的《楚商》，一下想起了大学时。在南京，这种心心念念的地方还有好多呀，和阁主当年因闭园没有去成的莫愁湖，和国学社的小伙伴们相约川西集市、栖霞山看枫叶，生日时登鸡鸣寺许愿，如此种种，却再也没机会作少年游了。晚上，和童茜、毓弟（此人名号有点多，铭毓、狗子、儿子等，写的时候实是纠结好久选用哪个）一起去了双姐家吃火锅。或许是大家心照不宣地避开着离别的伤感，一时间我竟有些团圆之感。曲终席散，终归要面临好友分别，且祝长风酒一樽，不知道下次再见是何时了。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/1641203396086.jpeg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/1641203400421.jpeg"></p>
<p>在双姐家回来，回到了宿舍，见到了想念已久的舍友们，大男人们不会表达感情，就寄托在干饭和游戏里。（短短几天，我们吃了太多次送室友走的最后一顿饭，一次不够，吃完还得再点点儿别的尽兴）因为出入校园被限制，所以为了去双姐家吃火锅我并没有来得及回校拍集体的毕业照。室友们见我回来，还是如了我的愿，陪我又去拍了次毕业照，从南走到北，再多看校园一眼。在校园里最后一次开黑打 LOL 时，小凡用厄斐琉斯拿到了五杀，我们顿时就觉得大学圆满了。在学校还与国学社的同级、学弟学妹们拍了照，可惜有很多人还是没能见到。疫情中，我们错过了再见一次的机会，或许就再也没机会了。愿我们在彼此看不到的岁月里，熠熠生辉。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/Screenshot_2022-01-03-18-07-51-39_9d26c6446fd7bb8.jpg"><br><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/qq_pic_merged_1641204493871.jpg"></p>
<p>送别和离开学校终归是依依不舍的，离开学校时又看了一眼宿舍，像是在给过去的四年告别，在学校门口又回望了一遍，是一般风景，两样心情。云似当时，父亲送我入学时场景分明还在眼前，转眼是骊歌。离开学校后在老洪租的房子里和老洪、小凡又赖了两天，过去一直有个想法是绕着南京的城墙走一圈，刚好是个句号，以此来告别，可这个想法最终也没实现，一是懒，二是不愿分出和舍友在一起的时间做这个了，三是六月的南京实在是太 TM 的热了。在老洪家看着小凡玩《战神》，真的好想回去啊。</p>
<p>俺曾见金陵玉殿莺啼晓，秦淮水榭花开早。这三早水暖，俺也曾睡过风流觉。好好地与故人告别，离开南京时，好像也并没有太过悲伤，只是心底还是有些遗憾吧。</p>
<p>离开南京，来到了贵阳，开始自己的订婚之旅。父母也来了贵州，两边彼此见到了亲家，我爹还让我配一段 “亲家母，你坐下，咱俩拉拉知心话”。在贵州玩了两三天，不愧是凉都六盘水，果真和南京是两个天气。晚上在夜市上一逛，是真滴舒服！繁华又凉爽。</p>
<blockquote class="song">
<p>
            <br>喜今日红绳系定<br>珠联璧合<br><br>卜他年白头永偕<br>桂馥兰馨<br>
        </p>
</blockquote>

<p>订婚回来后，便回归了日常：工作、下班、10106 循环着，在 7 月 9 号正式入职，这一年，高考被调到了 7 月 7 日。工作中有喜有忧，但总归还算是平稳。有时在自己发牢骚时，总能想起世人的境遇，聊以安慰自己。一次深圳大雨，本身下班就晚，下雨天又很难打车，到了很晚才得以回家。心里抱怨牢骚到了极致，却又在路上看到了冒雨还在施工的民工，心里的滋味一下就变了。想起了杜甫的那句</p>
<blockquote class="blockquote-center"> 呜呼<br>何时眼前突兀见此屋<br>吾庐独破受冻死亦足 </blockquote>

<p>我亦应知足。</p>
<p>平日的生活虽平凡乏味，但因为时光和皮皮的陪伴，也有了乐趣。周末无非就是读读书，逛逛超市，偶尔带时间去学学自行车，虽然重复，却每次也别有乐趣。读书有新知，去超市可以找个没人的地方对衣服指指点点，学自行车嘛，可以一直揪着心，不至于无味。</p>
<p>入职的第一个半年，因为新人光环，获得了还不错的绩效。在年末，疫情在石家庄却卷土重来，无奈只能在深就地过年，买了极多的零食当年货。连续两年没有回家过年，叫人好不想家。</p>
<p>2021 年的工作不再像刚入职时那么简单，逐渐负责起一些比较重要的模块，身上的压力也在一点点变大。在需求重的时候，难免会觉得有压力。二月的时候，一个重要需求将要交付，自己一直担心做不完或做出来性能不行，连着上了四周班没有休息，有段时间也晚上一直做噩梦需求做不完，然后猛地坐起来。工作节奏时而舒缓，时而紧凑，随着工作经验的丰富，对业务代码的熟练程度也不断提高，压力很大的情况倒不是过于频繁。</p>
<p>上半年在线上出了两个事故，一次是前面提到的，还有一次是在五月份吧。这次还是需要恢复用户数据，又是一次绝望繁琐的过程。由于这两次的 bug，上半年的绩效并不是很好，但自己也早有心理准备吧。不过这两次事故倒给我带来了许多思考，一是在工作上，一是在人生上。在工作上，我认识到用户数据的重要性，对用户数据负责、保持敬畏是一个程序员的职业操守。第一次 bug 时，我在 B 站上看到了一个因 bug 而受害的玩家 up 的视频，他在视频里说即使发生这件事他也还会坚持玩下去，因为他爱这款游戏。修复数据时，我看着他的直播，当他发现自己辛苦打的数据回来时，开心地高呼了起来，“兄弟们，看到没，回来了！” 看到他的欢喜，我也打心底里开心，感受到了自己的工作对别人的意义。可惜因为保密的原因，我不能给他说一句对不起和谢谢，我想起了《头号玩家》电影中的那句 “谢谢你玩我的游戏”，这是每一位创作者的共鸣，也是每一个游戏制作者的心声。一时间又是鼻头一酸，让人想哭。在人生上，发生 bug 时，我看着贴吧论坛等老哥们对 bug 的讨论，看着玩家间相互的倾轧攻击、造谣与迫害无休止地进行着。我感受到在人生里，保持独立思想，不人云亦云、随波逐流是多么的可贵；感受到了那些造谣者们别有用心，利用人们的情绪兴风作浪；也感受到了公平的可贵，人们对公平的呼唤。这些都唤起我很深的思考。我也因此又看了一遍《西南联大》纪录片，重新感受民国那些大师们 “违千夫之诺诺，作一士之谔谔” 的精神。后面，又读了数篇《南渡北归》和整本的《民国那些人》，数度热泪盈眶，高山仰止。我想，在我人格的背景中，我士子的精神应与他们一致。</p>
<p>除了上面的两个 bug，在工作上整体还算顺遂，虽然平日有着众多繁琐恼人的事，但我也逐渐明白，我赚的并不是技术的钱，而是处理这些杂事的钱，公司给我发工资就是为了让我处理这些杂事的。这么一想，心情倒会好了许多。自己在工作上的心气慢慢地被消磨，去年初来时，用着高效高风险的写法，保持着对自己代码的高要求，现在嘛，呵呵，不出锅就行，代码咋稳咋么写，一个指针恨不得判一千次空，一个数组的访问恨不得写十个保护条件。2021 年，在我工作的地方，近距离接触到了两个年轻生命的逝去，一个是刚实习不久、患有抑郁症的员工，一个则是让众多大佬都哀伤难过的浅墨。亲眼看到他们的身体躺在冰冷的科兴楼下，他们的逝去给我敲响了警钟，让我再一次地反思生活、生命的意义，让我更坚定活下去的信念。</p>
<p>与时光相恋近五年，我们结婚啦。国庆期间，我们回家举办了婚礼。五年间一直期盼的事，终于变成了现实，一时感觉如同梦境一般。回想过去的五年，如流水的欢乐交汇着偶尔的难过，日常生活柴米油盐的琐碎没能将我们冲散，回看过去发生在两人之间的故事，心中总会泛起一股温暖。父亲约在 17 岁左右时，见到一幅婚联，“诗唱杜甫其三句，乐奏周南第一章”。一次父亲在和我谈论《诗经》时，说起了这句，因为《周南》第一章就是《关睢》，但当时父亲不解 “诗唱杜甫其三句” 之意，我回答说出自《四喜》，“久旱逢甘露，他乡遇故知，洞房花烛夜，金榜题名时”，第三句是也。那时我 17 岁，恰好是父亲遇到这幅对联的年纪。大学与时光谈恋爱时，说起结婚，我说结婚时我们的对联就用这句，现在已然成真了。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/141640790427_.pic.jpg"></p>
<p>和时光的故事太多，在这篇年终总结里也不再详叙，前些天写完了回家结婚时的感悟：<a href="http://zhiyi.live/2021/10/10/%E4%B9%A1%E9%97%B4%E7%9A%84%E5%B0%8F%E8%B7%AF%E5%8F%98%E7%AA%84%E4%BA%86/">乡间的小路变窄了</a>，有兴趣的可以一看。在过去，我们也在 <a href="http://zhiyi.live/2018/05/18/%E4%BD%95%E5%BD%93%E5%85%B1%E5%89%AA%E8%A5%BF%E7%AA%97%E7%83%9B/">何当共剪西窗烛</a> 中记录着我们的故事，只是只记录了一段时间。希望 2022 年有时间的话，我们能够整理一波过去的故事，毕竟我们俩个能在一起，可以说实在是上天作美。</p>
<p>来深圳后和时光去超市买菜回家的路上，我们牵着手看到一对爷爷奶奶牵手走过。我们目光相遇了一下，或许在互相羡慕着。如果说谁的羡慕更多一些的话，应该是他们更羡慕我们吧，因为我们还富于春秋，有着更多的可能。</p>
<p>21 年的日常生活和前面说的一样，平凡而充实，有时又能感受到荒谬和单调。工作以来，我最大的感受就是没有时间。工作后，会发现真的没有个人时间，过去大学时想着下班后还能学习，但实际上，一下班累得跟条狗似的，积累了一天的坏情绪，夜宵都没心情点，也不再有太多的时间来学习。除去上班、陪家人的时间，这个世界留给成年男性自己的时间实在是太少了，气抖冷。平日里，自己只能在上下班公交车上，中午晚上吃饭休息时，以及睡前的短暂时间时抽空来看些东西了。我向来讨厌、反对碎片化的时间来学习，认为碎片化地学习必不能系统地学会一个知识，好好地学习还得靠大片连续的时间。感觉两年来，自己没怎么学习，就像无根之木，没有活水注入的臭水沟了。劝君惜取读书时呀。2021 年，为了读一篇《MapReduce》论文，硬是抽空断断续续读了三四天才读完，倘若是在大学，可能一个连续的下午就可以了吧。现在最大的幻想就是回到大学里好好学习了。2020 年时，和熊猫聊天时，互相怂恿搞公众号，结果熊猫搞了起来，在空闲时间写文章，做得有声有色，而自己一直感觉自己还没有准备好，知识不充足，没有足够时间，只能望洋兴叹了。发现比起以前的温润来，自己变得戾气了许多，一些善良也在逐渐泯灭。希望后面可以找到原来喜欢的那个自己吧。</p>
<p>要说总结的话，那就是两年间经历了社会的毒打，对社会的认知更加立体了吧，自己对一些事物的思考也更加深刻。希望自己能够一直保有这种独立之精神，自由之思想。</p>
<p>2021、2022 读书书单：</p>
<ul>
<li>《霍乱时期的爱情》（相思是一场霍乱，这概括也太准确了）</li>
<li>《国史大纲》序。序很短，却数度鼓舞流泪。</li>
<li>《Learning OpenCV3》中译版数章（译得真的垃圾，别让我知道是谁做的翻译，直接呼他嘴巴子）</li>
<li>《南渡北归》（第一部数章）南渡自应思往事，北归犹恐待来生。</li>
<li>资中筠先生的《士人风骨》《感时忧世》。理性、良知。</li>
<li>《民国那些人》。高山仰止，景行行止。先生们是我的榜样。</li>
<li>《烟霞丘壑 —— 中国古代画家和他们的世界》。读起来津津有味，读完一点不记得。</li>
<li>《古代音韵》。没老师没环境，学起来太难了。</li>
<li>《三体 I》</li>
<li>《csapp》数章，具体知识点可能忘了，但其设计的思想应该留在了脑子里。</li>
<li>《ddia》几篇，全忘。</li>
<li>《程序员的自我修养 —— 加载，链接与库》数章。好书，当读，可惜零散时间读的，没有大片时间，读的应该全忘。原本以为很神秘很魔法的东西，读此书后发现不过是一些简单的设计，一点不神秘。</li>
<li>《MapReduce》论文。极简单、极朴素的思想，自己日常经常使用的东西，去做不出来这样一个框架，人家却能总结抽象出来，不得不敬佩。</li>
<li>《西西弗神话》前几篇。实在读不懂，也太难懂了，就一个句子，里面的字你都认识，但你就不知道连在一起是啥意思。靠 B 站网友们的视频搞懂了这本书中加缪所想要表达的哲学，很喜欢。</li>
<li>《在拥挤和变化的世界中茁壮成长 ——C++ 2006-2020》，在读中。了解一个语言的历史对理解语言设计很重要。</li>
<li>《谈美》。</li>
<li>《杜甫传》。世上疮痍，诗中圣哲；民间疾苦，笔底波澜。</li>
</ul>
<p>新的一年，许愿工作顺利、有时间可以多读些书吧。其他的 flag 就先不立了，总之呢，希望能够找到更好的自己。</p>
]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>乡间的小路变窄了</title>
    <url>/2021/10/10/%E4%B9%A1%E9%97%B4%E7%9A%84%E5%B0%8F%E8%B7%AF%E5%8F%98%E7%AA%84%E4%BA%86/</url>
    <content><![CDATA[<p>2019 年的国庆，我和女票回到我的老家，这是时光第一次过来。我们一起走在乡村的小路上，我突然觉得路变窄了，便说了句 “乡间的小路变窄了”，细想起来，其实不是路变窄了，而是过去，我都是自己一个人走这条路，现在是两个人牵手同行，相比之下自然会窄一些。想到这，我觉得竟有些甜蜜，便把我的这一波想法告诉了时光，想着以后必然会在讲我们俩个故事的时候用到这句话，成了自己的私典。只是如果不讲此事加以解释，怕是不会有人知会其中的意味。</p>
<p>2021 年国庆，我们又回到家乡，结束了近五年的恋爱之旅，举办婚礼，终走入婚姻的殿堂。这次回家，生出了许许多多的感慨，有新婚燕尔的喜悦，有看父母辛劳准备而生的内疚，有着对亲戚好友帮助的由衷感谢。心中突然有着许多想说的话，就写这篇文章来记录下吧，文章的名字就是前面提到的乡间的小路变窄了。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/161640790816_.pic.jpg"><span id="more"></span></p>
<p>今年过年后，父母便开始准备我的婚事，订饭店、订婚庆公司、重新装修房屋、买各种东西。因为我和时光两家离得较远，所以在准备上很大一部分又娶媳妇又嫁女儿，两边都准备着，操心良多。准备时长几乎有着半年多。而我在深圳工作，帮不上啥忙，自己也对婚礼流程这些不了解，因此每次和父母视频时，都很内疚，一直逃避着这件事。每次父母说让我写台词、找沙画、做视频的时候，我的心情都很复杂。一是因为今年我在工作上遇到一些事情，不像去年那么顺利，在生活上有些疲惫，遇到节假日就不太想再动了，只想着放空脑子，什么都不做，歇会。二来是我一直有着偏向完美主义的强迫症，想着要做什么的话就把事情做好。可我实在是不擅长做视频、做 ppt 这些，自己有着很多的想法，做出的东西不能让自己满意。而学这些又觉得会花费很多的时间，自己应该没有那么多的闲空。这两个原因，让我在深圳时每次与家里商量婚礼时，心情都很复杂，是那种又想好好准备、又想逃避这些的心情。所以一直以来自己都十分愧疚，在家的部分帮不上什么忙，自己能做的部分又有些抵触。婚礼前几天伴郎问我一些婚礼的细节事情，我都回答不知道，等我问问我爸妈，他们开玩笑说我 “啥也不知道，像个局外人” 也不足为奇了。朋友对我的玩笑话也恰恰说明了我父母的费心。回到家后，看着父母逐渐衰老的模样，头上渐多的白发，心中的内疚又多了一些。但自己终归是个不好意思说出自己情感的人，这些也只是看在眼里，记在心上，没发半点声，只想着要多做些事情，别在让他们这么费心才是。所以在家的时候自我感觉也比往日听话了点，在家做了婚礼上用的视频和 ppt。重新写了些台词，但最后我爸又删了删，基本没用我的台词，反倒是时光写的一段入了我爸的法眼。</p>
<p>“人是一切社会关系的总和”，马克思的这句话，我过去并不是很能理解，这次举办婚礼，我觉得自己对这句话的认知更清晰了些。这次回家，除了辛苦父母，也一直麻烦着家里的各种亲戚朋友们。自打下还没上飞机开始，哥哥和姐夫就开车去机场准备接我，从故城到济南，路程不能说很长，但来回也要四五个小时，在家期间，接送客人各种出行也全依靠哥哥姐夫们。突然觉得在这种城镇，自己开车还是最为方便的，自己开车的欲望增涨起来。领证时因为户口本上章的问题不太顺利，也多亏了哥哥找关系才能领到。（去了三次，三对离婚的，就我一对结婚的还遭遇波折）婚礼的前一天回老家，发现哥哥们都在老家帮忙布置，嫂子们也都在这边收拾，自己一下很是感动，觉得麻烦了太多人。看着满天的彩旗，觉得自己出生在一个和睦的大家庭里，实在是运气爆棚。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/141640790427_.pic.jpg"></p>
<p>回家结婚，感觉自己突然成长了许多，内心褪去了几分孩子气，分明感受到自己的责任又多了些，为人子，为人夫。我也应该好好地去审视一些东西，重新思考一些东西。</p>
<p>婚礼我非常很喜欢，简洁大方，深情但丝毫不煽情，不落俗套，让人耳目一新。别人婚礼绝大多数都是交给婚庆公司包办的，流程、台词也是按着婚庆公司的来，可以说是千篇一律了，除了新郎新娘不同，基本上看不出啥区别，大家参加的多了，也便审美疲劳了。父亲为我精心设计的婚礼别出心裁，台词也是全部父亲自己写的，独具匠心。婚礼过程中，基本上全部人都聚精会神地看着舞台。虽然我们没有能力做到一场尽善尽美的婚礼，但能做到如此已经很是满意了。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/151640790524_.pic.jpg"></p>
<p>发现自己终归是个世俗的人，在结婚时候希望告诉自己的全部朋友，希望能够见到大家，希望能得到很多很多的人祝福，好似原来从没有这么贪婪过。想着借婚礼的机会能和朋友们见上一面，叙叙旧情。可是发现长大了，真的就很难再把大家聚齐，有些朋友已经好久没有联系过，已经不好意思突然开口说要结婚了，虽然内心真的很希望能见上一面。一些朋友或各在天涯，或忙碌奔波，遗憾不能在过来。假期里和祥子、宇烁在一起，我们总会一起回想起过去，聊起初二国庆时一起回我老家偷山楂，恍惚间惊讶竟已过去了十年，时光倏忽，我们却总觉得像是发生在昨天，这种感觉在我们三个心中应是同种的滋味吧。结婚前夕我们联系到了远在军舰上的小马哥，我们三个与视频中的小马畅聊着，说起了我们四个过往种种在一起的时光，一时间鼻子一酸，竟有些泪目。时间推着我们长大成人，希望大家各自平安。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/131640790102_.pic.jpg"></p>
<blockquote class="song">
<p>
            <tt>九歌  礼魂</tt><br>
            <at>屈原</at><br>成礼兮会鼓，<br>传芭兮代舞。<br>姱女倡兮容与<br>春兰兮秋菊，<br>长无绝兮终古。<br>
        </p>
</blockquote>

<p>一直以来很喜欢屈原的这首辞，它描绘了古时祭祀礼成时人们的行动与虔诚的心情。春天供以兰秋天又供以菊，长此以往直到终古。虽然用于婚礼并不合适，但我想，其间虔诚的心情是有相通之处的。希望我们的爱情也如此，在天如日月之同辉，在地如山川之萦回。一堂缔约，同心永结；同甘共苦，相辅相成。</p>
]]></content>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>怀姑文</title>
    <url>/2021/10/10/%E6%80%80%E5%A7%91%E6%96%87/</url>
    <content><![CDATA[<p>念君久矣，恰逢中秋节气，汝生辰之日，又逢吾成人已数载，结发之日将至，乃书此篇，欲告汝心中之言。<br>吾生晚，汝之事吾多不识，汝生时之况亦不知，唯听父辈祖辈云。每逢佳节新春，吾全家相会于老家，必翻其旧照，共忆旧时。册中有汝数张，便乃吾对汝斑驳记忆。然照片不过一瞬，吾幼时只听大人言某年某刻某地某事而拍，所云今亦多不记，只知吾有一姑，随父祖背井离乡，谋生东北，飘蓬万里，与吾一宗同根，血脉相连，今虽不见，然爱吾亦如一家。所知者仅此而已。<br>吾见汝亦少，可只手而数矣。幼时太平祖父故去，叶落归根，汝葬父于故乡，吾得见汝。汝哭声欲绝，悲恸肠断，吾忆太平祖父前言往行，亦同汝悲泣。乃悟长辈所谓血脉相连为何物，此吾对汝记忆清晰之事一也。<br>再者，幼时汝往来探亲，携一美食，名 “骨肉相连”，乃余初次食之，软骨嵌于肉间，肉香而骨脆，以为妙绝。惜携者不过数根，不可多食，是一憾也。尔后每食此味，皆忆此事。今 “骨肉相连” 市间皆有，吾食之，皆不如从前滋味。美食名曰 “骨肉相连”，然吾与汝、吾家与汝家更为骨肉相连。恨今此食易得，而汝不可再见也。<br>又忆幼时汝同吾父电话，言及沈阳生活，复言某某超市某某游乐场，集吃喝玩乐于一地，美食者有某某某，好喝者有某某某，玩乐者又有某某某，只有常人想不到，无有此地不可得。余听汝语气，可想象汝眉飞色舞之神情，洋洋自得之满足，又思平日父辈告吾汝之喜爱，不禁捧腹大笑，笑及失声。而后数日，往往模仿汝之言语神情。往日思此事有泪，为乐也；今思此事亦有泪。<br>小学毕业暑假时，梅姑合卺，吾得与祖父、伯父、父、兄同往沈阳，汝待吾行厚矣，同游园会、北陵等。雪梅姑婚后三日，乃设宴 “九头牛” 饭庄，汝点食潇洒，全家称赞，不与吾等点菜之时扭扭捏捏相同。此顿大快朵颐，痛饱吾之饕餮。九头牛之美，吾今不忘，常思再往。分别之时，言多同音信，估下次相见，概乃吾结发时。吾当时不过十岁，念下次相见，竟隔十年余，独慨骨肉分隔。后初中习及 “吊影分为千里雁，辞根散作九秋蓬。共看明月应垂泪，一夜乡心五处同”，常思沈阳一支。<br>大学时，闻汝病重，人似蜡像，难进粥食，心如刀割。数日后汝竟遽去，恰临中秋佳节，阴阳两隔，月圆人缺。<br>吾毕业后往深圳，一日下班途中于计程车上，疲惫时见一招牌名似 “整只牛”，忽忆九头牛，大喜，便待汝来深圳，必与汝来此，再饱饕餮。恍然记起汝已辞世离去，不觉悲从中来。汝谋生东北，可如吾谋生深圳乎？极乐可称心乎？<br>昔笑言 “若吾成婚之时汝尤未，可为笑矣”。今吾不日将结发，缔百年之约，念昔日笑言却难再笑。呜呼，吾不笑汝，侄甚念汝。<br>今又中秋，吾念汝而不悲者，因知天下月色，有汝一分；三秋桂香，亦有汝一分。<br>尚飨。</p>
<p align="right">记于 2021.9.21 日</p>
]]></content>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>我怀念的</title>
    <url>/2021/06/24/%E6%88%91%E6%80%80%E5%BF%B5%E7%9A%84/</url>
    <content><![CDATA[<p>看着空间中学弟学妹们毕业的说说，那个叫做离别的词语又一次地在我脑海中浮现。毕业前一年、自己毕业、工作一年，连着三年，每到毕业季，看着有关毕业的朋友圈，都会心生情愫，似乎对那段大学时光难以割舍。</p>
<p>看着学弟学妹们的说说，总会想起自己在大学中的幸福时刻。这次最先想起的是大一暑假时集训，到周六晚，自己都会给自己放个假（集训一般没有假期，但偶尔会休息一天），晚上从北门出去，到南邮广场，买一些水果，在转角的临时小奶茶店里花七块钱买杯奶茶，加一块钱加份红豆，回去的路上吹着南京的晚风，喝着最喜欢的热的红豆奶茶，那是一份无忧无虑的小确幸。或许当时有着不会的训练题目，有着难说的焦虑与苦痛，但现在回想起来已经全然不记得这些烦恼，只记得那份快乐。</p>
<p>又会想起在上海的小伙伴来找我玩，我们走到老门东，紫红的晚霞铺满天空，我们边走边看，笑嘻嘻，不时将手机对向天空，像两个孩子。谈论着有关穴 XX 上财断档的故事，紫霞映在我们脸上，该是什么模样？我将那天的晚霞当作自己微信运动的封面，每次自己运动登榜时，看到拍的照片，都会想起那天。那时候我的手机还有微博，那天的晚霞上了热搜。那天我拍总统府时小伙伴露出一只手，我们一起在先锋书店听着雨声，我记得那天是 7 月 2 号。那个暑假我们晚上会互相分享歌曲，这也成了我集训日子里每日的快乐。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ20210624-0.jpg" alt="那天的云"> <span id="more"></span></p>
<p>想到这些，我的脑海总会想起 “我怀念的” 几个字。我怀念的，我怀念的又是什么呢？如今却忆江南乐，当时年少春衫薄。我还能够回大学吗？当然能回，不过却是过客，那段求学时光却再也回不去了。</p>
<p>认识的学弟学妹们大多来自国学社和 ACM，他们每个都很优秀，读研的去南大、东南，工作的去了微软、Intel。自己很幸运能遇到这群学弟学妹们，有很多知识都是他们教给我的（比如服务器是什么，😅）。聚散苦匆匆，此恨无穷。虽然跟学弟学妹们已经分别了一年，但回想起在一起的那段时光，仿佛就在昨日。看着朋友圈的毕业照，真想亲眼看着他们毕业呀，再把酒言欢。且祝长风酒一樽，许愿大家前程似锦。</p>
<p>感谢自己在大学中遇到的每一个小伙伴还有老师，想来自己是太幸运才能遇到他们。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ20210624-0.png"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ20210624-1.jpg"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ20210624-4.jpg"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ20210624-2.jpg"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ20210624-3.jpg"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ20210624-5.jpg"></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS 报错 xcrun: error: invalid active developer path, missing xcrun</title>
    <url>/2021/04/20/MacOS%E6%8A%A5%E9%94%99-xcrun-error-invalid-active-developer-path-missing-xcrun/</url>
    <content><![CDATA[<p>今天配置 VS Code 中 include 路径时，想查看下自己 C++ 相关的 include 文件夹在哪，于是使用下面命令查看。</p>
<figure class="highlight bash"><table><tbody><tr><td class="code"><pre><span class="line">gcc -v -E -x c++ -</span><br></pre></td></tr></tbody></table></figure>

<p>但它竟然报错：</p>
<blockquote>
<p>xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools), missing xcrun at: /Library/Developer/CommandLineTools/usr/bin/xcrun</p>
</blockquote>
<p>震惊，使用 <code>gcc --version</code> 发现报同样错误，这意味着什么，意味着我整个 gcc 不能使用了，这还了得？</p>
<p>于是上网搜索解决方法，大多数人都说使用 <code>xcode-select --install</code> 就行，我试了试，还真解决了，大概几分钟就 OK 了。</p>
<p>唉，看来 <code>MacOS</code> 还是有点坑的，大家都说之前自己系统升级失败了出现了这个问题，我之前也是升级失败了。</p>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>那是我日夜思念深深爱着的</title>
    <url>/2020/09/30/%E9%82%A3%E6%98%AF%E6%88%91%E6%97%A5%E5%A4%9C%E6%80%9D%E5%BF%B5%E6%B7%B1%E6%B7%B1%E7%88%B1%E7%9D%80%E7%9A%84/</url>
    <content><![CDATA[<p>近来失眠，总会想起一些往事。之所以起这个题目，是因为最近在 B 站看了一些老男孩歌曲的视频，又让人想起一些过去。</p>
<p>最近失眠的时候，我总是想起去年八九月的时候，我也是一样的失眠。忘记了去年八九月的时候，会不会一样幻想一年后的现在。像我这样的人，应该会吧。记得这个月第一次失眠的时候，我突然坐起来，脑子中想到如今已是九月，就兀地想起去年九月时候的事情，六七八号的时候来深圳面试，经历了二十多天苦苦熬人的等待，经历了不知多少次的担忧纠结，终于在 29 号的时候收到了 offer 电话。也就是一年前的 <del>今天</del> 昨天 ，（啊，居然已经过十二点了），那个日夜担忧的事才得以结果，那么长久的梦想得以实现。一年的时光飞逝，在我还没反应过来的时候，就已经到了一年前所幻想的现在。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/Screenshot_2020-09-30-00-35-28-926_com.tencent.mo.jpg"><span id="more"></span></p>
<p>这是一年前的说说，那一天应该也是很晚才睡着吧。去年面试时 HR 告诉我 15 号左右出结果，我一算日期，想着这一周有得熬了。可结果 offer 通知迟迟不来，心中的那份期盼与恐慌愈加焦急，一日比一日更迫切，这样的状态持续了大概三周，实是比一周难熬十倍。一年前惴惴不安的经历已经一点点褪去，如今再怎么回忆也不可能感受得到真实感受到那种感觉了吧。所以，还想说一些另外的事情。</p>
<p>来深圳面试完成后，非常想去滨海大厦看一下，于是顶着深圳九月的酷暑（这么写有些夸张、添油加醋，其实还在中途一家麦当劳店里乘凉，前些天打车回家时猛地看到这家点，一下又回忆起这件事），从科兴走到了滨海，在滨海门前拍照打卡。第二天的时候托熊猫办了个访客卡，硬是在滨海大厦坐了五六个小时，四处瞎逛，白嫖喝了三四杯咖啡，当时是真的害怕这辈子只有这一次机会能进来看看，后面再也没机会能这样在滨海大厦里喝咖啡。虽然面试完已经有了一定的信心，但还是很害怕后面没有机会。当时是那么喜欢与盼望滨海大厦，今年五月来深实习，租房也无意间租到了滨海咫尺旁，可是快五个月了，却再也无心去滨海，再也不期盼着去滨海看看坐坐，去那里喝一杯咖啡，五个月来一次也没去过滨海，在科兴也极少再喝咖啡机的咖啡。唯一一次到滨海附近也是为了去爱马哥帮学长看看公仔，没有进去。得不到的永远在骚动，得到的有恃无恐。当进了腾讯，随时可以进滨海看看，去喝咖啡的时候，这些事已然失去了它的吸引力。</p>
<p>大一上学期时候还有语文课，那是我大学里最开心的时候。老师一次课上讲到宋郊与宋祁的故事，兄弟二人共同艰苦读书，而后宋郊为状元、宋祁第十。此后，宋郊依然勤奋刻苦，宋祁却穷极奢侈，拥妓醉饮。郊对祁道：“弟弟如今烧灯夜宴，穷极奢侈，是忘了过去我们兄弟二人读书时过的苦日子了吗？” 祁对郊说：“那哥哥，我们当初刻苦读书又是为了什么呢？” 期末答疑课上，我是唯一一个有疑问的，也与老师聊了很多。有一个问题便是问老师怎么看待宋郊宋祁这件事。老师说两种态度都可以，都没什么问题。但最害怕的是自欺欺人，一个人装学习，身子在那学，可他却又心不在焉，并没有好好学。学没有学好，玩也没有玩好，这是最可怕的。（附该故事古文：）</p>
<blockquote>
<p>宋庠居政府，上元节至书院内读《周易》，闻其弟学士祁点华灯拥歌妓醉饮达旦。翌日谕所亲令诮让云:‘相公寄语学士：闻昨夜烧灯夜宴，穷极奢侈，不知记得某年上元同在某州州学内吃齑煮饭时否？’学士笑曰:‘却寄语相公：不知某年同在某处州学吃齑煮饭是为甚底？</p>
</blockquote>
<p>现在回忆起来，虽然老师给我打了预防针，可四年来，我还是没能挣脱自欺欺人的泥淖。自我感动式的努力，一边假装自己很努力，一边却是心不在焉，形守魂飞。我最后悔的事有两个，一是高中时没能好好努力，考入一个好大学，二是大学里没有好好学习，达到自己所期望的水平。我不知道两件事哪个更遗憾一些，有时觉得高中时没好好努力更遗憾，有时候又觉得那没什么，大学里没有好好努力才是最对不起自己的。自己估计的话，高中的努力大概用了百分之六七十，而大学用了百分之一二十，换言之，大学基本上没咋努力。</p>
<p>在大学中，或许已算佼佼者，身边鲜有能力比自己高出太多的，于是麻痹了自己，认为自己是优秀的。可如今到了工作中，却自己同届进来的新人中，有着太多比自己优秀的，且是优秀许多的那种，自己与他们之间能力上差了很多。于是开始反思一些事情，后悔大学里没能好好学习，欠下的债终究要还，现在要为过去的懒散买账，于是开始抽空看起一些经典的专业书籍，很有收获，相见恨晚。想到这些书籍大佬们过往都已然看过，烂熟于心，自己才刚开始学习，又颇有不甘。总结起来，让我进行学习的，除了少部分是对知识真理的向往、对美好生活的追求外，更直接的原因是自己的自大与虚荣、想与他人一较高低罢了。能从过往回忆中总结出来的，还有一点就是在一个环境中，我不可能是第一，但往往是前面的那个。无论从小学初中，还是高中大学，都是如此。在好环境中这样，在一个差环境中亦是如此。所以我也一直警惕自己，去追求更优秀的环境。</p>
<p>八月时候接到一个较为紧急的需求，于是一段时间里一直加班加点。恰逢深圳八月雨季，一日很晚才打到车下班回家，心里阵阵牢骚。可在出租车上，隔着模糊的车窗，看到施工工人们淋着大雨在工路上施工。心中牢骚顿时消去，怜悯与苦楚漫上心头，那时候心中只有一个声音：但愿苍生俱饱暖。人总是只有在他人的不幸面前才意识到自己之幸。</p>
<p>夜有些深了，还是暂写这些，早点睡吧。</p>
]]></content>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>你是那个十五六岁偷偷学计算机的中学生吗</title>
    <url>/2020/08/22/%E4%BD%A0%E6%98%AF%E9%82%A3%E4%B8%AA%E5%8D%81%E4%BA%94%E5%85%AD%E5%B2%81%E5%81%B7%E5%81%B7%E5%AD%A6%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%9A%84%E4%B8%AD%E5%AD%A6%E7%94%9F%E5%90%97/</url>
    <content><![CDATA[<blockquote class="blockquote-center">最近腾讯内部 bbs 上有个问题是 “你是那个十五、六岁就偷偷学计算机的中学生吗？”<br>记录下自己的回答</blockquote>

<p>收到封培认识的小伙伴的邀请，看到这个问题一时竟有些激动得说不出话。过往昔事一件件浮现在眼前。</p>
<p>我出生在衡水的一个村子中，后来四五岁的时候为了上学搬到了附近的小镇上。大概二三年级的时候第一次接触电脑，感觉第一眼看到时就好奇计算机是怎么实现的，怎样才能在电脑上做出自己想要的功能。这种好奇逐渐在心中发酵，成了其它好奇无法替代的梦想。可小时在的村子与城镇在信息上都比较闭塞，周围也没有人听说过编程一词，因此当时也一直不知道应该如何写软件。我也没能赶上许多回答问题者所说的小霸王时代，小时候好像完全没有听说过这种东西。还记得小学时候在百度搜索 “怎么编程”、“怎么创造软件” 类似的问题，却总找不到答案。那个时候还没听说过 C 语言，完全找不到学习编程的入口。假如当时有听说过 C 语言，在百度搜索 C 语言应该会好些吧。小时候虽然未能开始学习编程，在起跑线上晚了一步，但编程的梦想却在心底深深扎根。那时候还沉迷在从家里偷钱去网吧打游戏，跑跑卡丁车、QQ 华夏、QQ 音速、魔域、流星蝴蝶剑等等等等。</p>
<p>初中时候去堂哥家玩，偶然间发现了一本 C 语言的教程书。谁能想到堂哥没能学会的东西，却给我打开了一扇大门。我偷偷地把这本书带回了家，现在看来，这本书的质量并不高，讲东西也很模糊不透彻，它却让我了解到这世上有一种叫 C 语言的东西，就像一心想造房子的人知道了这世上有锤子钉子这些工具。我没能看懂这本书，因为它讲解知识点实在是差到极致。我在百度上搜索 C 语言的教程，找了一部教学视频看。当时的老师还是用的 WinTC 编译器，写着较古老的 C 语言代码。我的第一行代码是跟着这个老师写的，第一行代码写的是什么我已经忘记了，反正不是极具仪式感的 <code>hello world</code>，现在想来有些遗憾吧。我跟着视频学了几节，却觉得这老师讲得也不好（也可能我没有认真听），讲到循环那里的时候已经完全不能理解。记得当时还没能理解 = 号是赋值的意思，交换 a, b 值的那段代码 <code>t=a; a=b; b=t</code> 让我崩溃，a b 两个不同的值怎么会相等！我在这边放弃了，没有继续看他的视频去学习。<span id="more"></span></p>
<p>搁置了一段时间后，大约是初一寒假的时候了解到郝斌 《C 语言 180 讲》教学视频，费了很长时间才找到了资源，这个资源现在还记得很清楚，在土豆网上搜索 Bunny_Leo 用户，就可以在他上传的视频中就可以看到这 180 讲。如果说前面的一切只是铺垫的话，那我到这里才开始真正的学习编程，郝斌是我编程的启蒙老师。郝斌老师的 180 讲真的很详细，看他的视频我没有几乎没有遇到一点点的困难，即使是学习指针时，也觉得稀疏平常，不知道为什么大家都说它难。这套课程是在授课时候录的，那时的我无论如何都想不明白，这么好的老师，这么有意思的课程，为什么会有人在课上睡觉，为什么老师提问大家一片沉默，没人积极回答，也不知道为什么我觉得很简单的问题，被点名后却吞吞吐吐回答不上来。这些事情我上了大学才明白。当时真的好想成为郝斌的学生啊，可以坐在真实的教室里听他讲课，也好想在现实中能有个教我的老师，遇到想不通的问题可以问他。这次学习中也有遇到一些挫折困难，当时学函数的时候，老师写了个 <code>isPrime()</code> 函数来判断一个数字是否是素数，这个函数判断素数的原理我能理解，却无论如都不能理解  <code>if( isPrime(a) )</code> 为什么能判断 a 是不是一个质数，为什么 <code>if</code> 会知道这里面发生了什么。我想了很久都想不通，自信心很受打击，感觉自己很笨，这个都理解不了。后面一天的时候灵光一现，突然想到 <code>isPrime(a)</code> 其实是一个值，是真或假，if 就可以判断了，一下豁然开朗，感觉自己已经没有什么困惑的了。后面大学里学习底层原理的时候发现答案就是我想的那样，函数会返回一个值，告诉 if 结果，与我当初的想象如出一辙。但当时想不通的无力感或许真的只有身边没有老师的自学者才知其中味吧。</p>
<p>当时也了解到有一本书叫 《C Prime Plus》，当时是寒假，快过年，我千辛万苦地在网上找到了资源，打算带笔记本电脑回没网的老家过年时学习。我下了很多资源，下载完成后却都无论如何都打不开，或者电脑整个卡住，或者是打开发现是乱码，不知道为什么会这样，又有了那种无助感。现在想来也觉得可笑，下载的资源是 pdf，我却是用记事本打开，因为当时不知道 pdf 是什么，只觉得书的话肯定是文字组成，当然能用 txt 打开。因为打不开资源，于是那年过年我又玩了七八天的单机游戏，在偶尔空暇还用已学过的知识写了个最简单的计算器。后来初三暑假我斥巨资 42 元买下了这本书，才得以第一次看到里面内容，真是本好书啊。也记得那时候好奇怎么计算平方根，于是在电脑上尝试性地写下了 <code>a*a=2;printf("%d",a)</code> 的代码，结果发现这种方法行不通。当然也写过 <code>shutdown -s -t 0 -c "洗洗睡吧"</code>，改名成你懂的.bat，发送给好友整蛊。因为让一个没有保存文件的女同学电脑关机，我被那女的数落了好几年，或许这就是我这么多年单身的原因吧。</p>
<p>一开始学习的经历大致如此，有了些基础后后面学习就简单了很多。初中高中顺带学了郝斌的 Java、数据结构、数据库教学视频。高中是住宿式学校，禁止带一切电子产品（衡水的教育模式，你懂的），一个月只放一天半假，在学校时每每都渴望着放假，放假时便抓紧时间打游戏、看教学视频。记不住，就把示例代码抄在纸上，带到学校中去理解、学习。在学校时，不知道有多少次实在忍不住寂寞，在自习课上背着手写较为复杂的链表代码、冒泡排序，郝斌视频中的链表代码，不知道我在纸上写了多少遍。很多人面试时害怕的手撕代码，我并不是那么畏惧，或许原因就于此吧。（不太发达的小城镇，对信赛毫无概念，看到大家高中时可以跑到机房学习算法、敲代码，还有老师教，十分羡慕。）同桌是发小，还教他编程知识，他不学我强迫着他听的那种。如果当时能接触到红黑树，那我估计就能在学校中手写红黑树代码了，如果是这样积累下来，我肯定比现在厉害吧，滑稽。学校发了本微机教材，惊喜地发现里面有编程部分，虽然只有短短几十页，却足以让我高兴许久，一点点品味，给苦苦的高中找了些甜味。教材里是 VB，于是我也学会了 VB 一些基础的东西，回家在电脑上敲出，这也是我第一个带界面的程序，当时觉得带界面的东西真酷，C 语言都是黑窗口真垃圾，哈哈。几次放假，就用 VB 给家里写了个商店管理程序，遇到困难想不通，就记在纸上，回到学校中思考解决方案。当时最难的是不知道在输入框中输入东西，我怎么才能把他放入 SQL 语句（当时不会字符串拼接）。可能用于两三个月才学会这项操作。初中高中时候还尝试在贴吧拜师，写什么真心求师父，我自学能力强，数学有一定基础，最终却没能如愿找到一个师父，还曾和贴吧里一个六七十的大爷聊过一下午，让他教我 VB。城镇还不算太发达，老一代的人估计也没有编程的概念，初中时候父母亲人一开始都很反对我学习编程，想让我学医。大伯说编程是顶级聪明的人才学懂的，我们家脑子不行，搞不来数学，出不了这种人，家人说我是痴心妄想、提着包上门修电脑等等。但从小扎根的梦想哪里是别人能撼动的，我固执己见，一直坚持着。再到后面做出商店管理程序父母才真正去听我编程的梦想吧。再后面父母看我坚持，也就支援了，开始支持我学编程，同意我的梦想，虽然他们还是希望我能学医。我将梦想写在纸条上，放进瓶子里，希望在后来的某日让自己想起过往的事，希望能在受到挫折时激励自己。</p>
<p>后面高考未能考入梦想三年的学校，进了南邮，就憋着一口气，想着一定要证明自己。想起初中高中时候在群里看到搞 NOIP 的很厉害，我去了解，发现 NOIP 是中学时候的竞赛，大学不能参加了，感觉很可惜。后面又了解到大学里面的是 ACM，就硬着头皮参加了，第一次参加校队选拔的时候我整个人傻了，这踏马是个啥。于是不出预料地在 ACM 算法题里用二重指针开了动态二维数组。按下三年训练的辛酸不提，在区域赛滚榜的时候，我们队超过自己心中梦想大学队的一刻，自己心中突然一下五味杂陈，有些想哭，却告诉自己要坚强。当初憋着的那口气终于得到舒缓，开始一点点解开自己的心结，开始告诉自己学校不重要。自己的大学并不是特别努力，没能如初中高中时想象的那般沉浸学习编程，没能达到当初所幻想的实力，现在也很后悔这点。</p>
<p>再后来的事就是今年毕业，入职腾讯，实现了大学里的大场梦，也算是守住了初心。“名不显时心不朽，再挑灯火看文章”，希望自己继续在鹅厂继续自己的故事吧。</p>
]]></content>
      <tags>
        <tag>往事</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 机测试</title>
    <url>/2020/08/01/Mac-%E6%9C%BA%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>如果你能看到这篇文章，说明我在 Mac 上配置博客成功了。</p>
<p>Blog 迁移测试</p>
<p>Github Actions CI 测试</p>
]]></content>
  </entry>
  <entry>
    <title>Hexo 多电脑协作</title>
    <url>/2020/07/27/Hexo%E5%A4%9A%E7%94%B5%E8%84%91%E5%8D%8F%E4%BD%9C/</url>
    <content><![CDATA[<p>今天，我尝试了 Hexo 多电脑协作，这是一篇测试文章。 </p>
]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>金陵四载</title>
    <url>/2020/07/14/%E9%87%91%E9%99%B5%E5%9B%9B%E8%BD%BD/</url>
    <content><![CDATA[<p>刚入大一的时候，就幻想着大四毕业时写一篇文章，以记录大学期间的经历、所见所遇、所想所感。名字都想得差不多，就叫《四年一梦》或是《金陵四载》。这个心愿就像心结一般，一直在我心头，大学期间几次忍不住想写，都被自己劝住。而如今已经毕业，那些大学的记忆却也逐渐模糊，单能凭着点点滴滴去回忆。随着开始工作，想写这篇文章的心不再像之前那样炙热。“此情可待成追忆”，这样的情况下写这些文章总归有些遗憾，但自己仍是想写这篇文章，感觉这样才对得起大学四年，对得起当年自己的这般心愿。</p>
<p>四年前，我怀着如今已不再说出口的心念来到南京。怀着对一切美好事物的期待与猜想，进入了大学。如果你问我为什么来南京，我仔细想来好像也没有什么特定的原因，或许是一直不解三毛在《但有旧欢新怨》中为什么要别人给她带雨花台的小石头，怀着这份好奇想来南京找找答案，也或许是几次考试考了高中第七八名心有膨胀想试下南大，也可能是着了那句 “江南佳丽地，金陵帝王州” 的迷。我更爱将来到南京称为命中注定。因为它之前并不是自己苦苦追求的东西，而后又机缘来此，只能这样解释。</p>
<p>没能考上北邮到底是当时意难平，但印象中自己好像并没特别难过，好像是很快地便接受了现实，因为自己觉得只要自己喜欢与努力，在哪里都有着机会。也因此，我从未把大学当成享乐的地方，一开始时也发圈说 “愿我的大学，比高中更努力”。虽然现在回看，事实并非如此… 这种状态下的大一上是可以想象的到的，那时的自己多少有些拼搏向上、好好学习的态度，想要洗刷一下耻辱，对待课堂和考试也算认真，也因此在大一上绩点能上四或四左右，专业排名第一二的样子。那时的记忆已经模糊，现在却是清晰记得一次与朋友外出时看到路牌，恍惚间将上面标的 “南京邮电大学” 想成 “北京邮电大学”，一秒钟反应过来后也只是耸肩笑了下。我也还记得在一个大雪纷飞的周三下午，我旷课冒着风雪去学科楼询问加入 ACM 的事情，到达时也几乎一身携着雪花。那时的我还很腼腆，那节课也是我大学为数不多的几次旷课之一，课程是我喜欢的《中国近现代史纲要》。那时也感觉自己很有希望。</p>
<p>大一上期末考完后，觉得这所大学的教育实属垃圾，某些作业、期末考的水平几乎没有。也在这时，突然意识到，如果自己按着学校的规章走，当个乖学生，多半没有啥前途。因此在后面的大学生涯中，从大一下开始，直到毕业，除了少数的几个我觉得重要的专业课程外，我几乎没有听过课。我很难去说我这种行为是明智还是不好，但于现在来说我并不后悔大学时的这种选择。我后悔的是在大学期间，我并没有好好地玩或是好好地学，于一种收获不高的状态度过了四年。如果我好好地玩，我肯定会很开心；同样，如果我好好地学习，肯定能学到很多知识。但实际上，我玩的时候考虑着其他的事情，学习的时候也不集中，有时也只是表面上学习，全然没有小学时的学习效率，没学玩，也没玩好，这该是这四年最不该的事情。大学有一段时期（大多处于大二的时候），自己基本上很迷茫，因为课堂的东西没有学，在自己的算法学习上也没有很好的成绩，每每想到家里，不知道该如何面对。每到这时候，我总会想起大一上自习室里挂的那句话 “梦想无论怎样模糊，总潜伏在我们心底，使我们的心境永远得不到宁静，直到这些梦想成为事实才止”。</p>
<p>坦白而言，在 ACM 上我并没有努力多少，能获得成绩很大程度上是靠两个队友大腿。这是我很后悔的地方之一，也是我觉得很对不起两位队友的原因。我也不时想在 ACM 上多多努力，每次都因自己的惰性以及其他一些诸如没有整块时间类似的原因没有做成。如果真能在 ACM 好好训练地话，我应该会更厉害更自信些吧。</p>
<p>一直觉得一个人时才叫旅行，与他人一同去应该叫做玩耍。因为我在情感上向来比较敏感，悲春伤秋，多愁善感。或许会因看到一块石头，而突然心生怜悯，痴痴凝望许久；也或许登高思远，想象着古人登高时的万千感慨，久久不能回神；也或许触摸着城墙上的青砖，回忆着千年来的历史变迁，白衣苍狗，沧海桑田，一一穿越历史隧道，来到眼前。这些情感，大多只允许我一人在外时唤发。与人游玩时，多半要关心别人感受，只看看身边风景，也就不会有着以上事情发生，一些遐思也便不见，在南京出去玩的意义也就少了大半。我印象最深得还是初入大学十一时的第一次外出，我揣着种种不安走出学校，坐地铁来到了心心念念的雨花台（现在还保留着在南京取得第一枚地铁币时的照片）。在我心中，我一直有意地去不想雨花台是烈士陵园、纪念馆的一面，总会美好地认为它是那个 “云光法师讲经，落花如雨” 的雨花台，毕竟，它在我来南京之前，象征着种种美好。我也偏爱将雨花台的雨字读作四声，虽然心知这是不对的。这一天，我在雨花台出来后，又穿越了长干桥，走过中华门，最后来到了夫子庙秦淮一带。这应该是我大学四年里步行最多的一天。这是我记忆最深的一次独自游玩，每每想来都觉得美好。于雨花阁上望远时的无限幽思会不会与几年后登赏心亭时一样呢？</p>
<p>大学最先加入的社团是七醉阁古风社，纵使那时候它还不存在。那时候我们幻想着这个社团的样子，想着我们痴迷的中华文化。后来种种的因缘我与这个社团联系愈来愈少，却一直记得大学一开始时与阁主玩耍的日子。古风社成立后偶然间读到其章程有一句 “看天上云舒云卷，于心间静念坤乾”，一时间有些恍惚。我因古风社结识了国学社，结识了这个陪伴了四年的社团。国学社于 16 年建立，我于 16 入学，开学便加入了社团，谈起这个，学长学姐会说我是陪社团最长的那个人，每每听此我都会有种自豪感与幸福感，想来也是一种缘分。很有幸遇到这样一个社团，也有幸遇到社团中的每个小伙伴，他们身上实在有着我太多要学习的东西。每次与他们吃饭、学习、游玩，都会有家人的感觉。我们一同晨读、吃早餐、开学习会，一同开办讲座拜访老师，一同吃过辛香汇、川西集市，一同去过红山动物园、金陵制造局、鸡鸣寺、玄武湖边、赏心亭等等等等。思君若汶水，浩荡寄南征。很是怀念那些与大家一同念 “以义正信，达己达人” 的清晨。也因社团，自己有幸接触到杨汝清、吕建福等先生。记得邀杨汝清先生来南邮做讲座时，向老师询问 “理科与国学经典” 的问题，杨老师数语将我点醒，自此自己的整个知识才有体系。我从先生那学会弟子礼，却从没独自向先生行礼。在江南学院的一个清晨，我与先生踏雪相遇，“老师”“哎”，没想到这是与先生的最后一次交流。先生过世时对先生行弟子礼，所遗憾者未能有机会参与先生的围炉夜话。</p>
<p>大学做的最正确的一件事，或许就是参加 ACM 校队了。想要打 ACM 的原因想来不过是内心的不甘和想证明自己。高中时就听说过 NOIP 竞赛等等，看大家口气像是很厉害的样子，那时就想后面可以试试看。而后高考不如意，更是心存不甘，想找个东西证明自己的实力。雪天去找老师询问加入 ACM 事宜的情景前面已经说过，很是喜欢那时候的自己，不畏风雪，充满希望。询问到的答案或许并不如意，“考试范围是什么”“计算机能解决的都有可能”，稍有犹豫后内心却依旧渴望、坚韧。通过测试，加入校队的历程也并不一帆风顺，但最终总归混脸熟进去了。ACM 的训练充满着痛苦，但也伴随着收获与喜悦。感谢那个在某次训练后差点哭着回宿舍的自己，假若不是当初的坚持，梦想又怎么触摸现实。去训练的路上或许伴随着饥饿，伴随着夏日的暴雨，或许还伴随着还在生气的女友，伴随着还未通关的游戏，伴随着糟糕的心情。但同时伴随着与荷的约会，伴随着与队友吹逼的期待，对题目的期待，也伴随着对未来的期许。受虐与痛苦的同时，也滋长着一份幸福。ACM 给了我很大的勇气，这么难的比赛我都来过经历过，做那些简单一些的事情也肯定没问题。在招聘时令很多人苦恼的笔试算法题虽然也会给自己带来一些压力，但总归是在自己的技能树上，有着更多的信心。我最终能够取得心仪的 offer，可以说是全靠 ACM 了。不然，在一所普普通通的双非学校，要做怎么的项目才能入职 BAT 呢？</p>
<p>要说金陵的风情，全在秦淮一河。六朝如梦，绮糜奢华，前人之述备矣。今人不见古时月，而秦淮河水却流淌至今。初见秦淮之时，脑海中不得不翻涌起那句 “当时年少春衫薄，骑马倚斜桥，满楼红袖招”。伫立失神，却惊地想起这里过往千年间，曾响过后庭曲，曾飞过堂前燕，桨声灯影里，一边是天下文枢，见证多少失意欣喜，一边是茶楼酒馆，看过无数相遇离别。诗人之眼千年，我于此开始品人间冷暖。无言的流水中记载着无数的往事，或金戈铁马，或两情脉脉。我险些落泪，唉叹句 “人生自是有情痴，此恨不关风与月”。由秦淮向外扩散，是秦皇瘗金，王气葱葱；是钟山风雨，石城涛声；是逶迤绿水、迢递朱楼、亭台水榭。有中华门、朝天宫；有鸡鸣寺、玄武湖；有赏心亭、明城墙；有栖霞山、望江楼。斜阳晚照，往来行人悠悠；巷陌寻常，唤起炊烟袅袅。过去不知幻想过多少次氤氲的江南烟雨，如今身处其间，也可谓是良辰美景赏心乐事。可惜学浅，长情蕴于中而文字难摹心意，想尽万千语句最终只能托于 “我爱南京这座城”。</p>
<p>大学唯一做的一件全心投入的事，便是与时光谈恋爱了。这是确立关系以后优先级最高的事了，没有其他紧急事的话便是一切给时光让路。大学发过许多秀恩爱的说说文字，可现实却也有难熬的日子。我们的故事太多，足以另开一篇文章，几番波澜，几经辗转，终于有了结果。那句 “熬过异地，就是一生了”，支撑着自己走了很久。过去每当难过时，想起此句，便觉得又有了坚守下去的希望与动力。尔后结束异地，虽然不是没有丝毫问题，但也算是 “宜言饮酒，与子偕老”。开心的是，我们毕业后订婚啦～要说两人间最温馨的事，它并不是一桌一饭，不是某次携手游玩，也不是某次含情脉脉。而是一次晚上回家时屋里传出的灯光，忘记了当时是昏黄还是明亮，于黑夜中发光，突然感受到它意味着期许、意味着等待，让我感受到温暖、希望与责任所在。感谢过去我们两人彼此的勇气。</p>
<p>大一大二时，几乎每天都盼望着毕业，可到了大三下，想起毕业突然有些伤感。大四时想着一定要好好珍惜，毕业时与好友们好好告别，可天夺人愿，大学草草地画上了句号，带着些许遗憾。6 月 19 号，在深圳机场候机回南京毕业返校，构思一件自己未能完成的作品时（没能完成终究有点遗憾吧～），突然想起下面的句子</p>
<blockquote class="song">
<p>
    如果说有什么愿望的话<br>
    那么<br>
    一愿郎君千岁<br>
    二愿妾身常健<br>
    三愿如同梁上燕<br>
    岁岁常相见<br>
</p>
</blockquote>

<p>再见，南京。</p>
]]></content>
      <categories>
        <category>大学</category>
        <category>总结</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>大学</tag>
      </tags>
  </entry>
  <entry>
    <title>5 月份碎碎念</title>
    <url>/2020/05/31/5%E6%9C%88%E4%BB%BD%E7%A2%8E%E7%A2%8E%E5%BF%B5/</url>
    <content><![CDATA[<p>6 号的时候来往深圳，总要有文案的，可无奈心情并不是很高涨，心里有着片片乌云，想了一天加一晚上都没能想出个合适的。一方面是突然不舍得离家，另一方面是上午回家放鞭炮，吓到了一只很黏我的猫咪，它不再理我，我也没能好好跟它说再见。乌云久久不去，心结久久不开，直到临走也有些不甘心，所以呀，文案一直没能想出。直到将临深圳时，我睁开带着矇眬的眼睛，看到窗外片片飘云，心中一下想到了李贺那句 “少年心事当拏云”，心里也一下开朗起来。是呀，少年应有凌云般的志向。一切的困顿随它去吧，生活总会变好的。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20200531/1OG4RfDUd5w5.png" alt="mark"><span id="more"></span></p>
<p>到达深圳，处理好租房、经历了入职死锁等一系列波折后，生活也逐渐步入常轨，10 号母亲节也把皮皮接了过来。一开始时候，想养猫或许是觉得会给生活带来一份乐趣，后来才渐渐明白它更需要我们，与带来乐趣相伴的，是责任。最初的时候是想养宠物，后面它成了家人。我与其之间的羁绊，或许在它原主人将装有它的纸箱交给我，它在纸箱中探出头来的那一刻便已形成。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20200531/VgL8L8W3xHCp.jpg" alt="mark"></p>
<p>自己还未完全地战胜心魔，所以初来深圳的时候身体也不舒服过一阵。初来的几天孤独感有时也会突然袭来，起初不相信别的男孩子所说的独自去一个陌生地方工作生活会感觉到难熬，现在也逐渐相信。毕竟像我这种自觉心性比较强大的人，也会有着四五天的适应期。那几天一个回到房间里，望着偌大的房间和陡峭的楼梯，偶尔会突然想，如果自己突然死在屋子里，也不会有人知道吧。 我从未与这种想法为敌，因为它总会让我下意识地好好照顾自己。</p>
<p>总觉得我十分幸运，一路上总能遇到十分美好善良的人。来到深圳最难熬的几天里，同在深圳的大学国学社中遇到的丁学长一直关心着我，让人倍感温暖。家里人总怕我朋友少、不爱交朋友，可我总觉得交朋友这种事情是顺其自然的，不必刻意为之，或许是因为我一路都能得到他人信任与关心所带来的自信。因为难受鸽了学长请吃饭心里一直过意不去，好在后来苏苏来深圳玩，一起吃了饭，还和两个学长聊了许多。有些事情是很难忘记的呀，比如此。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20200531/1qS8XDhpOvFG.jpg" alt="mark"></p>
<p>我喜欢编程，所以在工作上也有着很多乐趣。很长一段时间我没有感受过成就感这种东西了，几乎都忘记了上次成就感所带来的乐趣是什么时候了。进入工作，在一套自己并不熟悉的框架上完成一定的功能，编译通过和跑起来的一瞬间成就感还是满满的。那种成就感一下让自己想起了很早很早的时候，或许是做出了一道题，或许是一下明白了个知识点，或许是 AC 了一道算法题目。人是个一贯的动物，很久之前的事情，或许会在之后的某个时间点因为相同的感受突然想起。我对工作最开心的一点就是，它在一点点地改着我的拖延症以及懒惰。工作上分配给你的任务，你是必须要完成的，不能推脱，我非常喜欢这点。因为从小到大，我总有着眼高手低的毛病，高中大学时看到那种简单的题目，直接一个对勾打过（这一点穴 xx 再了解不过了），不愿去做。我能感觉到自己能力的不足，有很大一部分原因与此有关。而工作上的事，总是要你完成的，不管需求有多 xx，自己有多想跳过。我相信自己能力会于此提升的。虽然初实习入职和毕设赶在了一起，时间上很紧，但自己却过得十分充实。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20200531/m4d4Chia2nxO.jpg" alt="mark"></p>
<p>日常的工作环境也是超好的，同事和部门的氛围超 nice，双屏显示器，再舒服不过了。早餐免费，晚餐也有夜宵券（可以吃超丰盛），中午花个七八块钱随便填饱填饱就好啦～晚十点会还报销打车，虽然我一般骑车，因为觉得骑车在深圳逛逛也蛮好的。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20200531/1vaD7mOyvkf1.jpg" alt="mark"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20200531/gRf17Xjg1TSt.png" alt="mark"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20200531/x6nhNbfkLAcw.png" alt="mark"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20200531/IfqbXbCSv1Vn.png" alt="mark"></p>
<p>过年的时候我就明白，于我来说，思乡这种东西，是在回不了家的时候孕发的，而不会不在家产生的。所以大学四年，我并没有真正意义上的思乡，因为我知道，只要我想，随时都能回家的。而现在，才是思乡的起点。</p>
<p>小时候背的诗词，真的是有时会在某一刻突然领悟。一天早上上班骑车的路上，我嘴里念着 “相见时难别亦难，东风无力百花残”，原来的时候始终不懂第二句的意思，只当着顺口溜来背，想像不到其中的画面，觉得很没有逻辑，风没有力气，花怎么残了呢。那天的路上，嘴里念叨了两三遍，却突然一下领悟了。东风即是春风，春风拂物，万物生长，本该是生机勃勃，却无奈春风无力，百花寥落。这种顿悟的感觉实在是令人开心。上次下雨，雨意阑珊之际，有一片雨滴从高处的叶子落下，不偏不倚，刚好砸中了我的头顶中央，那一下的醍醐灌顶，感觉自己差一下就要出家了…..</p>
<p>本来之前的碎碎念有很多，但随着时间都模糊了。有初入职的期待，有那夜下雨打不得车的焦急，有小试牛刀的欣喜，也有天天划水白嫖的快乐。今天回忆起来突然觉得有些不再有写的必要了，就到此结束吧。6 月，你好呀～我也要好好加油呢。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>碎碎念两则 —— 清明记春及毕业</title>
    <url>/2020/04/19/%E7%A2%8E%E7%A2%8E%E5%BF%B5%E4%B8%A4%E5%88%99%E2%80%94%E2%80%94%E6%B8%85%E6%98%8E%E8%AE%B0%E6%98%A5%E5%8F%8A%E6%AF%95%E4%B8%9A/</url>
    <content><![CDATA[<h3 id="碎碎念一"><a href="#碎碎念一" class="headerlink" title="碎碎念一"></a>碎碎念一</h3><p>如果这段时间问我最喜欢的节气是哪个的话，我一定会说清明。好像在中国人观念里，清明是一个略带丧的节日，可在我眼里，清明附近才是真正的春天，它基本褪去了春寒料峭，脱下人们繁厚的冬装，浴乎沂，风乎舞雩，万物都是欣欣向荣的样子，春和景明。</p>
<p>我是一个从小就向往城市的人，金陵三载，历经些许事后，这次回来，我好像格外喜欢家乡这片土地，爱她平坦辽阔，爱她春日里充满生机的样子，心境不同了吧。这次在家我也额外向往着去田野里走走，像是把二十几年来的过往于这片土地上回忆。但如果让我选择的话，这个年龄的我还是会去城市吧。肉体选择城市，灵魂回归自然。</p>
<p>在家的日子里总是和过往离得最近的日子。刚回家时与父亲带着熊猫去运河玩，走过胡同时，看着墙上孩子们稚嫩的字迹画迹，心中不禁有些许长大的后悔。在小时我的眼里，这些东西应该是乐园吧，墙上孩子们歪七扭八画的车，就是世界上真正的车；画的奇奇怪怪的生物，是我未曾见过又极力想了解的新世界；写的数学题目，描出的田字格，也像是那个年龄生活的映像。可我现在长大了，终不再完全是小时候那份心情了，只有怀念。这些年，我收获了什么，又失去了什么呢。</p>
<p>胡同里没有看到孩子，是因为画上这些东西的孩子们也要长大吗。风在胡同里回旋着。</p>
<h3 id="碎碎念二"><a href="#碎碎念二" class="headerlink" title="碎碎念二"></a>碎碎念二</h3><p>今天下午开班会，讲了返校以及毕业事宜。本来早就知道了一些事情，几个月里也早就走过了那些遗憾与伤感，但看着朋友圈里的一些遗憾，又不得不想起这些碎碎念。</p>
<p>关于大学，关于金陵，我有着太多遗憾，没想到转眼已匆匆到了毕业季。大学里，我好像还未像寻常学生一样享受大学时光，不知道会不会与刚入大学时许下的那句 “愿我的大学，比我的高中更努力” 或者林语堂那句 “梦想无论怎么模糊，总潜伏在我们心底，使我们的心境永远得不到宁静，直到这些梦想成为事实才止，像种子在地下一样，一定要萌芽滋长，伸出地面来，寻找阳光” 有关。大四上学期突然意识到这点，像是哺乳期的婴儿想要喝奶一般，珍惜着最后的一点点学生生涯。却未料到，最后这一段时光，也要被疫情无情掠去。前些天父亲才讲到他告别学校的经历，恍惚间却轮到了我。</p>
<p>在南京，我还有着太多想去的地方。一开始来到南京，我只像一个孩童，在里面嬉戏，没有付诸太多情感，可越往后我越知道，我很早就已经爱上了这座城市。与女朋友异地时，精打细算着金钱，计划着相见的日期，也便没有太多地光顾这座城市；女朋友来南京后，精打细算着生活，计划着柴米油盐，与这座城市成为擦肩过客。一梦醒来，才觉自己血液着已流注着南京的气息。本来打算大四下没有课时，在这座城市里好好看看，与她度过我大学里最后的温存。夫子庙的科举博物馆，我从大一就想去呀，可 80 块的门票让我犹豫再三；莫愁湖我还没有去看过；还有，我好想再看一次鸡鸣寺三四月份的樱花呀，还想再看看春日的秦淮河，发朋友圈的文案我早就准备好了，“这三春水暖，俺也曾睡过风流觉”（改自《桃花扇 余韵》）；还想和国学社的朋友们围炉夜话，备好羊羔美酒，与你谈谈心；6.23 在保利大剧院还有于魁智李胜素出演的《龙凤呈祥》，想着在深圳实习赚点钱，有机会的话和家里人再来南京看出戏，位置买好一点；还想……</p>
<p>这里面很多愿望，很多都没有机会了吧。</p>
]]></content>
      <tags>
        <tag>碎碎念</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ std::wcout 输出乱码</title>
    <url>/2020/02/16/std-wcout%E8%BE%93%E5%87%BA%E4%B9%B1%E7%A0%81/</url>
    <content><![CDATA[<h3 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h3><p>最近使用 C++ 遇到了中文处理问题，今天下午想测试 C++ 宽字符使用时，发现如下程序并不能如愿输出汉字。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="function">std::wstring <span class="title">wstr</span><span class="params">(<span class="string">L"你好"</span>)</span></span>;</span><br><span class="line">    std::wcout &lt;&lt; wstr &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>在网上多处搜索处理方法后仍不能解决，于是自己探索了一波。收获蛮大的，于是记录下。</p>
<blockquote>
<p>该文章程序及结果皆在 Linux 环境下。</p>
</blockquote>
<span id="more"></span>

<h3 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h3><p>结论是我在一些程序中总结出来的，其中若有错误，希望指正。</p>
<ol>
<li>Linux 下 <code>printf</code> 和 <code>wprintf</code> 不能混用，即同时使用。具体原因可自行搜索，网上有很多资料。</li>
<li>C++ 中默认情况下 <code>std::cout</code> 与 <code>std::wcout</code> 分别与  <code>printf</code> 和 <code>wprintf</code>  同步，维护共同缓冲区。为方便理解，我们可以假设 <code>std::cout</code> 调用 <code>printf</code>，<code>std::wcout</code> 调用 <code>wprintf</code>（这里只是假设，方便我们理解）。</li>
<li>综合上述 1、2 两条，可知在开启 <code>sync_with_stdio</code> 情况下 <code>std::cout</code> 及 <code>std::wcout</code> 不能混用。 先使用 <code>std::cout</code> 后使用 <code>std::wcout</code> 会造成 <code>std::wcout</code> 输出乱码，先使用 <code>std::wcout</code> 的话 <code>std::cout</code> 压根不能输出东西。 关闭情况下两者可混用。</li>
<li>C 语言库中设置 <code>locale</code> 函数为 <code>setlocale()</code>， C++ 语言库中设置 <code>std::locale</code> 函数为 <code>std::locale::global()</code>。可认为 C 语言库和 C++ 库分别有不同的 <code>locale</code> 。<code>setlocale()</code> 函数仅设置 C 语言中的 <code>locale</code>，而 <code>std::locale::global()</code> 函数两者都会设置。</li>
<li>开启 <code>sync_with_stdio</code> 情况下，可认为 <code>std::cout</code> 与 <code>std::wcout</code> 使用的是 C 语言中的 <code>locale</code>。而关闭情况下则使用 C++ 自己的 <code>std::locale</code>。</li>
<li><code>std::wcout</code> 输出中文时依靠地区 <code>locale</code>，故我们在使用其输出中文之前要设置 <code>locale</code>。</li>
<li>在开启 <code>sync_with_stdio</code> 情况下，想用 <code>std::wcout</code> 输出汉字要设置 C 语言中的 <code>locale</code>，使用两种方法都可以。而关闭情况下，只能使用 C++ 的方法，<strong>且要在关闭同步之前设置</strong>，也可以使用 <code>std::wcout.imbus( std::locale("") )</code> 单独设置。</li>
</ol>
<h3 id="其他收获"><a href="#其他收获" class="headerlink" title="其他收获"></a>其他收获</h3><ul>
<li><code>std::cout</code> 中 c 表示字符， <code>std::wcout</code> 中 wc 表示宽字符。</li>
</ul>
<h3 id="测试程序"><a href="#测试程序" class="headerlink" title="测试程序"></a>测试程序</h3><p>这里展示部分测试程序及运行结果（Ubuntu 下），测试程序可根据结论中的几点自行结合测试。</p>
<h4 id="开启-sync-with-stdio-（默认）"><a href="#开启-sync-with-stdio-（默认）" class="headerlink" title="开启 sync_with_stdio （默认）"></a>开启 sync_with_stdio （默认）</h4><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::wstring wstr = <span class="string">L"你能输出中文"</span>;</span><br><span class="line">    std::wcout &lt;&lt; wstr &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>??????</p>
</blockquote>
<p>“你能输出中文” 共 6 个汉字，输出中共 6 个问号。 <code>wstr</code> 中有多少个汉字，输出中就多少个 ？</p>
<hr>


<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::locale::<span class="built_in">global</span>( std::<span class="built_in">locale</span>(<span class="string">""</span>) );</span><br><span class="line">    <span class="comment">//setlocale() 与上句相替换结果一样</span></span><br><span class="line">    std::wstring wstr = <span class="string">L"你能输出中文"</span>;</span><br><span class="line">    std::wcout &lt;&lt; wstr &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>你能输出中文</p>
</blockquote>
<hr>


<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::cout &lt;&lt; <span class="string">"你好"</span> &lt;&lt; std::endl;</span><br><span class="line">    std::wstring wstr = <span class="string">L"你能输出中文？"</span>;</span><br><span class="line">    std::wcout &lt;&lt; wstr &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>你好</p>
<p>wcout 输出乱码</p>
</blockquote>
<hr>


<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::wstring wstr = <span class="string">L"你能输出中文？"</span>;</span><br><span class="line">    std::wcout &lt;&lt; wstr &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">"你好"</span> &lt;&lt; std::endl;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">"你好"</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>??????</p>
</blockquote>
<p><code>cout</code> 并不会输出</p>
<hr>


<h4 id="关闭-sync-with-stdio"><a href="#关闭-sync-with-stdio" class="headerlink" title="关闭 sync_with_stdio"></a>关闭 sync_with_stdio</h4><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">// setlocale( LC_ALL, ""); //有没有这句输出都一样</span></span><br><span class="line">    std::wstring wstr = <span class="string">L"你能输出中文？"</span>;</span><br><span class="line">    std::wcout &lt;&lt; wstr &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>输出为空</p>
</blockquote>
<hr>


<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::locale::<span class="built_in">global</span>( std::<span class="built_in">local</span>(<span class="string">""</span>) );</span><br><span class="line">    std::wstring wstr = <span class="string">L"你能输出中文？"</span>;</span><br><span class="line">    std::wcout &lt;&lt; wstr &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>你能输出中文？</p>
</blockquote>
<hr>


<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::locale::<span class="built_in">global</span>( std::<span class="built_in">local</span>(<span class="string">""</span>) );		<span class="comment">//删除此句结果相同</span></span><br><span class="line">    std::cout &lt;&lt; <span class="string">"你好"</span> &lt;&lt; std::endl;</span><br><span class="line">    std::wstring wstr = <span class="string">L"你能输出中文？"</span>;</span><br><span class="line">    std::wcout &lt;&lt; wstr &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>你好</p>
</blockquote>
<hr>


<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    std::ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    std::wcout.<span class="built_in">imbue</span>( std::<span class="built_in">locale</span>(<span class="string">""</span>) );</span><br><span class="line">    std::cout &lt;&lt; <span class="string">"你好"</span> &lt;&lt; std::endl;</span><br><span class="line">    std::wstring wstr = <span class="string">L"你能输出中文？"</span>;</span><br><span class="line">    std::wcout &lt;&lt; wstr &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<blockquote>
<p>你好</p>
<p>你能输出中文？</p>
</blockquote>
<hr>



]]></content>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>构造函数析构函数中能不能使用虚函数</title>
    <url>/2020/02/07/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%E4%B8%AD%E8%83%BD%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8%E8%99%9A%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<p>面试时有一个经典问题是 “在构造函数和析构函数中能否调用虚函数”，准备面试时，我还没有系统学习 C++，故而硬背的答案：不能。记得腾讯技术终面的时候面试官也问了我这个问题，我较为熟练地说出了自己的答案，如在构造函数中能否使用的回答大致为：</p>
<blockquote>
<p>不能。我想从两个方面来回答这个问题。首先一个对象的虚函数表是在其构造过程中生成，构造过程中还没有完全生成好，在这个角度看在构造函数中调用虚函数是不合理的。第二，构造过程中，编译器按照从基类到派生类的顺序依次构造，在一些阶段处于未完成状态，这时编译器会将我们的对象看做是其当前状态的类，而非目的类的当前类阶段，故不可以调用虚函数。</p>
</blockquote>
<p>现在几天在看 《C++ Primer》，打算系统地学习下 C++。在 P556 页中，刚好讲到了这个问题，读起来总有些不懂的地方，于是特意上网搜索了下，搜到了份我感觉不错的代码，在这解析下。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">A</span>() : <span class="built_in">val</span>(<span class="number">0</span>) {<span class="built_in">test</span>();}</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">		std::cout &lt;&lt; val &lt;&lt; std::endl;</span><br><span class="line">	}</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">test</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">		<span class="built_in">func</span>();</span><br><span class="line">	}</span><br><span class="line">	<span class="type">int</span> val;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span> : <span class="keyword">public</span> A</span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">	<span class="built_in">B</span>() {<span class="built_in">test</span>();}</span><br><span class="line">	<span class="function"><span class="type">void</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function">	</span>{</span><br><span class="line">		++val;</span><br><span class="line">		std::cout &lt;&lt; val &lt;&lt; std::endl;</span><br><span class="line">	}</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	A* p = <span class="keyword">new</span> B;</span><br><span class="line">	p-&gt;<span class="built_in">test</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>自己运行了下，其结果为</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></tbody></table></figure>

<p>解析下程序，我们首先看到在 <code>A</code>、<code>B</code> 两类的构造函数中都调用了非虚函数 <code>test()</code>， 而 <code>test()</code> 函数功能则是调用虚函数 <code>func()</code>， 在 <code>A</code>、<code>B</code> 两类中都定义了自己的 <code>func</code> 函数， <code>A</code> 的 <code>func</code> 直接输出 <code>val</code>， 而 <code>B</code> 的 <code>func</code> 则先自增 <code>val</code> ， 而后输出。</p>
<p>在 <code> main</code> 函数中，<code>A* p = new B</code> 构造了一个类 <code>B</code> 的对象，而将其赋给基类 <code>A</code> 的指针。在构造 <code>B</code> 的对象时，我们依次调用了 <code>A</code> 的构造函数和 <code>B</code> 的构造函数。<code>A</code> 的构造函数向 <code>val</code> 赋值为 0，并输出它，这是结果中输出 0 的缘由。在 B 的构造函数中，我们调用 <code>this-&gt;test()</code> ， <code>test()</code> 函数又调用了 <code>this-&gt;func()</code>，故调用了类 <code>B</code> 版本的 <code>func()</code> 函数，这是结果中 1 的来源。</p>
<p><code>main</code> 函数中 <code>p-&gt;test()</code> 语句，由于 <code>test()</code> 为非虚函数，故静态绑定到了类 <code>A</code> 的 <code>test()</code> 函数，<code>test()</code> 函数调用 <code>this-&gt;func()</code> 即 <code>p-&gt;func()</code>，为动态绑定，故绑定到类 <code>B</code> 的 <code>func()</code> 函数，故输出 2。</p>
<p>如此看来，在构造函数、析构函数中调用虚函数是有规律可循的，但较易出错。假若我们要使用时，一定要理解其中机制，合理谨慎设计。如果让我再回答这个问题，我较倾向回答为谨慎使用、尽量不使用。</p>
]]></content>
      <tags>
        <tag>C++</tag>
        <tag>面经</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo NexT 主题古诗文排版设计</title>
    <url>/2020/01/31/Hexo-NexT%E4%B8%BB%E9%A2%98%E5%8F%A4%E8%AF%97%E6%96%87%E6%8E%92%E7%89%88%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<p>一月初的时候在一个博客中看到了很漂亮的诗词排版，于是不会啥前端排版的我想要在自己博客中复现他。当时刚好是期末考试周，连复习的心情都么得了，狗头。</p>
<p>大概费了一上午的时间，终于算是实现了这个功能。当时实现好就去复习了，没有记录实现过程，今天补录下。由于刚才为了解决 Chrome 卡顿的问题删除了 Chrome 历史记录，所以这里不能提供我看到该排版的博客链接了，表示遗憾与感谢。<span id="more"></span></p>
<p><a href="http://zhiyi.live/2020/01/02/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%8F%A4%E8%AF%97%E6%8E%92%E7%89%88%E6%B5%8B%E8%AF%95/">排版展示页面</a></p>
<p>想要在 NexT 主题中增添我们想要的样式，则我们应在 <code>Blog\themes\next\source\css\_custom\custom.styl</code> 文件中增添 CSS 样式代码。</p>
<p>代码如下，很多都是我复制的源博客的样式代码。</p>
<figure class="highlight css"><table><tbody><tr><td class="code"><pre><span class="line"><span class="selector-tag">blockquote</span><span class="selector-class">.song</span> </span><br><span class="line">{</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#404040</span>;</span><br><span class="line">            -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span><br><span class="line">            <span class="attribute">font-feature-settings</span>: <span class="string">"liga"</span><span class="number">1</span>, <span class="string">"pnum"</span><span class="number">1</span>, <span class="string">"kern"</span><span class="number">1</span>;</span><br><span class="line">            <span class="attribute">text-rendering</span>: optimizeLegibility;</span><br><span class="line">            <span class="attribute">text-size-adjust</span>: <span class="number">100%</span>;</span><br><span class="line">            <span class="attribute">font-family</span>: Optima-Regular, <span class="string">"Source Han Serif SC"</span>, Manuale, <span class="string">"Consolas"</span>, <span class="string">"Noto Serif CJK SC"</span>, STFangsong, FangSong, FangSong_GB2312, <span class="string">"Songti SC"</span>, STSong, serif, PingFangSC-Light, PingFangTC-Light, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol <span class="meta">!important</span>;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">100%</span> <span class="meta">!important</span>;</span><br><span class="line">            <span class="attribute">overflow-wrap</span>: break-word;</span><br><span class="line">            <span class="attribute">word-break</span>: keep-all;</span><br><span class="line">            <span class="attribute">line-height</span>: <span class="number">1.778</span>;</span><br><span class="line">            <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">            <span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">            <span class="attribute">margin-left</span>: auto;</span><br><span class="line">            <span class="attribute">margin-right</span>: auto;</span><br><span class="line">            <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">            <span class="attribute">margin-top</span>: <span class="number">1.35em</span>;</span><br><span class="line">            <span class="attribute">margin-bottom</span>: <span class="number">1.35em</span>;</span><br><span class="line">            <span class="attribute">background</span>: <span class="number">#fafafd</span>;</span><br><span class="line">            <span class="attribute">padding-top</span>: <span class="number">16px</span>;</span><br><span class="line">            <span class="attribute">border-left</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">display</span>: flex;</span><br><span class="line">            <span class="attribute">justify-content</span>: flex-end;</span><br><span class="line">            <span class="attribute">padding-bottom</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">border-left</span>: solid <span class="number">3px</span> <span class="number">#5f6867</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-class">.song</span> <span class="selector-tag">p</span> {</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">overflow-wrap</span>: break-word;</span><br><span class="line">    <span class="attribute">word-break</span>: break-word;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: auto;</span><br><span class="line">    <span class="attribute">margin-right</span>: auto;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#888</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: start;</span><br><span class="line">    <span class="attribute">writing-mode</span>: vertical-rl;</span><br><span class="line">    -webkit-<span class="attribute">writing-mode</span>: vertical-rl;</span><br><span class="line">    -moz-<span class="attribute">writing-mode</span>: vertical-rl;</span><br><span class="line">    -o-<span class="attribute">writing-mode</span>: vertical-rl;</span><br><span class="line">    -ms-<span class="attribute">writing-mode</span>: tb-rl;</span><br><span class="line">    _writing-mode: tb-rl;</span><br><span class="line">    <span class="attribute">min-height</span>: <span class="number">380px</span>;</span><br><span class="line">    <span class="attribute">height</span>: auto;</span><br><span class="line">    <span class="attribute">overflow</span>: auto;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 古诗文标题 */</span></span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-class">.song</span> tt {</span><br><span class="line">    <span class="attribute">font-family</span>: Optima-Regular, <span class="string">"Source Han Serif SC"</span>, Manuale, <span class="string">"Consolas"</span>, <span class="string">"Noto Serif CJK SC"</span>, STFangsong, FangSong, FangSong_GB2312, <span class="string">"Songti SC"</span>, STSong, serif, PingFangSC-Light, PingFangTC-Light, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">24px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">0.5em</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">0.5em</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">0.2em</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">450</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#404040</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#404040</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 作者 */</span></span><br><span class="line"><span class="selector-tag">blockquote</span><span class="selector-class">.song</span> at {</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#919191</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">4em</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">1.5em</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 滚动条 */</span></span><br><span class="line">::-webkit-scrollbar-track {</span><br><span class="line">    -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F5F5F5</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar {</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#F5F5F5</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">::-webkit-scrollbar-thumb {</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#404040</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>当我们想使用该样式时， 我们可以在 Markdown 文件中写如下 HTML 代码。</p>
<p>即我们设置了一个 class 为  <code>song</code> 的 <code>blockquote</code> 样式。</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span> <span class="attr">class</span>=<span class="string">"song"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tt</span>&gt;</span>听颖师弹琴<span class="tag">&lt;/<span class="name">tt</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">at</span>&gt;</span>韩愈<span class="tag">&lt;/<span class="name">at</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>昵昵儿女语，<span class="tag">&lt;<span class="name">br</span>&gt;</span>恩怨相尔汝。<span class="tag">&lt;<span class="name">br</span>&gt;</span>划然变轩昂，<span class="tag">&lt;<span class="name">br</span>&gt;</span>勇士赴敌场。<span class="tag">&lt;<span class="name">br</span>&gt;</span>浮云柳絮无根蒂，<span class="tag">&lt;<span class="name">br</span>&gt;</span>天地阔远随飞扬。<span class="tag">&lt;<span class="name">br</span>&gt;</span>喧啾百鸟群，<span class="tag">&lt;<span class="name">br</span>&gt;</span>忽见孤凤皇。<span class="tag">&lt;<span class="name">br</span>&gt;</span>跻攀分寸不可上，<span class="tag">&lt;<span class="name">br</span>&gt;</span>失势一落千丈强。<span class="tag">&lt;<span class="name">br</span>&gt;</span>嗟余有两耳，<span class="tag">&lt;<span class="name">br</span>&gt;</span>未省听丝篁。<span class="tag">&lt;<span class="name">br</span>&gt;</span>自闻颖师弹，<span class="tag">&lt;<span class="name">br</span>&gt;</span>起坐在一旁。<span class="tag">&lt;<span class="name">br</span>&gt;</span>推手遽止之，<span class="tag">&lt;<span class="name">br</span>&gt;</span>湿衣泪滂滂。<span class="tag">&lt;<span class="name">br</span>&gt;</span>颖乎尔诚能，<span class="tag">&lt;<span class="name">br</span>&gt;</span>无以冰炭置我肠！<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
        <tag>诗词</tag>
      </tags>
  </entry>
  <entry>
    <title>廿载识味</title>
    <url>/2020/01/06/%E5%BB%BF%E8%BD%BD%E8%AF%86%E5%91%B3/</url>
    <content><![CDATA[<p>我出生在农历 98 年腊月十三，阳历 99 年的 1 月 29 日。因此有很多人分不清我是 98 还是 99 的，属虎还是属兔。这两年里，谷歌、腾讯、阿里先后诞生，百度弟弟也迎着 2000 年的曙光成立。我几与它们同时出生，所以我自诩为这是我的时代。我亲见了几眼上世纪最后的昼夜，经历了一场跨千年，古往今来中降落在这个时间点，也算是幸运。想来假若我能活 102 岁，或许能看到三个世纪。<span id="more"></span></p>
<p>我出生在一个文化较为传统的家庭，而同时我对一切新鲜的事物又充满好奇，长大后所接触的互联网，又几于时代最新的东西。传统与现代，是我一向的思考，是我一直要面临的选择。所以在我的前 20 年中，新与旧一直交锋。或许新旧的不断较量构成了我底色的一部分。我一直希望能看到传统与现代能和谐融合在一起的一天，而且我能预感到这一天越来越近。</p>
<p>我所能追溯到的最早的记忆，是小时候吃龙牡壮骨颗粒，家中院子里丢着药的盒子。</p>
<p>小时候极度喜欢、依赖妈妈， 不喜欢爸爸。妈妈是一切美好的存在，而父亲则意味着不能玩游戏。</p>
<p>估计每个孩子都会玩把父亲当马骑着的游戏。小时候玩的时候，父亲说：“子将父作马”，然后让我对 “父望子成龙”，我便按着他说的对。于是每次玩的时候父亲都会说这句，我也都会这么对。但当时只是按着顺口溜或是习惯来记，并未懂其中意思。长大后尤其是离家后每每想来，都觉难忘。</p>
<p>小时家里还没有车，每次坐父亲的摩托车时，父亲总会和我对诗或是其他的一些句子，大抵就是《三字经》一类，父亲说上句，我说下句。我小时候记忆力好像很好（现在是不行了），新的东西说一两遍大抵就会记住。记忆最深的一次是傍晚偏黑的时候，从老家村口出来那条的马路上，我和父亲对到了 “勤有功，戏无益，戒之哉，宜勉励”。当然，那时候我也是不知道这是什么意思的，只当顺口溜来背。（长大后发现在人面前能说出这个好像挺装逼的。）也是在摩托上，在爸爸的口中，我知道了我国第一条自主设计的铁路是京张铁路，等等知识。前些日子学车，早上坐地铁的时候，看到一个母亲带孩子读很华美的书籍，看上去是有关宇宙、天体的应该，孩子读到了黑洞，读完后母亲给孩子又讲了黑洞的知识，我在一旁边看边觉得很欣慰。我下车时，看到孩子母亲拿了一个手提袋，袋子上印有字。我对文字很敏感，很多时候看到字就有好奇去看清文字写得是什么。目光扫过的一瞬间，我看到袋子上写的是 “先生施教，弟子是则。是谓学则。” 刚好，我下车的那一站叫作学则路，我也因此第一次知道学则路名字的来由。后面查了下，这句话出自管子的 《弟子职》，是从第一段摘取的。越长大，所受的教育越多，我越能感觉到，父母的视野格局才是孩子的起跑线。或许那句 “不要让孩子输在起跑线上” 是对的。</p>
<p>小时候最爱的一个玩具是一个翻转车。当然名字是我现在给它起的，我并不知道这个玩具叫什么名字。这个玩具车大致有正反两面，车里的人也就有两个头，一个正着露在外面，一个倒立藏在车底。车子遇到墙时，两个前轮可以爬墙立起，然后倒下来，正反互换，沿着刚才的反方向行驶。一直觉得这个设计很巧妙。</p>
<p>我第一次见火车是在郑口去大营的路上，爸爸骑摩托驮着我。当时下着雨，我爸让我从雨衣里出来，说火车来了，我一点点从雨衣中出来，长长的火车带着 “哐切哐切” 的声音就这样在雨中从一个孩子的眼里经过。我第一次见到电脑也是在二大爷的店里，当时电脑屏幕上是连连看，记忆犹新。</p>
<p>我大致从小便有了自己的思想，爱思考很多事情。比如家长教育我时，我就会思考，假若以后孩子遇到这种事情，我应该如何教育孩子，我应该向他灌输怎样的思想。长大以后，经历了许多事，也见过了一些人，愈发觉得我自己这份思想是我能称作一个独立的人的原由，愈发觉得 “独立之思想，自由之精神” 是人最重要的一件事。（这里最重要的 “最” 字并不是指绝对的最重要，说这个是最重要的同时我也可以说热爱生活是人最重要的一件事）</p>
<p>小时候更喜欢女的，而现在更喜欢男的些。小时候像贾宝玉一样，觉得 “女儿是女做的骨肉，男人是泥做的骨肉，我一见….”，而现在只觉得女生事多（漂亮姐姐除外）</p>
<p>小时候的学业还算轻松，觉得很简单就可以完成，很厌恶一直做简单而又重复的题目，后面也一直如此。小学不懂什么叫做考试紧张，感觉考试比上课好多了，不用上课坐端正听讲就能放学。后面上了初中，不像小学那么轻松，这才知道考试原来有紧张这种东西在。我一向被家里说成大考型选手，小型考试马马虎虎，成绩一般，大型考试成绩突出，不过对我来说考试好像都一样，并没有在小考上马虎，也没有在大考上仔细，结果会不一样或许是天意。不过这个大考型选手大抵是应验的，平常考试一般，期末考试会好点，小升初考了班里第二。整个初中的愿望都是能考进学校前十，但屡屡不能如愿，最后却在中考考了全校第五，县里第五十，压着分数线进了高中，一分不少，一分不多，是自己未曾想过的。（据传之前有一次月考考了第三，但成绩单未能公开，隔壁一班有一份成绩单，我们班大家都不知道。或许也是天意，假若当初公开了，我对前十的争夺心也就不会那么大了， 中考啥样就另当别论了）这个大考型选手第一次的不灵验是高考， 不过我倒没有太在意，毕竟自己的实力自己知道，所谓的大考选手也只是巧合。我一向不知道自己的成绩为什么能在前面，我也一直觉得自己有着很多不会的。尤其是初三过年的时候，一直在担心中考，觉得自己还有着太多不会的题目，考不出太好的成绩。</p>
<p>我小时候学习并不努力，大概是源于我那时的努力是高效的。我向来厌恶低效的努力，表面上看起来一直在学习，其实东西都没有进脑子，成了学习的机器，进步并不大。我觉得低效的努力是最为害人的东西，努力者还能安慰自己说努力了，而不反思自己有无办法能进步更大。忘了是谁把人按照聪明与否、努力与否分为四类并排序，顺序为聪明并努力的，聪明并不努力的，不聪明并不努力的，不聪明并努力的。走偏了路，一直努力地向前走只会偏得更多。对我而言，重要的是效率，而非是努力的时长。所以之前网上传的什么 “10 倍 工程师”，我是再相信不过的，我甚至相信 100 倍。毕竟 100 个本科的我都不可能像 Linus 一样写出 Liunx。所以我一向不怕贪玩导致挂科云云，因为只要我下定决心，我相信成绩肯定能回来。我最怕的是不能全神贯注全身心地去学习或者说工作，效率低下，但还能自欺欺人安慰自己说自己学习 / 工作了，这对我来说才是致命伤。</p>
<p>小学有很多美好的事，有次大雪，放假回家路上和小伙伴聊着仙剑四，四周空地上雪积了白茫茫一片，游戏却让我一点都不觉得冷，只觉得美。当时仙四玩到了寿阳城菱纱去客栈让我在外面等她，我等了两三个小时。最爱夏天下暴雨的时候，去街边的积雨里放上家里的牙刷底架当作小船，撩水让它向前游。小时候特爱雨天，像是一切诗意的钟情。或许是那时候不用考虑衣服湿了要洗，还有没有要更换的衣服吧。</p>
<p>很小时候觉得，儒或者佛，对应的都是彬彬有礼、儒生气质等词，但到了后来，我才知道他们不仅有菩萨低眉的一面，也有着金刚怒目，当头棒喝的一面。这也是我最近转型的方向。从初中开始，我就对士特别感兴趣，所读的文章中实在有着太多鲜活的士人形象，不得不让我对其神往。一直想好好研究下，但现在看来，应该不会有那个精力了。</p>
<p>大学时候，我发过一条说说 “好奇，热水与梦”，这三个词是我高中想到的，也说尽了我上大学的一切原因。我实在是对世间万物都充满了好奇，这也是我探索的源动力。我很容易头疼，尤其用凉水洗脸洗头时头疼的概率更大，而高中热水属于稀有资源，平日的洗脸都是凉水，当时就想，上了大学我一定用热水洗脸。梦，就更容易解释了吧，大学可以追逐梦。在当时来说，大学好像是一切美好的代名词，不对，梦想才是一切美好的代名词。现在看来，梦想也的确是。</p>
<p>可能是高中时候，我在屋子里玩着游戏，突然听到了妈妈在厨房摔倒的声音。我匆忙过去看，没啥事后妈妈牢骚爸爸在客厅看电视不动，一点都不关心。爸爸则说看儿子已经过去看了，这时候假若他也慌里慌张过去，整个家都会慌，家里需要一个稳得住的人。当时我嗤之以鼻，觉得是爸爸的借口。现在想来却醒悟爸爸是对的。如果爸爸也慌张，那整个家也就慌了。对孩子言传身教这件事，我能在我的家庭中清楚看到。</p>
<p>我一向觉得万物有灵。从小便喜欢猫猫狗狗，单是见到它们就会心生美好，觉得很快乐。我自诩有一定的慧根在，与万物相通，故我更能比常人感受到它们的快乐与痛苦，并将它们的乐与苦当做自己的乐与苦。到了现在我认识到自己能力有限时，好像又成了平常人。</p>
<p>大一时候被猫挠了下，被挠得一瞬间，我对它好像充满着怨恨。也是在恨生的那一刻，我反思自己一直以来所谓的对猫的喜爱，是发自内心的喜欢，还只是叶公好龙般的喜欢。我很多时刻都对自己保有反思。</p>
<p>现在想来，小时候养动物只不过是摸摸它们、抱抱它们，将它们当做玩具。直到养皮皮开始，我才知道，在你接过它的一刻，你们之间就建立起了一种羁绊。本来养宠物是为了自己开心，为了生活更有乐趣，而后来才发现它更需要你。宠物不再是小时候的玩具，而是家人，彼此情感相依。</p>
<p>大学里玩 《To The Moon》 的那个下午，是我人生中的美好回忆。无论是遗忘还是迷路，我们总能在月球相遇。</p>
<p>汉服一出开始流行的时候，我欣喜如狂，看到自己喜欢的文化成为自己身边的事物，这让我再兴奋不过。可很快，我几乎站到了汉服的对立面，我意识到，这可能是一次一群人们不加思考的狂欢。我又想，我生来就带几分魏晋风骨，这是我本身就有的，何必去用穿汉服修饰呢。我不穿难道我就没有了吗。</p>
<p>学车的日子里，有天早上坐地铁，看到一位先生在那边看书。先生带着黑棉帽，大框眼镜，蓄着学者样的胡子，眼睛一直盯着书本，赫然与周围的人有着不同的气质，与他们比起来多了些端庄安详以及身处尘世的安逸，如同结庐在人境，而无车马喧。对这种人我向来有着好感，想同他聊几句，可又生怕打扰人家读书。在地铁上与先生遇到了三次，每次都是这种姿态。</p>
<p>大三软件实验周，自己摸鱼直接用自己博客当了题目。给某老师演示介绍功能，说到基于 git 的时候，老师不是很喜欢这种发表编辑方式，直接说 “我对 git 不了解”。虽然我也的确是滑水摸鱼，但还是很震惊，一个高校老师居然能脸不红心不跳毫无愧疚地说出这句话。我对这个大学的失望又多了一分。</p>
<p>练习 ACM 时，陈志老师曾说：” 没有天花板 “。</p>
<p>前些天和家里视频，说到放寒假。问起考试卷子成绩的事，就说：“现在考完试不发卷子，考完就放假了。”，家里说：“不跟原来要写在家注意安全那些东西了吗”。突然想起，小学时候放寒暑假时是要写安全公约的，写安全公约对我们来说是很有仪式感的事情，它象征着一直期待的长假即将到来。而现在的放假实在太随便，不再有当时期待的感觉。</p>
<p>人总是在大部分时间内迷茫不前，在少数几个时间点快速成长。忘了在哪里看到的一句话，大意 “男人最有可能改变自己的三个时间点：父亲教育，结婚，生女儿的一刻”。</p>
<p>也是忘了在哪看到的，可能是弗洛依德心理学？男孩与父亲的关系很微妙。男孩向来有挑战权威的天性，而在小时男孩心里，父亲就是权威。而等到男孩挑战成功，迈过父亲这座山后回望，才知这座山的伟岸。这代表着一个男孩的成人。我能感觉到，在大学中，我迈过了父亲这座山。</p>
<p>QQ 时代，妈妈很少发动态，现在看妈妈所发的动态，都是我的成绩。 “儿子学校又发喜报，这次全校 50 名”，“儿子这次考了年级 12 名”，“儿子在高二上学期质检考试成绩全校第八名，儿子好样的”。只是让妈妈失望的是，第 8 名之后再也没有了。</p>
<p>优秀是具有惯性的。因为我小学时成绩比较好，因而升初中后也便要求自己成绩继续好。后面到了高中、大学也依然这样。不过到了大学对优秀的定义不再是成绩好了，而变成了别的。这让我意识到优秀是具有惯性的。如果你一开始优秀，后面的优秀或许并不难。而我要做的就是在一开始磨炼自己，臻于优秀。</p>
<p>我把学习分为两种，一种是吃重苦一阵子，后面甜一点；一种则是一直轻苦。很多东西都是一开始很难，让你崩溃到想放弃，但当你熬过时，它回报你以甜。比如 Vim，比如 C++。生活或许也如此，但好像很多人都选择了一直苦。</p>
<p>小时候听闻圣诞节是外国的节日，想着外国节日我过它干嘛，彼时国内人们狂欢般过着圣诞节。等后来有了文化自信后，觉得过过圣诞节也不错，此时某些机构下令禁止过圣诞节。有次在 B 站看一个外国人讲如何挺直腰时，谈到了中国人用筷子，夹菜吃的时候自然的弯腰，弹幕就开始了，“你难道不知道端着碗吃吗” 云云。我开始思考文化自信是什么，我们所坚持的用筷子吃饭就像我们想都不想所回答的那么好吗，我一向无脑吹捧的筷子会不会的确存在这个外国人所说的问题。我觉得假如一个民族有文化自信，那它必能够承认自己文化中存在的糟粕，能够开放包容地接受外来文化。</p>
<p>老家的村中有块影壁，上面画的大概就是农村风光吧，清流庄稼，农场奶牛。听二大爷说她孙女描述这块影壁，说 “上面的奶牛在跳舞”。听到这件事后，我特意去看了下。在大人眼里，这个奶牛画的实在差极，歪七扭八，不像样子，然而在孩童眼里，它却是在跳舞，而我从一开始就没注意过这个奶牛。所以我不禁思想，我们从孩子逐渐成为大人，这过程中我们丢掉了些什么。</p>
<p>过年父亲写了春联，大爷家的孙女说：” 三爷爷写得跟真的一样。“，听到的瞬间我有点诧异，孩子们已经把买的、印刷出来的春联当成了真的，而我眼中的那有灵魂的手写的春联在他们眼里只是像真的。</p>
<p>家里一个亲戚的孩子从小就是坐车。第一次坐摩托时问 “坐这个不会掉下去吗？”</p>
<p>我玩游戏是从像素风过来的，逐渐到了现在的 3D 建模，还没有接触过 VR。我想，我们一代人应该对像素风都特别热爱，它代表了我们的童年。但我不知道后面的孩子还会喜欢像素风吗，对像素风还有感觉们。他们是新时代的生人，一出生可能就是 3D，他们后面会不会就已经是全息投影游戏了呢，到那时 3D 风对于他们是不是就和像素风对于我们一样呢。</p>
<p>遇到事情，有的人会说话能表达，哄人开心；而有的人表面无言，内心却荡起波漾，暗下决心。我应该属于后者，希望大家能理解我。</p>
<p>有次练车的早上，我在学则路买吃的，路途中看到老年乞者，男子在寒风中前后摇动，而他老伴却在被中，棉巾盖住眼睛，几乎不动，前面摆着它们的境遇。一向对文字敏感的我却不忍心去看，恍惚中只看到脑蠹虫三个字。看到他们起我就鼻头一酸，眼眶几于败给寒风。买早餐时我搜尽全身，只找出两个硬币，问老板能不能支付宝换现金被拒绝，回去的程中故意蹲身轻轻放入他们的罐中，却仍发生了声响，听着男子连忙的道谢，我低头继续走着。心里默念着” 天南地北双飞燕，老翅几番寒暑 “。这段经历也是我写这篇文章的原因，那一刻标题就定在了心中：《廿载识味》。晚上回到家，我找出零钱包，翻出了一些钱放在兜里，想着明天遇到给他们。可第二天买早餐时，他们却不在那边了，心里突然多了份坦然，不像昨天遇到他们时那样难受。然而又一想，难道我眼睛看不见，这世界就会少一份不美好吗。兀地感受到正视不美好正视问题才是解决问题的开始。</p>
<p>第三天我又遇到了他们，更加注意小声地将之前备好的钱放入罐子中。或许意识到我们缘分已尽，心中多了份坦然。再后面，果然就再也没有遇到他们。想起之前在微信朋友圈发的 ” 就好像在连绵的阴雨之间让我们看见一道精灿的彩虹升起，不知道阴雨中有彩虹的人就不会有随喜的心情，因为我们知道有彩虹，所以我们布施时应怀着感恩，不应稍有轻慢 “。</p>
<p>和女朋友逛新街口时，14 号口前有一段很长的路，两边布满了商家。我们逛时，一家门面站满了人，排队等着买。而对面一家却像是门可罗雀，我瞥见了柜台里站着的人的眼神，三分羡慕，两分嫉妒，几分面对生活的不甘。</p>
<p>下楼时，恰好遇到有外卖员送东西给楼下。外卖员气喘嘘嘘，重重地喘着气，我看了看送的东西：一大布袋农夫山泉和一些生活日用品。</p>
<p>去学校东门取快递时，看到有女生穿着短裙光腿神器一派诱惑，与此同时，又看到外卖骑手穿着厚重的冲锋衣，没带手套的手冻得红紫。</p>
<p>前天考试，我去教学楼那边恰好遇到了一位母亲在行政楼中哭泣。我在外面，那位母亲在楼里面，光听声音我都能感受到心碎。知道整件事情后，我想，以后无论遇到什么坎坷，都要好好活下去。每一个听到这位母亲哭泣声音的人应该都会这么想。逝者安息。对学校因爱生恨。</p>
<p>我和很多陌生人像是有着默契，我们的目光总会在某个时刻相遇。</p>
]]></content>
      <tags>
        <tag>杂记</tag>
      </tags>
  </entry>
  <entry>
    <title>博客文章古诗排版测试</title>
    <url>/2020/01/02/%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E5%8F%A4%E8%AF%97%E6%8E%92%E7%89%88%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<blockquote class="song">
<p>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<tt>听颖师弹琴</tt><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<at>韩愈</at><br>昵昵儿女语，<br>恩怨相尔汝。<br>划然变轩昂，<br>勇士赴敌场。<br>浮云柳絮无根蒂，<br>天地阔远随飞扬。<br>喧啾百鸟群，<br>忽见孤凤皇。<br>跻攀分寸不可上，<br>失势一落千丈强。<br>嗟余有两耳，<br>未省听丝篁。<br>自闻颖师弹，<br>起坐在一旁。<br>推手遽止之，<br>湿衣泪滂滂。<br>颖乎尔诚能，<br>无以冰炭置我肠！<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
</blockquote>

<blockquote class="song">
<p>
<tt>月赋</tt><br>
<at>谢庄</at><br>
陳王初喪應劉，端憂多暇。綠苔生閣，芳塵凝榭。悄焉疚懷，不怡中夜。迺清蘭路，肅桂苑。騰吹寒山，弭蓋秋阪。臨濬壑而怨遙，登崇岫而傷遠。於時斜漢左界，北陸南躔。白露曖空，素月流天。沈吟齊章，殷勤陳篇。抽毫進牘，以命仲宣。<br><br>
仲宣跪而稱曰：臣東鄙幽介，長自丘樊，昧道懵學，孤奉明恩。臣聞沈潛既義，高明既經。日以陽德，月以陰靈。擅扶光於東沼，嗣若英於西冥。引玄兔於帝臺，集素娥於後庭。朒朓警闕，朏魄示沖。順辰通燭，從星澤風。增華台室，揚采軒宮。委照而吳業昌，淪精而漢道融。<br><br>
若夫氣霽地表，雲斂天末。洞庭始波，木葉微脫。菊散芳於山椒，鴈流哀於江瀨。升清質之悠悠，降澄輝之藹藹。列宿掩縟，長河韜映。柔祇雪凝，圓靈水鏡。連觀霜縞，周除冰淨。君王迺猒晨懽，樂宵宴。收妙舞，弛清縣。去燭房，即月殿。芳酒登，鳴琴薦。<br><br>
若迺涼夜自淒，風篁成韻。親懿莫從，羇孤遞進。聆皋禽之夕聞，聽朔管之秋引。於是絃桐練響，音容選和。徘徊房露，惆悵陽阿。聲林虛籟，淪池滅波。情紆軫其何託，愬皓月而長歌。<br><br>
歌曰：美人邁兮音塵闕，隔千里兮共明月。臨風歎兮將焉歇，川路長兮不可越。歌響未終，餘景就畢。滿堂變容，迴遑如失。又稱歌曰：月既沒兮露欲晞，歲方晏兮無與歸。佳期可以還，微霜霑人衣！<br><br>
陳王曰：「善。」迺命執事，獻壽羞璧。敬佩玉音，復之無斁。<br>
</p>
</blockquote>]]></content>
      <tags>
        <tag>诗词</tag>
      </tags>
  </entry>
  <entry>
    <title>2019-2020</title>
    <url>/2019/12/30/2019-2020/</url>
    <content><![CDATA[<p>2019 年伴随着不开心的事情到来，元旦的时候整个人都有些崩溃。 我又是有点迷信的人，觉得一件事的开端闹心那么后面也不会太好，觉得 2019 对我不太友好。幸好我是个乐天派，想到这些的时候我干脆不信这迷信就好了。毕竟在我们所认知的范围内时间是连续的，新年不过是人为主观地划分，这样一想心情算是舒慰了些。</p>
<p>每次展望前面要经历一段时间的时候总会觉得很漫长，而事后却觉得白驹过隙。仔细回想起来整个 2019 我也没做什么事，除去春招秋招外，大部分时间碌碌而过。总是在时间将逝的时候才倍加珍惜时间，回过头来感叹实在是浪费了太多的大好时光。不禁想起那句 “子在川上曰：‘逝者如斯夫，不舍昼夜’”。越来越觉得告别学生身份的时刻将近，尤其是在大我们一届学长拍照、收拾行装、毕业离开校园，告别学长们后，这种感觉日日加深，几乎没怎么过过大学生活的我突然很留念大学生活，想拼命地抓住它的尾巴。<span id="more"></span></p>
<p>从去年 12 月开始准备 Google 的实习面试，到 3 月 8 号面试，期间三个月，虽说是准备面试，但实际上有着期末、给家里做 app 等等事情，真正地刷算法题时间好像并不多。面试一轮游，现在回想起来第二题的代码写得跟屎一样。面试完的第三天收到了感谢信，也只是有些许的难过，毕竟如果我都能面试通过的话，那么那些优秀且努力的人实在没地方说理去。面试结束后开始准备春招已经有些晚了，于是整个 3 月有点加班加点地补了下 C++、Linux 知识，抄了个服务器的项目，熬夜敲代码时候安慰自己像逆袭的主角。3 月末的时候开始投简历，虽说是海投，但其实也就投了那么几家。我实在是个单线程生物，<strong>如果你只给我一个目标，就算难些也好，没准我能很好地完成； 但如果你给我很多事情，简单而琐碎，那我 100% 必爆炸</strong>。心知自己这点，我一直走的专注的路线。春招也是如此，目标就是大厂，别的不予考虑，不然投那么多份搞得我心烦爆炸。当初为了面 Google 不去准备其他公司也是这个原因。当时我还是有些傲气的，就保持自己的简约的简历，不走网上的套路。简历上就写个会 C、C++，了解数据结构算法，有 ACM 经历，有个项目，别的几乎就没啥了，不想搞那些花里胡哨瞎 BB 没用的的，大概是傲气以及实力让我如此自负吧。春招踩了很多坑，阿里腾讯两家走的并不是很顺利，我将原因一厢情愿地划为非技术因素。没有 offer 的日子还是挺难熬的，一直提心吊胆的，心里面不知道有着多少轮的想象。一些事情或许人是有直觉的，4.27 号夜里，我看着往年 4.28 我都很幸运，冥冥之中觉得明天就会有结果了。28 号的时候一度有些怀疑与忐忑，但在傍晚收到了华为的 offer，算是人生第一个 offer 吧，当时也蛮欣喜的，带着皮皮在小区里开心地笑和跳，时光做的晚饭也香了许多。后面课上又收到了海康的 offer call，没想到我 cmh 也有让 HR 说” 希望你秋招的时候也能考虑下我们公司 “ 的一天。</p>
<p>或许是 3 月份的熬夜不规律作息，也或许是面试前的过度焦虑，春招结束后身体出了问题，一段时间里吃完过几分钟就会呕吐，那时候对吃饭特别恐惧，一到要吃饭的点就担心焦虑。我一点点去克制自己焦虑的想法，后面过了段时间逐渐好了起来，但一焦虑就是呕吐的毛病一直跟到了现在。</p>
<p>5 月份的时候打了场湘潭邀请赛，当时坐车去的时候感觉已经有了拿银牌的实力，所以十分期待，高铁途经汨罗的时候吟诵着 ” 长恨复长恨，裁作短歌行。何人为我楚舞，听我楚狂声？余既滋兰九畹，又树蕙之百畮，秋菊更餐英。门外沧浪水，可以濯吾缨。“，像是志在必得。结局大家都知道，我们队依然保持着 100% 获奖， 100% 得铜的记录。只是这次真的很可惜，我们队是铜牌第二名，只要再注意一点我们就能拿银了。想来我也没什么抱怨的，也没有怨天尤人的资格，毕竟我一直都是划水嘴炮选手，如果我都能拿银，那么那些比我努力不知多少倍的选手去哪说理去。湘潭很有可能就是我最后一次比赛了，过后很后悔自己没有 100% 地投入其中，天天摸鱼偷鸡，不好好训练，几年下来刷得题目可能都不到 300 道。我很幸运遇到了大佬队友，又感觉没有好好训练很对不起他们。那段可乐开心果的经历是我大学一段最美好的经历。我的 ACM 差不多结束了，经历了许多也学会了很多，虽然没能取得很好的成绩，很感谢 ACM 给我提供了一个能和众大学里精英同台较量的平台，这段经历会成为我底色的一部分。秋招面试时和面试官聊天聊到了 ACM，我说”ACM 给了我一种自信，就算是这么难的东西我都接触过学习过，后面再遇到难的东西也就不怕了 “。一个男人的自信有时或许并不来自他已有的那些荣誉，而是他身上的伤痕，所经历的苦难。（ACM 经历在大厂面试中还是很被看重的，假若没有 ACM，我可能连投大厂的勇气都没有）总之我的 ACM 还算顺利，也稍带遗憾。</p>
<p>后面浑浑噩噩混到了暑期实习，一开始还算新鲜，双屏显示器的确蛮爽的，能接触接触新东西，楼下有几只尺玉霄飞练。但后面一点点产生了厌倦，后面我发现我自己实在是对这公司提不起兴趣，待在一个我天天黑的公司里着实有点难耐。但实习期间也没有太多的准备秋招，所以八月中下旬一直在纠结自己的去留问题。后来下定决心，闯一闯，没准成功了呢。不试的话肯定得不到，试的话就算失败自己也没损失什么，自己就抱着这种心态闯入了秋招。不算实习内容的话，在华为的日子还算舒坦，天天带薪吃饭、撸猫，双屏显示器写算法题，一起和女朋友下班回家，晚上八点后过来领个夜宵。如果你不想待在某家公司实在有着太多的借口，代码看得我闹心，臃肿、不统一性挑战耐心，<code> while(T--)</code>  能解决的事有人偏要写 <code>while(--T &gt;= 0)</code>，十几年的老员工分不清加密与哈希、把 Base64 编码当成加密。想来这些种种黑的原因只是我不喜欢这家公司，如果喜欢好像一切都可以接受。虽然不喜欢这家公司，但我真的很喜欢工作室里的前辈，他们对我都很温和，实习期间给导师找了很多事做很是不好意思。</p>
<p>后面就到了秋招的阶段，在华为实习的时候我就开始了一些电话面试。当时并没有好好地复习准备，被腾讯面试官爆捶，后面面试多了，准备也一点点上来才变好些。我一直觉得自己挺幸运的，前面腾讯的面试并没有通过，后面被 ieg 捞了起来。假若没有 ieg 的打捞，我可能真的前途未卜。秋招的时候不像春招那么狂傲，有了一些对前途的担忧，于是修了下简历，把 ” 熟悉了解数据结构算法 “改成了” 熟悉栈、队列、树、图等常用数据结构，理解主席树、红黑树、单调栈等较高级数据结构 “如此等等。不得不说这种列举的方法挺有效的，感觉比春招更入面试官眼吧，只不过自己觉得这样改很违自己的性格。</p>
<p>秋招现在说来云淡风清，但当时的确挺难熬的吧，也犯了很多傻逼的错误，如字节跳动犯傻死在了二面上，不过这也算成长的一部分。一路疯狂地补习知识，以及频繁面试应该是大多秋招之人都经历过的，我也便不再多提。只记得字节挂掉后失望地就睡了，梦里是去字节实招的场景。醒来是 LPL 夏季半决， RNG 打 TES， RNG 拿到了去往世界赛，一下觉得字节挂掉也没那么糟。后面自己过了腾讯 ieg 的前两次面试，去往深圳来现场面试。有意无意，我的心里总泛出两句诗，一首是李贺的 ” 何当金络脑，快走踏清秋 “，一首是太祖的” 今日长缨在手，何时缚住苍龙 “。坐往深圳时候上午看了些 C++ 的书籍，那一天刚好是 LPL 夏决，RNG 败给了 FPX，那时我觉得，我和 RNG 是互补的，这一次命运站在了我这边。现场面的时候面试官问到的问题刚好是我在高铁上新学到的，很是幸运。</p>
<p>后面又陆陆续续笔试面试了几家公司，感觉最好的是地平线。后面又进入了等待结果的煎熬时刻，那段时候我一直守着手机，生怕错过电话，假若上厕所时突然发现没带着手机就会感觉很心慌，接面试电话时害怕腾讯的电话打过来撞车。失眠，有时睡着半夜也会醒来，看眼手机有没有漏掉电话，焦虑如此。好在是腾讯提前批还算迅速，在国庆前就得到了 offer，虽然有些小插曲，但悬在心中的石头总算落地，可以休息一段时间。</p>
<p>从小到大，我的历程好像还算是一帆风顺，没有经历什么大磨难大挫折，这让我很担忧，感觉自己现在所得的超过了自己的实力，德不配位，必有灾殃，所以自己一直都很警惕吧。磨难挫折要趁早，否则吃大亏，这个道理我向来深信不疑。实在遇到了太多优秀的人，所以更加知道努力的重要性。</p>
<p>秋招结束后到现在三个月时间，应该能学蛮多东西的，但一直浑浑噩噩，学习寥寥，好像并没有学习很多东西，回头看来这种浪费时间的愧疚感愈愈在心。再回头看，整个大学三年多在技术上好像也没有太大的提升，远远低于了自己高考完后的预期。时间于每个人的价值是不一样的，有的人时间很廉价，有些人时间很昂贵，大学将毕业，我意识到时间的富贵。毕了业，应该不会再有大把的时间系统地去学习了。</p>
<p>这一年来，我好像沾染了太多的网络戾气。从一开始的性格平和逐渐暴躁，化身网络喷子，一眼看不惯就开喷，从一开始看到网络傻逼心里默默笑一句变成了果断和他对线，打游戏也是从一开始” 我的 “变成了一局五句话。自己的直男人格也是点满且不再掩饰，对绝对的智慧、力量狂舔，对表面装出的强者不屑一顾。从小一直相信” 能力至上 “，开始喜欢 Linus 那张臭嘴，不过暂时我还不想对待能力至上的信仰。乔布斯那样的暴君特性也开始一点点显现。一段时间我开始反思自己的蠢和坏，” 对一些事情不能分辨好坏真假就是蠢，知道是坏的假的还去相信去传播就是坏 “，2019 年也算是多事之秋，有时候自己明知道应该要去仔细分辨真假，却还是愿意不顾真相地按着自己所想的往坏里去揣夺一些事件，去推波助澜，不知道是蠢是坏。不带评论的观察是人类智慧的最高形式，自己还是太暴躁。在学习同时具有 ” 菩萨低眉 “ 与 ” 金刚怒目 “ 两面时候走歪了些，不再是那个当初追求温润如玉的自己了。可能吃辣真的会让人变火爆吧。</p>
<p>再说说 2020 年的 flag 吧。希望自己的拖延症有些改善，虽然这个希望已经五六年了。希望自己能放宽心，少些焦虑，不要再有什么事情就让自己痛苦难捱。希望自己不再暴躁，希望自己不再蠢与坏，整个人能深邃些。希望自己能多注意身体，精神头能好一些。自己在技术上深挖，好好学 C++， Linux，Git 和网络，在腾讯能够多努力多学习。</p>
<p>其实还是有些成长的吧，就像以往会固执地将这篇文章留到 12.31 发，而今年因为要和国学社的小伙伴跨年，觉得今天发关系也不大。</p>
<p>2020， 要变优秀。</p>
]]></content>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>Typora Ash 主题 html 编辑框背景优化</title>
    <url>/2019/12/24/Typora-Ash-%E4%B8%BB%E9%A2%98-html%E7%BC%96%E8%BE%91%E6%A1%86%E8%83%8C%E6%99%AF%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p><code>Typora</code> 的 <code>Ash</code> 主题实在是太爽了，但唯一一点美中不足就是我们在 md 中编写 html 格式时， html 编辑框的背景颜色和文字颜色几乎一样，看起来十分的晃眼，带来了不便。</p>
<p>要解决这个问题，我们在 <code>ash.css</code> 文件的 <code>:root</code> 下增加一行格式即好。</p>
<figure class="highlight css"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">--rawblock-edit-panel-bd</span>: <span class="number">#555</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>因为 <code>Ash</code> 主题的背景为 <span style="color:#666;">#666</span>，于是我选择了<span style="color:#555;"> #555</span> 与它搭配。</p>
]]></content>
      <tags>
        <tag>Typora</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title>安利 | 改变我工作方式的软件 ——Wox</title>
    <url>/2019/12/08/%E5%AE%89%E5%88%A9-%E6%94%B9%E5%8F%98%E6%88%91%E5%B7%A5%E4%BD%9C%E6%96%B9%E5%BC%8F%E7%9A%84%E8%BD%AF%E4%BB%B6%E2%80%94%E2%80%94Wox/</url>
    <content><![CDATA[<p>不知道大家会不会被自己电脑桌面排列杂乱的图标给气到，作为强迫症的我在之前每次看到自己乱糟糟的桌面时就会感觉很别扭。后面就特意在桌面设了个文件夹，加图标放到里面，但这样桌面虽然整洁了点，但打开软件时就要点开文件夹，很麻烦。直到后来在大一下的时候遇到了 <code>Wox</code>，这个问题才得到了解决。<code> Wox</code> 真的是解救我的一款软件，在解决桌面问题的同时它也意外地带来了意外惊喜 —— 改变了我使用电脑的工作方式。首先先秀一下我的桌面吧。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/38AqedS17xX7.png" alt="mark"></p>
<span id="more"></span>有没有被惊到，哈哈，上面一点东西都没有。就只有一张壁纸。这样子对于有整洁癖的我来说真的是福音！(去掉图标可以借助右键桌面 -&gt; 显示 -&gt; 显示桌面图标， 去掉任务栏则可以右击任务栏在里面解除)

<p>下面说下 <code>Wox</code> 的功能：</p>
<ol>
<li><p>文件搜索（建议搭配 <code>everything</code> 使用）</p>
<p>使用 <code>Wox</code> ，你可以轻松地找到你想找的资料或要打开的软件，只需要按下你设置的呼出 <code>Wox</code> 的热键（我设置的热键为 <code>alt + space</code> ），输入你想找的东西就好，还可以使用缩写，十分方便。这个功能建议搭配软件 <code>everything</code> 使用，<code>everything</code> 目前已经被很多少人各种吹了，在这我就不详细介绍了，记得我当年使用的时候还算是一个小众软件。<code>Wox</code> 内载有搭配 <code>everything</code> 的插件，使用起来也十分方便。下面展示一下我使用 <code>Wox</code> 打开文件或软件时候的情况。</p>
<ul>
<li>作为码农， 打开 <code>VS Code</code> 是经常的事，在 <code>Wox</code> 中我只要输入 <code>vsc</code>，敲击回车就好。效果如图：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/bBVSrTioX2ff.png" alt="mark"></li>
<li>再比如打开网易云：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/TKMUQqxNLSOz.png" alt="mark"></li>
<li>打开 G 盘：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/juRPcEoFFNlF.png" alt="mark">别问为啥这次不抓全屏，因为 <code>Wox</code> 搜索结果里出现了你们不该看到的东西 。</li>
<li>打开我常敲代码的文件夹：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/hf1v8d9dLqWp.png" alt="mark">（这次不是！）</li>
<li>它还支持正则表达式（不知道是 <code>Wox</code> 本身支持还是要代肋 <code>everything</code>）<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/NDyYOrmrXwc6.png" alt="mark"></li>
</ul>
<p>总之呢，你想打开的文件在这里面几乎都可以找到，而且它应该也会根据你的使用频率做下排序（我常用的它都排在第一，感觉应该有这个功能）。如果你想要将搜索条目置顶的话可以右击条目，有<strong>置顶</strong>以及<strong>打开文件所在文件夹</strong>。</p>
</li>
<li><p>使用 <code>Wox</code> 进行搜索</p>
</li>
</ol>
<p>   如果我们想用浏览器搜索东西时，一般都需要打开浏览器，打开搜索引擎或者在地址栏里输入想搜索的内容。使用 <code>Wox</code> 可以轻松做到，而且可以根据自身定制。比如我想用百度搜索 “PHP 是不是最好的编程语言”：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/UyeV1I9WBfg6.jpg" alt="mark"></p>
<p>   如果我想使用谷歌搜索 “Boost” 的话：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/V5wDEnevSR6M.png" alt="mark"></p>
<p>   当然，你也可以直接输入网址来打开：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/OeOslPYGx3kx.png" alt="mark"></p>
<p>   上图的 <code>bd</code>， <code>g</code> 都可以自己来设置为自己喜欢的命令缩写，你也可以根据网页的 url 来特制自己的打开网页快速方式。比如我之前会在 <code>HDOJ</code> 上刷题，于是我就会用 <code>Wox</code> 来打开 <code>HDOJ</code> 上的题目。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/hLOosOsqp67y.png" alt="mark"></p>
<p>   在 <code>Wox</code> 软件中可以设置我们的命令：</p>
<p>   <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/GdqCHjaeVIF7.png" alt="mark"></p>
<ol start="3">
<li><p>翻译</p>
<p>在 Wox 的插件中有一个有道翻译，通过这个软件我们可以快速地查询英语单词翻译：（该功能应该需要联网）<img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20191208181645044.png" alt="image-20191208181645044"></p>
<p>也可以汉译英哦～其他语言没太试过。</p>
</li>
<li><p>一些其他的功能</p>
<p><code>Wox</code> 中有很多插件，为我们提供强大功能，其实上面说的功能都是其中的一些插件，只是我较常用所以将它们单独列了出来。在插件列表中，我们可以随心所欲地下载尝试我们想要的功能，比如在 <code>Wox</code> 中使用命令行，进行计算，查询自己的 IP 地址，查询颜色，粘帖板历史记录。功能多多，但都很简单易上手，在这里就不一一展开啦，大家可以亲自体验试试，保证你会有新鲜感、幸福感！<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/92E78zjGGtBe.png" alt="mark"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/CqIjpyyLDVFl.png" alt="mark"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/AJG0U4qCcRgp.png" alt="mark"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/1jQca5yyRbU1.png" alt="mark"></p>
</li>
<li><p>我的一些配置</p>
<p>我使用的主题：BlueWhite， 使用这个主题是因为它透明的，和桌面能够很好的融合。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191208/h1uWTsSfUbvr.png" alt="mark"></p>
</li>
</ol>
<p>安利到此结束啦， 喜欢的小朋友点个在看鸭～</p>
]]></content>
      <tags>
        <tag>安利</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>不破楼兰兰终不还 —— 秋招的一些经验</title>
    <url>/2019/10/13/%E4%B8%8D%E7%A0%B4%E6%A5%BC%E5%85%B0%E5%85%B0%E7%BB%88%E4%B8%8D%E8%BF%98%E2%80%94%E2%80%94%E7%A7%8B%E6%8B%9B%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="秋招的一些经验（后台开发方向）"><a href="#秋招的一些经验（后台开发方向）" class="headerlink" title="秋招的一些经验（后台开发方向）"></a>秋招的一些经验（后台开发方向）</h1><p>秋招可以说是学生时代的重要一战，秋招的成败牵系着职业的起点。想在秋招中得到心仪的 offer，正确的意识和打法就尤为重要。有很多学生以为秋招是在自己毕业后的那个秋天，到了八九月份才意识到是现在这个秋天，再慌乱地进行准备，结果可想而知了，虽不能一棒子打死，但总归不能够充分发挥出自己的实力。意识如此，打法也是这样子，有了意识，却没有正确的打法，也极有可能事倍功半。<img src="http://ppe.oss-cn-shenzhen.aliyuncs.com/collections/163/5/thumb.jpg"><span id="more"></span></p>
<h3 id="个人经历"><a href="#个人经历" class="headerlink" title="个人经历"></a>个人经历</h3><p>双非本科，软件工程专业，技术栈选择了 C++，九月末签了腾讯后台开发 SP offer。大学期间主要打 ACM 竞赛，铜牌水平。我在 ACM 中受益很多，但局限性也是很明显的，如知识圈主要是很基础的 C++ 语法，对算法熟悉些但对项目、工程方法很生疏。但 ACM 给了我很好的平台，在 ACM 中接触到了许多大牛，圈子很重要，你的圈子中有很多牛人，那么你也很自然地想要变强些。 ACM 会给人自信，这么难的事情都做过了，别的事情也便没有什么好怕的。但 ACM 中所用到的知识或许和工作需要的有很大的差别，所以在我春招准备找后台报务器开发时也几乎是个完全的小白。但通过三月份冲刺一样地恶补知识，最后拿了华为和海康威视的 offer。</p>
<h4 id="春招"><a href="#春招" class="headerlink" title="春招"></a>春招</h4><p>在说春招经历前先说下我对大三（研二）下春招（指找暑期实习）的看法。我觉得春招是很必要的！<strong>对于春招（找暑期实习）来说，收不收获 offer 或许并不重要，但一定要来试试应聘的水，踩踩在应聘过程的坑，感受下应聘的氛围，练练手。</strong>春招收不到暑期实习 offer 的话并不致命，我们还可以在暑假好好复习，剑指秋招，没啥问题。<strong>但如果没有应聘求职的经验，导致在秋招中踩坑，那么就肠子都悔青了。</strong>就举我的例子，春招过程中我阿里一面后便杳无音信，一点消息都没（和面试官聊得挺火热的，面试官也说后面会有继续的面试），到最后发现是我没有在官网投递简历。还有腾讯错过了性格测试导致杳无音信。如果这些非实力上的错误导致秋招求职失败，那真的是哑巴吃黄连 —— 有苦说不出。而且假若之前没有笔试、面试的经历，那么秋招一开始的时候大概率很紧张，导致错失良机。春招就是一个很好的让我们试水、经历的机会，它试错成本又比较低，顶多收不到暑期实习的 offer，但暑期我们可以准备后面更重要的秋招！所以我觉得春招是必须要参与的！能收到心仪的 offer 更好（一般来说，实习转正要比秋招简单些），收不到 offer 我们也可以积累了重要经验再战秋招！</p>
<p>我的春招早期还抱有些幻想，在大三上 12 月初就投了 Google，但因为当时感觉要多准备准备，就约了年后的面试。面试约在了 3 月上旬，在这之前我就一直刷算法题准备 Google 的面试，没有去学习别的给自己留后路。结果一面挂，幻想破灭后就立即加入到春招大军中，一下发现自己很无力，因为大学学习方向主要是算法的关系，其实在项目方面自己很弱，而开发岗的话面试在这上面占有很大比例。于是差不多整个三月中下旬，我都是在刷面经，根据自己的目标恶补知识，多次熬夜赶项目写在简历上。这一段经历其实挺痛苦的，因为自己很菜，几乎是小白，时间紧，任务重，要补的东西实在太多。但自己心里也知道这段路是必须要走的，必须要经历的。我的春招很仓促，但这让我意识到自己要补的知识量有多大，大约要花多少的时间来学习他们。我的项目是在三月末赶完的，完成之后我就修改简历立马进行投递。（我在此之前也有投递简历、笔试，只是简历上写的项目其实并没有完成。<strong>大家一定要注意投递截止日期，不要错过自己喜欢公司的投递时间！</strong>）其实我这种安排已经算很晚很末的了，因为准备 Google 耽误了很多，是比较危险的做法。我的面试大多集中在了三月末、四月，试想如果我面试失败拿不到 offer 那后面就没有面试机会了。如果在三月面试的话，失败后还可以投些公司在四月继续面试。<strong>大家一定要记住早就是优势。</strong></p>
<p>我春招并没有太多的面试，只面了 Google、阿里、华为、海康威视四家，最终拿到了华为和海康的 offer，其实我也很不推荐这种做法，毕竟更多的面试代表着更多的经验、更多的机会。我这么做算是我性格的原因，因为我算是比较专一、认准一个目标不达成不放弃的人，不太考虑失败的后路如何，如果有多个目标的话我会变得很纠结很犹豫，影响自己正常的学习。但感觉少而精的投递并不适合多数的人。另外希望大家一定要注意身体，平常时间够的话能不熬夜就不熬夜，这个真的伤身体。可能是因为春招时饮食休息不规律，加上压力比较大，所以得了算是一场比较重的肠胃病，虽然最后也没检查出什么大的病症，但是生病很难受，也很影响生活学习，而且到现在有时压力大的时候还会犯。</p>
<h4 id="暑期实习"><a href="#暑期实习" class="headerlink" title="暑期实习"></a>暑期实习</h4><p>在华为和海康威视之间我选择了华为，因为我在南京有住处，华为也在南京，省去了一笔住宿的费用。而且女朋友也在南京。海康的话在杭州，有些许的不方便。而且当时觉得华为可能要更镀金些（现在觉得俩个其实差不多吧，各有各的特色）。</p>
<p>期末考试一结束，我就在 7 月 3 号立马开始实习，其实已经算晚的了。华为暑期实习在路由器部门，代码几乎是纯 C 的，代码数量之庞大不得不说令我十分震撼。实习一开始先熟悉环境、了解项目的架构、搭建开发环境等等，后面就是进行功能模块开发、完成实习任务，在这其间我逐渐发现其实自己并不是很喜欢这项工作，这个部门的主要工作自己也不是太喜欢，所以有些动了离心，并不是很想转正。当然，虽然不喜欢，你的实习任务还是必须要完成的。大项目编译起来很恐怖，我这个项目每次编译大约都需要一个半小时左右（还不是编译出全部的，只是编译一小部分），在这期间我就自己学习些自己喜欢的东西。我入职比较晚，但有两个入职比我早一两个星期的小伙伴，因为答辩需要导师、主管们的时间，所以就安排我们三个一起答辩，不再给我安排单独的答辩。我在 8 月中旬答辩，答辩还算稳稳当当，答辩之后离我实习结束时间并不太多了，于是在这之后我便没有进行新的任务开发，而是开始复习，准备秋招，带薪学习真舒服。在这段时间，主管因为知道我了解算法，又赶上华为要员工考试（类似 leetcode 算法题），就让我给大家讲了三次算法课，感觉是个很不错的经历，应该会对转正有些帮助吧。这段时间也在办公室腾讯一面，主管看到后笑了笑调侃了下，也没有责备我，蛮好的，倒是我心里有点不好意思。9 月 2 号我就结束了实习，开始了自己的正式秋招。</p>
<h4 id="秋招"><a href="#秋招" class="headerlink" title="秋招"></a>秋招</h4><p>比起春招来说，秋招重要性要大一些。秋招有着更多的岗位，更多的机会，但同时也有着更多的竞争者。现在很多大公司秋招开始的时间越来越提前，原来说金九银十，但有许多公司七八月份就已经开始了，比如字节跳动，在七月中旬就结束了提前批的投递。相传今年腾讯有 3000 hc，其中一半是转正，1000 人分给提前批， 500 人分给正式批。虽然真实性不知，但可以肯定的是越早那么机会越大，而且如果你提前批失败了，还可以进入正式批再面试，相当于又多了一次机会！8.12 号提前批截止， 8.26 号常规批开始。所以大家一定要有意识，尽早做好准备。</p>
<p><strong>虽然经常说早就是优势，但还是一条也是特殊注意，那就是适合自己的才是最好的。</strong>我在八月下旬实习快结束就开始投递简历，但当时自己还根本没有准备好、复习好，所以经历了一些面试被 “爆捶” 的经历。比如腾讯的效率出人得高，我在第一天晚上八九点投递了简历，本以为怎么也得过个一周才能面试，自己可以在这段时间准备下，结果第二天中午就收到了了解我情况的电话，第三四天的样子就收到了正式的一面。但当时还没有准备好知识，情况是可想而知的。电话面试时被面试官爆捶，几乎是问啥啥不会，或者说回答不到点子上，面试官其实蛮好的，最后说感觉我对知识是一知半解，并没有了解地很全面。自己心里有苦说不出，但面试官说的没错，我的表现给人的感觉的确就是这样子的，像 “引用和指针的区别” 这种基础的问题都回答不好，怎么让人信服，自己没有准备好不能够怪别人。在这之后更加勤奋地来学习。本来以为腾讯就这么凉了，结果谁知一面的小哥哥给我了通过，几天后收到了二面电话。二面给我的感觉就顺畅很多，但还是不那么满意，还有着更多可以改进的地方，还有着很多没有来得及学习的知识。二面没有像一面那么幸运，久久没有收到下一面的电话。以为自己又凉透了。大概隔了一周多的样子，我突然又接到了腾讯的电话，对方告诉我是 ieg 的，问了我一些基本情况和一些较为基础的知识。过后我去官网查看状态，由原来的复试变为了初试，所以是觉得自己被另一个部门打捞了起来吧，又有了生机，有了一线希望。我具体的秋招经历在 <a href="http://zhiyi.live/2019/09/30/%E9%BB%84%E6%B2%99%E7%99%BE%E6%88%98%E7%A9%BF%E9%87%91%E7%94%B2%E2%80%94%E2%80%94%E8%85%BE%E8%AE%AF%E7%A7%8B%E6%8B%9B%E8%AE%B0%E5%BD%95/">《黄沙百战穿金甲 —— 腾讯秋招经历》</a> 中有叙述，所以不在这边详说。下面说一些更为重要的感觉、经验。</p>
<ul>
<li>关注公司招聘官网，记录下它们招聘的关键时间点，如什么时候开始，什么时候结束投递。</li>
<li>多注意牛客网等一些网站的消息，发现其中有价值的信息。</li>
<li>内推用处不大，但有内推总比没有好。</li>
<li>保证在官网上填写的联系方式正确</li>
<li>一开始感觉经验不足的话可以先拿小公司练练手，等到自己感觉经验较足的时候再面大公司。</li>
<li>尽可能的多面试，面试其实是一次很好的学习机会！注意记录下面试中的问题，在面试中查漏补缺。</li>
<li>一开始海投，争取更多的机会，等有了一两个自己满意的 offer 后可以进行精投。</li>
<li>可以先投小公司有个保底 offer，有了保底 offer 后你再面试时感觉是不一样的，会戒除掉一开始没有 offer 时的紧张不安，焦虑也会好很多。如我在海康威视面社时拿到了腾讯 offer，于是在后面就轻松许多， HR 面时面试官问我身边的人怎么评价我，我思考后张嘴说 “逗比”，都给面试官整乐了。假如我没有保底 offer，那么我肯定不敢这么说。而后面也蛮顺利的通过了海康威视的 HR 面。等你有了保底 offer 后，你再面试的气场真的会改变。</li>
<li>和 HR 搞好关系，在 HR 面时要下联系方式，后面方便联系。</li>
</ul>
<p>秋招的确是一场恶战，尤其在你还没有 offer 的时候，内心会非常煎熬。我在腾讯面试流程完成后就一直等待结果通知，这时候我还没有保底 offer。每晚睡觉时候都会多次做梦，梦到手机来了通知电话或是消息，然后就会突然醒过来看一眼手机，发现是梦，像极了之前和女朋友吵架时做梦梦到她理我了。白天的时候又是忧心忡忡，变得神经质，生怕错过通知电话，上厕所想起忘记带手机都会担心害怕这时候打来接不到。但收到 offer 后心总算落地了，觉得这一切是值得的。美好的事物总是值得期待。该吃吃该喝喝，遇事别往心里搁。</p>
<h3 id="选定目标"><a href="#选定目标" class="headerlink" title="选定目标"></a>选定目标</h3><p>首先，要根据自己的技术栈方向、实力来选定岗位，比如我语言的话只会 C++，别的语言几乎只会个 “hello, world”，那适合我的目标岗位范围就缩小了。我又特别想进大公司，应聘的目标范围又小了些。我们选定目标很重要，因为有了目标，我们才能决定我们的打法。比如说，我决定了想去哪个岗位，我<strong>可以逛几家公司的招聘网站，看看它们这个岗位的招聘要求，看下它们都列出了哪些技能，这些都可以决定我们的学习方向</strong>，我觉得这是对我们应聘大有裨益的。</p>
<h3 id="根据时间选择打法"><a href="#根据时间选择打法" class="headerlink" title="根据时间选择打法"></a>根据时间选择打法</h3><p>下面我们就要根据我们的时间来安排这些要学习的内容。我觉得我们可以根据时间是否充足来选择不同的学习方式。<strong>如果说我们时间比较急，没有太多的时间来学习，那么我们就在牛客等一些网站上多看面经，恶补知识。</strong>对于面经中出现的高频问题尤其注意，这些问题即使你觉得十分简单，也希望能抽出一些时间来确认下自己的答案是否真正的正确，是否全面，有没有要补充的。如果<strong>能从这些基础问题上进行拓展，那也是一项极好的能力、面试官很看重的能力</strong>（我觉得）。比如说面试官让我说四次挥手的过程，我一般最后会加上一句 “在一些情况下四次挥手会变为三次挥手”。在 TCP 四次挥手时有 <code>TIME_WAIT</code> 状态，面试官让我说为什么要设置这个状态时，我最后都会加上一句这个状态时长一般是 <code>2MSL</code>，这样面试官一般肯定会问我为什么设置成 <code>2MSL</code>，这刚好是我准备的问题，面试官问的问题便进入了我的圈子中，进入了我的节奏。我们可以看到有时（甚至说很多情况下）<strong>我们是可以引导面试官询问问题的</strong>，比如在回答面试官上一个问题的最后提一些我们会的且和当前问题有关系的知识点，一旦面试官进入我们的节奏，那我觉得给面试官留下个好印象，面试通过的几率就会上升许多。</p>
<p>但这种时间仓促，单刷面经来准备面试还是有着很大的漏洞，有着致命的不足，那就是我们对知识的掌握深度不足。我们刷面经所得来的知识很有可能只是表面上的，是宽泛而不深入，多而浅的，一旦我们面大公司，遇上比较厉害的面试官喜欢深挖知识点，那这种打法很可能遭遇滑铁卢。比如之前在面 YY 的时候，面试官问了我 TCP 和 UDP 的区别，这个肯定是面经上差不多都有的，我顺利的回答出后面试官问我如果想让 UDP 也能有 TCP 可靠、有序性，我们应该做哪些优化。这个回答我就显得很磕磕绊绊了。</p>
<p>所以我们如果时间充足的话，我还是希望大家能够步步踩实，对于知识点亲历亲为，多写程序，多多实践。这样才能够具有硬实力，很多面试问题是完全可以在面试前一段时间冲刺恶补的，但这硬实力却需要时间来积累。</p>
<h3 id="面试问题的分类"><a href="#面试问题的分类" class="headerlink" title="面试问题的分类"></a>面试问题的分类</h3><p>经过我几家公司的面试经历，我觉得技术面试问题大致可以分为三类：<strong>底层基础问题、岗位特有问题、根据你简历内容的一些提问</strong>。底层基础问题就是那些语言、计网、操作系统、数据库等等这些知识，这一部分很重要，回答能否中的是你基础是否牢固的体现，这些知识很可能是你面哪家公司，不管什么岗位都有可能会问到的。岗位特有问题的话就是指面试这个岗位所独有的问题，这些问题是你可以特殊准备的，尤其是对你心仪的公司。比如你面服务器后台开发，他很有可能问你一些 Linux 常用的命令，因为你在做服务器时会经常用到，比如查看 CPU、内存消耗等等。如果你面游戏客户端开发的话他可能会问你有没有接触过渲染等等。我们已经知道他们可能会问这些问题为什么不去特殊准备下呢，把相关的知识点写进简历中我觉得是很吸引面试官目光的。第三类问题是根据你简历内容的一些提问，比如你的实习经历，项目经历，你在实习项目中遇到了什么问题、怎么解决的，简历中包含的一些知识点等等，这都是极大概率问的。还是就是你简历中的一些特殊点，比如读过 STL 源码，参与过某某开源项目，项目和岗位很符合，面试官很好奇你的项目，竞赛经历等等，如果你将这些写入简历中，那你要准备好一些面试可能会问到的问题。这里说下我对简历的一些建议，大家简历尽量真实，体现出自己的真正实力，可以包装，但要适度，包装的地方要在自己能力范围之内。比如我在简历中说自己了解红黑树，因为之前有专门去学习过红黑树，去理解它的思想，对于插入节点要做哪些事情等等，虽然这些现在也都忘记了，但如果面试官问我，我还是能说出些主要的特点、思想，插入节点一些情况下的操作。这样可能拿不到优秀良好分数，但拿合格分 60 我觉得还是差不多可以的，而且简历中也写的是了解，而不是熟悉，面试官问起来也能够给自己找个台阶下。</p>
<h3 id="面试的一些技巧"><a href="#面试的一些技巧" class="headerlink" title="面试的一些技巧"></a>面试的一些技巧</h3><p><strong>如果我们能在网上找到和你同一个部门面经的话那真的赚翻了，因为对于一些基础知识的询问、岗位特有问题，同一个部门的问题范围还是差不多，甚至可能是一样的</strong>。说个我的例子，春招的时候学长内推 BAT 中的一家公司，因为内推是同一个部门，我和一个朋友遇到了同一个面试官，然后问的问题几乎是一模一样的。面试官都让我们实现个 <code>vector</code>，算法题也是一样的。你说如果有人在你之前面了和你同一个的部门，然后写了一个较全的面经，你读到后对你面这个部门有没有帮助。毕竟面试不是在职技术员工们的主要工作，他们也是有着自己本职工作生产压力的，为了你面试单独出一套题我觉得是几乎不可能。他们的面试问题很有可能是他们熟悉的、在自己工作中经常用到的知识点。</p>
<p>下面说下我们应该重视什么样的面试知识点。<strong>我们要重视的，是那些高频出现的，较为基础的，不是很难的知识点。</strong>如果这些知识点我们回答不出，面试官打的分数我觉得不会很高。比如三次握手四次挥手这种面试天天问的，面试官问我我都没有回答好，那结果是可想而知的，面试官心里有 “这都不会？” 这种想法我都觉得有可能。这一类的问题我们还要学会扩展，这一点我们上面说过了。这一类问题回答好，面试至少能够通过。我们不要惧怕那些难度较高的题目，我觉得这一类题目如果你能回答出，那是加分项，大加分项。如果回答不出，面试官也可以理解，不会减分，至少不会减太多的分数。面对难题时，我们第一时间别直接说不会（除非你真的一点都没有接触过），要略做思考状，让面试官能感觉到你真地有认真对待这场面试。这种难题，很有可能是你和面试官一次交流的机会，是一次抛砖引玉的交流。比如你说出你自己一两点能够想到的思路，告诉面试官，一般来说如果是难题的话面试官很有可能会在你的思路上告诉你很多提示。<strong>要注意面试官的提示很重要</strong>，细细品味，不管是在所说的难题还是其他题目。如果一个题目你不清楚，那么千万别瞎说，因为面试官是很有可能挖坑的。这类题目你说出你知道的清楚的部分就好，不清楚的就说不太清楚，如果自己有一定的思路但不知道对不对的话就说 “这一点我不太清楚，但我猜测它是怎么样怎么样实现的”，或者说 “这一点我不太清楚它是怎么实现的，如果让我实现的话我会怎么做怎么做”。</p>
<p>面试还是有一定技巧的，有些像应试一般，如果你基础扎实，但没有为此特殊准备，没有去背一些答案，那还是有可能会经历一些坎坷。面试有些题目就需要我们像考试一样专门去准备下，多刷刷面经，背一背面试官希望听到的标准答案，这样更容易获得更多分，虽然这些题目或许在实际中用处并不大。面试也有着运气的一面，是你和面试官在知识、性格等一些方面的匹配，除了真正的实力上，还有一些人为因素在里面，比如你问题没有回答好，但你和面试官性格合得来，聊得火热，面试官也是有可能放你通过的（比如一面二面）。</p>
<p><strong>如果一个面试你可以选择线上面（电话、视频）或者现场面，那么我推荐大家选择现场面。</strong> 原因如下：</p>
<ol>
<li>现场面如果是在异地的话，那公司大概率是有路费住宿费报销的，在费用方面不用担心过多。</li>
<li>现场面有纸笔，不好描述的东西可以画下来，用图、表格、公式等等来表示，但线上面遇到这种不好表述的东西不太好解决，虽然可以上传附件什么的但很麻烦。</li>
<li>现场面和面试官面对面，你的表情动作、肢体语言可以很好的帮助你来回答。线上面的话如果你遇到问题回答不下去面试官不太好注意到你的一些细节，但如果是现场面面试官看到你有困难，关注下你表情什么的很有可能会来帮助你。</li>
<li>现场面毕竟是面对面，<strong>有人情味在里面</strong>。比起线上面，有着更多的人为因素。或许和面试官聊得来而通过了这次面试。</li>
<li>如果是视频面，一般也就那几家视频面试的平台，使用牛客的概率也极大（一般都是）。视频面很有可能让你写算法题目，如果是像笔试一样的题目，就会有测试样例什么的，让你直接提交，返回通过率。你写好了，结果一提交返回通过率很低岂不是很尴尬。即使没有测试样例，面试官也可以很方便地在他本地测试一下功能。这样子错误就不太好隐藏。而现场面的话一般是手撕代码，用笔写，我没有遇到过现场面给我电脑让我现场写算法题目的，面试官也是人眼编译，代码很多地方都可能通融通融，一些边缘错误可能也不太易查出。</li>
</ol>
<p>在我现场面的几家公司中，我都拿到了 offer。而线上面的时候，还很有可能一些问题没答好而翻车。除非是因为时间冲突不能去现场，我推荐大家如果有现场面的机会的话去现场面，个人感觉几率真的大很多。</p>
<h3 id="几家公司的笔试面试感受"><a href="#几家公司的笔试面试感受" class="headerlink" title="几家公司的笔试面试感受"></a>几家公司的笔试面试感受</h3><p>和春招的时候差不多，我秋招其实也没有投递太多的公司（不太建议这样），更多地选择了少而精的道路。所以说下较少几家公司的笔试或面试感受。（因为我有过 ACM 的经历，所以在算法题目难度上可能感觉不太一样）</p>
<p>腾讯： 腾讯面试是在秋招的时候，一面被爆捶后，能感觉到这家公司对面试者真正技术、能力的看重。一些表面的知识完全可以靠突击、冲刺来记住理解背过，<strong>但腾讯的面试就很看重硬实力，看重那些你必须经历了时间才能积累下的基本功！</strong>你做的一些伪装面试官很容易就能够看出来。问问题一般先易，然后逐步加深，一点点挖掘你的实力，有时直到你的知识盲区。在后台开发方面的面试中较看重基础，对算法考查不太难。</p>
<p>头条：头条是在 9.1 号视频面的，我挂在了二面。头条也蛮看重基础的，和腾讯差不多，但比起腾讯会更看重算法题。（头条对算法的看重也是出了名的）算法题目给我的感觉是题目并不难，但需要一定的练习。如果算法题目没有通过的话那很有可能会的挂掉。我就是挂在了二面的算法题目上，题目并不难，只是我傻 * 一样地读错了题意，把字串读成了字序列，葬送了面试机会。<strong>读对题意很重要！</strong>，也要多听面试官的提示。面试官有多次提醒我，只是我鬼迷心窍地没有去想我题意读错了。到了晚上才反应过来，一拍大腿，肠子悔青。</p>
<p>阿里：阿里是在春招的时候面了一次，秋招没能获得面试机会。给我感觉和腾讯差不多，很看重基础、基本功。阿里的笔试据说只作为参考，笔试题目区别于别的公司的题目，更看重于数学方面、逻辑方面！基础部分大都都是数学题目，高数线代概率论什么的，还有一些逻辑题目，类似经典的 “谁养鱼”，我笔试题还有一题是陶哲轩的红眼问题，如果之前没有遇到过的确蛮难的。后面有附加题，一道偏项目，一道偏算法，当时心态做崩了，所以只做了算法题，项目题代码阅读量较多没有做。</p>
<p>百度：笔试较难。春招时百度的笔试贼难，几乎给我留下了阴影。秋招时要稍微简单些，除去最后一道题目题意不全有问题 AK 了笔试其他题目。其中一道是近期我恰好参加的 codeforces 比赛中的一道题目。虽然要比春招时简单些，但对于大部分人来说感觉还是有些难度。百度通知面试时因为已经签了腾讯，加上身体原因，因此没去面试。算是比较遗憾的事情吧，我对这家公司的技术很有敬畏的。</p>
<p>网易雷火：笔试最难。网易雷火的笔试题目是我经历过最难的。四个小时，六道算法题。六道算法题里还有两道状压 dp，这难度有点难顶。但还算幸运，我通过了笔试，获得了面试机会。可能通过笔试的话面试官会默认你能力较好吧，我一面的时候差不多就是聊天比较多，一开始先来两个很简单的数学题目，然后大致问了下技术问题，后面就是聊天吧，问我了一些 ACM 的经历。二面问了我很多我本该会却不会的东西，让我意识到自己还是很菜，要学习的还有很多。但二面面试官说我之前的评价都很好。</p>
<p>网易互娱：笔试较有意思，我喜欢的类型。第二题有些问题（感觉我思路没有问题的）只通过了 10% 的样例，其他题目 AK。结束后成就感满满，尤其是能做出最后一道算法题目。结束后牛客发了个题解帖子<a href="https://www.nowcoder.com/discuss/273051">网易 C++ 后台开发笔试编程题</a>。一直没有收到面试消息，应该是凉了吧。</p>
<p>地平线：面试最难。地平线作为一家独角兽，感觉招人的话要求是少而精。一些面试的问题非常深入，感觉要比 BAT、头条还要难一些。虽然是现场面，刷人依旧很不讲情面，很多人都是一轮游，一面之后就被刷了。还好我运气比较好，面试官问的问题简单的我回答的不错，难的我差不多有接触过一部分，多多少少了解一些，最后一路过关斩将，完成了三轮恐怖的技术面（三面最为恐怖！），在九月底获得了口头 offer。</p>
<p>欢聚时代：笔试很简单，选择 + 简答 + 算法题，一个半小时的时间，我 30 分钟就答完了，而且 AK 了算法题目。面试体验贼棒，有幸加入了合肥的线下交流会（不是宣讲会，而是八九个人的交流会）。在交流会进行了公司介绍、答疑、还有 HR 面，还抱走了一些奖品，很喜欢。技术面感觉也很好，和腾讯一样感觉蛮看重基础的，会深挖你的知识。HR 告诉我我面的部门类似于腾讯的 teg， 我挺喜欢的。面试过程中应用方面偏多，尤其是网络方面的知识，对算法重视程度感觉要弱一点。</p>
<p>海康威视：春招和秋招都有面试，感觉面试题目都是一些很经典的高频题目吧，多刷面经没啥问题。秋招时面试官看我有 ACM 经历对我蛮好的，除了问技术问题还给了我很多学习方向的建议，也算是聊天为主。比较玄学的是初试通过后我因为和百度面试相同的原因，没能去复试。结果收到了签约。所以说秋招实在太玄学了。</p>
<p>华为：笔试和面试都是在春招，暑期实习在华为，实习生以实习成绩为秋招考核标准，不能秋招。笔试体验蛮差的，一共三个编程题，AC 了两个，由于第二题叙述不清加样例空格问题用掉了很多时间。询问笔试客服时候客服也态度不太好，（后来才知道好像笔试客服都不好。一些题目可能题目有问题，你去询问，你会得到一样的回答：这是考试，请自己思考）华为面试给我的感觉蛮水的，技术面时间大约 25 分钟，问的问题都是表面上的东西，有很多问题我觉得自己并没有回答好结果面试官就默认我会了。不过据说今年华为秋招很难。</p>
<h3 id="后台开发-C-一些高频面试问题"><a href="#后台开发-C-一些高频面试问题" class="headerlink" title="后台开发 C++ 一些高频面试问题"></a>后台开发 C++ 一些高频面试问题</h3><p>在这边提一些比较常出现的问题，这些问题只是我在面试过程中常遇到的，我觉得比较重要，但题目范围并不是很全面。</p>
<h4 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h4><ul>
<li>C++ 多态是怎么实现的</li>
<li> C++ 对象模型、对象内存布局</li>
<li> C++ 内存（堆、栈、常量区等等）</li>
<li>C++ 一些关键字 (volatile static const)</li>
<li> 引用与指针的区别</li>
<li>在构造函数中可以调用虚函数吗，析构函数中呢</li>
<li>智能指针 (auto_ptr, unique_ptr, shared_ptr, weak_ptr)</li>
<li> 动态绑定、静态绑定</li>
<li> STL 容器用法，vector 是怎么扩容的</li>
<li>萃取 (traits)</li>
<li> 动态链接和静态链接区别</li>
<li> const 与 define 区别， inline 与 define 区别</li>
<li> strcpy 使用时要注意什么，strcpy、strncpy、strcpy_s 的区别</li>
<li> memcpy、memmove 的区别</li>
<li> C++ 代码编译过程的步骤</li>
</ul>
<h4 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h4><ul>
<li>OSI 七层、IP 五层</li>
<li>各种协议</li>
<li>三次握手、四次挥手</li>
<li>流量控制、拥塞控制</li>
<li> TCP、UDP 区别</li>
<li>从输入网址到浏览器显示页面的过程（越详细越好）</li>
<li>网络拥塞时会有什么状况，网络发生拥塞了怎么办</li>
<li> TCP 粘包</li>
<li> select、poll、epoll 区别</li>
</ul>
<h4 id="操作系统以及-Linux"><a href="#操作系统以及-Linux" class="headerlink" title="操作系统以及 Linux"></a>操作系统以及 Linux</h4><ul>
<li>进程、线程、协程之间的区别</li>
<li>线程切换为什么比进程切换快</li>
<li> fork () 会从父进程继承什么，什么是子进程特有的</li>
<li>线程共享哪些资源</li>
<li>虚拟地址到物理地址的转换（越详细越好）</li>
<li>进程间通信方式、线程间通信方式</li>
<li>锁、信号量区别</li>
<li>硬链接、软链接区别</li>
<li> Linux 下的命令（这个回答一定要尽量回答你熟悉的）<ul>
<li>文件操作<br>lsof、cd、ls、touch、pwd、mkdir、cp、mv、ln、rm</li>
<li> 系统负载（重点）<br>sar、top、uptime、free、vmstat、ps</li>
<li> 网络相关（重点）<br>ifconfig、ping、netstat、ss、route、traceroute</li>
<li> 文本操作<br>grep、sed、awk、cat、less、more、head、tail、wc、sort、uniq</li>
<li> 用户管理、权限管理<br>useradd /adduser、userdel、usermod、passwd、chmod、chown、chgrp</li>
<li> 其他<br>&amp;、 nohup、at、corntab、which、find、whereis</li>
<li> 命令的综合运用<br>统计文件夹下有多少文件名全为小写，后缀名为.cpp 的文件、删除符合某条件的文件（比如删除 10 天前的文件，删除大小大于 4M 的文件）、文件中每行一个数字、输出他们的和</li>
</ul>
</li>
<li> shell 脚本</li>
<li>文件系统</li>
<li> inode、Linux 文件结构</li>
<li> du、df 区别</li>
<li>用户态与内核态，用户态怎样进入内核态</li>
</ul>
<h3 id="数据结构、算法方面"><a href="#数据结构、算法方面" class="headerlink" title="数据结构、算法方面"></a>数据结构、算法方面</h3><p>这篇文章没有太涉及到算法题方面，因为我觉得算法归于我刚才说的硬实力。这个的确蛮难短时间突破的，需要长期的积累、学习、刷题，真正地去动手做才能有收获，只有经历过被虐的痛苦才能逐渐轻车熟路，这一点的确挺残酷的，但没有办法，要吃尽苦中苦，光看一些文字解析什么的我觉得并不能对读者提升很高。笔试面试的话题目难度一般最多 leetcode 中等吧，除非是大公司特别看重算法这一块会问很难的。毕竟面试官如果问你一道算法题他自己也要会，doge。</p>
<p>祝大家能够在秋招中斩获自己最心仪的 offer！</p>
]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>秋招</tag>
        <tag>面经</tag>
      </tags>
  </entry>
  <entry>
    <title>黄沙百战穿金甲 —— 腾讯秋招记录</title>
    <url>/2019/09/30/%E9%BB%84%E6%B2%99%E7%99%BE%E6%88%98%E7%A9%BF%E9%87%91%E7%94%B2%E2%80%94%E2%80%94%E8%85%BE%E8%AE%AF%E7%A7%8B%E6%8B%9B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<blockquote class="blockquote-center"> 我发现勇气根本靠不住，只有完全的疯狂才有意义。</blockquote>
写这篇文章时，九月画下句号，十月刚刚起笔。回忆这一个月，无数的片段涌上心头，诉说着它们的故事，有焦虑、有等待、有充实、有恐惧、有喜悦，但没有迷茫。从初中刚开始学编程的那一刻起，对大厂的渴望或许便铭刻在了我的心上。上大学以来，我越发觉得我接受不了小厂，剑指BAT，从没改变，（梦想当然是 Google），这个九月，我终于如愿了。<span id="more"></span>

<p>春招的时候笔试后收到了性格测试的邮件，但由于无法说清的原因错过了性格测试，不知道是不是这个没能收到后面的面试，错失了进腾讯的机会。秋招是在 8 月 21 号晚上投递的简历，简历较春招添加了很多东西，不再像春招那般牛逼哄哄地只写上 ACM 和简要的技能，而是学会了列条。如春招时掌握技能写个数据结构，秋招时改成了掌握栈、队列、链表、树、图等…. 虽然高傲的我极不喜欢如此，但在效果上看来还是蛮有效的。8 月份的时候我还在华为实习，没有准备秋招，也便没有复习一些面试常问知识点等等，我寻思着我投个简历怎么也得冷漠我一两周，给我个笔试啥的再面试，可谁知投递简历的第二天中午就收到了腾讯的电话。（或许是简历比较优秀吧）电话并不算是面试，而是聊了下我的情况，比如能不能来深圳，接不接受学习 go 语言（我当然一顿舔，可以，接受！干啥都行！），然后说后面会面试。我从未想过会有如此迅速。从投递简历到接到电话不过十七八个小时吧。当时心里喜忧参半吧，又是开心又是焦虑，虽然不用笔试就直接面试了，可自己并没有开始复习面试知识。于是接下来便开始了复习，过了一两天收到了一面（周四），但结果并不是很理想，或者说非常不理想。有着很多很基础的知识都没有答好，比如三次握手，四次挥手，引用和指针区别，<code>select, poll, epoll</code> 区别。这些都不是因为不会，而是没有背标准答案吧～面试官小哥哥很 nice，在面试中告诉我对我的感觉是似懂非懂，知识只了解到一半，没有过多地说什么。当时以为凉了吧，半夜做梦都是没通过直接被刷，忍不住地不停去官网查看状态。没想到在下一周周一收到了二面的电话（那天头疼吧，迷糊着听到电话突然起来接），自我感觉比一面好了些，但仍有很多不足吧，一些经典的知识没有说好。也没有问这两位小哥哥部门，所以对部门不太清楚，但感觉偏技术吧。</p>
<p>后面又接到了一通电话，告诉我是 IEG，问了我一些情况和比较基础的知识点，这时候准备已经有些时间了，所以回答还算是可以。过后去官网查了状态，由原来的复试变成了初试，感觉应该是之前面的部门凉了吧，被 IEG 捞了起来。小哥哥问我玩不玩游戏啥的，这也便开始了我面试的吹逼之旅。后面二面是视频面，约好了时间却一直没收到面试链接，快到面试时间才知道要在微信上视频，原因是面试系统有 bug 还不能使用（笑）。二面有两个面试官，感觉有一个像是压力面的样子（也可能是我太菜了），就是我不会什么他问什么，我简历上写了熟悉栈、队列….. 唯独没有写哈希表，然后他让我设计一个哈希表。简历上写了专业课程有 balabala，没有写数据库（因为数据库实在太菜了），然后他问我数据库的知识。他问我时我一直磕磕绊绊，另一个面试官问我就投缘一些，他问的我差不多都会，秒回的那种。</p>
<p>二面后第二天（周三）在地铁上收到了约周六现场面的电话，询问了下必须现场，不能远程。我深知我自己是肯定会去的。说实话感觉腾讯现场面的准备有些仓促，只告诉你周六有现场面，问你来不来，你回短信说去之后了无因信，不给你具体的时间地点，询问也没人回答。这让我内心想很多，我有没有听错时间，是不是这个周六，要不要买票，万一听错时间怎么办，过去了人家根本没举办面试，面试地点在哪，一点信息都没我到底要不要去…… 我终于还是去了，在过去的高铁上收到了面试的时间地址信息，那时已经是面试前一天下午的四五点。。。不得不说做得的确不够好，我从南京去深圳，不仅要操心面试题目，还是操心面试本身。</p>
<p>面试在周六，我买的周五的高铁，早上 6 点多到晚上 8 点半，大概 14 个多小时。在南京站的时候拍了张车票的照片，那时候便想好了结束后要发的说说：</p>
<blockquote class="blockquote-center"> 何当金络脑，快走踏清秋。</blockquote>
![mark](https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191001/D9qTkRDoGMuh.jpg)

<p>我带了几本 C++ 的书在高铁上看，但最终也只看了一本《More Effective C++》，其他的几本翻都没翻。学习永远都不晚的，没想到我在高铁上看的知识，刚好第二天面试用到。一路上时而看看书籍，时而看看窗外的青山，感觉自己又是在故事中。（当然，下午就几乎全靠手机了）那天刚好是 LPL 夏季总决赛，RNG 对 FPX，皇杂的我似乎知道了结果，并没有抱很大的希望，高铁上网也不是很好，也便偶尔看些片段。最后 FPX 3 ： 1 RNG，Doinb 拿到了冠军，自己其实也挺高兴的。</p>
<p>9.1 时候头条二面凉，RNG 赢了 TES 拿下 S9 门票，心里想着血赚不亏。<br>9.6 坐动车去深圳面试 RNG 没能拿到夏冠，心里想着这下该轮到我了吧。</p>
<p>8 点半的时候到了深圳，天已经黑了。这算是我坐过时间最长的一次动车了吧。途经了很多地方，上海、杭州、台州、林少的家乡莆田、洪少家乡泉州、厦门，也算是开了下眼界吧。路上遇到的青山碧水也因为此时的心境有了不同的意义。到了深圳后便开始去美团上定的一家民宿。其实定住宿时还有点小插曲，一开始不知道面试地点，盲猜了一波滨海大厦，也就定了那旁边的一家，后来收到面试地点的短信发现并不是在那… 结果定的那家宾馆告诉我那个房间水管炸了， 不能住宿。。。笑嘻嘻，于是退全款换了一家较一点的民宿。民宿整体还不错，客厅装修蛮好的，就是人很多…… 估计有很多常住民吧，我住的是一个八人间，那晚有四五个人的样子，其他房间也住着人。我有一个毛病，就是心里有事的时候是吃不下去饭的，（由于春招）吃下去也会不舒服吐出来。找到住宿后想出去觅点食，结果发现附近吃的并不多，有一家热干面也刚好关门，只好去了一家麦当劳买了份套餐。这算是一整天除了面包外全部吃的了。在一家杂货店买了一瓶可乐，在南京时候可乐瓶图案一般是南京上海北京杭州几座城市，没想到在这边遇到了新的城市图案。在深圳当然选了一瓶多元深圳图案的可乐。拿到可乐后突然觉得这会是我的幸运瓶，能够给我以勇气和安慰，便拍了张照片，把它放在书包的侧边。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191001/J4lOPe8xBNgx.jpg" alt="mark"></p>
<p>第二天面试在 10 ： 30 ，我也早早地去了科兴大厦，没有吃早餐。到了那发现了一些手办，蛮好看的，惊喜的是居然有 QQ 华夏的手办，和面试联系人不时撒娇卖萌联系了下。也很幸运之前有在 QQ 找到一个一起面试的小伙伴，在腾讯食堂面了下基，聊了些天。不时也会有些紧张，那时候我就会用手摸可乐瓶，它会带给我力量。腾讯现场面做的挺好的，约的是 10:30，面试的时间也刚好是 10:30，一分不耽误，不像某些公司给你说了 1 点半，3 点多才排到你。我很喜欢这样的安排。现场面应该算是三面（我也不太清楚），好像是总监面？现场面意外得顺利，面试官炒鸡 nice，我真的感觉是在和面试官聊天（谈笑风声），而不是你问我答的面试，比如问一个问题，我说一些知识点，面试官也会说些知识点，在某些情况下怎么做，像是彼此之间的一次技术交流（当然，我不配跟大佬交流的，只是感觉上像）。中间还有个小插曲，我们聊得正欢的时候下一位面试者敲门，本来预定的面试时长是 30 分钟，不知不觉已经 40 多分钟。看了下时间我们也便愉快地结束了面试。面试官还担心楼层门是关着的，要刷卡才能开，特意带我去刷卡。（真的炒鸡 nice 啊啊啊！！！）</p>
<p>等了下一起面试的小伙伴，我们一起去次饭。途中收到了面试联系官的电话，下午 HR 面，没想到一轮现场技术面后直接就 HR 面了，有点欣喜。小伙伴也收到了技术面的通知。我们去了一家烤鹅店，一打开菜单吓一跳，三年老鹅，2888，五年老鹅，5888。当年，我们点的 39 的那种。和往常一样，没有胃口，也不敢吃太多，大概半碗都没能吃下。回科兴的路上突然很想小姐姐，这时候才意识到我已经到了离开一两天就会很想的地步，很想回家缠她下。</p>
<p>没想到下午 HR 面的主要面试官就是我之前卖萌撒娇的小姐姐，我……. HR 面还算是顺利，就是在问我阿里和腾讯之间如何选择犹豫了一会，在人家地盘当然是说选人家了。问了下小姐姐什么时候出结果通知，小姐姐说下周五前。感觉蛮快的样子，就有很强的期待感。HR 小姐姐超温柔，不时会笑一下，声音也软软的<del>面试好后 HR 小姐姐给我来开门，我也趁机卖萌说了下 “谢谢小姐姐，小姐姐再见</del>”。</p>
<p>幸运瓶给了我很大的鼓励，于是想把它带回南京陪着我。</p>
<p>面试流程结束后并没有直接走，因为一直听说咖啡机很好玩，就去熟悉的 11 层试了下，没想到刚好遇到小伙伴。喝完咖啡后去了滨海大厦那边玩，路上又吃了麦当劳，也算是一天的食物了。见到滨海大厦的一刻还是有些欣喜的，心中有些朝拜的感觉吧。但感觉周围有些压抑，都是高楼大厦，抬头看见的天空被大楼割裂开来。不知道有没有什么哲学家提出一种理论：“人类生活的幸福感和抬头看到的天空面积成正相关”。</p>
<p>其间爸爸问我面试如何，我就直接说 “如果他不要我那说明他压根不招人”，哈哈哈哈，当时还不知道后面要经历多么煎熬地等待。又拿起幸运瓶和滨海大厦合了张影。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191001/vf4wLcl8bKa2.jpg" alt="mark"></p>
<p>在滨海大厦玩到傍晚，才去找订的青旅。其实挺近的，也就两三分钟的路程吧，哈哈哈。后面又来了一个小姐姐我一脸懵比，心想我们这屋四个男生满了呀，后来才知道隔壁还一间屋子。后面又去了人才花园（？是叫这名字吗？记不太清楚了）路上遇到一群黄牛拦着我卖票，后来才知道原来这边在办篮球世界杯。后面有一段感觉是小资区？一堆十八线网红的感觉。不过建筑、装饰的确要有些精致。在人才湾（？）看到了海的一角，对面是高楼林立，给我一种很强的压迫感和快节奏感。回来后去找吃的，又没有找到，有家面馆也恰好关门。在旅馆里和老板聊了很多，问了下旅馆的经营模式、她的经历之类的。同宿的三个哥们看球回来了（从内蒙古过来看球也是真爱），发现旅店有蟑螂，一个直接站在床头不敢下来（笑 cry）。</p>
<p>熊猫老哥给我预约了周日下午去滨海大厦，感激。滨海大厦里面也超气派，在里面各种闲逛，各种喝咖啡（喝到难受，笑 cry）。22 楼是休闲娱乐区，有图书阅读、篮球馆、室内攀岩、健身房一类的东西，还算蛮棒的。刚好遇到有售卖周边产品的，可惜是周一卖，于是拜托熊猫老哥帮我买些寄过来，超开心，再次感激。在滨海大厦闲鱼到五六点的样子就出来吃饭返程了，在一家面馆吃了面，因为要去飞机站，对时间不太了解，有点紧张吧，又有些难受，吃完后在路边又吐了出来，感觉好多了。走着去了地铁站，发现到机场不过三四站的样子，很快的。地铁上坐我旁边的是对父子，儿子可能有些疾病，会不停地打自己，很用力的那种，声音也会很响，父亲一直想控制他。那时候有些感慨人生百味吧。到南京已是凌晨，绕着雨花台回到了家中，还是有点点害怕的。途中恰巧闻到了桂花，这才突然感受到秋天来了，又想起我对桂花的第一印象也是当年在雨花台吧。途中一直自己吓自己又来自己鼓励自己。回到家中吵醒了时光，抱了下时光。</p>
<p>等待通知的日子很煎熬，很多次做梦都会梦到通知相关的事情，每天也总提心吊胆地一直带着手机，生怕错过。可是腾讯的通知却是迟迟不来，别的电话到是一个赛过一个。在谱哥群里找了两个同是等 oc 的哥们，于是抱团取暖，一起等待。通知并没有像 HR 说的那般在周五前如期到来，又是重新等一周，其间的煎熬不知如何诉说，反正做什么事情都生怕错过电话，无数次想象如果我在面试其他公司时来了电话怎么办，就是如此这般忧心忡忡。每天无聊又紧张地翻着牛客帖子，总想着能把握住一丝一毫的信息。每次刷牛客都会看到很多的许愿帖，期望着能够收到 offer。听说牛客许愿很灵，我总在想自己要不要发一个求下好运。可我终是没有发，因为想要凭借自己的实力得到 offer，发了许愿帖得到 offer 的话总觉得依靠了些什么，得到 offer 的时候不会像单凭自己拿到那样开心，所以最终也没有发许愿帖，我就是如此固执的一个人。一起抱团取暖的两个哥们在下周的同一天里都收到了 oc，而我的却还是迟迟不来，心里祈祷着 ieg 效率可以高一些。又是新的一周，已是接近九月末了，在我等待海康威视综合面的时候来了短信，一时间的激动亦是难与诉说，一直以来的梦想在一瞬间终于成真，在群里发了红包，也给谱哥发了个大红包。综合面表现就有点随意吧，面试官问我别人感觉我如何时，我想了半天说有点逗比吧，直接给面试官整笑了。面试结束回家的心情亦是格外的放松，回家买了瓶可乐庆祝。</p>
<p>后面就是等正式的 oc 吧，虽然也有点煎熬，但心情总是没有之前紧张了。等 oc 还有点小插曲，HR 把我的 oc 打给了别人，之前一直笑谑孙 lei，没想到我也有成为孙 lei 的一天。HR 给我来了波出队操作，又来了波入队操作。导致我到了队尾，这一批的 oc 打完了，大家收到了意向书，而我还没有。离国庆假期越来越近了，我没有忍住，在 9.29 打了个电话问了下 HR 面的小姐姐，小姐姐的声音还是一样的温柔，一样的爱笑（感觉她全程憋笑），这才知道在系统里的我电话少了最后一位，补全了又短信问了下小姐姐，麻烦她提醒下同事，HR 小姐姐回复了我已通知，炒感激。</p>
<p>室友在四川回来，我去接他，在返校的地铁上收到了 oc 电话，薪水比期望还要高，做梦都能笑醒了，没想到自己走运拿到了腾讯的 sp offer，好事多磨吧。瞎猫碰上死耗子，我是死耗子。只可惜接电话时没能在时光身边，没能和她一起分享这份快乐。接电话时对方把我学校不小心念错成了北邮，我的反应并未像往常听到北邮那样意难平了吧，那时候才感觉自己终于从没能考上北邮中走了出来。大一的时候看到学校周围的路牌总是会把南邮不小心看成北邮，大二的时候不小心看到北邮的校徽心中五味杂陈，大三 ACM 南京站看到自己排名在一些北邮队伍前面感到很欣慰，努力没有白费，大四收到了腾讯的 offer 终于能不再依靠当年想考北邮来自我介绍了。</p>
<p>暂时先记载这么多吧，分享下在南京的幸运瓶。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20191001/8ftoS9GRvB1a.jpg" alt="mark"></p>
<hr>

<p>PS：说下好完的，在写这篇文章回忆面试场景时，突然感觉敲门的那个面试者和在群里认识的一个小姐姐微信头像有些像，问了下没想到真的是她。</p>
]]></content>
      <tags>
        <tag>记录</tag>
        <tag>腾讯</tag>
      </tags>
  </entry>
  <entry>
    <title>面试题目：为什么线程切换要比进程切换快</title>
    <url>/2019/09/14/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%9B%AE%EF%BC%9A%E4%B8%BA%E4%BB%80%E4%B9%88%E7%BA%BF%E7%A8%8B%E5%88%87%E6%8D%A2%E8%A6%81%E6%AF%94%E8%BF%9B%E7%A8%8B%E5%88%87%E6%8D%A2%E5%BF%AB/</url>
    <content><![CDATA[<p>在地平线面试时和面试官聊到进程和线程的区别，自己说到线程切换要比进程切换快，面试官问到具体是为什么。</p>
<p>orz，无奈自己没有好好学操作系统，也没有复习这个。</p>
<p>面试官非常 nice，告诉我是因为有关 CPU 的缓存问题，其关键是 TLB。</p>
]]></content>
      <tags>
        <tag>操作系统</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>线程共享哪些资源</title>
    <url>/2019/09/14/%E7%BA%BF%E7%A8%8B%E5%85%B1%E4%BA%AB%E5%93%AA%E4%BA%9B%E8%B5%84%E6%BA%90/</url>
    <content><![CDATA[<p>线程共享资源： </p>
<blockquote>
<p>a. 堆  由于堆是在进程空间中开辟出来的，所以它是理所当然地被共享的；因此 new 出来的都是共享的（16 位平台上分全局堆和局部堆，局部堆是独享的）</p>
<p>b. 全局变量 它是与具体某一函数无关的，所以也与特定线程无关；因此也是共享的</p>
<p>c. 静态变量 虽然对于局部变量来说，它在代码中是 “放” 在某一函数中的，但是其存放位置和全局变量一样，存于堆中开辟的.bss 和.data 段，是共享的</p>
<p>d. 文件等公用资源  这个是共享的，使用这些公共资源的线程必须同步。</p>
<p>e. 地址空间</p>
<p>f. 子进程、闹铃、信号及信号服务程序、记账信息</p>
<p>g. 进程代码段</p>
</blockquote>
<p>线程独享资源</p>
<blockquote>
<p>栈</p>
<p>寄存器</p>
<p>程序计数器</p>
<p>状态字</p>
<p>线程优先级</p>
<p>错误返回码</p>
</blockquote>
]]></content>
      <tags>
        <tag>多线程</tag>
        <tag>操作系统</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>腾讯后台开发面经</title>
    <url>/2019/08/24/%E8%85%BE%E8%AE%AF%E5%90%8E%E5%8F%B0%E5%BC%80%E5%8F%91%E9%9D%A2%E7%BB%8F/</url>
    <content><![CDATA[<blockquote class="blockquote-center">请带着批判的眼光看这篇文章。或许我的一些答案是不对的。如果您发现了错误，烦请指出。</blockquote>
1. C++对象模型

<p>   这个要重点掌握， 要明白类里有什么，每个类的对象里又有什么。尤其是对虚函数表的了解。这块知识较多，不在这篇文章中详述。网上有着很多优秀的博客来介绍。</p>
<p>   <a href="https://coolshell.cn/articles/12176.html">https://coolshell.cn/articles/12176.html</a></p>
<p>   <a href="https://www.jianshu.com/p/9fb37bb3094f">https://www.jianshu.com/p/9fb37bb3094f</a></p>
<ol start="2">
<li><p><strong>C++ 多态机制的实现原理</strong></p>
<p>主要就是上面问题中的虚函数表。</p>
</li>
<li><p><strong>如果一个类的指针为 <code>nullptr</code> ，那么调用他的成员函数会不会出错。出错的话是在哪一阶段出错。</strong></p>
<p>也是对 C++ 内存模型的一个考察以及动态绑定静态绑定。每个类的成员函数都在<code>.text</code> 代码段，静态绑定的时候如果成员函数不访问成员变量的话那么这个函数不会出问题。如果说是虚函数或这个函数访问了成员变量，那么就会出错。虚函数出错是因为其动态绑定，因为是 <code>nullptr</code>， 无法确定其虚函数表。<span id="more"></span></p>
</li>
<li><p><strong>引用和指针的区别</strong></p>
<p>也是一个很常问的问题吧，哎，当时春招时候看的，感觉每一条都是理所当然，但让我说有什么区别，只记得最重要的吧，并不能说全</p>
<blockquote>
<p>(1) 指针：指针是一个变量，只不过这个变量存储的是一个地址，指向内存的一个存储单元；而引用跟原来的变量实质上是同一个东西，只不过是原变量的一个别名而已。</p>
<p>(2) 可以有 const 指针，但是没有 const 引用；</p>
<p>(3) 指针可以有多级，但是引用只能是一级（int **p；合法 而 int &amp;&amp;a 是不合法的）</p>
<p>(4) 指针的值可以为空，但是引用的值不能为 NULL，并且引用在定义的时候必须初始化；</p>
<p>(5) 指针的值在初始化后可以改变，即指向其它的存储单元，而引用在进行初始化后就不会再改变了</p>
<p>(6)”sizeof 引用” 得到的是所指向的变量 (对象) 的大小，而”sizeof 指针” 得到的是指针本身的大小；</p>
<p>(7) 指针和引用的自增 (++) 运算意义不一样； 	</p>
</blockquote>
<p>怎么说呢，感觉这些都是理所当然的东西，但面试的时候没有回答完全，给面试官一种其实我不会的感觉吧，挺难受的。</p>
</li>
<li><p><strong>STL</strong>， 尤其是其中的 <strong>vector</strong></p>
<p>感觉面试时候 <strong>vector</strong> 是 <strong>STL</strong> 重中之重吧。春招时候的阿里以及这次的腾讯都有着重问到。这次大概问了 vector 是什么， vector 添加元素时会发生什么（vector 的增长）。</p>
<p>对 vector 中的元素进行引用可以吗？对 vector 中首元素引用可以吗？</p>
<p>我的回答是不可以，因为当 vector 增长时， vector 可能会进行内存地址的移动，此时这个引用便会无效而埋下隐患。</p>
</li>
<li><p><strong>STL 中经常使用的容器、算法</strong>， 几种容器插入删除的时间复杂度（送分题）</p>
</li>
<li><p><strong>让你删除一个 vector 中所有大于 5 的元素，你代码怎么写</strong></p>
<p>这题我知道坑在哪，是用迭代器删除时，我们不可以这么写</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(vector&lt;<span class="type">int</span>&gt;::iterator it = a.<span class="built_in">begin</span>(); it != a.<span class="built_in">end</span>(); it++)</span><br><span class="line">{</span><br><span class="line">	<span class="keyword">if</span>(*it &gt; <span class="number">5</span>)</span><br><span class="line">        a.<span class="built_in">erase</span>(it);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>原因是如果有两个或多个连续的大于 5 的元素，那么当我们删除一个后，因为 vector 数组元素的移动而造成 iterator 会变更。</p>
<p><del>但我不知道怎么变的，其实是你删除后迭代器会指向下一个。</del>(更新，评论指导，这里说的是错误的，现更正。)</p>
<p>在该情境中，使用 erase 后迭代器就失效了，对失效的迭代器解引用是未定义行为，具体要看编译器的实现。而非之前说的迭代器指向下一个，指向下一个只是我的编译器这样实现的罢了。</p>
<p>这题也有点可惜。我对 STL 还不是想像中的那么熟悉。</p>
<p><strong>更新，正确写法</strong></p>
<p><code>erase </code> 返回指向序列的下一个元素。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> it = a.<span class="built_in">begin</span>(); it != a.<span class="built_in">end</span>(); )</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span>(*it &gt; <span class="number">5</span>)</span><br><span class="line">        it = a.<span class="built_in">erase</span>(it);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        it++;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>


</li>
<li><p><strong>智能指针的原理</strong></p>
<p>shared_pt ： 引用计数，类成员有两个指针，一个是被管理的原始指针，一个则是指向计数控制块的指针。<br>unique_ptr：禁止拷贝。</p>
<p>weak_ptr：</p>
<p>面试官问了我<strong>如何实现一个 unique_ptr</strong>，我的回答大概就是用面向对象的思想，对原生指针封装到一个类中，当其生命域结束时析构它。<br><strong>使用 unique_ptr 管理指针时，如果我们手动析构了其原生指针，会造成 double free 吗？</strong>这个问题把我问懵了，因为我不太懂 unique_ptr 的原理。其实是会造成 double free 的。而我蒙了一波什么 unique_ptr 析构时会检测，balabala， 狗屁。unique_ptr 根本不知道你析构了。难受。</p>
</li>
<li><p>算法题目：<strong>如果一个链表里有环，寻找环的入口</strong></p>
<p>经典题目吧。快慢指针法，可笑的是我只知道快慢指针法，后面忘记了。</p>
</li>
<li><p>下面是网络方面的，我答的更是一团糟。也不知道是紧张还是啥，握手挥手都分不清了，把挥手当成了见面？？？？</p>
</li>
</ol>
<p>   <strong>TIME_WAIT 发生在什么时候，多久，有什么作用。</strong>这是很基础的知识了，当时春招的时候很用功地去学习过 TIME_WAIT 和 CLOSED_WAIT，而现在却忘了发生在什么时候。</p>
<p>   <strong>CLOSED_WAIT 发生在什么时候</strong></p>
<p>   <img src="https://s5.51cto.com/wyfs02/M01/7F/6C/wKiom1cd6_mwEZr2AACU62IiAp4333.png"></p>
<ol start="11">
<li><p>UDP 报文最大长度</p>
<p>不知道。 今天查了下，在实际应用中是 65535 （64K）。用 sendto 函数最大能发送数据的长度为：65535- IP 头 (20) - UDP 头 (8)＝65507 字节。用 sendto 函数发送数据时，如果发送数据长度大于该值，则函数会返回错误。  </p>
</li>
<li><p>Linux 命令</p>
<ul>
<li><p>删除 10 天前的文件 <a href="https://www.cnblogs.com/peida/archive/2013/03/25/2980121.html">参考链接</a></p>
<p>命令格式：<code>find 对应目录 -mtime +天数 -name "文件名" -exec rm -rf {} \;</code></p>
<p>如：<code>find /opt/soft/log/ -mtime +30 -name "*.log" -exec rm -rf {} \;</code></p>
</li>
<li><p>删除大小大于 m 字节的文件</p>
<p><code>find 目录 -size +40b -exec rm {} \;</code></p>
</li>
<li><p>文件中每行一个数字，输出它们的和</p>
<p><code>cat 文件名 | awk 'BEGIN {sum=0;} {sum=sum+$1;} END{print sum}'</code> </p>
<p><a href="https://www.cnblogs.com/ggjucheng/archive/2013/01/13/2858470.html">awk 命令的使用</a></p>
</li>
</ul>
</li>
<li><p><code>top</code> 命令可以查看进程吗</p>
<p>这个当时不知道，懵了个不可以，因为当时自己用 <code>top</code> 的时候只看到了进程。唉，今天查了下是可以用 <code>-H</code> 来看的。</p>
</li>
<li><p><code>select</code>、<code>epoll</code> 的原理，及什么场景适合 <code>select</code></p>
<p>戳中盲区。自己补了下这一块的知识。</p>
</li>
<li><p><code>epoll</code> 中 LT 和 ET 两种模式的区别</p>
</li>
<li><p><code>select</code> 监听数量的限制</p>
</li>
<li><p>锁、信号量的区别</p>
<p><strong>互斥量用于线程的互斥，信号量用于线程的同步。</strong></p>
<p><strong>互斥量值只能为 0/1，信号量值可以为非负整数。</strong></p>
<p><strong>互斥量的加锁和解锁必须由同一线程分别对应使用，信号量可以由一个线程释放，另一个线程得到。</strong></p>
</li>
<li><p>我的项目性能瓶颈在哪？</p>
<p>QAQ，这个没有分析过。</p>
</li>
<li><p>线程进程的区别及通信方式</p>
</li>
<li><p><code>strcpy</code> 使用时要注意什么，以及 <code>strncpy</code>, <code>strcpy_s</code>, <code>memmove</code>, <code>memcpy</code>。（这个问题在几次面试中有多次问到）</p>
<p><code>strcpy</code> 使用时注意数组越界以及源字符串，目的字符串有没有重叠等。</p>
<p><code>memcpy</code> 是用于拷贝内存，同样要注意源和目的内存间有没有重叠。</p>
<p><code>memmove</code> 解决了源和目的内存间重叠问题</p>
</li>
<li><p>设计一个哈希表</p>
</li>
<li><p>C++ 中萃取是用来做什么的</p>
</li>
<li><p>四次挥手什么时候会变成三次挥手 （延迟确认）</p>
</li>
<li><p>OSI 七层 和 IP 五层</p>
</li>
<li><p>TCP 特点以及 TCP、UDP 的区别</p>
</li>
<li><p>如果你的服务器出问题了，那么如何定位问题</p>
</li>
<li><p>C++ 代码编译过程的几个步骤</p>
</li>
<li><p>动态链接和静态链接区别</p>
</li>
<li><p><code>const</code>、<code>define</code> 的区别</p>
</li>
<li><p><code>inline</code>、<code>define</code> 的区别</p>
</li>
<li><p>引用会占用内存空间吗</p>
<p>不会</p>
</li>
<li><p><code>malloc/free</code> 与 <code>new/delete</code> 的区别</p>
<p><a href="https://www.cnblogs.com/qg-whz/p/5140930.html">https://www.cnblogs.com/qg-whz/p/5140930.html</a></p>
</li>
<li><p>extern “C” 作用</p>
</li>
<li><p>fork () 会从父进程中继承哪些东西</p>
</li>
<li><p><code>lsof</code> 命令</p>
</li>
<li><p>在构造函数中可以调用虚函数吗，析构函数中呢</p>
</li>
<li><p>C++ 对象成员初始化顺序（初始化列表中根据声明顺序）</p>
</li>
<li><p>在项目中有没有具体分析过哪些语句耗时比较大。</p>
</li>
<li><p>如果有两个类 <code>A</code>，<code>B</code>，下面一段代码</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(A a)</span> </span>{}</span><br><span class="line">B b;</span><br><span class="line"><span class="built_in">f</span>(b)</span><br></pre></td></tr></tbody></table></figure>

<p>编译通过，请根据你对 C++ 的理解解释下。</p>
<p>这个当时我懵了下，只想到了 B 继承于 A，一下想不起来其他的可能。后面冷静了下，突然想起前一天在高铁上的《More Effective C++》 上的内容，刚好可以回答这个问题（一定要抓住时间学习，可能你上一分钟学 到的知识下一分钟就会用上）。</p>
<p>最终我总共回答了三点，看面试官的反应应该挺满意的。</p>
<ol>
<li><code>B</code> 继承于 <code>A</code>（不过会有一定的继承条件，比如 public 继承，单继承）</li>
<li>类 <code>B</code>  可以隐式转换为 <code>A</code>，即 B 中有 <code>operator A()</code></li>
<li>类 <code>A</code> 可以由 <code>B</code> 构造。</li>
</ol>
<p>后面面试官问如何防范这种情况。于是我回答了在类 <code>B</code> 中不隐式转换为 <code>A</code>， 以及使用 <code>explict</code> 显式构造或根据 C++ 规则不可以进行二次隐式构造的原理。</p>
</li>
</ol>
<p>​      </p>
]]></content>
      <categories>
        <category>面经</category>
      </categories>
      <tags>
        <tag>面经</tag>
        <tag>腾讯</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 动态绑定与静态绑定</title>
    <url>/2019/08/24/C-%E5%8A%A8%E6%80%81%E7%BB%91%E5%AE%9A%E4%B8%8E%E9%9D%99%E6%80%81%E7%BB%91%E5%AE%9A/</url>
    <content><![CDATA[<p>今天做题的时候遇到这样一个问题。</p>
<p>以下程序片段输出内容为：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Demo</span> {</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Demo</span>():<span class="built_in">count</span>(<span class="number">0</span>) {}</span><br><span class="line">      ~<span class="built_in">Demo</span>() {}</span><br><span class="line">  </span><br><span class="line">      <span class="function"><span class="type">void</span> <span class="title">say</span><span class="params">(<span class="type">const</span> std::string&amp;msg)</span> </span>{</span><br><span class="line">          <span class="built_in">fprintf</span>(stderr,<span class="string">"%s\n"</span>, msg.<span class="built_in">c_str</span>());</span><br><span class="line">      }   </span><br><span class="line">   <span class="keyword">private</span>:</span><br><span class="line">      <span class="type">int</span> count;</span><br><span class="line">};</span><br><span class="line">  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> **argv)</span> </span>{</span><br><span class="line">    Demo* v = <span class="literal">NULL</span>;</span><br><span class="line">    v-&gt;<span class="built_in">say</span>(<span class="string">"hello world"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<span id="more"></span>答案为 "hello, world"。

<p>这个问题涉及到了 C++ 中动态绑定和静态绑定的知识。静态绑定又名前期绑定， early binding，是在编译期就确定的，通过对象调用。而动态绑定又名后期绑定， late binding，是在运行时确定的，通过地址实现。</p>
<p>只有采用 <strong>“指针 -&gt; 函数 ()”</strong> 或 <strong>“引用变量。函数 ()”</strong> 的方式调用 * C++ <em>类中的<strong>虚函数</strong>才会执行动态绑定。对于</em> C++* 中的非虚函数，因为其不具备动态绑定的特征，所以不管采用什么样的方式调用，都不会执行动态绑定。（本段及下面表格来自<a href="https://blog.csdn.net/livelylittlefish/article/details/2171521">阿波 123</a> 的博客，感谢。）</p>
<div class="table-box"><table class="MsoTableGrid" style="border-right:medium none;border-top:medium none;border-left:medium none;border-bottom:medium none;border-collapse:collapse;" cellspacing="0" cellpadding="0" border="1"><tbody><tr><td style="border-right:1.5pt double;border-top:1pt solid;background:#b3b3b3;border-left:1pt solid;width:89.4pt;border-bottom:1pt solid;" valign="top" width="119" rowspan="2">
            <div class="MsoNormal"><span lang="en-us" style="font-size:9pt;font-family:'宋体';" xml:lang="en-us"><font face="Times New Roman"><font><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></font></font></span><p></p></div>
            <div class="MsoNormal"><strong><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>代码形式<span lang="en-us" xml:lang="en-us"></span></font></font></span></strong><p><strong></strong></p><strong></strong></div>
            </td>
            <td style="border-right:1.5pt double;border-top:1pt solid;background:#b3b3b3;border-left:#ece9d8;width:206.2pt;border-bottom:1pt solid;" valign="top" width="275" colspan="2">
            <div class="MsoNormal" style="text-align:center;" align="center"><strong><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>对于虚函数<span lang="en-us" xml:lang="en-us"></span></font></font></span></strong><p><strong></strong></p><strong></strong></div>
            </td>
            <td style="border-right:1pt solid;border-top:1pt solid;background:#b3b3b3;border-left:#ece9d8;width:197.1pt;border-bottom:1pt solid;" valign="top" width="263" colspan="2">
            <div class="MsoNormal" style="text-align:center;" align="center"><strong><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>对于非虚函数<span lang="en-us" xml:lang="en-us"></span></font></font></span></strong><p><strong></strong></p><strong></strong></div>
            </td>
        </tr><tr><td style="border-right:1pt solid;border-top:#ece9d8;background:#b3b3b3;border-left:#ece9d8;width:152.25pt;border-bottom:1pt solid;" valign="top" width="203">
            <div class="MsoNormal"><strong><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>作用<span lang="en-us" xml:lang="en-us"></span></font></font></span></strong><p><strong></strong></p><strong></strong></div>
            </td>
            <td style="border-right:1.5pt double;border-top:#ece9d8;background:#b3b3b3;border-left:#ece9d8;width:53.95pt;border-bottom:1pt solid;" valign="top" width="72">
            <div class="MsoNormal"><strong><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>绑定方式<span lang="en-us" xml:lang="en-us"></span></font></font></span></strong><p><strong></strong></p><strong></strong></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;background:#b3b3b3;border-left:#ece9d8;width:145.55pt;border-bottom:1pt solid;" valign="top" width="194">
            <div class="MsoNormal"><strong><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>作用<span lang="en-us" xml:lang="en-us"></span></font></font></span></strong><p><strong></strong></p><strong></strong></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;background:#b3b3b3;border-left:#ece9d8;width:51.55pt;border-bottom:1pt solid;" valign="top" width="69">
            <div class="MsoNormal"><strong><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>绑定方式<span lang="en-us" xml:lang="en-us"></span></font></font></span></strong><p><strong></strong></p><strong></strong></div>
            </td>
        </tr><tr><td style="border-right:1.5pt double;border-top:#ece9d8;border-left:1pt solid;width:89.4pt;border-bottom:1pt solid;" valign="top" width="119">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>类名<span lang="en-us" xml:lang="en-us">::</span> 函数<span lang="en-us" xml:lang="en-us"> ()</span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:152.25pt;border-bottom:1pt solid;" valign="top" width="203">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>调用指定类的指定函数<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1.5pt double;border-top:#ece9d8;border-left:#ece9d8;width:53.95pt;border-bottom:1pt solid;" valign="top" width="72">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>静态绑定<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:145.55pt;border-bottom:1pt solid;" valign="top" width="194">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>调用指定类的指定函数<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:51.55pt;border-bottom:1pt solid;" valign="top" width="69">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>静态绑定<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
        </tr><tr><td style="border-right:1.5pt double;border-top:#ece9d8;border-left:1pt solid;width:89.4pt;border-bottom:1pt solid;" valign="top" width="119">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>对象名<span lang="en-us" xml:lang="en-us">.</span> 函数<span lang="en-us" xml:lang="en-us"> ()</span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:152.25pt;border-bottom:1pt solid;" valign="top" width="203">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>调用指定对象的指定函数<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1.5pt double;border-top:#ece9d8;border-left:#ece9d8;width:53.95pt;border-bottom:1pt solid;" valign="top" width="72">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>静态绑定<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:145.55pt;border-bottom:1pt solid;" valign="top" width="194">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>调用指定对象的指定函数<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:51.55pt;border-bottom:1pt solid;" valign="top" width="69">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>静态绑定<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
        </tr><tr><td style="border-right:1.5pt double;border-top:#ece9d8;border-left:1pt solid;width:89.4pt;border-bottom:1pt solid;" valign="top" width="119">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>引用变量<span lang="en-us" xml:lang="en-us">.</span> 函数<span lang="en-us" xml:lang="en-us"> ()</span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:152.25pt;border-bottom:1pt solid;" valign="top" width="203">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>调用<strong>被</strong>引用对象所属类的指定函数<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1.5pt double;border-top:#ece9d8;border-left:#ece9d8;width:53.95pt;border-bottom:1pt solid;" valign="top" width="72">
            <div class="MsoNormal"><strong><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>动态绑定<span lang="en-us" xml:lang="en-us"></span></font></font></span></strong><p><strong></strong></p><strong></strong></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:145.55pt;border-bottom:1pt solid;" valign="top" width="194">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>调用引用变量所属类的指定函数<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:51.55pt;border-bottom:1pt solid;" valign="top" width="69">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>静态绑定<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
        </tr><tr><td style="border-right:1.5pt double;border-top:#ece9d8;border-left:1pt solid;width:89.4pt;border-bottom:1pt solid;" valign="top" width="119">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>指针<span lang="en-us" xml:lang="en-us"> -&gt;</span> 函数<span lang="en-us" xml:lang="en-us"> ()</span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:152.25pt;border-bottom:1pt solid;" valign="top" width="203">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>调用<strong>被</strong>引用对象所属类的指定函数<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1.5pt double;border-top:#ece9d8;border-left:#ece9d8;width:53.95pt;border-bottom:1pt solid;" valign="top" width="72">
            <div class="MsoNormal"><strong><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>动态绑定<span lang="en-us" xml:lang="en-us"></span></font></font></span></strong><p><strong></strong></p><strong></strong></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:145.55pt;border-bottom:1pt solid;" valign="top" width="194">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>调用指针变量所属类的指定函数<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
            <td style="border-right:1pt solid;border-top:#ece9d8;border-left:#ece9d8;width:51.55pt;border-bottom:1pt solid;" valign="top" width="69">
            <div class="MsoNormal"><span style="font-size:9pt;font-family:'宋体';"><font face="Times New Roman"><font>静态绑定<span lang="en-us" xml:lang="en-us"></span></font></font></span><p></p></div>
            </td>
        </tr></tbody></table></div>

<p>本题中， <code>say()</code> 方法为非虚函数，故进行静态绑定，即使 <code>v</code> 是空指针，也可以根据 <code>v</code> 的类型调用该函数。</p>
<p>这令我想起了之前阅 《Effective C++ 》 时的一些收获，一起写在这里。</p>
<ol>
<li>条款 20: 宁以 pass-by-reference-to-const 替换 pass-by-value<br>使用引用可以解决切割 (slicing) 问题。</li>
<li>条款 36: 绝不重新定义继承而来的 non-virtual 函数<br>因为如果重新定义，根据上述静态绑定和动态绑定的不同，会绑定到不同的函数中，从而效果不一样。</li>
<li>条款 37: 绝不重新定义继承而来的缺少参数值<br>由条款 36 重新定义 non-virtual 函数永远是错误的。对于 virtual 函数，其为动态绑定，而缺少参数值却是静态绑定！</li>
</ol>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Have fun with unix</title>
    <url>/2019/07/21/Have-fun-with-unix/</url>
    <content><![CDATA[<p>突然想起小伙伴前段时间给我看的一段神仙代码。实在特有诱惑力了。。当时女票喊我吃饭我都在看这段代码，话不多说，放码过来。</p>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(&amp;unix[<span class="string">"\021%six\012\0"</span>],(unix)[<span class="string">"have"</span>]+<span class="string">"fun"</span><span class="number">-0x60</span>);</span><br></pre></td></tr></tbody></table></figure>

<p>要解开这道题，我们首先要知道下面几点。</p>
<ul>
<li><code>a[3]</code> == <code>3[a]</code><br>转换为指针角度看， <code>a[3] = *(a+3) = *(3+a) = 3[a]</code></li>
<li><code>"abcdefg"[3]</code> 这种表示相当于 <code>char str[]="abcdefg"; str[3]</code></li>
<li>知道了上面那点后，我的目光就聚焦在 <code>unix</code> 上，我感觉它应该是一个数字，一开始以为它是个变量，但代码中没有描述，我问小伙伴这是不是全量代码，小伙伴说文章里没有看到其他的。。于是我就开始猜他的值，一开始猜的 3，是因为忘记了字符串中 “\0xx” 的意义，把他们当成了 3 个字符来看。其实它们是一个字符的，这种格式表示八进制的 ASCII 码。然后猜 <code>unix</code>  值为 1，后面才晓得 <code>unix</code> 是个宏定义， <code>#define unix 1</code>，这样，我们可以将上面的题目转换成较易看懂的。</li>
</ul>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>( &amp;(<span class="string">"\021%six\012\0"</span>[<span class="number">1</span>]), <span class="string">"have"</span>[<span class="number">1</span>]+<span class="string">"fun"</span><span class="number">-0x60</span>);</span><br></pre></td></tr></tbody></table></figure>

<p>众所周知， <code>printf()</code> 的第一个参数为字符串，或者说字符串的起始地址，我们分析后可知为 <code>%six\012\0</code>, <code>'%s'</code> 表示一个字符串，故我们看第 2 个参数， <code>have[1]</code> 也便是 <code>'a'</code>，<code>'a'-0x60</code> = 97 - 96 = 1, <code>"fun"+1</code> 也便是字符串 <code>"un"</code> 的起始地址，<code>\012</code> = 10， 对应 <code>ASCII</code> 码也便是 <code>\n</code>。</p>
<p>所以这段代码其实是 <code>printf("unix\n");</code> 。</p>
<blockquote class="blockquote-center">unix</blockquote>

<p>很棒很惊艳的代码。<span id="more"></span></p>
<p>再延伸一下吧，平常打 ACM 的时候我经常会用到 <code>printf("%d%c", ans[i], " \n"[i==n-1])</code> 表示每个之间用空格隔开，最后一个后面换行。</p>
]]></content>
      <tags>
        <tag>C语言</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux crontab</title>
    <url>/2019/07/21/Linux-crontab/</url>
    <content><![CDATA[<p>***** /usr/local/run.sh 中 5 个 * 分别代表什么<br>答案：分钟 小时 日 月 星期几</p>
<p>牛客用户 进击的渣渣兔 的答案：</p>
<p>吃货速记：分食日月粥</p>
<p><img src="https://images0.cnblogs.com/blog/34483/201301/08090352-4e0aa3fe4f404b3491df384758229be1.png"></p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Educational Codeforces Round 68 D 1-2-K Game</title>
    <url>/2019/07/21/Educational-Codeforces-Round-68-D-1-2-K-Game/</url>
    <content><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><div align="center">time limit per test : 2 seconds<br>memory limit per test : 256 megabytes<br>input : standard input<br>output : standard output</div>

<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Alice and Bob play a game. There is a paper strip which is divided into <em>n</em> + 1 cells numbered from left to right starting from 0. There is a chip placed in the <em>n</em>-th cell (the last one).</p>
<p>Players take turns, Alice is first. Each player during his or her turn has to move the chip 1, 2 or <em>k</em> cells to the left (so, if the chip is currently in the cell <em>i</em>, the player can move it into cell <em>i</em> - 1, <em>i</em> - 2 or <em>i</em> - <em>k</em>). The chip should not leave the borders of the paper strip: it is impossible, for example, to move it <em>k</em> cells to the left if the current cell has number <em>i</em> &lt; <em>k</em>. The player who can’t make a move loses the game.</p>
<p>Who wins if both participants play optimally?</p>
<p>Alice and Bob would like to play several games, so you should determine the winner in each game.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains the single integer <em>T</em> (1 ≤ <em>T</em> ≤ 100) — the number of games. Next <em>T</em> lines contain one game per line. All games are independent.</p>
<p>Each of the next <em>T</em> lines contains two integers <em>n</em> and <em>k</em> (0 ≤ <em>n</em> ≤ 109, 3 ≤ <em>k</em> ≤ 109) — the length of the strip and the constant denoting the third move, respectively.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each game, print Alice if Alice wins this game and Bob otherwise.</p>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">4</span><br><span class="line">0 3</span><br><span class="line">3 3</span><br><span class="line">3 4</span><br><span class="line">4 4</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Bob</span><br><span class="line">Alice</span><br><span class="line">Bob</span><br><span class="line">Alice</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>打表找规律，存在循环。</p>
<p>发现若 k 不为 3 的倍数，则循环节长度为 3 。若 k 为 3 的倍数， 循环节长度为 k+1， 循环节内也有一定的规律。</p>
]]></content>
      <tags>
        <tag>math</tag>
        <tag>博弈</tag>
      </tags>
  </entry>
  <entry>
    <title>Educational Codeforces Round 68 B Yet Another Crosses Problem</title>
    <url>/2019/07/21/Educational-Codeforces-Round-68-B-Yet-Another-Crosses-Problem/</url>
    <content><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><div align="center">time limit per test : 2 seconds<br>memory limit per test : 256 megabytes<br>input : standard input<br>output : standard output</div>

<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>You are given a picture consisting of  $nn$  rows and $m$ columns. Rows are numbered from  $1$  to  $n$  from the top to the bottom, columns are numbered from  $1$  to $m$ from the left to the right. Each cell is painted either black or white.</p>
<p>You think that this picture is not interesting enough. You consider a picture to be interesting if there is at least one <em>cross</em> in it. A cross is represented by a pair of numbers  $x$  and  $y$ , where  $1≤x≤n$  and $1≤y≤m$, such that <strong>all cells</strong> in row  $x$  and <strong>all cells</strong> in column  $y$ are painted black.</p>
<p>For examples, each of these pictures contain crosses:</p>
<p><img src="http://codeforces.com/predownloaded/2c/74/2c74594b8769dc2402be0ad1adc471acae3ae302.png" alt="img"></p>
<p>The fourth picture contains 4 crosses: at  $(1,3)$ , (1,5)(1,5), $(3,3)$  and $(3,5)$ .</p>
<p>Following images don’t contain crosses:</p>
<p><img src="http://codeforces.com/predownloaded/ec/a3/eca3d5d64cc48c29c29520d171af44c43d7cde6b.png" alt="img"></p>
<p>You have a brush and a can of black paint, so you can make this picture interesting. Each minute you may choose a white cell and paint it black.</p>
<p>What is the minimum number of minutes you have to spend so the resulting picture contains at least one cross?</p>
<p>You are also asked to answer multiple independent queries.<span id="more"></span></p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains an integer  $q$  (1≤q≤5⋅1041≤q≤5⋅104) — the number of queries.</p>
<p>The first line of each query contains two integers  $nn$  and $m$ (1≤n,m≤5⋅1041≤n,m≤5⋅104, n⋅m≤4⋅105n⋅m≤4⋅105) — the number of rows and the number of columns in the picture.</p>
<p>Each of the next  $nn$  lines contains $m$ characters — ‘.’ if the cell is painted white and ‘*’ if the cell is painted black.</p>
<p>It is guaranteed that $\sum n\le5\times10^4, \sum n\times m \le 4 \times 10^5$.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print  $q$  lines, the $i$-th line should contain a single integer — the answer to the $i$-th query, which is the minimum number of minutes you have to spend so the resulting picture contains at least one cross.</p>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">9</span><br><span class="line">5 5</span><br><span class="line">..*..</span><br><span class="line">..*..</span><br><span class="line">*****</span><br><span class="line">..*..</span><br><span class="line">..*..</span><br><span class="line">3 4</span><br><span class="line">****</span><br><span class="line">.*..</span><br><span class="line">.*..</span><br><span class="line">4 3</span><br><span class="line">***</span><br><span class="line">*..</span><br><span class="line">*..</span><br><span class="line">*..</span><br><span class="line">5 5</span><br><span class="line">*****</span><br><span class="line">*.*.*</span><br><span class="line">*****</span><br><span class="line">..*.*</span><br><span class="line">..***</span><br><span class="line">1 4</span><br><span class="line">****</span><br><span class="line">5 5</span><br><span class="line">.....</span><br><span class="line">..*..</span><br><span class="line">.***.</span><br><span class="line">..*..</span><br><span class="line">.....</span><br><span class="line">5 3</span><br><span class="line">...</span><br><span class="line">.*.</span><br><span class="line">.*.</span><br><span class="line">***</span><br><span class="line">.*.</span><br><span class="line">3 3</span><br><span class="line">.*.</span><br><span class="line">*.*</span><br><span class="line">.*.</span><br><span class="line">4 4</span><br><span class="line">*.**</span><br><span class="line">....</span><br><span class="line">*.**</span><br><span class="line">*.**</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">4</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></tbody></table></figure>

<p>Note</p>
<p>The example contains all the pictures from above in the same order.</p>
<p>The first 5 pictures already contain a cross, thus you don’t have to paint anything.</p>
<p>You can paint  $(1,3)$ ,  $(3,1)$ ,  $(5,3)$ and $(3,5)$  on the 66-th picture to get a cross in $(3,3)$ . That’ll take you 44 minutes.</p>
<p>You can paint  $ (1,2)$  on the $7$-th picture to get a cross in $(4,2)$ .</p>
<p>You can paint $(2,2)$ on the 88-th picture to get a cross in $(2,2)$. You can, for example, paint  $(1,3)$ ,  $(3,1)$  and $(3,3)$  to get a cross in $(3,3)$  but that will take you 33 minutes instead of  $1$ .</p>
<p>There are 9 possible crosses you can get in minimum time on the 99-th picture. One of them is in $ (1,1)$ : paint  $ (1,2)$  and  $(2,1)$ .</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>对我来说毒瘤题目啊，B 题，难受。一开始用的暴力的方法，wa 在了 2，一直找不到自己错在了哪里。眼看着别人一个一个过了这题，自己还一直卡在这，真的难受。几乎卡了整场比赛，最后没有时间看 D 题，赛后几乎秒出了Ｄ题。诶，还是太菜了，如果不卡这题的话应该能上很多分。</p>
<h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>分别统计出每行每组 ‘.’ 的数量，最后遍历每个符号，用 <code>r[i] + r[j] - (maze[i][j] == '.')</code> 来更新最小值。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 400010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line">&nbsp;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">&nbsp;</span><br><span class="line"><span class="type">char</span> maz[MAXN];</span><br><span class="line"><span class="type">int</span> T, n, m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> r[<span class="number">50007</span>] = {<span class="number">0</span>};</span><br><span class="line">        <span class="type">int</span> c[<span class="number">50007</span>] = {<span class="number">0</span>};</span><br><span class="line">        <span class="type">int</span> ans = INF;</span><br><span class="line">&nbsp;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">                maz[i*m+j] = <span class="built_in">getchar</span>();</span><br><span class="line">            <span class="built_in">getchar</span>();</span><br><span class="line">        }</span><br><span class="line">&nbsp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">                <span class="keyword">if</span>(maz[i*m+j] == <span class="string">'.'</span>)</span><br><span class="line">                    r[i]++;</span><br><span class="line">        }</span><br><span class="line">&nbsp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(maz[i*m+j] == <span class="string">'.'</span>)</span><br><span class="line">                    c[j]++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">&nbsp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=m; j++)</span><br><span class="line">                ans = <span class="built_in">min</span>(ans, r[i] + c[j] - (maz[i*m+j]==<span class="string">'.'</span>) );</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 源码学习 ——offsetof 与 container_of 宏</title>
    <url>/2019/07/18/LiLin%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94offset%E4%B8%8Econtainer-of%E5%AE%8F/</url>
    <content><![CDATA[<blockquote class="blockquote-center">Linux 内核源码果真精髓，相见恨晚。</blockquote>

<p><code>offsetof</code> 宏定义如下</p>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> offsetof(type, member) (size_t)&amp;(((type*)0)-&gt;member)</span></span><br></pre></td></tr></tbody></table></figure>

<p><code>container_of</code> 宏定义如下</p>
<figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> container_of(ptr, type, member) ({ \</span></span><br><span class="line"><span class="meta">     const typeof( ((type *)0)-&gt;member ) *__mptr = (ptr); \</span></span><br><span class="line"><span class="meta">     (type *)( (char *)__mptr - offsetof(type,member) );}) </span></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Linux</category>
        <category>Linux源码学习</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Linux源码学习</tag>
      </tags>
  </entry>
  <entry>
    <title>市场营销复习</title>
    <url>/2019/06/24/%E5%B8%82%E5%9C%BA%E8%90%A5%E9%94%80%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="导论"><a href="#导论" class="headerlink" title="导论"></a>导论</h2><ol>
<li><h5 id="市场和市场营销定义"><a href="#市场和市场营销定义" class="headerlink" title="市场和市场营销定义"></a>市场和市场营销定义</h5><p>从市场营销的角度看，市场就是商品交换关系的总和</p>
<p>营销学中的市场：指的是具有特定的需求或欲望，而且愿意并能够通过交换来满足这种需要和欲望的全部潜在顾客。</p>
<p>一般意义的市场：是商品交易的场所，是显在和潜在买主的结合体，是买卖关系的总和。</p>
<p>营销是通过创造和交换产品及价值，从而使个人或组织满足欲望和需要的社会和管理过程。<span id="more"></span></p>
</li>
<li><h5 id="市场营销学的核心概念，顾客让渡价值"><a href="#市场营销学的核心概念，顾客让渡价值" class="headerlink" title="市场营销学的核心概念，顾客让渡价值"></a>市场营销学的核心概念，顾客让渡价值</h5><p>市场营销的核心概念：需要、欲望、需求、市场、产品、效用</p>
<p>（1）需要（Needs）</p>
<p>​     需要是指人们为延续和发展生命而产生的对客观事物的渴求或欲望，是人感受缺乏时的一种状态。</p>
<p>（2）欲望（Wants）</p>
<p>​     欲望是指人想解决其需要而对具体满足物的愿望。比起需要来讲，人的欲望要多得多。</p>
<p>（3）需求（Demand）</p>
<p>​     需求是指对于有能力购买并且愿意购买的某个具体产品的欲望。</p>
<p>（4）市场 (market)</p>
<p>营销学中的市场：指的是具有特定的需求或欲望，而且愿意并能够通过交换来满足这种需要和欲望的全部潜在顾客。</p>
<p>​	一般意义的市场：是商品交易的场所，是显在和潜在买主的结合体，是买卖关系的总和。</p>
<p>​	市场规模的大小取决于：愿意交换并拥有能够交换的资源的人数的多少。</p>
<p>​	市场 = 人口 + 购买能力 + 购买欲望</p>
<p>（5）产品（Product）</p>
<p>​	 任何能用来满足人们某种需要或欲望的东西都是产品。</p>
<p>（6）效用 (Usefulness)</p>
<pre><code>  效用：是指产品满足人们欲望的能力。 因此，效用就是人们在占有、使用或消费商品时得到的快乐和满足。
</code></pre>
<p>效用的特点是：</p>
<p>​    ①效用是主观的；②人们总是追求效用最大化；③效用报酬递减。</p>
<p>（1）顾客让渡价值的含义</p>
<p>​	顾客让渡价值是指顾客总价值与顾客总成本之间的差额。</p>
<p>​	顾客让渡价值 = 顾客总价值 — 顾客总成本</p>
<p>​      对顾客来说，顾客让渡价值就是企业所提供的使其感到满意的价值。由于顾客在购买商品时，总是希望获得较高的顾客购买总价值和付出较低的顾客购买总成本，以便获得更多的顾客让渡价值，使自己的需要得到最大限度的满足。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190624/qnAfsbrwml1e.png" alt="mark"></p>
</li>
<li><h5 id="市场营销观念的发展变化"><a href="#市场营销观念的发展变化" class="headerlink" title="市场营销观念的发展变化"></a>市场营销观念的发展变化</h5><p>（1）生产观念</p>
<p>经营理念：企业生产什么，我们就销售什么。</p>
<p>经营方式：以生产为中心，以产定销。生产压倒一切！</p>
</li>
</ol>
<p>（2）产品观念</p>
<p> 企业经营管理重点：在强调劳动生产率的同时，重视产品质量。     </p>
<p>​    经营理念：好产品定能卖个好价钱；好产品一定有人要。</p>
<p>​    经营方式：以产定销。质量压倒一切！</p>
<p>（3）推销观念</p>
<p>​    企业经营管理重点：如何把堆积如山的产品销售出去？</p>
<p>​    经营理念：企业生产什么，我们就努力地、拼命地推销什么。 销售压倒一切！</p>
<p>​    经营手段：推销、广告，不管采用什么手段，只要把产品推销出去就行。高压推销、搭销、欺骗、不讲信誉。</p>
<p>（4）市场营销观念</p>
<p>​    企业经营管理重点：抓住发展机遇。</p>
<p>​    经营理念：哪里有消费者的需求，哪里就有我们发展的机会。</p>
<p>​    经营方式：以销定产。需求压倒一切！</p>
<p>（5）社会营销观念</p>
<p>​    时间：20 世纪 60—70 年代</p>
<p>​    背景：人们对环境、社会福利问题的关注。</p>
<p>​    经营理念：寻找适合自身能力并满足消费者需求和社会公众利益的市场机会。</p>
<h2 id="市场营销环境分析"><a href="#市场营销环境分析" class="headerlink" title="市场营销环境分析"></a>市场营销环境分析</h2><ol>
<li><h5 id="市场营销环境分析和概述"><a href="#市场营销环境分析和概述" class="headerlink" title="市场营销环境分析和概述"></a>市场营销环境分析和概述</h5><p>公司的营销环境是指在营销活动之外，能够影响营销部门建立并保持与目标顾客良好关系的能力的各种因素和力量。</p>
</li>
<li><h5 id="市场营销宏观环境和微观环境分析因素"><a href="#市场营销宏观环境和微观环境分析因素" class="headerlink" title="市场营销宏观环境和微观环境分析因素"></a>市场营销宏观环境和微观环境分析因素</h5><p>（1）微观环境</p>
<p> 微观环境：是指环境中直接影响企业营销活动的各种不可控制的行动者。如顾客、供应商、竞争者和社会公众。</p>
<p>（2）宏观环境</p>
<p> 宏观环境：是指环境中间接影响企业营销活动的不可控制的较大社会力量。如政治、法律、经济、人口、技术和文化等。（有时，宏观环境也能对企业产生直接影响。）</p>
</li>
<li><h5 id="SWOT综合分析，-BCG矩阵-波士顿矩阵"><a href="#SWOT综合分析，-BCG矩阵-波士顿矩阵" class="headerlink" title="SWOT综合分析， BCG矩阵(波士顿矩阵)"></a>SWOT 综合分析， BCG 矩阵 (波士顿矩阵)</h5><p>优势、劣势、机会和威胁</p>
<p>BCG 矩阵</p>
<p>问题产品 (Question)：高增长，低市场份额<br>明星产品（Stars）：高增长，高市场份额<br>现金流产品（Cash Cows）：低增长，高市场份额<br>瘦狗型产品（Dogs)：低增长，低市场份额</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190624/IYqKM6JsBI9Q.png" alt="mark"></p>
</li>
</ol>
<h2 id="购买者行为分析"><a href="#购买者行为分析" class="headerlink" title="购买者行为分析"></a>购买者行为分析</h2><ol>
<li><h5 id="影响消费者购买行为的因素"><a href="#影响消费者购买行为的因素" class="headerlink" title="影响消费者购买行为的因素"></a>影响消费者购买行为的因素</h5><p>文化因素</p>
<p>​	文化、亚文化、社会阶层</p>
<p>社会因素</p>
<p>​	参照群体、家庭、角色与地位</p>
<p>个人因素</p>
<p>​	年龄与生命周期阶段、职业、经济状况、生活方式、个性及自我观念</p>
<p>心理因素</p>
<p>​	动机、感知、学习、信念与态度</p>
</li>
<li><h5 id="消费者购买决策过程"><a href="#消费者购买决策过程" class="headerlink" title="消费者购买决策过程"></a>消费者购买决策过程</h5><ol>
<li><p>确认需要<br>当消费者意识到对某种商品有需要时，购买过程就开始了。<a href="https://wiki.mbalib.com/wiki/%E6%B6%88%E8%B4%B9%E8%80%85%E9%9C%80%E8%A6%81">消费者需要</a>可以由内在因素引起，也可以是由外在因素引起。</p>
</li>
<li><p>信息收集<br>在多数情况下，消费者还要考虑买什么牌号的商品，花多少钱到哪里去买等问题，需要寻求信息，了解商品信息。</p>
</li>
<li><p>方案评价<br>消费者进行比较评价的目的是能够识别哪一种牌号、类型的商品最适合自己的需要。消费者对商品的比较评价，是根据收集的资料，对商品属性做出的价值判断。</p>
</li>
<li><p>购买决策<br>消费者通过对可供选择的商品进行评价，并作出选择后，就形成<a href="https://wiki.mbalib.com/wiki/%E8%B4%AD%E4%B9%B0%E6%84%8F%E5%9B%BE">购买意图</a>。在正常情况下，消费者通常会购买他们最喜欢的品牌。但有时也会受两个因素的影响而改变购买决定。</p>
</li>
<li><p>购买后行为<br>消费者购买商品后，购买的决策过程还在继续，他要评价已购买的商品。</p>
</li>
</ol>
</li>
</ol>
<h2 id="市场细分与目标市场的选择"><a href="#市场细分与目标市场的选择" class="headerlink" title="市场细分与目标市场的选择"></a>市场细分与目标市场的选择</h2><ol>
<li><h5 id="市场细分的内涵，依据与原则"><a href="#市场细分的内涵，依据与原则" class="headerlink" title="市场细分的内涵，依据与原则"></a>市场细分的内涵，依据与原则</h5><p>含义：市场细分是指企业依据客户需求的差异性和类似性，按一定标准把整个市场划分为若干个子市场，用以确定目标市场的过程。</p>
<p>其中任何一个子市场（细分市场）都是一个需求相类似的消费群体。</p>
<p>①消费者市场细分的依据</p>
<table>
<thead>
<tr>
<th>细分标准</th>
<th>具  体  因  素</th>
</tr>
</thead>
<tbody><tr>
<td>人口细分</td>
<td>年龄  职业  性别  教育  家庭  宗教     收入水平  种族</td>
</tr>
<tr>
<td>地理细分</td>
<td>国别  气候  城乡  环境  人口密度</td>
</tr>
<tr>
<td>心理细分</td>
<td>生活方式  偏好  性格  对营销要素的敏感程度  个人兴趣</td>
</tr>
<tr>
<td>行为细分</td>
<td>购买时机  忠诚程度  追求的利润     使用者情况  使用频率</td>
</tr>
</tbody></table>
<p>②生产者市场细分依据</p>
<table>
<thead>
<tr>
<th>细分标准</th>
<th>具体要素</th>
</tr>
</thead>
<tbody><tr>
<td>用户规模</td>
<td>购买力    企业大小</td>
</tr>
<tr>
<td>用户地理</td>
<td>地区    国别    集中程度</td>
</tr>
<tr>
<td>用户要求</td>
<td>用途     追求利益</td>
</tr>
</tbody></table>
<p>市场细分的基本要求（原则）：可衡量性 、可达到性、价值足量性、相对稳定性、可行性</p>
<p>1、可测量性 —— 规模和购买力</p>
<p>2、可进入性 —— 有效到达细分市场并为之有效服务</p>
<p>3、可盈利性 —— 有钱可赚</p>
<p>4、 稳定性 —— 有发展的可持续性</p>
</li>
<li><h5 id="目标市场选择，目标市场策略"><a href="#目标市场选择，目标市场策略" class="headerlink" title="目标市场选择，目标市场策略"></a>目标市场选择，目标市场策略</h5><p>目标市场是企业所选择和确定的营销对象，即企业能够为之提供有效产品和服务的顾客群。</p>
<p>选择目标市场的活动是在市场细分的基础上进行的，其主要步骤是：（1）确定并界定有待细分的整体市场。（2）确定细分标准。（3）分割市场。（4）评价细分市场。（5）选择和确定目标市场。（6）目标市场的重新界定。</p>
<p>目标市场基本战略： </p>
<p>（1）无差异性目标市场营销战略：企业在整体市场中组织经营活动，但仅提供一种产品，实施一组市场策略。特点：非市场细分化、目标市场即整体市场、提供一种产品满足共同需求、实施一组营销策略。</p>
<p>   （2）差异性目标市场营销战略：企业在整体市场中组织经营销活动，但分别为各细分市场提供互有差异的产品并实施各具特色的市场策略。特点：市场细分化、所有细分市场均为企业目标市场、提供多种产品满足各细分市场特殊需求、不同营销策略服务于不同细分市场。</p>
<p>（3）集中性目标市场营销战略：企业仅在一个或少数几个细分市场中组织经营活动，为之提供一种或少数几种产品，实施一组或少数几组市场策略。优点：专业化经营能满足特定顾客的需求、集中资源、节省费用。缺点：经营者承担风险较大、不利于分散风险。</p>
</li>
<li><h5 id="市场定位的含义，方式"><a href="#市场定位的含义，方式" class="headerlink" title="市场定位的含义，方式"></a>市场定位的含义，方式</h5><p>市场定位：企业通过一系列市场营销活动在市场中树立该企业或某产品的特色形象，并传播该形象，使企业 / 产品在市场上众多类似的竞争对手 / 竞品中更容易被消费者识别，从而能有效地占领该企业 / 产品的目标市场。</p>
<p>市场定位过程：</p>
<p>1. 识别潜在的竞争优势：如成本优势；歧异优势 —— 产品差异化、服务优越性、人员差异化、文化独特性、渠道差异化等</p>
<p>2. 选择适当的竞争优势：重要性（高价值的利益）；优越性（优于顾客获得相同利益的其他方式）；独特性（与竞争对手不同的）；可传播性（可传递，可见）；排他性（竞争者难以模仿）；可赢利性（公司可以获取稳定的利润）</p>
<p>3. 确定整体的定位优势：建立市场结构图；在市场结构图上描绘出市场竞争状况；初步确定定位方案；修正定位方案和再定位</p>
<p>4. 沟通并传达选定的定位：公司的品牌和定位应该总结为定位陈述。企业把自己对于产品的定位陈述，通过市场营销组合要素传达给消费者，让消费者认可并喜欢。</p>
</li>
</ol>
<h2 id="产品策略"><a href="#产品策略" class="headerlink" title="产品策略"></a>产品策略</h2><ol>
<li><h5 id="产品整体概念"><a href="#产品整体概念" class="headerlink" title="产品整体概念"></a>产品整体概念</h5><p>产品：是指 “能够提供给市场以引起人们注意、 获得、使用或消费，从而满足人的某种欲望或需要的一切东西。 </p>
<p>整体产品概念：</p>
<p>   产品 =（有形的）产品本体 +（无形的）服务。</p>
</li>
<li><h5 id="产品线"><a href="#产品线" class="headerlink" title="产品线"></a>产品线</h5><p>是指产品组合中的某一产品大类，是一组密切相关的产品。一个企业往往有一条或几条不同的产品线。</p>
<p>产品项目：是指列在企业产品目录上的每一个产品品种。</p>
<p>关系：产品组合由各条产品线组成，每条产品线又由许多产品项目构成。</p>
<p>产品线的宽度：指一个企业拥有多少条不同的产品线。</p>
<p>产品线的长度：即某条产品线当中包含的产品项目数量。</p>
<p>产品线的深度：指每条产品线上有多少个产品项目，也就是每条产品线有多少个品种的产品。</p>
<p>产品线的关联度：指每条产品线之间在最终用途、生产条件、销售渠道以及其他方面相互关联的程度。</p>
</li>
<li><h5 id="产品生命周期理论"><a href="#产品生命周期理论" class="headerlink" title="产品生命周期理论"></a>产品生命周期理论</h5><p>产品生命周期可分为四个阶段： 投入期（导入期）、 成长期（畅销期）、 成熟期（或饱和期）、衰退期</p>
<p>企业获利的最佳区域是？成长期和成熟期。</p>
<p>延长产品生命周期，就是延长？</p>
<p>  成长期和成熟期，延长高利润时间。 </p>
<p>延长产品生命周期的方法有：</p>
<p>  （一）对产品进行改良</p>
<p>重新定位 ；产品差别化；改进产品，增加产品功能；改进款式。</p>
<p>（二）进行市场渗透</p>
<p>①维持一定广告量，说服潜在顾客。</p>
<p>②扩大销售渠道，使其密集化。</p>
<p>③及时降低产品价格，刺激消费需求。</p>
<p>④开展营业推广及公关活动，吸引消费者购买。 </p>
<p>（三）开辟新的市场</p>
<p> ①是开辟新的市场或增设新的销售网点或开辟新的销售渠道。</p>
<p>如产品从国内拓展到国外，从城市拓展到农村。</p>
<p> ②是寻找新的顾客或挖掘原有消费者新的需求。 </p>
<p>导入期的市场特征及其策略</p>
<p>1．导入期的市场特征</p>
<p> ①消费者对产品不是很了解；</p>
<p> ②销售增长缓慢，一般无利润，甚至亏损；</p>
<p> ③不能适应广大消费者的需求，易失败。</p>
<p>原因：①成本高；②设计没定型；③分销渠道未畅通；④新产品在市场上有一个被认识的过程；⑤促销手段不力。</p>
<p>2．导入期的市场策略</p>
<p>（1）注重产品品质和产品给消费者的 “第一印象”。</p>
<p>（2）借助现有产品提携支持。 </p>
<p>（3）建立有效的分销渠道，搞好试销路。</p>
<p>（4）利用各种促销手段宣传产品、打开销路。</p>
<p>成长期的市场特征与营销策划</p>
<p>1．成长期的市场特征</p>
<p>（1）产品吸引力大，被消费者接受，销量增加快；</p>
<p>（2）产品基本定型，形成规模生产，成本下降，利润增加；</p>
<p>（3）分销渠道已经建立，有利的营销局面已经打开；</p>
<p>（4）市场价格趋于下降；</p>
<p>（5）市场竞争日趋激烈，但程度尚未达到最大。</p>
<p>（6）为应付竞争和市场扩张的需要，促销费用基本稳定或略有增加，但单位产品的促销费用大幅度下降。</p>
<p>2．成长期的市场策略 </p>
<p>（1）改良产品品质；</p>
<p>（2）加强调研，开发新的市场； </p>
<p>（3）加强促销环节，树立强有力的品牌形象；</p>
<p>（4）完善分销系统；</p>
<p>（5）选择适当时机调整价格，以争取更多的顾客。</p>
<p>成熟期的市场特征与营销策划</p>
<p>1．成熟期的市场特征</p>
<p>（1）市场趋于饱和，销售增长率的增长幅度开始下降，成熟期的后期甚至为负增长。</p>
<p>（2）产品的销售量和企业利润总额都达到了最高峰，后期开始下降。</p>
<p>（3）市场竞争最为激烈，企业与企业之间的价格战、广告战层出不穷，愈演愈烈；</p>
<p>（4）单位产品价格进一步下降，单位产品利润减少；</p>
<p>（5）相对其他阶段而言，成熟期的延续时间较长。</p>
<p>2．成熟期的市场策略</p>
<p>（1）市场改良：开辟新市场或扩充原有市场；</p>
<p>（2）产品改良：提高产品质量，开发多样化、系列化、差异化的产品；</p>
<p>（3）营销组合改良：调整 4PS 中各因素组合；</p>
<p>（4）准备产品的更新换代 。</p>
<p>衰退期的市场特征与营销策略组合</p>
<p>1．衰退期的市场特征</p>
<p>（1）新产品已经出现，老产品销售量迅速下降，消费者的兴趣已发生转移。</p>
<p>（2）价格已下降到最低水平，企业利润大幅度下降，甚至出现亏损。</p>
<p>（3）促销手段开始失灵，降价、让利、增加服务等促销手段都无济于事。</p>
<p>（4）多数企业无利可图，被迫退出市场。</p>
<p>2．衰退期的市场策略</p>
<p>（1）有计划、有步骤地淘汰疲软产品，即减产、转产或将产品转让给别的企业生产。</p>
<p>（2）促销减至最低水平，即减少到保持坚定忠诚者需求的水平。</p>
<p>（3）对分销系统进行选择，逐步淘汰无盈利的分销网点。</p>
<p>（4）转向新产品的开发、试销。</p>
</li>
<li><h5 id="品牌策略：品牌和商标的联系与区别，掌握品牌策略"><a href="#品牌策略：品牌和商标的联系与区别，掌握品牌策略" class="headerlink" title="品牌策略：品牌和商标的联系与区别，掌握品牌策略"></a>品牌策略：品牌和商标的联系与区别，掌握品牌策略</h5><p>品牌是企业为了与竞争者的同类产品或服务相区别，而给自己的产品或服务所使用的一个名称、术语、符号、设计或以上四种的组合。品牌 = 品牌名称（品名）+ 品牌标志（品标）</p>
<p>商标（TradeMark）是指文字、图形、字母、数字、三维标志和颜色组合，以及上述要素组合的生产者、经营者把自己的商品或服务区别于别的商品或服务的商品标记。当商标使用时，要用 “R” 或 “注” 明示，意指注册商标。商标是经注册后受法律保障其专用权的整个品牌、品牌标志、品牌角色或者各要素的组合。品牌角色是用人或拟人化的标识来代表品牌的方式。</p>
<p> 品牌与商标的不同之处主要是商标能够得到法律保护，而未经过注册获得商标权的品牌不受法律保护。所以说，商标是经过注册获得商标专用权从而受到法律保护的品牌。 品牌与商标都是用以识别不同生产经营者的不同种类、不同品质产品的商业名称及其标志。商标不仅只是一种标志或标记，更多的时候它也包括名称或称谓部分，在品牌注册形成商标的过程中，这两部分常常是一起注册，共同受到法律的保护。在企业的营销实践中，品牌与商标都是为了区别商品来源，便于消费者识别商品，以利竞争。可见，品牌与商标都是传播的基本元素。</p>
<p>（4）品牌决策</p>
<p>   （一）品牌类型                       （二）品牌使用决策</p>
<p>   （三）品牌扩展决策                   （四）品牌重新定位决策</p>
<p>1、品牌类型</p>
<p>​    ①生产者品牌                        ②销售者品牌</p>
<p>​    ③混合品牌                          ④无品牌</p>
<p>2、品牌使用决策</p>
<p>​    ①统一品牌策略                  ②多品牌策略</p>
<p>​    ③个别品牌策略                  ④新品牌策略</p>
<p>​    ⑤主副品牌策略 </p>
<p>3、品牌扩展决策</p>
<p>​    品牌扩展决策（也称为品牌延伸）是指企业利用其成功品牌名称的声誉来推出改良产品或新产品。</p>
<p>​    品牌扩展有利于降低新产品的市场导入费用和风险，可以使新产品借助成功品牌的市场信誉顺利地进占市场。</p>
<p>   但如果新产品不尽如人意，消费者不仅不认可，反而会影响该品牌的信誉。另外，品牌扩展还需要考虑产品之间的关联性。</p>
<p>4、品牌重新定位决策</p>
<p>   是指全部或部分调整或改变品牌原有市场定位的做法。</p>
<p>   目的是使现有产品具有与竞争者产品不同的特点，与竞争者拉开距离（或分清界限），以诱发消费需求，增强品牌竞争力。</p>
</li>
</ol>
<h2 id="价格策略"><a href="#价格策略" class="headerlink" title="价格策略"></a>价格策略</h2><ol>
<li><h5 id="影响定价的因素"><a href="#影响定价的因素" class="headerlink" title="影响定价的因素"></a>影响定价的因素</h5></li>
<li><p>总体市场营销战略、目标以及营销组合</p>
</li>
<li><p>组织考虑</p>
</li>
<li><p>市场与需求</p>
</li>
<li><p>经济</p>
</li>
<li><p>其他外部因素</p>
</li>
<li><h5 id="定价方法"><a href="#定价方法" class="headerlink" title="定价方法"></a>定价方法</h5><p>1、基于成本定价法</p>
<p>​	成本的种类、不同生产水平下的成本</p>
<p>2、基于顾客价值定价法</p>
<p>超值定价、增值定价</p>
<p>3、基于竞争定价</p>
<p>①随行就市定价法、    ②投标定价法</p>
</li>
<li><h5 id="定价策略"><a href="#定价策略" class="headerlink" title="定价策略"></a>定价策略</h5><p>新产品定价策略</p>
<ol>
<li><p>市场撇脂定价法</p>
<p>开始时将价格定得很高，在市场上一层一层地获取收入。</p>
</li>
<li><p>市场渗透定价法</p>
<p>一开始不定得很高，只在规模较小但利润率较高的细分市场上获取利润，而是采用市场渗透定价法</p>
</li>
</ol>
<p>产品组合定价策略</p>
<ol>
<li><p>产品线定价</p>
<p>对同一产品线内的不同产品差别定价</p>
<ol start="2">
<li>备选产品定价</li>
</ol>
<p>对与主体产品同时卖出的备选产品或附件定价</p>
<ol start="3">
<li>附属产品定价</li>
</ol>
<p>对必须与主体产品一起使用的产品定价</p>
<ol start="4">
<li>副产品定价</li>
</ol>
<p>对低价值的副产品定价以抵消处理成本</p>
<ol start="5">
<li>产品束定价</li>
</ol>
<p>对共同出售的产品组合定价</p>
</li>
</ol>
</li>
</ol>
<h2 id="分销渠道策略"><a href="#分销渠道策略" class="headerlink" title="分销渠道策略"></a>分销渠道策略</h2><ol>
<li><h5 id="分销渠道概述"><a href="#分销渠道概述" class="headerlink" title="分销渠道概述"></a>分销渠道概述</h5><p>分销渠道是指” 当产品从生产者向最后消费者或产业用户移动时，直接或间接转移所有权所经过的途径。” </p>
</li>
<li><h5 id="分销渠道设计决策，影响分销渠道选择的因素"><a href="#分销渠道设计决策，影响分销渠道选择的因素" class="headerlink" title="分销渠道设计决策，影响分销渠道选择的因素"></a>分销渠道设计决策，影响分销渠道选择的因素</h5><p>分析消费者需求，确定渠道目标，明确主要的渠道选择，评估主要的分销渠道，设计国际分销渠道。</p>
<p>（一）产品因素</p>
<p>产品价格，体积重量，产品的易毁性或易腐性，技术性，定制品和标准品，新产品</p>
<p>（二）市场因素</p>
<p>购买批量大小，消费者分布，潜在顾客数量，消费者的购买习惯</p>
<p>（三）企业因素</p>
<p>奖金能力、销售能力、提供服务水平、发货限额</p>
<p>（四）政策规定</p>
<p>（五）经济收益</p>
<p>销售费用，价格分析</p>
<p>（六）中间商特性</p>
</li>
<li><h5 id="分销渠道的选择"><a href="#分销渠道的选择" class="headerlink" title="分销渠道的选择"></a>分销渠道的选择</h5><p>中介机构的种类  公司应当确认能够承担渠道工作的渠道成员种类</p>
<p>营销中间商的数量	公司还必须确定在各个层次上渠道人员的数量</p>
<p>渠道成员的责任	制造商和中间商需要对合作条款以及各个渠道成员的责任达成一致</p>
</li>
</ol>
<h2 id="促销渠道"><a href="#促销渠道" class="headerlink" title="促销渠道"></a>促销渠道</h2><ol>
<li><h5 id="促销策略概述——了解促销组合要素的构成"><a href="#促销策略概述——了解促销组合要素的构成" class="headerlink" title="促销策略概述——了解促销组合要素的构成"></a>促销策略概述 —— 了解促销组合要素的构成</h5><p><strong>促销</strong>是促进产品销售的简称，它是指企业采用各种手段和方式向消费者或用户传递有关企业及其产品的信息，使潜在顾客对企业及其产品产生兴趣、好感和信任，促进其购买企业产品的活动。</p>
<p>促销的<strong>实质</strong>是卖方和买方之间进行营销信息沟通的过程，其目的在于赢得信任、诱导需求、刺激消费、促进购买。</p>
</li>
<li><p>广告：由特定的资助者出资，以非人员的方式对创意、产品或服务进行推广</p>
</li>
<li><p>人员推销：由公司销售人员介绍商品，以达到销售和建立顾客关系的目标</p>
</li>
<li><p>销售推广：鼓励购买产品或服务的短期激励行为</p>
</li>
<li><p>公共关系：通过有利的宣传树立良好的公司形象，并应付或阻止不利的谣言、新闻或事件，从而与公司的各个公众群体建立良好关系</p>
</li>
<li><p>直复营销：与经过认真确定的目标顾客进行直接的联系，从而获取直接的回应，建立持久的顾客关系</p>
</li>
</ol>
<p>认识以上促销方式的特点及适用</p>
<p><strong>促销组合</strong>是指企业在市场营销过程中有目的、有计划地把<strong>人员推销</strong>、<strong>广告</strong>、<strong>营业推广</strong>和<strong>公共关系</strong>等促销形式结合起来，综合运用，形成一个完整的优化促销策略，最大限度地发挥整体效果，从而顺利实现促销目标。</p>
<p><strong>人员推销</strong>是以满足消费者的需求为中心，以上门销售服务为主要形式，以向消费者宣传、介绍产品，说服消费者购买为手段，向消费者提供其真正需要的满意产品的一种销售行为。</p>
<p><strong>广告</strong>是公司用来直接向目标买主和公众传递有说服力的信息的主要工具之一。</p>
<p>营业推广又称为销售促进，是指那些能够刺激顾客作出强烈反应，促进短期购买行为的促销方式。</p>
<p><strong>公共关系</strong>，是指通过宣传报道等方式来提高企业的知名度和声誉的一种促销手段。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190624/65r8HC2Osk6z.png" alt="mark"></p>
<h2 id="竞争优势——竞争结构，竞争战略"><a href="#竞争优势——竞争结构，竞争战略" class="headerlink" title="竞争优势——竞争结构，竞争战略"></a>竞争优势 —— 竞争结构，竞争战略</h2><p>基本竞争战略</p>
<ul>
<li>全面成本依靠战略：努力地将生产和分销成本降到最低，确保自己能够把价格定得比竞争者低</li>
<li>差异化战略：集中精力创造高度差异化的产品线和营销方案</li>
<li>聚焦战略：集中精力服务于几个细分市场而不是追求整个市场</li>
</ul>
]]></content>
      <tags>
        <tag>课程</tag>
      </tags>
  </entry>
  <entry>
    <title>Servlet JSP 复习</title>
    <url>/2019/06/20/Servlet-JSP-%E5%A4%8D%E4%B9%A0/</url>
    <content><![CDATA[<ol>
<li><p>What is web container ?</p>
<p>Web container is the component in J2EE which is responsible for handle request from client. Web Server application like tomcat is used to support basic service for web container, e.g., receive request and forward reply to client.<span id="more"></span></p>
</li>
<li><p>What is Servlet ?<br>An important base class in J2EE which is the service unit for request of client.</p>
</li>
<li><p>What is JSP technology ?<br>JavaServer Pages enable you to write standard HTML pages containing tags that run powerful programs based on Java technology.</p>
</li>
<li><p><strong>What technology is used to implement the session management in J2EE ?</strong></p>
<p>Cookie, URL-rewriting, Hidden form field, Servlet Session API.</p>
</li>
<li><p>What is business tier? How to use it? (draw a chart to explain)</p>
</li>
</ol>
<p>   Business code or tier, which is logic that solves or meets the needs of a particular<br>   business domain such as banking, retail, or finance.</p>
<p>   <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190620/quBBbOPIDies.jpg" alt="mark"></p>
<ol start="6">
<li>How does J2EE web container work? (draw a chart.)</li>
</ol>
<p>   <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190620/rIbKy67XDkOJ.png" alt="mark"></p>
<ol start="7">
<li><p><strong>What is JNDI and JDBC?</strong></p>
<p>JNDI is Java Naming and Directory Interface. A naming context is a set of name-to-object bindings. A name that is bound within a context is the JNDI name of the object, with which, application can find resource or object easily. In the JNDI, databases are accessed via DataSource objects.</p>
</li>
<li><p>What scopes can be used to share objects between Servlets (lists at least 3.)</p>
<p>request, response, ServletContext, Session</p>
</li>
<li><p>What is Authentication and Authorization in J2EE?</p>
<p>Authorization provides controlled access to protected resources. Authorization is based on identification and authentication. Authentication is a process that verifies the identity of a user, device, or other entity in a computer system, usually as a prerequisite to allowing access to resources in a system.</p>
</li>
<li><p>What is ServletContext?</p>
</li>
</ol>
<p>   Defines a set of methods that a servlet uses to communicate with its servlet container, for example, to get the MIME type of a file, dispatch requests, or write to a log file.</p>
<ol start="11">
<li><p>What is FilterChain in J2EE?</p>
<p>A FilterChain is an object provided by the servlet container to the developer giving a view into the invocation chain of a filtered request for a resource. Filters use the FilterChain to invoke the next filter in the chain, or if the calling filter is the last filter in the chain, to invoke the resource at the end of the chain. </p>
</li>
<li><p><strong>What is servlet life cycle? (Draw a chart to explain)</strong></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190620/kFFLFLuERVsA.png" alt="mark"></p>
</li>
<li><p>What is DAO design pattern?</p>
<p>The DAO design pattern (2 of them): 1) Separates object persistence and data access logic from the business logic or persistence mechanism API. 2) Enables you to change the data access code at any point in time without modifying the application code. 3) Can be implemented by using various interfaces, frameworks, and commercial products that can separate the data access from the application logic. 4) Is implemented in the Java technology, Java Naming and Directory Interface (JNDI).</p>
</li>
<li><p>What is Data Integrity and Auditing in J2EE security?</p>
<p>Data Integrity: Ensures that data is not modified while being transferred between the server and the client.</p>
<p>Auditing: Secures Web applications by maintaining a record of the rights assigned to different types of Web users.</p>
</li>
</ol>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line">getServletConfig().getInitParameter(<span class="string">"fileName"</span>));</span><br><span class="line"></span><br><span class="line">res.setContextType(<span class="string">"text/HTML"</span>);</span><br><span class="line">res.getWriter();</span><br><span class="line">res.sendRedirect();</span><br><span class="line">req.getCookies();</span><br><span class="line">res.addCookie();</span><br><span class="line">req.getPatameter();</span><br><span class="line">req.getSession(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Error Handle</span></span><br><span class="line">res.sendError(<span class="type">int</span> status);</span><br><span class="line">res.setStatus(<span class="type">int</span> status);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Inter Servlet</span></span><br><span class="line"><span class="type">RequestDispatcher</span> <span class="variable">dispatch</span> <span class="operator">=</span> </span><br><span class="line">    getServletContext().getRequestDispatcher(<span class="string">"/CopyrightServlet"</span>);</span><br><span class="line">dispatch.include(req, res);</span><br><span class="line">dispatch.forward(req, res);</span><br><span class="line"></span><br><span class="line"><span class="comment">//doFilter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request,  ServletResponse response, FilterChain chain)</span></span><br><span class="line"> <span class="keyword">throws</span> ServletException, IOException {</span><br><span class="line">     <span class="type">long</span> <span class="variable">begin</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">     chain.doFilter(request, response);</span><br><span class="line">     <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">     <span class="type">StringBuffer</span> <span class="variable">logMessage</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">     <span class="keyword">if</span> (request <span class="keyword">instanceof</span> HttpServletRequest) {</span><br><span class="line">        logMessage = ((HttpServletRequest)request).getRequestURL();      }</span><br><span class="line">     logMessage.append(“: “);</span><br><span class="line">     logMessage.append(end - begin);</span><br><span class="line">     logMessage.append(“ ms”);</span><br><span class="line">     <span class="keyword">if</span>(logPrefix != <span class="literal">null</span>) {     logMessage.insert(<span class="number">0</span>,logPrefix);   }</span><br><span class="line"></span><br><span class="line">     config.getServletContext().log(logMessage.toString());</span><br><span class="line"> }</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>Java</category>
        <category>Servlet</category>
      </categories>
      <tags>
        <tag>Servlet</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Vim 一些常见操作技巧</title>
    <url>/2019/06/20/Vim%E4%B8%80%E4%BA%9B%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<ul>
<li><p>全选</p>
<p>普通模式下， <code>gg</code> 回到文件开始，<code>v</code> 进入可视模式， <code>G</code> 将光标移到文件结束。</p>
</li>
<li><p>复制到系统粘贴板</p>
<p>这个首先要看 <code>vim</code> 是否支持系统粘贴板 <code>vim --version | grep "clipboard" </code><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/2019-06-18/161409/">我这里 <code>clipboard</code> 前是 + 号，表示支持。如果是 <code>-</code> 号，可以百度下方法。</p>
<p>普通模式下，使用 <code>"+y</code> 复制到粘贴板。</p>
</li>
<li><p>交换相邻字符顺序</p>
<p>我编程时有时因为输入太快而导致字符顺序错误。比如将 return 输入成 retrun, endl 输入成 ednl。这样子的话将光标移到出现错误的第一个字符。然后普通模式下 <code>xp</code>。</p>
</li>
<li><p>正常模式转到插入模式</p>
<ul>
<li><code>i</code> 当前光标前插入， <code>I</code> 当前行首</li>
<li><code>a</code> 当前光标后插入， <code>A</code>  当前行尾</li>
<li><code>o</code> 下一行插入， <code>O</code> 上一行插入</li>
</ul>
</li>
<li><p><code>D</code>： d$</p>
</li>
<li><p><code>?</code>：从下而上查找， <code>/</code> 自上而下查找</p>
</li>
<li><p>保存新文件：<code>:w 路径+文件名</code></p>
</li>
<li><p><code>:!+bash命令</code>：运行终端命令</p>
</li>
<li><p><code>:s/old/new</code>：将旧的替换成新的，<strong>默认为当前行</strong></p>
</li>
<li><p><code>:3，5s/old/new</code>：从第 3 行到第 5 行替换</p>
</li>
<li><p><code>:s/old/new/g</code>：全局替换</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ new 失败时返回空指针</title>
    <url>/2019/06/20/C-new%E5%A4%B1%E8%B4%A5%E6%97%B6%E8%BF%94%E5%9B%9E%E7%A9%BA%E6%8C%87%E9%92%88/</url>
    <content><![CDATA[<p>最近读《Effective C++》时读到了 new-handler 一章，了解了 new/delete 一些知识，才知道原来 new/delete 是可以个性化的。<br>先说简单的一个收获，C++ new 失败后默认后抛出异常，如果我们想让他失败时返回空指针，则应该使用如下写法。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> *pi = <span class="built_in">new</span> (std::nothrow) <span class="type">int</span>[<span class="number">100000000000L</span>];</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>剑谱文章索引</title>
    <url>/2019/06/16/%E5%89%91%E8%B0%B1%E6%96%87%E7%AB%A0%E7%B4%A2%E5%BC%95/</url>
    <content><![CDATA[<ul>
<li>《一些好的开发习惯》：公众号自我介绍，科学上网助手、记录、虚拟机文件共享，链接：<a href="https://mp.weixin.qq.com/s/VNlzYchotgBbqiTn53jAsg">https://mp.weixin.qq.com/s/VNlzYchotgBbqiTn53jAsg</a></li>
<li>《校招面试前的一些准备》：春招找实习的准备工作（时间，简历，自我介绍模板，渠道，技术准备，深入部分、项目部分），链接：<a href="https://mp.weixin.qq.com/s/yXIY_-osPMAsySRFimktoQ">https://mp.weixin.qq.com/s/yXIY_-osPMAsySRFimktoQ</a></li>
<li>《掌握基础 - 方能决胜秋招》：技术类准备的基础工作，及一些资源的推荐，链接：<a href="https://mp.weixin.qq.com/s/zSQbfLv1YWR2oMvQwGXmug">https://mp.weixin.qq.com/s/zSQbfLv1YWR2oMvQwGXmug</a></li>
<li>《我的春招之路（上）》：谱哥春招经历，面经，链接：<a href="https://mp.weixin.qq.com/s/1Nu0v1iXPnb4p2ztXIKjiQ">https://mp.weixin.qq.com/s/1Nu0v1iXPnb4p2ztXIKjiQ</a></li>
<li>《我的春招之路（下）》：面经，总结，链接：<a href="https://mp.weixin.qq.com/s/Cgu50L-MOeMwNBg-Sk_t9A">https://mp.weixin.qq.com/s/Cgu50L-MOeMwNBg-Sk_t9A</a></li>
<li>《腾讯百度实习经历》：链接：<a href="https://mp.weixin.qq.com/s/BaxJPkw7DunMvcJIibq_gA">https://mp.weixin.qq.com/s/BaxJPkw7DunMvcJIibq_gA</a></li>
<li>《我的秋招准备》：Linux C/C++ 常见问题整理及 C++ 常见问题列表，链接：<a href="https://mp.weixin.qq.com/s/ClrX-JUTh4ftF4ZFSDgHnQ">https://mp.weixin.qq.com/s/ClrX-JUTh4ftF4ZFSDgHnQ</a></li>
<li>《秋招玄学贴》：秋招经历、一些面经、注意事项，链接：<a href="https://mp.weixin.qq.com/s/wsBPWQiS6l3XX0jPQRnLvw">https://mp.weixin.qq.com/s/wsBPWQiS6l3XX0jPQRnLvw</a></li>
<li>《我的秋招之路 (上)》：对于秋招的建议，面经，链接：<a href="https://mp.weixin.qq.com/s/8PeaTnAMbVU-kvMaye3SGw">https://mp.weixin.qq.com/s/8PeaTnAMbVU-kvMaye3SGw</a></li>
<li>《我的秋招之路 (下)》：面经，Linux C/C++ 一些题目，链接： <a href="https://mp.weixin.qq.com/s/r6bsLFzwvYnaBs5MrvXbRQ">https://mp.weixin.qq.com/s/r6bsLFzwvYnaBs5MrvXbRQ</a><span id="more"></span></li>
<li>《Linux 常见问题》：链接：<a href="https://mp.weixin.qq.com/s/37fvXePIIxZFnklV_t0g5Q">https://mp.weixin.qq.com/s/37fvXePIIxZFnklV_t0g5Q</a></li>
<li>《七大进程间通信和线程同步》：链接：<a href="https://mp.weixin.qq.com/s/VV_mTpuOYFIZRb94mwhr2Q">https://mp.weixin.qq.com/s/VV_mTpuOYFIZRb94mwhr2Q</a></li>
<li>《六大高并发模型》：链接：六大高并发模型</li>
<li>《我的编程之路》：谱哥大学经历，励志！链接：<a href="https://mp.weixin.qq.com/s/c8Oy2_uOWbm5UydlDJCpnA">https://mp.weixin.qq.com/s/c8Oy2_uOWbm5UydlDJCpnA</a></li>
<li>《我的大学四年》：大学生活真好，链接：<a href="https://mp.weixin.qq.com/s/kGmlUAaPAN92gLwoccpN6w">https://mp.weixin.qq.com/s/kGmlUAaPAN92gLwoccpN6w</a></li>
<li>《毕业啦。。。》：一路走来的一些新的体会，链接：<a href="https://mp.weixin.qq.com/s/0QyeyfeMiepXrKZOdR6weQ">https://mp.weixin.qq.com/s/0QyeyfeMiepXrKZOdR6weQ</a></li>
<li>《前段时间的小结》：链接：<a href="https://mp.weixin.qq.com/s/0Ag0nvzTmpW70BQxiTGWTg">https://mp.weixin.qq.com/s/0Ag0nvzTmpW70BQxiTGWTg</a></li>
<li>《2018 上半年总结》：链接：<a href="https://mp.weixin.qq.com/s/-Z5N9qJlDpjGukedgIMp0A">https://mp.weixin.qq.com/s/-Z5N9qJlDpjGukedgIMp0A</a></li>
<li>《实习生 VS 正式员工》：两者在请假、工作、心态上的区别，链接：<a href="https://mp.weixin.qq.com/s/M1_hH8UGZ9xauH5Hywjovg">https://mp.weixin.qq.com/s/M1_hH8UGZ9xauH5Hywjovg</a></li>
<li>《还在路上》： 链接：<a href="https://mp.weixin.qq.com/s/x7646FT-Qz85Vr1nS9g9qg">https://mp.weixin.qq.com/s/x7646FT-Qz85Vr1nS9g9qg</a></li>
<li>《我的转行之路》：非计算机相关专业的转行经历 <a href="https://mp.weixin.qq.com/s/1ByN-kzk-G3RHoApeFp8-Q">https://mp.weixin.qq.com/s/1ByN-kzk-G3RHoApeFp8-Q</a></li>
<li>《从基础学起编程》：链接：<a href="https://mp.weixin.qq.com/s/LaAshRDLv67cEUjaM0uUqQ">https://mp.weixin.qq.com/s/LaAshRDLv67cEUjaM0uUqQ</a></li>
<li>《C 语言程序设计 — 入门篇》：C 语言基础，链接：<a href="https://mp.weixin.qq.com/s/LIbzpT9MfZE_5wtdCetcgA">https://mp.weixin.qq.com/s/LIbzpT9MfZE_5wtdCetcgA</a></li>
<li>《阿里 — 破冰之旅》：链接：<a href="https://mp.weixin.qq.com/s/6rDF4mpQ96jfkZg1_tpEPg">https://mp.weixin.qq.com/s/6rDF4mpQ96jfkZg1_tpEPg</a></li>
<li>《C 语言程序设计 — 常量和变量》：C 语言基础知识及一些题目，链接：<a href="https://mp.weixin.qq.com/s/8Jgqbl5Xhy2fCZUJFM2vEQ">https://mp.weixin.qq.com/s/8Jgqbl5Xhy2fCZUJFM2vEQ</a></li>
<li>《C 语言程序设计 — 数据类型及运算符》：C 语言基础知识，链接：<a href="https://mp.weixin.qq.com/s/Gaz2PtMOzbwEjbqAbz92iQ">https://mp.weixin.qq.com/s/Gaz2PtMOzbwEjbqAbz92iQ</a></li>
<li>《我为什么建议大家一定的会 C 语言》：C 语言的重要性，链接：<a href="https://mp.weixin.qq.com/s/3vC8p9A3cV4ZML1gKylUJw">https://mp.weixin.qq.com/s/3vC8p9A3cV4ZML1gKylUJw</a></li>
<li>《首次 — 重大福利！！！》：送书，送门票 ，链接：<a href="https://mp.weixin.qq.com/s/CPRoBEP2m-whc3lpE6zW2A">https://mp.weixin.qq.com/s/CPRoBEP2m-whc3lpE6zW2A</a></li>
<li>《这有点出乎我意料了》：公众号经营小结，链接：<a href="https://mp.weixin.qq.com/s/QqZJip8Kmbcw2Q6JCkEDpQ">https://mp.weixin.qq.com/s/QqZJip8Kmbcw2Q6JCkEDpQ</a></li>
<li>《C 语言程序设计 — 必会的 Linux》：Linux C 的一些知识，Linux 的重要性，链接：<a href="https://mp.weixin.qq.com/s/N06MnDY39dpJXcSkZoCdrQ">https://mp.weixin.qq.com/s/N06MnDY39dpJXcSkZoCdrQ</a></li>
<li>《浅谈秋招》：秋招秘籍、注意事项、准备事项。链接：<a href="https://mp.weixin.qq.com/s/ugDZi6yRNoOqwSxkdDErcg">https://mp.weixin.qq.com/s/ugDZi6yRNoOqwSxkdDErcg</a></li>
<li>《我的阿里巴巴求职之路》：求职经历，阿里面经。链接：<a href="https://mp.weixin.qq.com/s/4fbSxSVRmlw0eb8R0UAsEQ">https://mp.weixin.qq.com/s/4fbSxSVRmlw0eb8R0UAsEQ</a></li>
<li>《算法成神之路》：数据结构与算法知识点，资源推荐及分享，链接：<a href="https://mp.weixin.qq.com/s/hU6rEDDTod9tSAz5yJDPHA">https://mp.weixin.qq.com/s/hU6rEDDTod9tSAz5yJDPHA</a></li>
<li>《从根本上给大家革命》：五大能力：检索能力、判断力、快速学习能力、应用业务能力、解决问题的能力，链接：<a href="https://mp.weixin.qq.com/s/z2Er9pxF6x9FwcHHOXAx9g">https://mp.weixin.qq.com/s/z2Er9pxF6x9FwcHHOXAx9g</a></li>
<li>《在成长的路上，与你同行。。。》：公众号介绍，及谱哥的一些自我介绍， 链接：<a href="https://mp.weixin.qq.com/s/5aF93Ue5GuQqUw_giIve3Q">https://mp.weixin.qq.com/s/5aF93Ue5GuQqUw_giIve3Q</a></li>
<li>《C 语言程序设计 — 结构化程序设计》：C 语言结构化思想、入门教程、三步走战略、五大能力体系、思维、打法，链接：<a href="https://mp.weixin.qq.com/s/vSZq9NQbHrgqVkoRhTm0JQ">https://mp.weixin.qq.com/s/vSZq9NQbHrgqVkoRhTm0JQ</a></li>
<li>《我为什么建议大家一定要考研？》：链接：<a href="https://mp.weixin.qq.com/s/VOHHFP6SyXwYwqSQgwMg6w">https://mp.weixin.qq.com/s/VOHHFP6SyXwYwqSQgwMg6w</a></li>
<li>《一人一江湖》：侠，链接：<a href="https://mp.weixin.qq.com/s/FO0uLddhtSrLGEc9ePZKfQ">https://mp.weixin.qq.com/s/FO0uLddhtSrLGEc9ePZKfQ</a></li>
<li>《C 语言程序设计 — 数组》：数组基本知识，链接：<a href="https://mp.weixin.qq.com/s/jWHvXOES5k4m3psA_6jz3A">https://mp.weixin.qq.com/s/jWHvXOES5k4m3psA_6jz3A</a></li>
<li>《初入互联网行业，如何选择？》：战略思维、如何选择、一些建议。链接：<a href="https://mp.weixin.qq.com/s/PWqoBOh9jk-CFjAjpNQyAQ">https://mp.weixin.qq.com/s/PWqoBOh9jk-CFjAjpNQyAQ</a></li>
<li>《如何在编程的路上走得更远？》：90 % 以上的技术问题都可以通过 google 解决、学什么语言不重要，重要的是基础 + 算法、学习编程的时候看书还是看视频、看了 offershow 上面的薪资，普遍都把去年的倒挂了，链接：<a href="https://mp.weixin.qq.com/s/iOlvNlzsfE0EjnpH2_xSRQ">https://mp.weixin.qq.com/s/iOlvNlzsfE0EjnpH2_xSRQ</a></li>
<li>《真正的零基础，非科班如何自学编程！》：非科班学生如何自学编程，信心 + 决心、兴趣 + 坚持、方法 + 习惯、能力 + 潜力，链接：<a href="https://mp.weixin.qq.com/s/n-MM0Pwl5w_kuSsSneZX5Q">https://mp.weixin.qq.com/s/n-MM0Pwl5w_kuSsSneZX5Q</a></li>
<li>《如何找到 BAT 的实习机会》：如何找到实习机会 、面试经历、面试的几点体会、实习的重要性，链接：<a href="https://mp.weixin.qq.com/s/mIoPfQ73_kMtz2RsseVhwA">https://mp.weixin.qq.com/s/mIoPfQ73_kMtz2RsseVhwA</a></li>
<li>《大学期间的人生选择》：4 个人在大学期间的战略选择，链接：<a href="https://mp.weixin.qq.com/s/h2715im3Dlgb_KzBLiXAXQ">https://mp.weixin.qq.com/s/h2715im3Dlgb_KzBLiXAXQ</a></li>
<li>《找实习中的一些困惑，如何解决？》：春招实习备战，学到什么程度才能找实习、小公司实习值不值得去，技术尝到什么程度才能找到大厂实习，链接：<a href="https://mp.weixin.qq.com/s/RgxNxa9BDBxepj7_aWyaZw">https://mp.weixin.qq.com/s/RgxNxa9BDBxepj7_aWyaZw</a></li>
<li>《我的 2018 年终总结》：2018 年终总结，链接：<a href="https://mp.weixin.qq.com/s/0_2f2UDXbS5mHqrOB8vxRQ">https://mp.weixin.qq.com/s/0_2f2UDXbS5mHqrOB8vxRQ</a></li>
<li>《在 BAT 实习期间，无出其右的战略打法！！！》：实习经历、实习经验、边实习边备战秋招、实习总结，链接：<a href="https://mp.weixin.qq.com/s/EIdZtokBq0fdUMDpGZibwg">https://mp.weixin.qq.com/s/EIdZtokBq0fdUMDpGZibwg</a></li>
<li>《C 语言程序设计 — 指针》：C 语言指针知识，链接：<a href="https://mp.weixin.qq.com/s/MXkAdfvoPtUbPRaN6y6eTw">https://mp.weixin.qq.com/s/MXkAdfvoPtUbPRaN6y6eTw</a></li>
<li>《C 语言程序设计 — 函数》：C 语言函数知识，链接：<a href="https://mp.weixin.qq.com/s/ikNe8ltmF3vEt3azCaAYDg">https://mp.weixin.qq.com/s/ikNe8ltmF3vEt3azCaAYDg</a></li>
<li>《C 语言程序设计 — 结构体、共用体、动态存储分配、define、typedef》：C 语言知识，链接：<a href="https://mp.weixin.qq.com/s/nMUCvWwqU27KLsm746Dhaw">https://mp.weixin.qq.com/s/nMUCvWwqU27KLsm746Dhaw</a></li>
<li>《选 Python 还是 Java ？》：对两者选择问题的一些看法，以及基础知识的重要性，链接：<a href="https://mp.weixin.qq.com/s/GDA-RTsiy5chixdxAQAQOw">https://mp.weixin.qq.com/s/GDA-RTsiy5chixdxAQAQOw</a></li>
<li>《春招 / 秋招面试前必看一文》：春招、秋招的相关问题， 如何准备春招、秋招， 要学习的知识 ，链接：<a href="https://mp.weixin.qq.com/s/4PYJpcgjBDyu9ADqvVNZIw">https://mp.weixin.qq.com/s/4PYJpcgjBDyu9ADqvVNZIw</a></li>
<li>《2019，一起努力奋斗！》：星球介绍，链接：<a href="https://mp.weixin.qq.com/s/RCPB9KI4BszGaEkPFTxyMg">https://mp.weixin.qq.com/s/RCPB9KI4BszGaEkPFTxyMg</a></li>
<li>《校招手握数十个 offer，如何抉择？》：得到 offer 后的选择问题，链接：<a href="https://mp.weixin.qq.com/s/0tGnoxJHrPdjj2PiUj-tGA">https://mp.weixin.qq.com/s/0tGnoxJHrPdjj2PiUj-tGA</a></li>
<li>《来自一位球友的提问 —&gt; 激励、认知、高效执行力》：平时是如何激励自己？ 如何从根本上提高自己认知能力？ 如何培养自己高效的执行力？ 链接：<a href="https://mp.weixin.qq.com/s/Mu415T2FUZBcDjd57FgwjA">https://mp.weixin.qq.com/s/Mu415T2FUZBcDjd57FgwjA</a></li>
<li>《到底是我逃避就业，还是你畏惧考研？》：考研、就业之间的选择，链接：<a href="https://mp.weixin.qq.com/s/SRoUYUAmhVr8B82wS_NMCg">https://mp.weixin.qq.com/s/SRoUYUAmhVr8B82wS_NMCg</a></li>
<li>《我的大学实验室 — 上（选拔）》，链接：<a href="https://mp.weixin.qq.com/s/NumQD_y50dSv0cCkNXMYrA">https://mp.weixin.qq.com/s/NumQD_y50dSv0cCkNXMYrA</a></li>
<li>《我的大学实验室 — 中（学习）》，链接：<a href="https://mp.weixin.qq.com/s/_jX9jpJydzQsUpbUxt2lBQ">https://mp.weixin.qq.com/s/_jX9jpJydzQsUpbUxt2lBQ</a></li>
<li>《假期前，给大家送一波福利！》：福利贴，链接：<a href="https://mp.weixin.qq.com/s/XapBy1OyrP5H868zMwsPHw">https://mp.weixin.qq.com/s/XapBy1OyrP5H868zMwsPHw</a></li>
<li>《我的大学实验室 — 下（成长）》：实验室一些收获与想法，链接：<a href="https://mp.weixin.qq.com/s/EsXW5Fv1HTStiL8QEsD76Q">https://mp.weixin.qq.com/s/EsXW5Fv1HTStiL8QEsD76Q</a></li>
<li>《浅谈 996，一些真实经历与想法》：996 经历、思考、想说的，链接：<a href="https://mp.weixin.qq.com/s/npm26wrznZinNP0SfokZwA">https://mp.weixin.qq.com/s/npm26wrznZinNP0SfokZwA</a></li>
<li>《强烈推荐在校学生值得一看的文章》：公众号的发展、三步走战略、五大能力、精选文章，链接：<a href="https://mp.weixin.qq.com/s/867hluUTiO2Hx-9ntRAKbQ">https://mp.weixin.qq.com/s/867hluUTiO2Hx-9ntRAKbQ</a></li>
<li>《Linux C/C++ 学习路线（已拿腾讯、百度 offer）》：校招 Linux C/C++ offer 情况、Linux C/C++ 方向的一些思考、计算机基础知识的梳理、C++ 方向深入学习路线、项目 + 亮点 + 面试的一些思考、总结，C++ 一些常见问题及知识点，资源分享，链接：<a href="https://mp.weixin.qq.com/s/kxBpVoQVUCl04dh1tB9tzg">https://mp.weixin.qq.com/s/kxBpVoQVUCl04dh1tB9tzg</a></li>
<li>《Java 学习路线》：Java 方向的思考，Java 基础与进阶， Java Web， 后台三大框架，一些核心技术点，大数据，链接：<a href="https://mp.weixin.qq.com/s/YJpf-IvBGKEDR6o60BHBZg">https://mp.weixin.qq.com/s/YJpf-IvBGKEDR6o60BHBZg</a></li>
<li>《数据分析学习路线》：数据分析方向的思考、数据分析学习路线、推荐资料、链接：<a href="https://mp.weixin.qq.com/s/o_jGhCHfV786Wh6Hitk0Ww">https://mp.weixin.qq.com/s/o_jGhCHfV786Wh6Hitk0Ww</a></li>
<li>《Linux 学习路线》：Linux 方向的思考、Linux 学习路线、极客时间课程推荐，链接：<a href="https://mp.weixin.qq.com/s/MfPFbjbra5n5JflrAR_MLQ">https://mp.weixin.qq.com/s/MfPFbjbra5n5JflrAR_MLQ</a></li>
<li>《我的上海之旅》：记录文，一些思考， 努力只能及格、拼命才能优秀！，链接：<a href="https://mp.weixin.qq.com/s/m6RWKa0sPm_qeeWzkwAHTQ">https://mp.weixin.qq.com/s/m6RWKa0sPm_qeeWzkwAHTQ</a></li>
</ul>
]]></content>
      <tags>
        <tag>剑谱</tag>
      </tags>
  </entry>
  <entry>
    <title>Google KickStart 2019B Circuit Board</title>
    <url>/2019/05/29/Google-KickStart-2019B-Circuit-Board/</url>
    <content><![CDATA[<p>传送门：<a href="https://codingcompetitions.withgoogle.com/kickstart/round/0000000000050ff2/0000000000150aae">Circuit Board</a></p>
<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Arsh recently found an old rectangular circuit board that he would like to recycle. The circuit board has <strong>R</strong> rows and <strong>C</strong> columns of squares.</p>
<p>Each square of the circuit board has a thickness, measured in millimetres. The square in the r-th row and c-th column has thickness <strong>Vr,c</strong>. A circuit board is <em>good</em> if in each row, the difference between the thickest square and the least thick square is no greater than <strong>K</strong>.</p>
<p>Since the original circuit board might not be good, Arsh would like to find a good subcircuit board. A subcircuit board can be obtained by choosing an axis-aligned subrectangle from the original board and taking the squares in that subrectangle. Arsh would like your help in finding the number of squares in the largest good subrectangle of his original board.<span id="more"></span></p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input gives the number of test cases, <strong>T</strong>. <strong>T</strong> test cases follow. Each test case begins with one line containing three integers <strong>R</strong>, <strong>C</strong> and <strong>K</strong>, the number of rows, the number of columns, and the maximum difference in thickness allowed in each row.</p>
<p>Then, there are <strong>R</strong> more lines containing <strong>C</strong> integers each. The c-th integer on the r-th line is <strong>Vr, c</strong>, the thickness of the square in the r-th row and c-th column.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the test case number (starting from 1) and <code>y</code> is the maximum number of squares in a good subrectangle.</p>
<h3 id="Limits"><a href="#Limits" class="headerlink" title="Limits"></a>Limits</h3><p>Time limit: 15 seconds per test set.<br>Memory limit: 1GB.<br>1 ≤ <strong>T</strong> ≤ 50.<br>1 ≤ <strong>R</strong> ≤ 300.<br>1 ≤ <strong>C</strong> ≤ 300.<br>0 ≤ <strong>Vi, j</strong> ≤ 103 for all i, j.</p>
<h4 id="Test-set-1-Visible"><a href="#Test-set-1-Visible" class="headerlink" title="Test set 1 (Visible)"></a>Test set 1 (Visible)</h4><p><strong>K</strong> = 0.</p>
<h4 id="Test-set-2-Hidden"><a href="#Test-set-2-Hidden" class="headerlink" title="Test set 2 (Hidden)"></a>Test set 2 (Hidden)</h4><p>0 ≤ <strong>K</strong> ≤ 103.</p>
<h3 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h3><table>
<thead>
<tr>
<th>Input 1</th>
<th>Output 1</th>
</tr>
</thead>
<tbody><tr>
<td><code>3 1 4 0 3 1 3 3 2 3 0 4 4 5 7 6 6 4 5 0 2 2 4 4 20 8 3 3 3 12 6 6 3 3 3 1 6 8 6 4   </code></td>
<td><code>Case #1: 2 Case #2: 2 Case #3: 6     </code></td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Input 2</th>
<th>Output 2</th>
</tr>
</thead>
<tbody><tr>
<td><code>3 1 4 2 3 1 3 3 3 3 2 0 5 0 8 12 3 7 10 1 4 4 8 20 10 20 10 10 4 5 20 20 5 4 10 10 20 10 20   </code></td>
<td><code>Case #1: 4 Case #2: 3 Case #3: 4    </code></td>
</tr>
</tbody></table>
<p>Note: Sample 2 is not valid for Test set 1. Sample 1 will be tested prior to running Test set 1 (the same way samples normally are). However, Sample 2 will <strong>not</strong> be tested prior to running Test set 2.</p>
<p>The sample cases are illustrated below. For each case, the good subcircuit board with the largest number of squares is highlighted in green.</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190602/X3xP93s15bBe.JPG" alt="mark"></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 305</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> T, r, c, k;</span><br><span class="line"><span class="type">int</span> v[<span class="number">305</span>][<span class="number">305</span>];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">305</span>][<span class="number">305</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> kiss = <span class="number">1</span>; kiss &lt;= T; kiss++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;r, &amp;c, &amp;k);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=r; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=c; j++)</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v[i][j]);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=r; i++)</span><br><span class="line">        {</span><br><span class="line">            dp[i][c] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=c<span class="number">-1</span>; j&gt;=<span class="number">1</span>; j--)</span><br><span class="line">            {</span><br><span class="line">                <span class="type">int</span> minn = v[i][j];</span><br><span class="line">                <span class="type">int</span> maxx = v[i][j];</span><br><span class="line">                dp[i][j] = c-j<span class="number">+1</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> f = j<span class="number">+1</span>; f&lt;=c; f++)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span>(v[i][f] &gt; maxx)</span><br><span class="line">                        maxx = v[i][f];</span><br><span class="line">                    <span class="keyword">if</span>(v[i][f] &lt; minn)</span><br><span class="line">                        minn= v[i][f];</span><br><span class="line">                    <span class="keyword">if</span>(maxx - minn &gt; k)</span><br><span class="line">                    {</span><br><span class="line">                        dp[i][j] = f-j;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> maxx = r;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=r; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=c; j++)</span><br><span class="line">            {</span><br><span class="line">                priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt; &gt; que;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> f=i; f&lt;=r; f++)</span><br><span class="line">                {</span><br><span class="line">                    que.<span class="built_in">push</span>(dp[f][j]);</span><br><span class="line">                    maxx = <span class="built_in">max</span>(maxx, que.<span class="built_in">top</span>() * (f-i<span class="number">+1</span>));</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>, kiss, maxx);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>思维</tag>
      </tags>
  </entry>
  <entry>
    <title>Google KickStart 2019C CatchSome</title>
    <url>/2019/05/29/Google-KickStart-2019C-CatchSome/</url>
    <content><![CDATA[<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p><a href="https://codingcompetitions.withgoogle.com/kickstart/round/0000000000050ff2/0000000000150a0d">传送门</a></p>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Bundle is an animal researcher and needs to go observe <strong>K</strong> dogs. She lives on a horizontal street marked at metre increments with consecutive numbers 0, 1, 2, 3 and so on. She begins in her home, which is at position 0. There are also <strong>N</strong> dogs on the street. The i-th dog is <strong>Pi</strong> metres to the right of her home on the street (multiple dogs can share the same position).<span id="more"></span></p>
<p>Dogs come in different colors, which are denoted by positive integers. The i-th animal is of color <strong>Ai</strong>.</p>
<p>If Bundle is at her home, she can change the current color of her shirt. This is important since the dogs are very shy! Bundle can only observe a dog if she is at the same position as that dog, and is wearing a shirt of the same color as the dog.</p>
<p>It takes Bundle one second to move one metre to the left or right on the street. It takes her no time to change shirts or observe a dog.</p>
<p>What is the least amount of time it will take Bundle to observe <strong>K</strong> dogs? Note that she <em>does not</em> have to return home after observing <strong>K</strong> dogs.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input gives the number of test cases, <strong>T</strong>. <strong>T</strong> test cases follow. Each testcase begins with a line containing the two integers <strong>N</strong> and <strong>K</strong>, the number of dogs on the number line and the number of dogs Bundle needs to observe, respectively. The second line contains <strong>N</strong> integers, the i-th of which is <strong>Pi</strong>, the position of the i-th dog. The third line contains <strong>N</strong> integers, the i-th of which is <strong>Ai</strong>, the color of the i-th dog.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output one line containing <code>Case #x: y</code>, where <code>x</code> is the test case number (starting from 1) and <code>y</code> is the least time Bundle needs to observe <strong>K</strong> dogs.</p>
<h3 id="Limits"><a href="#Limits" class="headerlink" title="Limits"></a>Limits</h3><p>Time limit: 30 seconds per test set.<br>Memory limit: 1GB.<br>1 ≤ <strong>T</strong> ≤ 100.<br>1 ≤ <strong>K</strong> ≤ <strong>N</strong>.<br>1 ≤ <strong>Ai</strong> ≤ 1000.<br>1 ≤ <strong>Pi</strong> ≤ 105.</p>
<h4 id="Test-set-1-Visible"><a href="#Test-set-1-Visible" class="headerlink" title="Test set 1 (Visible)"></a>Test set 1 (Visible)</h4><p>1 ≤ <strong>N</strong> ≤ 50.</p>
<h4 id="Test-set-2-Hidden"><a href="#Test-set-2-Hidden" class="headerlink" title="Test set 2 (Hidden)"></a>Test set 2 (Hidden)</h4><p>1 ≤ <strong>N</strong> ≤ 1000.</p>
<h3 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h3><h4 id="Input-1"><a href="#Input-1" class="headerlink" title="Input"></a>Input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3</span><br><span class="line">4 3</span><br><span class="line">1 2 4 9</span><br><span class="line">3 3 2 3</span><br><span class="line">4 3</span><br><span class="line">1 2 3 4</span><br><span class="line">1 8 1 8</span><br><span class="line">6 6</span><br><span class="line">4 3 3 1 3 10000</span><br><span class="line">1 2 8 9 5 7</span><br></pre></td></tr></tbody></table></figure>

<h4 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Case #1: 8</span><br><span class="line">Case #2: 6</span><br><span class="line">Case #3: 10028</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h3><p>In Sample Case #1, there are <strong>N</strong> = 4 dogs and Bundle needs to observe <strong>K</strong> = 3 dogs. One way that she can achieve this is as follows:</p>
<ul>
<li>Put on a shirt of color 3.</li>
<li>Move one metre to the right and observe the dog there.</li>
<li>Move one metre to the right again and observe the dog there.</li>
<li>Move two metres to the left, returning to her home.</li>
<li>Change into a shirt of color 2.</li>
<li>Move four metres to the right and observe the dog there.</li>
</ul>
<p>In total, this takes Bundle 8 seconds which is the least time possible, so the answer is 8.</p>
<p>In Sample Case #2, there are <strong>N</strong> = 4 dogs and Bundle needs to observe <strong>K</strong> = 3 dogs. One way that she can achieve this is as follows:</p>
<ul>
<li>Put on a shirt of color 1.</li>
<li>Move one metre to the right and observe the dog there.</li>
<li>Move one metre to the left, returning to her home.</li>
<li>Change into a shirt of color 2.</li>
<li>Move two metres to the right and observe the dog there.</li>
<li>Move two metres to the right again and observe the dog there. Note that Bundle is unable to observe the dog she passes at position 3, since her shirt is the wrong color (even though she was wearing the right colored shirt previously).</li>
</ul>
<p>In total, this takes Bundle 6 seconds which is the least time possible, so the answer is 6.</p>
<p>In Sample Case #3, note that:</p>
<ul>
<li>Multiple dogs can share the same position and</li>
<li>Dogs are not necessarily given in ascending order of position.</li>
</ul>
<p>No explanation is provided for the answer to this case.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>可以发现颜色的大小远远大于狗的数量，所以可以对颜色离散化。离散化后建立一个二维数组 G [i] [j]， 表示第 i 种颜色中第 j 只狗所在的位置。</p>
<p>然后使用 dp。ldp [i] [j] 表示前 i 种颜色中照看 j 只狗所要的时间（这里 dp 记录的都是要回家的，故时间要 * 2）， rdp [i] [j] 表示从第 i 种颜色开始直到最后一种颜色的狗中照看 j 只狗所要的时间。</p>
<p>所以我们要求的时间为 : ans = ldp [i] [k] + G [i] [j-1] + rdp [i+1] [K-k-j]， 选一个最小值。（详看代码）</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf = <span class="number">1012345678</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	ios_base::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	<span class="type">int</span> Q;</span><br><span class="line">	cin &gt;&gt; Q;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> rep = <span class="number">1</span>; rep &lt;= Q; ++rep) {</span><br><span class="line">		<span class="type">int</span> N, K;</span><br><span class="line">		cin &gt;&gt; N &gt;&gt; K;</span><br><span class="line">		<span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">P</span><span class="params">(N)</span>, <span class="title">A</span><span class="params">(N)</span></span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; ++i) cin &gt;&gt; P[i];</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; ++i) cin &gt;&gt; A[i];</span><br><span class="line">		vector&lt;<span class="type">int</span>&gt; comp = A;</span><br><span class="line">		<span class="built_in">sort</span>(comp.<span class="built_in">begin</span>(), comp.<span class="built_in">end</span>());</span><br><span class="line">		comp.<span class="built_in">erase</span>(<span class="built_in">unique</span>(comp.<span class="built_in">begin</span>(), comp.<span class="built_in">end</span>()), comp.<span class="built_in">end</span>());</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; ++i) {</span><br><span class="line">			A[i] = <span class="built_in">lower_bound</span>(comp.<span class="built_in">begin</span>(), comp.<span class="built_in">end</span>(), A[i]) - comp.<span class="built_in">begin</span>();</span><br><span class="line">		}</span><br><span class="line">		<span class="type">int</span> M = comp.<span class="built_in">size</span>();</span><br><span class="line">		vector&lt;vector&lt;<span class="type">int</span>&gt; &gt; <span class="built_in">G</span>(M);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; ++i) {</span><br><span class="line">			G[A[i]].<span class="built_in">push_back</span>(P[i]);</span><br><span class="line">		}</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; ++i) {</span><br><span class="line">			<span class="built_in">sort</span>(G[i].<span class="built_in">begin</span>(), G[i].<span class="built_in">end</span>());</span><br><span class="line">		}</span><br><span class="line">		vector&lt;vector&lt;<span class="type">int</span>&gt; &gt; <span class="built_in">ldp</span>(M + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(K + <span class="number">1</span>, inf)), <span class="built_in">rdp</span>(M + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(K + <span class="number">1</span>, inf));</span><br><span class="line">		ldp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>; rdp[M][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; ++i) {</span><br><span class="line">			ldp[i + <span class="number">1</span>] = ldp[i];</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= G[i].<span class="built_in">size</span>(); ++j) {</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> k = j; k &lt;= K; ++k) {</span><br><span class="line">					ldp[i + <span class="number">1</span>][k] = <span class="built_in">min</span>(ldp[i + <span class="number">1</span>][k], ldp[i][k - j] + G[i][j - <span class="number">1</span>] * <span class="number">2</span>);</span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = K - <span class="number">1</span>; j &gt;= <span class="number">0</span>; --j) {</span><br><span class="line">				ldp[i + <span class="number">1</span>][j] = <span class="built_in">min</span>(ldp[i + <span class="number">1</span>][j], ldp[i + <span class="number">1</span>][j + <span class="number">1</span>]);</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = M - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) {</span><br><span class="line">			rdp[i] = rdp[i + <span class="number">1</span>];</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= G[i].<span class="built_in">size</span>(); ++j) {</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> k = j; k &lt;= K; ++k) {</span><br><span class="line">					rdp[i][k] = <span class="built_in">min</span>(rdp[i][k], rdp[i + <span class="number">1</span>][k - j] + G[i][j - <span class="number">1</span>] * <span class="number">2</span>);</span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = K - <span class="number">1</span>; j &gt;= <span class="number">0</span>; --j) {</span><br><span class="line">				rdp[i][j] = <span class="built_in">min</span>(rdp[i][j], rdp[i][j + <span class="number">1</span>]);</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">		<span class="type">int</span> ans = inf;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; M; ++i) {</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= G[i].<span class="built_in">size</span>() &amp;&amp; j &lt;= K; ++j) {</span><br><span class="line">				<span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt;= K - j; ++k) {</span><br><span class="line">					ans = <span class="built_in">min</span>(ans, ldp[i][k] + rdp[i + <span class="number">1</span>][K - j - k] + G[i][j - <span class="number">1</span>]);</span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">		cout &lt;&lt; <span class="string">"Case #"</span> &lt;&lt; rep &lt;&lt; <span class="string">": "</span> &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



]]></content>
      <tags>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>YouCompleteMe 踩坑记</title>
    <url>/2019/05/29/YouCompleteMe%E8%B8%A9%E5%9D%91%E8%AE%B0/</url>
    <content><![CDATA[<p>最近转移到了 <code>Ubuntu</code> 系统上，配了一波环境，逐步适应了些 <code>Vim</code>，虽然一开始觉得没有补全无所谓的，可以练练实力，再安装插件觉得麻烦，但后面还是觉得没有补全少点什么，于是决定还是下个 <code>Vim</code> 补全的插件。大约刻之前在赵老板博客上看到过一个关于 <code>Vim</code> 补全的插件<a href="http://www.cfzhao.com/2018/11/03/%E5%AE%89%E5%88%A9%E4%B8%80%E4%B8%AAvim%E4%BB%A3%E7%A0%81%E8%A1%A5%E5%85%A8%E5%B7%A5%E5%85%B7%EF%BC%9Ayoucompleteme/">赵老板博文链接</a>，所以打算用那个，也就是 <code>YouCompleteMe</code>。据说这是 <code>Vim</code> 最难安装的插件？</p>
<p>安装步骤并不算麻烦吧：</p>
<ol>
<li>安装 <code>Vundle</code> （<code>Vim</code> 插件管理）</li>
<li>用 <code>Vundle</code> 安装编译 <code>YouCompleteMe</code></li>
<li>配置 <code>YouCompleteMe</code></li>
</ol>
<h2 id="前期工作"><a href="#前期工作" class="headerlink" title="前期工作"></a>前期工作</h2><ol>
<li>确认你的 vim 版本在 7.3.584 以上。</li>
<li>确认你的电脑支持 Python 2.x。</li>
<li>需要 Vundle（vim 的插件管理工具）来管理你的插件。</li>
<li>安装脚本需要使用 CMake。</li>
</ol>
<p>以上几点大家如果没有配置好的话，网上有很多很详细的教程，这里就不细讲了。（完全照抄赵老板博客）<span id="more"></span></p>
<h2 id="安装-Vundle"><a href="#安装-Vundle" class="headerlink" title="安装 Vundle"></a>安装 Vundle</h2><p>这个网上教程蛮多的，照抄就好了，我说几个坑点。</p>
<p>首先是 <code>Vundle</code> 的语法，安装完 <code>Vundle</code> 后，我们要在<code>.vimrc</code> 中加入一些东西，我当时是复制 <code>Vundle</code> 的 <a href="https://github.com/VundleVim/Vundle.vim#quick-start">github</a> 中的原文，因为一开始，也并不知道这些东西是啥意思，后来猜出了一些语法后，才发现自己被这个官方的命令坑得不清。</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">set nocompatible              " be iMproved, required</span><br><span class="line">filetype off                  " required</span><br><span class="line"></span><br><span class="line">" set the runtime path to include Vundle and initialize</span><br><span class="line">set rtp+=~/.vim/bundle/Vundle.vim</span><br><span class="line">call vundle#begin()</span><br><span class="line">" alternatively, pass a path where Vundle should install plugins</span><br><span class="line">"call vundle#begin('~/some/path/here')</span><br><span class="line"></span><br><span class="line">" let Vundle manage Vundle, required</span><br><span class="line">Plugin 'VundleVim/Vundle.vim'</span><br><span class="line"></span><br><span class="line">" The following are examples of different formats supported.</span><br><span class="line">" Keep Plugin commands between vundle#begin/end.</span><br><span class="line">" plugin on GitHub repo</span><br><span class="line">Plugin 'tpope/vim-fugitive'</span><br><span class="line">" plugin from http://vim-scripts.org/vim/scripts.html</span><br><span class="line">" Plugin 'L9'</span><br><span class="line">" Git plugin not hosted on GitHub</span><br><span class="line">Plugin 'git://git.wincent.com/command-t.git'</span><br><span class="line">" git repos on your local machine (i.e. when working on your own plugin)</span><br><span class="line">Plugin 'file:///home/gmarik/path/to/plugin'</span><br><span class="line">" The sparkup vim script is in a subdirectory of this repo called vim.</span><br><span class="line">" Pass the path to set the runtimepath properly.</span><br><span class="line">Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}</span><br><span class="line">" Install L9 and avoid a Naming conflict if you've already installed a</span><br><span class="line">" different version somewhere else.</span><br><span class="line">" Plugin 'ascenator/L9', {'name': 'newL9'}</span><br><span class="line"></span><br><span class="line">" All of your Plugins must be added before the following line</span><br><span class="line">call vundle#end()            " required</span><br><span class="line">filetype plugin indent on    " required</span><br><span class="line">" To ignore plugin indent changes, instead use:</span><br><span class="line">"filetype plugin on</span><br><span class="line">"</span><br><span class="line">" Brief help</span><br><span class="line">" :PluginList       - lists configured plugins</span><br><span class="line">" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span><br><span class="line">" :PluginSearch foo - searches for foo; append `!` to refresh local cache</span><br><span class="line">" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span><br><span class="line">"</span><br><span class="line">" see :h vundle for more details or wiki for FAQ</span><br><span class="line">" Put your non-Plugin stuff after this line</span><br></pre></td></tr></tbody></table></figure>

<p>首先这里面 “ 表示注释，以 <code>Plugin</code> 开始的每行是注明 <code>Vundle</code> 中有这个插件（后面安装的时候要下载）。这个文件是为了给我们演示语法。。所以这里面很多的 <code>Plugin</code> 可以不安装！里面有个 <code>git</code> 下了我不知多长时间…… 还有个本地仓库，555，当时不清楚，一直安装不成功，以为自己操作错了。后来看懂了语法，心想：woc，这什么傻 x 东西。遂注释掉。</p>
<h2 id="安装YouCompleteMe"><a href="#安装YouCompleteMe" class="headerlink" title="安装YouCompleteMe"></a>安装 <code>YouCompleteMe</code></h2><ol>
<li>在上面说的<code>.vimrc</code> 的 <code>Vundle</code> 中加入 <code>YouCompleteMe</code></li>
</ol>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">call vundle#begin()</span><br><span class="line">Plugin 'VundleVim/Vundle.vim'</span><br><span class="line">Plugin 'Valloric/YouCompleteMe'</span><br><span class="line">call vundle#end()</span><br></pre></td></tr></tbody></table></figure>

<ol start="2">
<li><p>之后进入 <code>Vim</code>，输入命令</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">:BundleInstall</span><br></pre></td></tr></tbody></table></figure>

<p>或者在终端中</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">vim +PluginInstall +qall</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>之后我们进入 <code>YouCompleteMe</code> 文件夹</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">cd   ~/.vim/bundle/YouCompleteMe/</span><br></pre></td></tr></tbody></table></figure>

<p>执行安装脚本，根据需要添加参数。由于我用 vim 是写 C++ 的，所以选择添加了 C-family 的语言支持。其他语言版本参数的加法可以参照 Github 上 README 里的说明。</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">./install.py  --clang-completer</span><br></pre></td></tr></tbody></table></figure>

<p>但这一步它告诉我找不到 <code>python 2.7</code>… 怎么会，我明明安好了的，就在它说的文件夹。。神奇，后来我玄学了一波，安装了下 <code>python 3</code>，本来以为没啥用。。结果… 就好了，神奇。</p>
</li>
<li><p>等待它编译成功。（这一步我没遇到啥问题）</p>
</li>
</ol>
<h2 id="配置YouCompleteMe"><a href="#配置YouCompleteMe" class="headerlink" title="配置YouCompleteMe"></a>配置 <code>YouCompleteMe</code></h2><h3 id="ycm-extra-conf-py文件"><a href="#ycm-extra-conf-py文件" class="headerlink" title=".ycm_extra_conf.py文件"></a><code>.ycm_extra_conf.py</code> 文件</h3><p>下面我们要配置下 <code>YouCompleteMe</code>，（即<code>.ycm_extra_conf.py</code> 文件），让它发挥最大作用。</p>
<p>这个文件可以在 <a href="https://raw.githubusercontent.com/Valloric/ycmd/66030cd94299114ae316796f3cad181cac8a007c/.ycm_extra_conf.py">Github</a> 中找到，我这里也链接了一下。为了方便，我把他放在了 <code>~/.vim</code> 文件夹中。后来发现这个文件有很多没用的 (那一些’-isystem’, ‘cpp/…’这些路径)，遂删之，留下了比较重要的东西。然后在<code>.vimrc</code> 的适当位置（就刚才那段里面）写上</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">call vundle#begin()</span><br><span class="line">Plugin 'VundleVim/Vundle.vim'</span><br><span class="line">Plugin 'Valloric/YouCompleteMe'</span><br><span class="line">let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'</span><br><span class="line">call vundle#end()</span><br></pre></td></tr></tbody></table></figure>

<p>最重要的一步呢，是要根据你电脑在<code>.ycm_extra_conf.py</code> 中的 <code>flags</code> 加一些头文件包含路径。比如我的是</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"> '-isystem',</span><br><span class="line">'/usr/include/c++/7',</span><br><span class="line">#'-isystem',</span><br><span class="line">#'/usr/lib/gcc/x86_64-linux-gnu/7',</span><br><span class="line">#'-isystem',</span><br><span class="line">#'/usr/lib/gcc/x86_64-linux-gnu/7/include',</span><br><span class="line">'-isystem',</span><br><span class="line">'/usr/include/x86_64-linux-gnu',</span><br><span class="line">'-isystem',</span><br><span class="line">'/usr/include/x86_64-linux-gnu/c++/7'</span><br><span class="line">'-isystem',</span><br><span class="line">'/usr/include',</span><br><span class="line"># '-isystem',</span><br><span class="line"># './header',</span><br></pre></td></tr></tbody></table></figure>

<p>添加的时候注意些格式，大概就是 ‘-isystem’然后有个逗号，下面加路径。</p>
<p><strong>注意这里有坑啊！我在这坑上调了好久才发现问题！</strong> 这些路径的顺序是有一定讲究的，因为一开始顺序错了，<code>YCM</code> 补全总有些问题，具体啥讲究我也不清楚，在网上看到 <code>/usr/include/c++/7</code> 一定要在 <code>/usr/include</code> 前面。啊，我在这上面找了好久的问题。。。这坑太大了。</p>
<h3 id="vim文件Vundle中对YCM一些个性化配置"><a href="#vim文件Vundle中对YCM一些个性化配置" class="headerlink" title=".vim文件Vundle中对YCM一些个性化配置"></a><code>.vim</code> 文件 <code>Vundle</code> 中对 <code>YCM</code> 一些个性化配置</h3><p>我总以为 <code>YCM</code> 会对库函数有提示补全什么的，结果默认是没有的（害我以为我配置有问题，捣鼓了好久）。对 <code>YCM</code> 的一些个性化配置我主要参考了 <a href="https://zhuanlan.zhihu.com/p/33046090">YouCompleteMe 中容易忽略的配置</a>。包括</p>
<ul>
<li>库函数补全</li>
<li>语义补全自动触发</li>
<li>补全对话框颜色的修改</li>
<li>关闭补全时分屏提示</li>
<li>关闭代码检查诊断信息</li>
<li>设置一下：g:ycm_filetype_whitelist 白名单</li>
</ul>
]]></content>
      <tags>
        <tag>Vim</tag>
        <tag>YouCompleteMe</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Ubuntu</title>
    <url>/2019/05/26/Hello-Ubuntu/</url>
    <content><![CDATA[<h1 id="Hello-Ubuntu"><a href="#Hello-Ubuntu" class="headerlink" title="Hello Ubuntu"></a>Hello Ubuntu</h1><h2 id="安装Ubuntu-18-04"><a href="#安装Ubuntu-18-04" class="headerlink" title="安装Ubuntu 18.04"></a>安装 Ubuntu 18.04</h2><p>这个网上教程有很多，我就不详述了。我来说下我遇到的一些坑（Win7 + Ubuntu），双显卡（Nvidia + Inter）。大一的时候未能成功，就是因为 Nvidia 的驱动问题。一开始遇到了安装时卡在 logo 界面的问题，Ubuntu 18.04 与前面不同的好像是选择 <code>Try Ubuntu without install </code> <code>Install Ubuntu</code> 时有了界面。这一下把我搞懵了，因为原来选择的时候按 <code>e</code> 可以编辑 <code>grub</code> 参数，这次不知道去哪里编辑了，尴尬。后面摸索了下发现 <code>F6</code> 有个其他选项，里面有个 <code>nomodeset</code>，勾选后便解决了这个问题。<span id="more"></span></p>
<h2 id="更换阿里源"><a href="#更换阿里源" class="headerlink" title="更换阿里源"></a>更换阿里源</h2><p>这个是我每次安好 Ubuntu 必做的，网上教程一堆，复制粘贴下镜像地址就好了。</p>
<h2 id="禁用nouveau驱动"><a href="#禁用nouveau驱动" class="headerlink" title="禁用nouveau驱动"></a>禁用 nouveau 驱动</h2><p>先解释下 <code>nouveau</code> 是什么，我的理解（猜测）是个显卡驱动，但性能不高。（我估计刚刚安装好的时候用的就是这东西，卡得一比，差点让我放弃 Ubuntu），我电脑有 Nvidia 显卡，所以要先禁用下 <code>nouveau</code>，然后安装 <code>Nvidia</code> 驱动。</p>
<p>这个教程网上也一堆，大概就是将它加入黑名单，之后重新生成<code> kernel initramfs</code>。</p>
<h2 id="安装-Nvidia-驱动"><a href="#安装-Nvidia-驱动" class="headerlink" title="安装 Nvidia 驱动"></a>安装 Nvidia 驱动</h2><p>参考<a href="https://blog.csdn.net/linhai1028/article/details/79445722"> Ubuntu 下安装 nvidia 显卡驱动（安装方式简单）</a></p>
<p>不过看别人的一开始要删除下之前的 <code>Nvidia</code> 驱动残余，（这一点我不清楚新机需不需要，加上吧，反应加上没问题）</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">sudo apt-get remove --purge nvidia*</span><br></pre></td></tr></tbody></table></figure>

<h2 id="删除nomodeset"><a href="#删除nomodeset" class="headerlink" title="删除nomodeset"></a>删除 nomodeset</h2><p>这是我这次遇到的最大的困难。在我安装好 <code>Nvidia</code> 驱动后重启，却一直报错！定眼看一下是什么 <code>pcieport</code>balabala 之类的，我是慌了。在网上搜索也没找到能解决的办法，就在这一直不停地重启、玄学测试、报错…… 为些还删掉系统重装了一次，然后又搞一遍，依旧报错。在我用恢复模式删除 <code>Nvidia</code> 驱动、重启 <code>nouveau</code> 后，又可以打开。于是猜测是显卡驱动的问题。</p>
<p>看网上的方法没有用，于是只好靠自己意淫了。。我尝试着删去了 <code>nomodeset</code>，启动成功！而且系统变得流畅极速！整个人一下振奋了起来。一个多年的夙愿终于在今天完成了！</p>
<p>后来我查了下 <code>nomodeset</code> 的意义，看了 <a href="%5Bhttps://medium.com/caesars-study-review-on-web-development/acpi-osi-linux-nomodeset%E6%98%AF%E4%BB%80%E9%BA%BC%E6%84%8F%E6%80%9D-%E5%8A%9F%E8%83%BD-42d8e2c444c3%5D(https://medium.com/caesars-study-review-on-web-development/acpi-osi-linux-nomodeset%E6%98%AF%E4%BB%80%E9%BA%BC%E6%84%8F%E6%80%9D-%E5%8A%9F%E8%83%BD-42d8e2c444c3)">acpi_osi=linux、 nomodeset 是什麼意思？功能？</a> 这篇文章，下面复制些其中的内容：</p>
<blockquote>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">nomodeset</span><br><span class="line">不載入所有關於顯示卡的驅動</span><br><span class="line">nouveau.modeset=0</span><br><span class="line">關閉nvidia顯卡的驅動，反之 =1為開啟</span><br><span class="line">i915.modeset=0</span><br><span class="line">關閉Intel顯卡的驅動，挺好奇對於Intel內顯會有什麼影響</span><br><span class="line">xforcevesa 或 radeon.modeset=0 xforcevesa</span><br><span class="line">跟AMD顯卡(ATI)有關的設定，我猜也是關閉吧，反正我不會買A牌顯卡...</span><br><span class="line">acpi=off</span><br><span class="line">回歸舊時代，電源相關設定，OS無法控管，交給bios處理</span><br><span class="line">acpi功能失效，有不少硬體上奇怪的問題，可以用這參數解決</span><br></pre></td></tr></tbody></table></figure>
</blockquote>
<p>这样就理解些了吧。一开始，我们没有安装 <code>Nvidia</code> 驱动，所以要加上 <code>nomodeset</code>，后面我们禁用了 <code>nouveau</code>，只剩下了 <code>Nvidia</code> 驱动，所以要删去它。</p>
<h2 id="更改主机名后sudo命令会很慢"><a href="#更改主机名后sudo命令会很慢" class="headerlink" title="更改主机名后sudo命令会很慢"></a>更改主机名后 sudo 命令会很慢</h2><p>因为觉得默认计算机名很难看，于是我换成了 <code>lover</code>，快乐。后面发现使用 <code>sudo</code> 命令时特别慢，要延迟好一会，而且用 <code>Ctrl + C</code> 好像还不能终止。网上查了下，原来是 因为没有将本机的名字加到 <code>etc/hosts</code> 中，导致执行 <code>sudo</code> 命令的时候，会读 <code>/etc/sudoers</code> 文件，向 DNS 服务器发起了请求并等待响应，耽误了时间。 </p>
<p>参考 <a href="https://blog.csdn.net/caiqiiqi/article/details/81069639">linux 为什么 sudo 命令执行变慢</a></p>
<p>于是在 <code>/etc/hosts</code> 中将原来的默认名字改过来，ok！</p>
<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="Rime"><a href="#Rime" class="headerlink" title="Rime"></a>Rime</h3><p>我在 <code>windows</code> 上面的输入法。叭说了，被 <code>Byvoid</code> 称为神级的输入法。谁用谁知道，我是离不开它了。</p>
<h3 id="Albert"><a href="#Albert" class="headerlink" title="Albert"></a>Albert</h3><p>从 <code>windows</code> 转向 <code>ubuntu</code> 最难受的是要离开自己喜欢的 <code>wox</code> 吧。在 <code>Ubuntu</code> 上找了些类似的快速启动器，试了 <code>gnome-pie</code>,<code>gnome-do</code>,<code>ELaunch</code>，都差强人意。后面遇到了 <code>Albert</code>，果断卸载了前面的。虽然比 <code>wox</code> 还差一些，但整体还是 ok 的。</p>
<p>参考了 <a href="https://blog.csdn.net/jankin6/article/details/80430223">Ubuntu 安装 Albert (替代 Mac Spotlight)</a></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:noobslab/macbuntu</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install albert</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h3><p>不述</p>
<h3 id="QQ、微信"><a href="#QQ、微信" class="headerlink" title="QQ、微信"></a>QQ、微信</h3><p>QQ 的话用了 <code>Wine</code> 大法，整体还可以。教程网上一堆。</p>
<p>微信的话我用的 <code>electronic-wechat</code>，<a href="https://github.com/geeeeeeeeek/electronic-wechat">electronic-wechat</a>，附一篇教程 <a href="https://www.cnblogs.com/dotnetcrazy/p/9124658.html">Ubuntu 18.04 安装微信（Linux 通用）</a>。</p>
<h3 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h3><p>不述</p>
<h3 id="Hexo多端维护博客"><a href="#Hexo多端维护博客" class="headerlink" title="Hexo多端维护博客"></a>Hexo 多端维护博客</h3><p>尝试了下，失败了。。后来发现双系统的话可以访问另一个系统的文件，那我干嘛还要找麻烦呢（手动狗头</p>
<h3 id="ShadowSocks"><a href="#ShadowSocks" class="headerlink" title="ShadowSocks"></a>ShadowSocks</h3><p>连接是能连接上，但不能上网，也不知道为啥，弄清楚后再更。</p>
<h3 id="图床工具"><a href="#图床工具" class="headerlink" title="图床工具"></a>图床工具</h3><p>暂时没有发现啥比较好的图床工具，于是自己用七牛云的 <code>qshell</code> 写了个，能用是能用，不知道为啥上传速度慢。除了这点还是蛮棒的！</p>
<h2 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h2><p><code>Ubuntu 18.04 LTS</code> 好像使用的 GNOME，感觉棒棒呀，加入了扩展。于是像我这种人，怎么能不美化呢。暂时美化了一些东东：</p>
<ul>
<li>首先要下载个 Gnome-tweak-tool</li>
<li> 主题：Arc</li>
<li> 图标：Ultra-Flat</li>
<li>bash：Oh-my-zsh</li>
<li> 登录界面背景</li>
<li>一些扩展：Dash to dock、system monitor、Openweather</li>
</ul>
<p>美化后效果：</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/2019-05-25%2018-54-14%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/2019-05-25%2019-49-08%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/2019-05-25%2019-49-11%20%E7%9A%84%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE.png"></p>
<p>太爽了！爱上了，我的天呐，这也太美了。</p>
<h1 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h1><p>非常开心终于搞好了 Ubuntu 的环境，快捷、流畅，直接就爱上了。好久的愿望终于在今天实现了，以后要多用鸭。</p>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>BZOJ 5486 Fine Dining</title>
    <url>/2019/05/19/BZOJ-5486-Fine-Dining/</url>
    <content><![CDATA[<p>传送门：<a href="https://www.lydsy.com/JudgeOnline/problem.php?id=5486">BZOJ 5486 Fine Dining</a></p>
<h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>漫长的一天结束了，饥困交加的奶牛们准备返回牛棚。农场由 N 片牧场组成（2≤N≤50,000），方便起见编号为 1…</p>
<p>N。所有奶牛都要前往位于牧场 N 的牛棚。其他 N-1 片牧场中每片有一头奶牛。奶牛们可以通过 M 条无向的小路在牧场之间移动（1≤M≤100,000）。第 i 条小路连接牧场 ai 和 bi，通过需要时间 ti。每头奶牛都可以经过一些小路回到牛棚。由于饥饿，奶牛们很乐于在他们回家的路上停留一段时间觅食。农场里有 K 个有美味的干草捆，第 i 个干草捆的美味值为 yi。每头奶牛都想要在她回牛棚的路上在某一个干草捆处停留，但是她这样做仅当经过这个干草捆使她回牛棚的时间增加不超过这个干草捆的美味值。注意一头奶牛仅仅 “正式地” 在一个干草捆处因进食而停留，即使她的路径上经过其他放有干草捆的牧场；她会简单地无视其他的干草捆。</p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>第一行包含三个空格分隔的整数 N，M 和 K。</p>
<p>以下 M 行每行包含三个整数 ai，bi 和 ti，表示牧场 ai 和 bi 之间有一条需要 ti 时间通过的小路</p>
<p>（ai 不等于 bi，ti 为不超过 104 的正整数）。</p>
<p>以下 K 行，每行以两个整数描述了一个干草捆：该干草捆所在牧场的编号，以及它的美味值（一个不超过 10^9 的正整数）。</p>
<p>同一片牧场中可能会有多个干草捆。</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>输出包含 N-1 行。</p>
<p>如果牧场 i 里的奶牛可以在回牛棚的路上前往某一个干草捆并且在此进食，则第 i 行为一个整数 1，否则为一个整数 0</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>4 5 1<br> 1 4 10<br> 2 1 20<br> 4 2 3<br> 2 3 5<br> 4 3 2<br> 2 7</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>1<br> 1<br> 1<br> 在这个例子中，牧场 3 里的奶牛可以停留进食，因为她回去的时间仅会增加 6（从 2 增加到 8），而这个增加量并没有<br> 超过干草捆的美味值 7。牧场 2 里的奶牛显然可以吃掉牧场 2 里的干草，因为这并不会导致她的最佳路径发生变化。<br> 对于牧场 1 里的奶牛是一个有趣的情况，因为看起来她的最佳路径（10）可能会因为前去进食而有过大的增加量。<br> 然而，确实存在一条路径使得她可以前去干草捆处停留：先到牧场 4，然后去牧场 2（吃草），然后回到牧场 4。 </p>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h1 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h1><p>分层图最短路。两种状态，吃或未吃干草。$dis [i] [0]$ 表示未吃干草状态下到达 i 的最短时间，$dis [i][1]$ 则为吃干草状态下到达 i 的最短时间。</p>
<p><strong>将牧场之间的距离看做为正，将干草看为负</strong>。如果 $dis [n][1] &lt;= dis [n][0]$ ，则输出 1.</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 50050</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXM 200050</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">ed</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> to, next, cost;</span><br><span class="line">}edge[MAXM];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"><span class="type">int</span> head[MAXN];</span><br><span class="line"><span class="type">int</span> has[MAXN], dis[MAXN][<span class="number">2</span>];</span><br><span class="line"><span class="type">bool</span> vis[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addedge</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> v, <span class="type">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge[tot].to = v;</span><br><span class="line">    edge[tot].next = head[u];</span><br><span class="line">    edge[tot].cost = w;</span><br><span class="line">    head[u] = tot++;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dis));</span><br><span class="line">    dis[n][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; que;</span><br><span class="line">    que.<span class="built_in">push</span>(n);</span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> u = que.<span class="built_in">front</span>();</span><br><span class="line">        <span class="type">int</span> v;</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line">        vis[u] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = head[u]; ~i; i = edge[i].next)</span><br><span class="line">        {</span><br><span class="line">            v = edge[i].to;</span><br><span class="line">            <span class="keyword">if</span>(dis[u][<span class="number">0</span>] + edge[i].cost &lt; dis[v][<span class="number">0</span>])</span><br><span class="line">            {</span><br><span class="line">                dis[v][<span class="number">0</span>] = dis[u][<span class="number">0</span>] + edge[i].cost;</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])</span><br><span class="line">                {</span><br><span class="line">                    que.<span class="built_in">push</span>(v);</span><br><span class="line">                    vis[v] = <span class="literal">true</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(has[v] &amp;&amp; dis[u][<span class="number">0</span>] + edge[i].cost - has[v] &lt; dis[v][<span class="number">1</span>])</span><br><span class="line">            {</span><br><span class="line">                dis[v][<span class="number">1</span>] = dis[u][<span class="number">0</span>] + edge[i].cost - has[v];</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])</span><br><span class="line">                {</span><br><span class="line">                    que.<span class="built_in">push</span>(v);</span><br><span class="line">                    vis[v] = <span class="literal">true</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(dis[u][<span class="number">1</span>] + edge[i].cost &lt; dis[v][<span class="number">1</span>])</span><br><span class="line">            {</span><br><span class="line">                dis[v][<span class="number">1</span>] = dis[u][<span class="number">1</span>] + edge[i].cost;</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])</span><br><span class="line">                {</span><br><span class="line">                    que.<span class="built_in">push</span>(v);</span><br><span class="line">                    vis[v] = <span class="literal">true</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">memset</span>(head, <span class="number">-1</span>, <span class="built_in">sizeof</span>(head));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line">    <span class="type">int</span> u, v, w;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        <span class="built_in">addedge</span>(u, v, w);</span><br><span class="line">        <span class="built_in">addedge</span>(v, u, w);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;k; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;u, &amp;w);</span><br><span class="line">        has[u] = <span class="built_in">max</span>(has[u], w);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(has[n])</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">spfa</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(dis[i][<span class="number">0</span>] &gt;= dis[i][<span class="number">1</span>])</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>最短路</tag>
      </tags>
  </entry>
  <entry>
    <title>BZOJ 5488 Teamwork</title>
    <url>/2019/05/19/BZOJ-5488-Teamwork/</url>
    <content><![CDATA[<p>题目链接：<a href="https://www.lydsy.com/JudgeOnline/problem.php?id=5488">BZOJ 5488 Teamwork</a></p>
<h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>在 Farmer John 最喜欢的节日里，他想要给他的朋友们赠送一些礼物。由于他并不擅长包装礼物，他想要获得他的奶牛们的帮助。你可能能够想到，奶牛们本身也不是很擅长包装礼物，而 Farmer John 即将得到这一教训。Farmer John 的 N 头奶牛（1≤N≤104）排成一行，方便起见依次编号为 1…N。奶牛 i 的包装礼物的技能水平为 si。她们的技能水平可能参差不齐，所以 FJ 决定把她的奶牛们分成小组。每一组可以包含任意不超过 K 头的连续的奶牛（1≤K≤103），并且一头奶牛不能属于多于一个小组。由于奶牛们会互相学习，这一组中每一头奶牛的技能水平会变成这一组中水平最高的奶牛的技能水平。请帮助 FJ 求出，在他合理地安排分组的情况下，可以达到的技能水平之和的最大值。<span id="more"></span></p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>输入的第一行包含 N 和 K。</p>
<p>以下 N 行按照 N 头奶牛的排列顺序依次给出她们的技能水平。技能水平是一个不超过 10^5 的正整数。</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>输出 FJ 通过将连续的奶牛进行分组可以达到的最大技能水平和。</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>7 3<br> 1<br> 15<br> 7<br> 9<br> 2<br> 5<br> 10</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>84</p>
<p>在这个例子中，最优的方案是将前三头奶牛和后三头奶牛分别分为一组，中间的奶牛单独成为一组（注意一组的奶牛数量可以小于 K）。这样能够有效地将 7 头奶牛的技能水平提高至 15、15、15、9、10、10、10，和为 84。 </p>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h2><p>用 RMQ 查询区间内最大值， dp 方程 $ans [i] = max (ans [i], ans [j] + rmq (j+1, i) * (i-j));$</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[MAXN];</span><br><span class="line"><span class="type">int</span> dp[MAXN][<span class="number">1</span>&lt;&lt;<span class="number">4</span>];</span><br><span class="line"><span class="type">int</span> mm[MAXN];</span><br><span class="line"><span class="type">int</span> ans[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rmq</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> lg = mm[r-l<span class="number">+1</span>];</span><br><span class="line">    <span class="comment">//printf("lg == %d\n", lg);</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(dp[l][lg], dp[r-(<span class="number">1</span>&lt;&lt;lg)<span class="number">+1</span>][lg]);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//两种方式计算 2^x &lt;= i</span></span><br><span class="line">    <span class="comment">//mm[0] = -1;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=MAXN; i++)</span><br><span class="line">        mm[i] = mm[i&gt;&gt;<span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//mm[i] = (0 == (i &amp; (i-1) ) ) ? mm[i-1] + 1 : mm[i-1];</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, a+i);</span><br><span class="line">        dp[i][<span class="number">0</span>] = a[i];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=mm[n]; j++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i+(<span class="number">1</span>&lt;&lt;j)<span class="number">-1</span>&lt;=n; i++)</span><br><span class="line">            dp[i][j] = <span class="built_in">max</span>(dp[i][j<span class="number">-1</span>], dp[i+(<span class="number">1</span>&lt;&lt;(j<span class="number">-1</span>))][j<span class="number">-1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="built_in">max</span>(<span class="number">0</span>, i-k); j&lt;i; j++)</span><br><span class="line">            ans[i] = <span class="built_in">max</span>(ans[i], ans[j] + <span class="built_in">rmq</span>(j<span class="number">+1</span>, i) * (i-j));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>dp</tag>
        <tag>RMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>BZOJ 1003 物流运输</title>
    <url>/2019/05/19/BZOJ-1003-%E7%89%A9%E6%B5%81%E8%BF%90%E8%BE%93/</url>
    <content><![CDATA[<p>题目链接：<a href="https://www.lydsy.com/JudgeOnline/problem.php?id=1003">BZOJ 1003 物流运输</a> </p>
<h1 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h1><h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>　　物流公司要把一批货物从码头 A 运到码头 B。由于货物量比较大，需要 n 天才能运完。货物运输过程中一般要转<br>停好几个码头。物流公司通常会设计一条固定的运输路线，以便对整个运输过程实施严格的管理和跟踪。由于各种<br>因素的存在，有的时候某个码头会无法装卸货物。这时候就必须修改运输路线，让货物能够按时到达目的地。但是<br>修改路线是一件十分麻烦的事情，会带来额外的成本。因此物流公司希望能够订一个 n 天的运输计划，使得总成本<br>尽可能地小。<span id="more"></span></p>
<h2 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h2><p>　第一行是四个整数 n（1&lt;=n&lt;=100）、m（1&lt;=m&lt;=20）、K 和 e。n 表示货物运输所需天数，m 表示码头总数，K 表示每次修改运输路线所需成本。接下来 e 行每行是一条航线描述，包括了三个整数，依次表示航线连接的两个码头编号以及航线长度（&gt;0）。其中码头 A 编号为 1，码头 B 编号为 m。单位长度的运输费用为 1。航线是双向的。再接下来一行是一个整数 d，后面的 d 行每行是三个整数 P（ 1 &lt; P &lt; m）、a、b（1&lt; = a &lt; = b &lt; = n）。表示编号为 P 的码头从第 a 天到第 b 天无法装卸货物（含头尾）。同一个码头有可能在多个时间段内不可用。但任何时间都存在至少一条从码头 A 到码头 B 的运输路线。</p>
<h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><p>　　包括了一个整数表示最小的总成本。总成本 = n 天运输路线长度之和 + K * 改变运输路线的次数。</p>
<h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><p>5 5 10 8<br> 1 2 1<br> 1 3 3<br> 1 4 2<br> 2 3 2<br> 2 4 4<br> 3 4 1<br> 3 5 2<br> 4 5 2<br> 4<br> 2 2 3<br> 3 1 1<br> 3 3 3<br> 4 4 5</p>
<h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><p>32<br> // 前三天走 1-4-5，后两天走 1-3-5，这样总成本为 (2+2)*3+(3+2)*2+10=32</p>
<h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><h2 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h2><p>我们可以看到码头数最多为 20，较少，故我们可以记录出每个天数区间内最短路，最终用 dp 来解决。</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 21</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"><span class="type">bool</span> flag[MAXN][<span class="number">101</span>];</span><br><span class="line"><span class="type">int</span> head[MAXN];</span><br><span class="line">LL cost[<span class="number">101</span>][<span class="number">101</span>];</span><br><span class="line"></span><br><span class="line">LL ans[<span class="number">101</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edg</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> to, next, cost;</span><br><span class="line">} edge[<span class="number">801</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;MAXN; i++)</span><br><span class="line">        head[i] = <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addedge</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> v, <span class="type">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge[tot].to = v;</span><br><span class="line">    edge[tot].cost = w;</span><br><span class="line">    edge[tot].next = head[u];</span><br><span class="line">    head[u] = tot++;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">spfa</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">bool</span> block[MAXN];</span><br><span class="line">    <span class="type">bool</span> inq[MAXN];</span><br><span class="line">    <span class="type">int</span> dis[MAXN];</span><br><span class="line">    <span class="type">int</span> que[<span class="number">500</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(block, <span class="literal">false</span>, <span class="built_in">sizeof</span>(block));</span><br><span class="line">    <span class="built_in">memset</span>(inq, <span class="literal">false</span>, <span class="built_in">sizeof</span>(inq));</span><br><span class="line">    <span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dis));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=a; j&lt;=b; j++)</span><br><span class="line">            <span class="keyword">if</span>(flag[i][j])</span><br><span class="line">            {</span><br><span class="line">                block[i] = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">    dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    que[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    inq[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="type">int</span> bg=<span class="number">0</span>, ed=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> u, v, w;</span><br><span class="line">    <span class="keyword">while</span>(bg&lt;ed)</span><br><span class="line">    {</span><br><span class="line">        u = que[bg];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=head[u]; ~i; i=edge[i].next)</span><br><span class="line">        {</span><br><span class="line">            v = edge[i].to;</span><br><span class="line">            w = edge[i].cost;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(!block[v] &amp;&amp; dis[u]+w &lt; dis[v])</span><br><span class="line">            {</span><br><span class="line">                dis[v] = dis[u] + w;</span><br><span class="line">                <span class="keyword">if</span>(!inq[v])</span><br><span class="line">                {</span><br><span class="line">                    que[ed++] = v;</span><br><span class="line">                    inq[v] = <span class="literal">true</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        bg++;</span><br><span class="line">        inq[u] = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dis[m];</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dp</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    {</span><br><span class="line">        ans[i] = cost[<span class="number">1</span>][i] * i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;i; j++)</span><br><span class="line">            ans[i] = <span class="built_in">min</span>(ans[i], ans[j]+k+cost[j<span class="number">+1</span>][i]*(i-j) );</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="type">int</span> e, d;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;n, &amp;m, &amp;k, &amp;e);</span><br><span class="line">    <span class="type">int</span> u, v, w;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;e; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;u, &amp;v, &amp;w);</span><br><span class="line">        <span class="built_in">addedge</span>(u, v, w);</span><br><span class="line">        <span class="built_in">addedge</span>(v, u, w);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;d);</span><br><span class="line">    <span class="type">int</span> l, r, id;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;d; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;id, &amp;l, &amp;r);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=l; j&lt;=r; j++)</span><br><span class="line">            flag[id][j] = <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i; j&lt;=n; j++)</span><br><span class="line">            cost[i][j] = <span class="built_in">spfa</span>(i, j);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">dp</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h1 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h1><p>这题最终感觉应该很快就能过，结果写出来一直 T。卡了很久，最终发现是数组开错了。。。把 <code>cost[101][101]</code> 开成了 <code>cost[MAXN][MAXN]</code> ，找了很久的 bug，太难受了。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190519/Mme3Seoi5lIw.png" alt="mark">各种玄学优化时间，没想到最终进了 fast 榜。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190519/Siui0CC0SAOk.png" alt="mark"></p>
]]></content>
      <tags>
        <tag>dp</tag>
        <tag>最短路</tag>
      </tags>
  </entry>
  <entry>
    <title>《Effective C++》读书笔记 —— 条款 31: 将文件间的编译依存关系降至最低</title>
    <url>/2019/04/30/%E3%80%8AEffective-C-%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%E2%80%94%E2%80%94%E6%9D%A1%E6%AC%BE31-%E5%B0%86%E6%96%87%E4%BB%B6%E9%97%B4%E7%9A%84%E7%BC%96%E8%AF%91%E5%82%A8%E5%AD%98%E5%85%B3%E7%B3%BB%E9%99%8D%E8%87%B3%E6%9C%80%E4%BD%8E/</url>
    <content><![CDATA[<p>读 《Effective C++》条款 31 的时候一直模模糊糊的，因为不了解 C++ 编译依存的原理，不知道什么时候会重新编译，什么时候不会。所以读的时候很是纠结，不明白该条款的意义。后来读了这篇文章，就清晰了很多。博主用一个简短的程序例子，展示了 C++ 基本的编译依存原则。感谢。</p>
<p>读完条款 31 ，我也更加深刻的明白了 C 语言为什么头文件和实现文件分开。大一时老师说的结构更加清晰或许是更次要的作用。其主要作用是降低文件间的编译依存关系，加快编译速度。</p>
<p>下面是我读的文章，<a href="http://www.cnblogs.com/jerry19880126/p/3551836.html">原文链接</a></p>
<p>在说这一条款之前，先要了解一下 C/C++ 的编译知识，假设有三个类 ComplexClass, SimpleClass1 和 SimpleClass2，采用头文件将类的声明与类的实现分开，这样共对应于 6 个文件，分别是 ComplexClass.h，ComplexClass.cpp，SimpleClass1.h，SimpleClass1.cpp，SimpleClass2.h，SimpleClass2.cpp。</p>
<p>ComplexClass 复合两个 BaseClass，SimpleClass1 与 SimpleClass2 之间是独立的，ComplexClass 的.h 是这样写的：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#ifndef COMPLESS_CLASS_H</span><br><span class="line">#define COMPLESS_CLASS_H</span><br><span class="line"></span><br><span class="line">#include “SimpleClass1.h”</span><br><span class="line">#include “SimpleClass2.h”</span><br><span class="line"></span><br><span class="line">class ComplexClass</span><br><span class="line">{</span><br><span class="line">    SimpleClass1 xx;</span><br><span class="line">    SimpleClass2 xxx;</span><br><span class="line">};</span><br><span class="line">…</span><br><span class="line"></span><br><span class="line">#endif /* COMPLESS _CLASS_H */</span><br></pre></td></tr></tbody></table></figure>


<p>我们来考虑以下几种情况：</p>
<p><strong>Case 1：</strong></p>
<p>现在 SimpleClass1.h 发生了变化，比如添加了一个新的成员变量，那么没有疑问，SimpleClass1.cpp 要重编，SimpleClass2 因为与 SimpleClass1 是独立的，所以 SimpleClass2 是不需要重编的。</p>
<p>那么现在的问题是，ComplexClass 需要重编吗？</p>
<p>答案是 “是”，因为 ComplexClass 的头文件里面包含了 SimpleClass1.h（使用了 SimpleClass1 作为成员对象的类），<strong>而且所有使用<strong><strong> ComplexClass</strong></strong> 类的对象的文件，都需要重新编译！</strong></p>
<p>如果把 ComplexClass 里面的 #include “SimpleClass1.h” 给去掉，当然就不会重编 ComplexClass 了，但问题是也不能通过编译了，因为 ComplexClass 里面声明了 SimpleClass1 的对象 xx。那如果把 #include “SimpleClass1.h” 换成类的声明 class SimpleClass1，会怎么样呢？能通过编译吗？</p>
<p>答案是 “否”，因为编译器需要知道 ComplexClass 成员变量 SimpleClass1 对象的大小，而这些信息仅由 class SimpleClass1 是不够的，但如果 SimpleClass1 作为一个函数的形参，或者是函数返回值，用 class SimpleClass1 声明就够了。如：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">1 // ComplexClass.h</span><br><span class="line">2 class SimpleClass1;</span><br><span class="line">3 …</span><br><span class="line">4 SimpleClass1 GetSimpleClass1() const;</span><br><span class="line">5 …</span><br></pre></td></tr></tbody></table></figure>

<p>但如果换成指针呢？像这样：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"> 1 // ComplexClass.h</span><br><span class="line"> 2 #include “SimpleClass2.h”</span><br><span class="line"> 3 </span><br><span class="line"> 4 class SimpleClass1;</span><br><span class="line"> 5 </span><br><span class="line"> 6 class ComplexClass: </span><br><span class="line"> 7 {</span><br><span class="line"> 8     SimpleClass1* xx;</span><br><span class="line"> 9     SimpleClass2 xxx;</span><br><span class="line">10 };</span><br></pre></td></tr></tbody></table></figure>


<p>这样能通过编译吗？</p>
<p>答案是 “是”，因为编译器视所有指针为一个字长（在 32 位机器上是 4 字节），因此 class SimpleClass1 的声明是够用了。但如果要想使用 SimpleClass1 的方法，还是要包含 SimpleClass1.h，但那是 ComplexClass.cpp 做的，因为 ComplexClass.h 只负责类变量和方法的声明。</p>
<p>那么还有一个问题，如果使用 SimpleClass1 * 代替 SimpleClass1 后，SimpleClass1.h 变了，ComplexClass 需要重编吗？</p>
<p>先看 Case2。</p>
<p><em><strong>Case 2：</strong></em></p>
<p>回到最初的假定上（成员变量不是指针），现在 SimpleClass1.cpp 发生了变化，比如改变了一个成员函数的实现逻辑（换了一种排序算法等），但 SimpleClass1.h 没有变，那么 SimpleClass1 一定会重编，SimpleClass2 因为独立性不需要重编，那么现在的问题是，ComplexClass 需要重编吗？</p>
<p>答案是 “否”，因为编译器重编的条件是发现一个变量的类型或者大小跟之前的不一样了，但现在 SimpleClass1 的接口并没有任务变化，只是改变了实现的细节，所以编译器不会重编。</p>
<p><em><strong>Case 3：</strong></em></p>
<p>结合 Case1 和 Case2，现在我们来看看下面的做法：</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"> 1 // ComplexClass.h</span><br><span class="line"> 2 #include “SimpleClass2.h”</span><br><span class="line"> 3 </span><br><span class="line"> 4 class SimpleClass1;</span><br><span class="line"> 5 </span><br><span class="line"> 6 class ComplexClass</span><br><span class="line"> 7 {</span><br><span class="line"> 8     SimpleClass1* xx;</span><br><span class="line"> 9     SimpleClass2 xxx;</span><br><span class="line">10 };</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">1 // ComplexClass.cpp</span><br><span class="line">2 </span><br><span class="line">3 void ComplexClass::Fun()</span><br><span class="line">4 {</span><br><span class="line">5     SimpleClass1-&gt;FunMethod();</span><br><span class="line">6 }</span><br></pre></td></tr></tbody></table></figure>


<p>请问上面的 ComplexClass.cpp 能通过编译吗？</p>
<p>答案是 “否”，因为这里用到了 SimpleClass1 的具体的方法，所以需要包含 SimpleClass1 的头文件，但这个包含的行为已经从 ComplexClass 里面拿掉了（换成了 class SimpleClass1），所以不能通过编译。</p>
<p>如果解决这个问题呢？其实很简单，只要在 ComplexClass.cpp 里面加上 #include “SimpleClass1.h” 就可以了。换言之，我们其实做的就是将 ComplexClass.h 的 #include “SimpleClass1.h” 移至了 ComplexClass1.cpp 里面，而在原位置放置 class SimpleClass1。</p>
<p>这样做是为了什么？假设这时候 SimpleClass1.h 发生了变化，会有怎样的结果呢？</p>
<p>SimpleClass1 自身一定会重编，SimpleClass2 当然还是不用重编的，ComplexClass.cpp 因为包含了 SimpleClass1.h，所以需要重编，但换来的好处就是<strong>所有用到 ComplexClass 的其他地方，它们所在的文件不用重编了</strong>！因为 ComplexClass 的头文件没有变化，接口没有改变！</p>
<p>总结一下，对于 C++ 类而言，如果它的头文件变了，那么所有这个类的对象所在的文件都要重编，但如果它的实现文件（cpp 文件）变了，而头文件没有变（对外的接口不变），那么所有这个类的对象所在的文件都不会因之而重编。</p>
<p>因此，避免大量依赖性编译的解决方案就是：<strong>在头文件中用 class 声明外来类，用指针或引用代替变量的声明；在 cpp 文件中包含外来类的头文件。</strong></p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>读书笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>且捱过三冬四夏</title>
    <url>/2019/04/15/%E4%B8%94%E6%8D%B1%E8%BF%87%E4%B8%89%E5%86%AC%E5%9B%9B%E5%A4%8F/</url>
    <content><![CDATA[<p>现在想来，去年想写这个日志最终却只写了个题目有点有趣。其实挖这个坑的原因是这样的：去年四月的某个深夜突然骄情夜来非，想写些东西，但又觉得已是深夜，稍有困意，不知道要写多久，于是决定第二天醒来再写。结果醒来后又不骄情了，忘记了昨夜种种，正常人一个，于是写这篇的心也就不在了，给自己留下了一个未填的坑。</p>
<p>虽然是一夜的骄情，但去年这个时候好像确实情绪有些崩溃，平日里听《Childhood Memory》《Snowdream》这样温柔的钢琴曲都忍不住落泪，几度觉得自己走在了抑郁症的边缘，所以在某个平静的夜晚听了几曲钢琴曲后变得骄情惆怅，想写些东西排遣下，于是写下了 “且捱过三冬四夏”，其实它还有后半句” 待春来再看梅花 “，嗯， ” 且捱过三冬四夏，待春来再看梅花 “，那夜我念着这句入睡，好像从第二天开始情绪一点点好了起来。</p>
<p>好像每年的三四月份都是我感情迸发的时候，（难道是因为春天？）今年的三四月份也有着不安与骄情，一些情绪极容易被触发。每一触发，总会想起好多事情，像是过往历历又回到眼前。看了遍《寻梦环游记》哭成了傻逼，（不愧是我一直想看的电影！强烈安利呀，剧情设计贼棒，欧享利式结局实在让人惊喜惊讶。没看时无数次想象它剧情会如何设计，观看后觉得是最棒的叙述！）faker 春秀赛夺冠让我觉得李哥回来了，对他的采访更让我觉得 faker 实在是个很纯粹的人，眼泪又是夺眶而出。好像有点扯远了。其实三四月最大的忧虑是春招吧。自己终于还是到了招聘的时候，走到了能否触摸到自己大厂梦的时候。到如今依旧是 0 offer。阿里一面后半月杳无音信，百度笔试时可能差一行代码能 AC 一道线段树，腾讯因为邮件错过了性格测试不知道有没有补救的机会，昨天的头条差两行代码做出 C 题。我也不知道自己在春招是时候能不能收到 offer 了。自己好像并没有为没有获得 offer 而垂头丧气如何如何，因为自己心里知道自己能力不够，没有拿到 offer 是很正常的事情。</p>
<p>写着写着文章好像开始乱了，心里想许多事情，却不知道要说什么。直接写最想要说的吧。崔明浩不妨自信些。这是昨天字节跳动笔试后开始这么觉得的。字节跳动笔试很简单粗暴，开局给你 5 个算法题让你搞。这算是我最喜欢的形式，也算是我最害怕的形式。喜欢是因为自己大学差不多全部是在打 ACM，这种算法题目可以说是本职。最害怕是因为如果自己最擅长的都没有做好，这种事情对我信心的摧毁力是可以想象的。个人感觉字节跳动蛮看重 ACM 等一些算法比赛的，看历年的题目感觉是存在有一定难度的，所以自己笔试前可以说是又期待又害怕。感觉这次笔试题目要简单些，或者说更适合自己一些。第一题很像大一时校赛的 A 题，秒了。第四题是 TSP 问题，状压 dp，秒了。然后第三题，灵光一现，想起二分，觉得这题稳了，敲完后提交只过了 6% 的样例，调了很久后最高依然是 6%。有点难受，就先跳过了。第二题感觉也遇到过，当时是两个队友做的，我没有参与，看了一眼感觉可以做，也算是用了很短的时间一次 AC 秒了。第五题脑糊了一个算法，过了 11% 的样例也再没有管他。再回来看第三题感觉自己思路肯定没有问题，却死活调不出，只能过 6%。心态有点崩。可能是当局者迷吧，到最后也没有通过这道想出方法感觉稳了的题。笔试完后却又很快意识到中间过程会溢出，加两行判断就可以了。我没有办法去评估自己这场笔试是好是坏，因为我觉得我可以通过四题却只通过了三题。但这场笔试蛮增长自己信心的，因为在笔试前自己就做好了爆零的准备。没想到能顺利地过掉三题，C 题虽然没有过掉，但自己坚信自己是可以过的。我可以接受自己差一丝，但不能接受自己完全没有思路。虽然两者最终都是没过，但给我的感觉是不一样的。差一点点会鼓励自己在后面做得更好，但完全没有思路却是打很打击人的一件事。笔试后，我突然觉得，崔明浩不妨自信些。我真的是好奇怪一人，每次遭遇一些失败或坎坷，内心中的火不但没有熄灭，好像又更旺盛了一些。</p>
<p>如同那句话说的：我表面看起来有多自信，内心就有多自卑。（有人说如此的句子三观不正常，balabala，或许是每个人的经历不一样吧，我对这一句话始终是信奉的。）我表面或许看起来相信自己，甚至在人面前表现出自傲自大，但内心深知自己水平如何，有着许多人不能理解的自卑，从小学开始便如此。到大学后自卑好像有些放大，或许是见过了极多真正优秀的人（尤其是在 ACM 圈中），自卑在一点点地长大，有时候获一些奖也会去想自己配不配这个奖。人好像爱给自己设限，画地为牢，告诉自己做不成某些事情。突然觉得我给自己设限很多，不妨去忘记一些所谓的极限，去多尝试。有时不必担心结果如何，好好去做吧。</p>
<p>有点懒了，本来以为会写很多东西，写到这里突然感觉没必要了。引用最近给小伙伴写信写到的一些句吧。</p>
<blockquote>
<p>万物之中，希望至美。前些天看到了杭州程序员逆行被拦之后崩溃的新闻，仿佛看到了后面几年的自己。虽知生活很苦，但我还是想去体验一番，苦中作乐，体验下红尘的酸甜苦辣，感觉这样才不负来世间一趟。“希望” 一词本身就是世间最美的东西，愿自己心中的那份希望的火苗永不熄灭。</p>
</blockquote>
<p>希望自己四月能拿到好一些的实习 offer。</p>
<p>恰如这篇的题目，且捱过三冬四夏，待春来再看梅花。</p>
<p>（刚刚搜了下，好像是” 且挨过三冬四夏，暂受些此痛苦，雪尽后再看梅花 “，估计是自己后来自己杜撰了罢。）</p>
]]></content>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里一面</title>
    <url>/2019/03/31/%E9%98%BF%E9%87%8C%E4%B8%80%E9%9D%A2/</url>
    <content><![CDATA[<p>周五的时候突然收到了阿里面试预约的电话，毫无准备，因为自己还没投简历。问了下原来是学长内推的，和面试官预约了今天上午 9:30 面试。预约的时候能感觉到小哥哥是个极其温柔的人，所以很期待这场面试。虽然从预约到面试仅有两天，但全然没有准备谷歌时紧张，或者说没有紧张感。</p>
<p>没想到面试持续了两个小时，自我感觉还算良好。面试整体分成三部分吧：</p>
<ol>
<li>围绕项目询问相关知识</li>
<li>实现一个 vector</li>
<li> 算法</li>
</ol>
<h3 id="项目及询问相关知识"><a href="#项目及询问相关知识" class="headerlink" title="项目及询问相关知识"></a>项目及询问相关知识</h3><p>预约电话后我又发给了小哥哥一份较新的简历，上面写了自己新做的 HTTP 服务器项目，所以这次的面试一开始问了一些这个项目的事情，以及围绕这个项目问了一些相关知识，对印象比较深的问题做下纪录吧：</p>
<ul>
<li>简要介绍下项目（我照着我 Github 读了一遍）</li>
<li>做了压力测试吗，“没有”（看来后面要用 wenbench 做下。。。）</li>
<li><code>epoll</code> 与 <code>select</code> <code>poll</code> 的区别， ET 模式与 LT 模式的区别</li>
<li>什么是非阻塞模式，（我用买生日蛋糕打比方，非阻塞模式是不停的过来询问有没有做好，面试官小哥哥问为什么不是他做好来打电话通知你，这样不是更高效吗。。我记得这好像是一种实现方式，记不太清楚了，orz，明天问问老师吧，我这种速成学习果真只是应付应付，其实什么都不清晰）</li>
<li>使用线程池提高并发度，并降低频繁创建线程的开销。怎么提高并发度的，为什么说创建线程的开销大。</li>
<li>我是怎么给线程分配任务的，（RR 策略）。有没有什么优化方式？我回答的是能够知道当前负担较少的线程，把新任务分给它。面试官告诉我换一个角度，建一个任务队列，每个线程做完当前任务后去这个队列中领任务。问如果这么做有没有要注意的，我的回答是如果两个线程同时完成去领任务的话要注意同步，对任务加锁。</li>
<li>我的线程模型为分主线程、IO 线程、worker 线程。为什么要这么分，我回答是实现 Reactor 模式。面试官：什么是 Reactor 模式， 这种模式的优点是什么？orz，给跪了，这个不清楚。缺点是什么，或者说有没有什么情况这种线程切换是不能忍受的。如果问我缺点是什么我不知道，但后面这句提示了我，回答说如果 worker 线程耗时比较短，很快就能完成，这里线程切换时间比重较大，这种情况是不能忍受的。</li>
<li>你说使用了 HTTP 长链接，什么是长连接，什么是短连接， 它们各自的使用场景是什么。orz，这个，我凭着之前扫过一眼的印象，觉得长连接就是能够保持连接，短连接就是发完报文直接关闭而不保持，当时心虚不知道对不对，但也就这么说了出来。看面试官的反应应该是对的吧。然后说应用场景，我就说如果双方一次会话信息交互频繁的话使用长连接，比较我们在网页上聊天，双方一直保持连接，避免频繁的建立关闭连接，而如果双方只发送短报文，交互次数不频繁的话就短连接。看面试官反应应该是对的？</li>
<li>支持优雅关闭？什么是优雅关闭，为什么要这么做。我就把四次挥手迁了出来，用四次挥手来回答这个问题，说出了四次挥手的过程，以及 <code>time_wait</code> 和 <code>close_wait</code> 状态，心里想着他肯定会问这两个状态相关的知识，果不其然问了 time_wait ，这也刚好是我准备的。回答了为什么要有 time_wait 状态，而不立即关闭客户端连接。（感觉面试的时候你可以引着面试官向你会的知识方向）</li>
<li>零拷贝？什么是零拷贝，为什么零拷贝能提高性能，你是怎么实现零拷贝的。这也算是自己之前准备的吧，但其实自己也并不太清楚。就说比如 <code>socket</code> 读写的时候在用户空间和内核空间的数据需要拷贝，如果不拷贝的话就可以提高些性能。怎么实现，<code>splice()</code> 函数和管道。</li>
</ul>
<p>这一方面印象较深的问题大概就这些吧，后面想起来的话再添加。对这方面做个总结，就是知识果真是积蓄而来的，速成只能知道表面皮毛而不可知其根本。自己网络、操作系统、Linux 这些方面的知识还是太薄弱了，一个月地疯狂补习根本是不足够的，达不到自己心中的要求的。后面还需要静下以来深入地学习。（现在只能应付应付吧，对自己的评价是其实什么也不知道，需要深入地知道一项知识，知其根本。）</p>
<h3 id="手写vector"><a href="#手写vector" class="headerlink" title="手写vector"></a>手写 vector</h3><p>下面部分聊到了 <code>STL</code> 的容器知识，面试官让我说一些容器以及它的一些本质。自己比赛用的 <code>STL</code> 还算可以，于是就说了几个。vector 是动态数组，list 双向链表，set（集合，不允许重复）、map（键值对）红黑树，multiset, multimap（允许重复的，自己不太清楚是不是红黑树所以略过没说），deque（双端队列，好像是块状数组，不太了解，之前扫过一眼），stack 栈，queue 队列，priority_queue 优先权队列、堆。unordered_map 哈希、桶。问什么是哈希、这个为什么是桶。自己口糊了一波，但其实并不知道。。说了哈希以及哈希冲突的解决办法。unordered_set 不了解。</p>
<p>然后是手写实现一个 vector，这个暴露问题比较大。</p>
<ul>
<li><p>不会使用异常</p>
</li>
<li><p>不会使用模板，数据类型请求用 int，所以其实写了个 int 动态数组。</p>
</li>
<li><p>其实不知道 vector 的内部实现。好像 <code>push_back()</code> 以及 <code>resize()</code> 是需要用 <code>reserve()</code> 函数的，自己不了解这点，所以在 <code>push_back()</code> 和 <code>resize()</code> 中写的扩容，面试官说冗杂，设计不是很好。</p>
</li>
<li><p>不会写返回左值引用。</p>
</li>
<li><p>对函数重载中的 <code>const</code> 不了解</p>
</li>
<li><p>拷贝构造函数一般要在参数前加 <code>const</code></p>
</li>
<li><p><code>memcpy()</code> 不会使用</p>
</li>
<li><p><code>new</code> <code>delete</code> 不了解底部实现，自己使用了 <code>delete</code> 的一种错误用法。面试官给我讲了下，应该算是懂了</p>
<p>对于运算符 [] 的重载，一开始是返回对应下标的值，我写了出来</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="keyword">operator</span> [] (<span class="type">int</span> i)</span><br><span class="line">{</span><br><span class="line">	<span class="keyword">return</span> pArr[i];    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<p>之后是写返回左值引用，相当于我写 a [i]=1，是对数组中这个数赋值操作，orz，不会了。面试官告诉我了如下代码</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> &amp; <span class="keyword">operator</span> [] (<span class="type">int</span> i)</span><br><span class="line">{</span><br><span class="line">	<span class="keyword">return</span> pArr[i];    </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>orz,  这样就可以了。返回一个引用。</p>
<p>但面试官的问题显然是准备好的，在拷贝构造函数中让我用 <code>memcpy()</code> 来拷贝。我不太会用这个函数，给面试官说了自己觉得这个函数应该需要目标数据首地址，源数据首地址，拷贝的长度。面试官说嗯，并给出了函数的原型。然后自己写下了 <code>memcpy((int *)pArr, (int *)vec.pArr, vec.size()*sizeof(int));</code> 写的时候意识到 <code>pArr</code> 是私有的，不能通过对象来访问，于是打算回去写个 <code>begin()</code>，面试官拦住了我，问他这么写可不可以 <code>memcpy(pArr, &amp;vec[0], vec.size()*sizeof(int));</code> 我纠结了下，感觉 <code>&amp;vec[0]</code> 不太对，不知道是返回一个立即数还是返回这个引用。于是面试官引出了刚才的重载出了问题，我说嗯，会发生歧义，不知道调用哪个。问我怎么修改，orz，C++ 语法我真的弱爆了，不会。</p>
<p>面试官小哥哥教了我</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span>&amp; <span class="keyword">operator</span> [] (<span class="type">int</span> i) <span class="type">const</span>;</span><br><span class="line"><span class="type">int</span>&amp; <span class="keyword">operator</span> [] (<span class="type">int</span> i);</span><br></pre></td></tr></tbody></table></figure>

<p>然后告诉我第一个其实也可以换成</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="keyword">operator</span> [] (<span class="type">int</span> i) <span class="type">const</span>;</span><br></pre></td></tr></tbody></table></figure>

<p>相当于只加一个 <code>const</code>， 而我们看比较正式的代码都会采用上面的写法，在前面加个 <code>const</code>， 为什么，orz，这个我也不知道。嘟嘟囔囔半天说不出来正确的。小哥哥告诉我说这样返回的是结果引用，如果采用下面方法的话会进行一次拷贝，性能不好。你这个数组用的 int，性能下降不会太明显。如果是一个类的话，就会明显了。orz， <strong>这个真的学习了</strong>。很感谢面试官，真的学习了很多知识。</p>
<p>面试官说反应出我 C++ 语法不是很熟练，但没太大关系。应该是理解我打 ACM 出身，用 C++ 只是用来解决一些算法题目，对一些语法不了解。</p>
<h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p>下面就是算法部分了，这部分比较顺利，第一题对我来说算是秒杀吧，经典题目，合并 K 个有序链表。直接写了出来，但后面改的时候脑袋一抽，尼玛写了个根本没必要的 while 循环，现在想来根本没必要，还会导致性能下降。</p>
 <figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function">ListNode* <span class="title">merge</span><span class="params">(<span class="type">const</span> vector&lt;ListNode*&gt; &amp;lists)</span> </span>{</span><br><span class="line"><span class="keyword">if</span>(lists.<span class="built_in">empty</span>())</span><br><span class="line">reutn <span class="literal">nullptr</span>;</span><br><span class="line"><span class="type">int</span> n = lists.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">while</span>(n &gt; <span class="number">1</span>)</span><br><span class="line">{</span><br><span class="line"><span class="type">int</span> k = (n<span class="number">+1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">	lists[i] = <span class="built_in">mergeTwo</span>(lists[i], lists[i+k]);</span><br><span class="line">n = k;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> lists[<span class="number">0</span>];</span><br><span class="line">}</span><br><span class="line"><span class="function">ListNode * <span class="title">mergeTwo</span><span class="params">(ListNode* list1, ListNode* list2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	ListNode *pList = <span class="keyword">new</span> <span class="built_in">ListNode</span>();</span><br><span class="line">	ListNode *cur = pList;</span><br><span class="line">	<span class="keyword">while</span>(list1 &amp;&amp; list2)</span><br><span class="line">	{</span><br><span class="line">		<span class="keyword">if</span>(list1-&gt;val &lt; list2-&gt;val)</span><br><span class="line">		{</span><br><span class="line">			cur-&gt;pNext = list1;</span><br><span class="line">			list1 = list1-&gt;pNext;</span><br><span class="line">		}</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		{</span><br><span class="line">            cut-&gt;pNext = list2;</span><br><span class="line">            list2 = list2-&gt;pNext;</span><br><span class="line">        }</span><br><span class="line">		cur = cur-&gt;pNext;</span><br><span class="line">	}</span><br><span class="line">    <span class="keyword">while</span>(list1 != <span class="literal">nullptr</span> || list2 != <span class="literal">nullptr</span>)	<span class="comment">//根本没必要</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(list1)</span><br><span class="line">        {</span><br><span class="line">            cur-&gt;pNext = list1;</span><br><span class="line">            list1 = list1-&gt;pNext;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(list2)</span><br><span class="line">        {</span><br><span class="line">            cur-&gt;pNext = list2;</span><br><span class="line">            list2 = list2-&gt;pNext;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">	<span class="keyword">return</span> pList-&gt;pNext;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li>
</ul>
<p>让我分析下复杂度，自己口糊了一个和链表长度有关， O (K longN)，面试官想了一会，好像觉得对。。聊了会说这是经典题，原来做过。orz，其实没做过，这种题我一般不愿去做，逃。。然后问我知不知道经典算法，我问了下。面试官说了一下，我没听太清楚，就问是不是优先权队列，面试官小哥哥说是。然后我口糊了一波实现，小哥哥说对的。然后我夸了一波这算法，清晰，balabala 的。小哥哥看我秒了一道 算法，然后 又问了一道，说不用我写，说下思路就行。。woc，这太 TM 爽了，毕竟我就是口糊选手。。。敲代码不行，但口糊我可不怂。</p>
<p>问 n 个元素，求最大最小值。我？？？这题肯定有玄机，不管了，先暴力？？遍历一遍不就好了？O（n），准备说比较多少次，2（n-1）。有没有什么优化。我寻思着这也不能优化到 O（log n）呀。小哥哥给了个提示，不是数量级上的优化，那我就放心了。。想了一会还是没想出来，小哥哥给了第二个提示，优化到 $O ({3 \over 2} n)​$。想了不久，说每次取两个数先比较，小的和当前存的最小比，大的和最大比，这样每 2 个数由原来的比较 4 次优化到了 3 次。小哥哥说不错。应该是正解了。然后小哥哥说不错很好，后面应该也有同学会接着面。我没听明白什么意思，大概就理解成一面过了，后面有他同事接着面试我的意思？今天也挺长时间的，balabala，我说今天周日，和小哥哥面试刚好学习。然后问了他在阿里最大的收获或感受。小哥哥笑了笑，聊了一些。说起搜索推荐、机器学习的时候，小哥哥说：“哎呀，其实这个 low 爆了，很低端的。我们就是调调参，读读 paper。” 然后互道拜拜一面也就结束了。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>总结一下吧，自己的基础还是太薄弱了。C++ 语法， Linux 知识以及网络、网络编程，这些还是要恶补。面试的算法题都比较基础，自己下面刷题不能眼高手低，不写这些比较基础的题？（orz，虽然还是觉得自己应该不愿意去写。。。）</p>
<p align="right">2019.3.31<br>23:18</p>]]></content>
      <tags>
        <tag>阿里, 面试</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 命令行 &amp; ; &amp;&amp; 的区别</title>
    <url>/2019/03/21/Linux-%E5%91%BD%E4%BB%A4%E8%A1%8C-%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<ol>
<li>command1 &amp; command2 &amp; command3</li>
</ol>
<p>  三个命令同时执行 </p>
<ol start="2">
<li><p>command1; command2; command3<br>  不管前面命令执行成功没有，后面的命令继续执行 </p>
</li>
<li><p>command1 &amp;&amp; command2<br>只有前面命令执行成功，后面命令才继续执行</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>远程连接阿里服务器 Mysql 的坑</title>
    <url>/2019/03/20/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E6%9C%8D%E5%8A%A1%E5%99%A8Mysql%E7%9A%84%E5%9D%91/</url>
    <content><![CDATA[<p>今天突发奇想，想在阿里的服务器上搭个数据库玩，结果按网上步骤搭完后远程一直连不上。用 Windows 连接时会报 10060 错误（未知错误），用阿里自己远程连的时候会报 110 错误。用命令行搞了一下午防火墙，开放端口一类的，又重置了一次系统，结果还是连不上。</p>
<p>最后，我默默在阿里服务器的控制台发现了这个，orz。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20190320/MeJbwBxWVWOr.PNG" alt="mark"></p>
<p>这里还有个总的防火墙，要在这里开下 Mysql 的端口。</p>
<span id="more"></span>

<p>顺便记录下在服务器上搭建 Mysql 数据库并远程连接的步骤吧。</p>
<ol>
<li><p>安装 Mysql</p>
<figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">sudo apt-get install mysql-server</span><br><span class="line">sudo apt-get install mysql-client</span><br><span class="line">sudo apt-get install libmysqlclient-dev</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>允许远程访问</p>
</li>
</ol>
<p>   Mysql 默认只允许本地访问，要修改下配置使之允许远程连接。</p>
   <figure class="highlight shell"><table><tbody><tr><td class="code"><pre><span class="line">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf </span><br></pre></td></tr></tbody></table></figure>

<p>   把其中 bind-address = 127.0.0.1 注释掉</p>
<ol start="3">
<li>授权用户远程访问</li>
</ol>
<p>   使用 root 进入 mysql 命令行，执行如下 2 个命令，示例中 mysql 的 root 账号密码：root</p>
   <figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">grant all on *.* to root@'%' identified by '你的密码' with grant option;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></tbody></table></figure>

<ol start="4">
<li><p>重启 Mysql</p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line"># /etc/init.d/mysql restart 或者 #sudo service mysql start</span><br></pre></td></tr></tbody></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>TCP 及 UDP 对应的协议</title>
    <url>/2019/03/18/TCP%E5%8F%8AUDP%E5%AF%B9%E5%BA%94%E7%9A%84%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<p>TCP 对应的协议：</p>
<ol>
<li><p>FTP：定义了文件传输协议，使用 21 端口。</p>
</li>
<li><p>Telnet：一种用于远程登陆的端口，使用 23 端口，用户可以以自己的身份远程连接到计算机上，可提供基于 DOS 模式下的通信服务。</p>
</li>
<li><p>SMTP：邮件传送协议，用于发送邮件。服务器开放的是 25 号端口。</p>
</li>
<li><p>POP3：它是和 SMTP 对应，POP3 用于接收邮件。POP3 协议所用的是 110 端口。</p>
</li>
<li><p>HTTP：是从 Web 服务器传输超文本到本地浏览器的传送协议。</p>
</li>
</ol>
<p>UDP 对应的协议：</p>
<ol>
<li><p>DNS：用于域名解析服务，将域名地址转换为 IP 地址。DNS 用的是 53 号端口。</p>
</li>
<li><p>SNMP：简单网络管理协议，使用 161 号端口，是用来管理网络设备的。由于网络设备很多，无连接的服务就体现出其优势。</p>
</li>
<li><p>TFTP (Trival File Transfer Protocal)，简单文件传输协议，该协议在熟知端口 69 上使用 UDP 服务。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Netwrodk</tag>
      </tags>
  </entry>
  <entry>
    <title>进程间通信方式</title>
    <url>/2019/03/18/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>在做七牛云笔试题目中有一题是选出进程间通信方式，在这里记录下来。</p>
<p><strong>进程间通信的 7 种方式</strong></p>
<ol>
<li>管道 / 匿名管道 (pipe)</li>
<li> 有名管道 (FIFO) …</li>
<li> 信号 (Signal) …</li>
<li> 消息 (Message) 队列 …</li>
<li> 共享内存 (share memory) …</li>
<li> 信号量 (semaphore) …</li>
<li> 套接字 (socket)</li>
</ol>
<p>较为详细的解释在<a href="https://www.jianshu.com/p/c1015f5ffa74">这里</a>。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Process</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 学习笔记</title>
    <url>/2019/03/09/C-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>String 字符串字符编码格式及其前缀</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">wchar_t</span> title[] = <span class="string">L"Chief Astrogator"</span>;  <span class="comment">// w_char string 宽字符</span></span><br><span class="line"><span class="type">char16_t</span> name[] = <span class="string">u"Felonia Ripova"</span>;   <span class="comment">// char_16 string Unicode 16 </span></span><br><span class="line"><span class="type">char32_t</span> car[] = <span class="string">U"Humber Super Snipe"</span>;<span class="comment">// char_32 string Unicode 32</span></span><br></pre></td></tr></tbody></table></figure>

<p>UTF-8:  前缀 u8</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">string a = <span class="string">u8"UTF_8 Encoding"</span>; <span class="comment">//UTF-8 char</span></span><br></pre></td></tr></tbody></table></figure>

<p>Raw String: \ 不再转义， 前缀 R, 使用 () 限界</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">cout &lt;&lt; <span class="string">R"(Jim "King" Tutt uses "\n" instead of endl.)"</span> &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">R"+*("(Who wouldn't?)", she whispered.)+*"</span> &lt;&lt; endl; <span class="comment">//为了输出), </span></span><br><span class="line"><span class="comment">//输出为"(Who wouldn't?)", she whispered.</span></span><br></pre></td></tr></tbody></table></figure>

<hr><span id="more"></span>

<p>C++ 11 结构体初始化可忽略 =</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">inflatable</span>   <span class="comment">// structure declaration</span></span><br><span class="line">{<span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"> <span class="type">float</span> volume;</span><br><span class="line"> <span class="type">double</span> price;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line">inflatable guest ={<span class="string">"Glorious Gloria"</span>,  <span class="comment">// name value</span></span><br><span class="line">                   <span class="number">1.88</span>,               <span class="comment">// volume value</span></span><br><span class="line">                   <span class="number">29.99</span>               <span class="comment">// price value</span></span><br><span class="line">                  };</span><br><span class="line"></span><br><span class="line">inflatable duck {<span class="string">"Daphne"</span>, <span class="number">0.12</span>, <span class="number">9.98</span>};  <span class="comment">// can omit the = in C++11</span></span><br></pre></td></tr></tbody></table></figure>

<hr>

<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">private</span>:</span><br><span class="line">    	<span class="type">static</span> <span class="type">double</span> rate;</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>

<p>static 成员变量不属于对象的一部份，而是类别的一部份，所以程序可以在还没有诞生任何对象的时候就处理此种成员变量。但首先你必须初始化它。不要把 static 成员变量的初始化动作安排在类别的构造式中，因为构造式可能一再被调用，而变量的初值却只应该设定一次。也不要把初始化动作安排在头文件中，因为它可能会被包含许多地方，因此也就可能被执行许多次。你应该在实作档中且类别以外的任何位置设定其初值。例如在 main 之中，或全域函数中，或任何函数之外：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">double</span> A::rate = <span class="number">0.0075</span>; <span class="comment">// 设立static 成员变量的初值</span></span><br></pre></td></tr></tbody></table></figure>

<p>这么做可曾考虑到 m_rate 是个 private 资料？没关系，设定 static 成员变量初值时，不受任何存取权限的束缚。请注意，static 成员变量的型别也出现在初值设定句中，因为这是一个初值设定动作，不是一个数量指定（assignment）动作。事实上，static 成员变量是在这时候（而不是在类别声明中）才定义出来的。如果你没有做这个初始化动作，会产生联结错误：</p>
<blockquote>
<p>error LNK2001: unresolved external symbol “private: static double<br>SavingAccount::m_rate”(?m_rate@SavingAccount@@2HA)</p>
</blockquote>
<p align="right">摘自候捷《深入浅出 MFC》</p>
<hr>

<p>当用于内置类型的变量时，列表初始化有一个重要特点：如果我们使用列表初始化且初始值存在丢失信息的风险，则编译器将报错 </p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">long</span> <span class="type">double</span> ld = <span class="number">3.1415926536</span>;</span><br><span class="line"><span class="type">int</span> a = {ld}; <span class="comment">//error: 转换未执行，因为存在丢失信息的风险</span></span><br></pre></td></tr></tbody></table></figure>

<p align="right">——《C++ Primer 5e》P39</p>
<hr>

<p>如果表达式的内容是解引用操作，则 <code>decltype</code> 将得到引用类型。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> i=<span class="number">42</span>, *p=&amp;i;</span><br><span class="line"><span class="keyword">decltype</span>(*p) b; <span class="comment">//error: decltype(*p) declared as reference </span></span><br><span class="line">				<span class="comment">//but not initialized</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<p>如果  <code>decltype</code> 使用的是一个不加括号的变量，则得到的结果就是该变量的类型；如果给变量加上了一层或多层括号，编译器就会把它当成是一个表达式。变量是一种可以作为赋值语句左传的特殊表达式，所以这样的 <code>decltype</code> 就会得到引用类型。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">decltype</span>((i)) a; <span class="comment">//error: a 是 int&amp;，必须初始化</span></span><br><span class="line"><span class="keyword">decltype</span>(i) b; <span class="comment">//ok: e 是 一个未初始化的 int</span></span><br></pre></td></tr></tbody></table></figure>

<p>切记： <code>decltype((variable))</code> （注意是双层括号）的结果永远是引用， 而 <code>decltype(variable)</code> 的结果只有当 variable 本身就是一个引用时才是引用。</p>
<p align="right">——《C++ Primer 5e》P63</p><hr>
当一个算术表达式中既有 `int` 又有无符号数时，那个 `int` 值就会转换成无符号数。

<p>如果一条表达式中已经有了 <code>size()</code> 函数就不要再使用 <code>int</code> 了， 这样可以避免混用 <code>int</code> 和 <code>unsigned</code> 可能带来的问题。</p>
<hr>

<p>当把 <code>string</code> 对象和字符字面值及字符串字面值混在一条语句中使用时， 必须确保每个加法运算符的两侧的运算对象至少有一个是 <code>string</code>。</p>
<hr>
如果容器为空，则 `begin` 和 `end` 返回的是同一个迭代器，都是尾后迭代器。[^note]

<p>[^note]: 测试 markdown 注释语法。</p>
<hr>

<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> ia[] = {<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>};</span><br><span class="line"><span class="keyword">decltype</span>(ia) p;</span><br></pre></td></tr></tbody></table></figure>

<p>p 的类型是由 10 个整数构成的数组；</p>
<hr>

<p>给指针加上一个整数，得到的新指针仍需指向同一数组的其他元素，或者指向同一数组的尾元素的下一位置</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">constexpr</span> <span class="type">size_t</span> sz = <span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> arr[sz] = {<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>};</span><br><span class="line"><span class="type">int</span> *p = arr+sz;  <span class="comment">//使用警告：不能解引用</span></span><br><span class="line"><span class="type">int</span> *p2 = arr<span class="number">+10</span>; <span class="comment">//错误</span></span><br></pre></td></tr></tbody></table></figure>

<hr>

<p>当一个对象被用作右值时，用的是对象的值（内容）；当对象被用作左值时，用的是对象的身份（在内存中的位置）。</p>
<hr>








]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++, 学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>写在二十岁</title>
    <url>/2019/03/09/%E5%86%99%E5%9C%A8%E4%BA%8C%E5%8D%81%E5%B2%81/</url>
    <content><![CDATA[<h1 align="center">写在二十岁</h1>

<p>“男的是个很神奇的物种。给男孩一把玩具剑，他便成了男人；给男人一把玩具剑，他便成了男孩。”</p>
<p>一次学习会上讨论时，学弟晨曦说自己即将二十，弱冠之年，是古人十分重视，学弟想好好总结自己的过去，二十年来的见闻、所读的书、所遇的人。当时我想，我也快到二十了吧，自己很早的时候也想写一篇文章好好总结。想了很长时间，思考自己过去的事情，去想自己过去的想法、收获与遗失。总结是件很难的事，因为总会有你当时很想记起如今却又忘记的事情。所以这篇总结，也不知道丢失了多少过去很想将来写下的东西。（这篇文章最初写在 20 岁生日那天，不过写的时候逐渐偏离初心，于是也便暂时停笔，后面又准备面试，久久没有继续。今日得闲将它补齐。）</p>
<p>先说与自己专业、工作、前方的路相关的吧。对于编程，我心中有一团火，与生俱来。想了很长时间，我终于在最近几天想出了如此的描述。我觉得我生来便是要编程的吧。陈寅恪大师将爱情分为四境界，最伟大最纯洁的爱情应当是完全出于理想，“情之最上者，世无其人。悬空设想，而甘为之死，如《牡丹亭》之杜丽娘是也”。我觉得我对编程便是如此吧。我在没有遇上编程的时候便喜欢上了编程，希望以后自己也可以写程序。小时候在我第一眼看到电脑的时候，在我每次用电脑或者说玩电脑的时候，我都会想它是怎么运行的，所谓的代码应该是什么样子，它的逻辑是如何，应该怎么实现。玩游戏时我很好奇它是怎么实现的，猜测着它的实现方式。难道是把所有玩法的可能性都模拟一遍吗？不，想了好久，我得到的回答是否定的，觉得这样会很难。比如我打坐一分钟，编程者想到了，把打坐一分钟写了进去，那我如果打坐一分钟零一秒，那他也要写进去吗？那我打坐的时长是无穷可能的，他都要实现一遍吗？想到这些我就把模拟这种方法否定了，又开始想其它的办法。很多男孩子从小就有拆卸机器的爱好吧，要不是家里就一台电脑，拆坏了就会 game over，我不知道会把这台电脑拆成什么样子 = =。很幸运，这种编程的欲望一直还在，且愈来愈深。遇到 C 语言时，敲出第一个程序时，自己都超级幸福，直到现在，每当敲起代码时还会幸福感爆棚，每当敲起 hello world，心中总是有如清霖润洗一般。当然会有着不知多少倍受打击的时候，但想起过去的那个小男孩，想起高中时忍不住在纸上写链表的那个男孩，总会走下来，觉得自己不可辜负过去。有人问起我网名的意义，其实 {}←enter↑→enter 是自己编程时候的起手式，是自己敲花括号时一种习惯按键，大概是之前在用 VC++6.0 时候养成的吧，每次敲起 {}←enter↑→enter 序列时，自己会有一种名叫编程仪式感的东西，心里会很开心。之前队友说很享受我敲花括号的时候，当时听到这个超开心的。</p>
<p>我很喜欢比尔盖茨的一句话：“每个人都有一颗世纪之眼，它能看到上个世纪人们看不到的东西。” 我从小就很喜欢很酷的事情，满脑子想着一些美好的设计。遥控器这种东西真的吸引了我很久，那种从远处就能让电视换台的操作，在我眼中简直不啻魔术一般。我好奇了很久，直到初中时候老师告诉我们有红外线这种东西，之后我又开始好奇红外线为什么能够让电视换台，（逃）。我很小的时候就会想如果我们能在远处知道家里窗户有没有关，并能够操控他们开关，空调、暖水壶什么的亦如是，那应该多酷。那时候手机还是小灵通、翻盖等等，就会幻想着能在手机上操控着家里的电器。没想到当初天马行空般的幻想，如今已变成了眼前的东西。我想小时自己所想的，便是那颗世纪之眼才能看到的吧。自己身处物联网的时代，或许这些幻想的实现，恰是我们一代人要做的。所以如果有机会，我超想能做物联网，亲手去一点点实现小时那些幻想。有一个梦我至今依旧清晰，大概是初一初二的时候，我梦到在一个节目上比尔盖茨亲手送给我一个触屏的计算器，界面简约，功能强大，当自己触摸按钮时，喜悦而醒。当时心里觉得 oh， 这实在是太酷了，在当时那个智能手机还没普及的年代，这样的东西如同宝物一般。如今看来，不过只是手机上计算器 app，自己都懒得去写了（逃）。过去选编程这条路也是和家里有些许争执的，现在想来，或许是过去他们未曾看到我所看到的东西，未曾看到我心里那团火吧。</p>
<p>说到和家里在职业上的争执，突然想到了大学前看到一篇文章，文章名<del>可能叫《我为什么（选择？留在？漂泊？）在北上广》，记不太清楚了</del> (更新，找了下，名为《我为什么不愿离开北上广》<a href="https://yuedu.baidu.com/ebook/afe2f03a80eb6294dc886cdf?pn=1&amp;rf=https://www.google.com/">《我为什么不愿离开北上广》</a>)。里面一句话和我看法一样吧，“父母所谓的稳定，其实不过是一种变相的啃老”。或许和部分家长的想法一样，我家里想让我走医生、机关等一类的工作，在家附近，还能够稳定些。可我觉得自己从小开始，骨子里就有着对新事物、对外面世界永不停息的好奇与追索。小时的村子，村口的有一条较窄的路，两排种着树，连向村头，我那时觉得，到达那里，便是外面的世界。我从小觉得自己所处的环境很闭塞，像桃花源一般，与世隔绝，外面的信息进不来，里面的信息出不去，如同孤岛，每天的新闻都与自己的周围无关，在网上找不到一丝自己所在地的影子。我很厌倦这样的状态（连电脑上看到的零食广告都看不到，难过，当时好想吃的），对大城市愈加痴迷，一心想走出去，去外面看看。高三暑假晚上，我漫步在长安街上，看着华灯闪耀，看着川流不息，看着光影迷离，感觉自己像是握住了时代的脉搏，心告诉我：我应该属于这些。我厌恶所谓的人脉交际，信仰着美国梦中说的 “只要经过努力不懈的奋斗便能获得更好的生活，亦即人们必须通过自己的工作勤奋、勇气、创意、和决心迈向富裕，而非依赖于特定的社会阶级和他人的援助。” 我从未认真地对家人说起这些我自己内心的想法，我知道我小时候说这些他们肯定会不加思索地轻笑，说我还小，未经社会，年少无知等等。但我也深知，我自是年少，我有着年轻人所应有的年少轻狂，我有着改变世界的梦想，不惧一切，披荆向前。我懂或许拼搏一生，我仍一无所获，回到故乡，未能得到自己想要的，成为大众中庸庸一名，我也会觉得不负至此一程。我觉得年少时假若不狂一些、傲一些、梦想大一些，便是对年少的辜负。每个人老后都会归于茶水，但谁没有爱喝可乐的时候呢。一段时间前读过这样一个句子 “少年就是少年。他们看春风不喜，看夏蝉不烦，看秋风不悲，看冬雪不叹，看满身富贵懒察觉，看不公不允敢面对”，初读时觉得很有意味，但后来一想，却又觉得 “少年就应看春风而喜，听夏蝉而躁，闻秋风而悲，见冬雪而叹”，这样才能不负少年。年龄越大，越是信奉喜欢罗曼罗兰那句 “Il n’ya qu’un héroïsme au monde : c’est de voir le monde tel qu’il est et de l’aimer.”（世上只有一种英雄主义，就是在认清生活真相之后依然热爱生活。）</p>
<p>人生前二十年，避不开的便是高考和大学这一话题。没有考上自己想要的大学也是自己避不开要谈的。其实我之前一向觉得一个人的梦想是要在自己胸腔中，点燃自己的，而非去告诉别人、宣告天下的。我觉得自己未和很多人说起自己具体的梦想，具体要上的大学，只会和挚友说起。不太熟的人问起的时候也只是搪塞耸肩一笑，说 “当然是想上个好些的大学，和编程有关”，点到而已。可奇怪的是好像所有的人都知道我想要上的大学。那个时候我很难受，因为和我心中对梦想的定义不相符，所谓的梦想后来渐渐成了一种压迫在身上的负担，而非是最初激励我前进的动力。我知道在高考失利面前没有借口，在得知成绩后我没有太大的失望（或许是很早的时候就想到了结果），更没有如同当年看的小文、视频一般嚎啕大哭，而是很快的平静了下来，想着以后要走的路，以后去抹平没考好要付出的努力。我从未在心里把大学当成一段享乐的时间，而是求知的地方，是做自己真正喜欢的事情的地方。得知自己最终去往南邮的时候，我便心知 “假若我不是学校中的佼佼者，那我便没资格抱怨”。如今我依旧未能成为学校的佼佼者，所以也未曾抱怨学校配不上自己如何如何。记得自己来大学时发的动态是 “希望我的大学，比我的高中更加努力”，让父亲刻了一枚章，为 “殷鉴不远”，取《诗经》中 “殷鉴不远，在夏后之世” 之意，意为铭记高中失败之往事，以它为前车之鉴，吸取教训，以警未来。南邮有让我满意也有让我失望的地方，失望的地方还是在其教育体制以及学风，问及老师较为拓展的问题时，会感觉老师避而不谈，或是含糊其辞，亦或是直接说不需要掌握。满意的地方在于我很大地提高了自学能力，以及前些天说的 “眼界始阔”，我觉得这才是大学更重要的，教人以智慧优于教人以知识。还有幸运的一点是遇到了一群伙伴，志同道合。没有考上理想大学的遗憾还是有的，我不知多少次将路边指示牌想错，看到 “京邮电大学” 就会想到北邮，恍惚过后才想起自己身处南京，任何和北邮有关的东西总会第一时间跑入我的眼帘，尽管自己逃避不想见到他们。或许是出于一点点的自命不凡的心理，在 ICPC 南京区域赛的时候看到有两个北邮的队伍在自己后面，突然有种两年没有虚度的安慰感。</p>
<p>二十年间最满足最得意的事情，便是在大学中寻找到了自己一生的灵魂导师 —— 王阳明。小时不懂王阴阳，因课本格竹一事误会了先生十年。大二时见先生言行，方知一生俯首拜阳明。其实选一个人作导师并不难，只要两人思想相契就好。我读先生时，便觉我的认知与先生有相似的地方，他人觉得怪异的思想于我看来是正常不过的，于是便认定先生为我灵魂导师。心明了了，理也便明了了。每次有困惑去读《传习录》时，都有大悟之感。无善无恶心之体，有善有恶意之动，知善知恶是良知，为善去恶是格物。阳明先生顿悟时在贵州栖霞山，而我开始追寻先生亦是在栖霞，虽非一处，但名字却是相同，也算是一种上天注定的缘分吧。</p>
<p>我是个完美主义者，也是个极简主义者，觉得完美和简单的设计能给自己带来极大的满足。我的完美主义几于是病态的，在做任何事之前都会纠结很久，因为一件事对我来说，我要么将它做到极致，要么根本不去做它。我发现自己有着暴君的体质，当别人所做的达不到自己的预期时，就会忍不住对他的不满。为了避免如此，我一向更多地去自己做事，而大学里的团队作业实在是我最头疼的事情，因为最终的结果总是和自己的预期相差甚远。我追求完美主义，我逃避去做图片、视频、或者幻灯片，因为我不会用 PS、AE、PowerPoint 等工具，但我却想着各种整体或细节的处理。因为完美主义，我也在一些认知上和他人有着极大的分歧，后来我才明白，别人说的会做一件事是做出，而我理解的会是将其做好。周围总有人说什么计算机市场已经饱和不缺人一类的话，而我坚持觉得极度缺人，也是后来才明白，他说的人是人力人数，我说的人是人才。而我天生固执又倔犟，从不愿在这种事情上和他人妥协半分。完美主义让我十分苦恼，但我依旧愿意坚持。我的性格里有着偏激的一样，有着赌徒梭哈的孤注一掷，持精一之功，更喜欢 All in 的魄力。我认为大道至简，上帝是喜欢简单的。一条线、一个圆，在我眼里有时都是极美的，$e^{i\pi}+1=0$ 在我眼里不知胜过多少市井嘈杂， 程序中的 “hello world” 便是最美的情话。（最近看到爱因斯坦的一句话 “万物应该简单，但不应过于简单”）</p>
<p>思二十年间见闻，我觉得包容和谦虚两者最为重要。我见过太多为显自己博识而大放厥词滔滔不绝之人，看过太多持一家之见而抵斥他家之人，我总觉得他们很浅薄，可悲又可笑。我深知我所学的所知道的知识都是在它所在领域的皮毛，甚至皮毛也算不上，是这个领域最基础，最浅显的知识。真理无穷，进一步有一步的欢喜，亦有着向前一步所带来的恐惧。因为向前一步，你会看到更广阔的天空，更高峻的山峰。之前的时候我没能理解一句话，现在却是真真地感受到了。你的知识面是一个圆，你所知道的东西便是它的半径。你所知道的东西越多，那它半径也就越大，知识面也就越大，但在它圆周上，所接触到的新知识未知的知识也就越多，越会感觉到自己的渺小无知。所以我总觉得越有智慧的人他们越会觉得自己无知，因为他们能够看到真理无穷。而相反，那些较为浅薄之人越会自觉狂傲（不是外在表现出的狂傲，而是内心因无知而无所在乎敬畏的狂傲）。我一向喜欢空杯理论，也一向把自己自诩为空杯（其实实际上就是），学习或者处事的时候能够有所辨别地将他人的智慧放入进来，永不觉满。有人持一家之见或不知知识无穷而不愿将自己放空，便也无法吸收进新的知识。或许他们的容量也只是那些，只能够盛下一杯子的水，而谦虚者却是江海湖泊。前面所说的为谦虚，包容亦是如此。我很不习惯没有包容之心的一个人，他们看到与自己想法、立场不一样的人或事就开始开口成喷，遇到自己不能理解看不过的事也便不予包容。我亦是觉得他们可悲又可笑。有时一个人或一件事之所以成为如今的样子，往往与他的过去有着千丝万缕的联系。有人不去一丝丝分析便只就如今的模样去喷与怼，这不过是暴露智商的表现。学会了包容，天地也便开阔了。你不再拘于过去的一己之思、一家之见，而去往更广阔深入的思考，往往能够另有所得，能够明白这世上的人或事为什么会是现在的样子。如果一个人能够容纳两个相反相悖的理论，那这个人将会很可怕。我自觉自己是这样一个人，学习一家的思想后假若接受到与之相悖的事物，只要它不是本质为恶，并不会直接奋起反对，而是一点点将两者融为一体，将两者都放在自己的口袋中。</p>
<p>最近也加了一些程序员的群，发现自己变得愈加喜欢程序员们，或者说愈加喜欢向上的人。他们能够意识到自己要学习的还有很多，一向保持着谦虚昂扬的姿态，保持着登高自卑的决心，每天和他们交谈，会觉得有着一身向上的动力。或许是程序员自黑惯了，只有他们自己知道这一行业的有趣。我一直觉得一个男人的魅力只有一小部分在颜值，更多的在于他的视野与能力。</p>
<p>大学这几年也是自己责任意识苏醒的时期，无论是为家的责任、还是为国的责任。有时在行走或是骑车时会听一些曲子，如骆玉笙先生的《重整山河待后生》，不时落泪，那时候方知责任落在我们一辈的身上。重整山河待后生，我们便是后生。我一向很敬畏 “先生” 这个词，日常中也极少去用它。只有在说自己最为崇拜之人时，才会加上这两字。二十年来，看见了不知多少阴暗向下的世事言论与自暴自弃之人，方知先生当年灼见、文辞中的鞭笞。最后用先生的文字来结尾吧：</p>
<p>愿中国青年都摆脱冷气，只是向上走，不必听自暴自弃者流的话。能做事的做事，能发声的发声。有一分热，发一分光，就令萤火一般，也可以在黑暗里发一点光，不必等候炬火。</p>
<p align="right">2019 年 3 月 9 日</p>]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>总结</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 校招真题 拼多多 迷宫寻路</title>
    <url>/2019/03/04/2018%E6%A0%A1%E6%8B%9B%E7%9C%9F%E9%A2%98-%E6%8B%BC%E5%A4%9A%E5%A4%9A-%E8%BF%B7%E5%AE%AB%E5%AF%BB%E8%B7%AF/</url>
    <content><![CDATA[<p><a href="https://www.nowcoder.com/practice/e3fc4f8094964a589735d640424b6a47?tpId=90&amp;tqId=30779&amp;tPage=1&amp;rp=1&amp;ru=/ta/2018test&amp;qru=/ta/2018test/question-ranking">题目链接</a></p>
<p>因为在准备谷歌面试中，本来准备最近并不更新刷过的题，多刷些题。但由于这题对我来说意义很大，所以记载了下来。</p>
<p>为了节省些时间，题目题意在这里不复制粘贴了，可以在上面的链接跳转过去。</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>题目是很直接的 BFS ， 相比较最简单的迷宫寻路问题，这题增加了钥匙和门，即如果我们想要通过一个门，必须在此之前获得它的钥匙。 注意题目中的数据范围，门和钥匙最多为 10. 故可以用状态压缩记录状态。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">point</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> x, y, key, step;</span><br><span class="line">    <span class="built_in">point</span>() {}</span><br><span class="line">    <span class="built_in">point</span>(<span class="type">int</span> _x, <span class="type">int</span> _y, <span class="type">int</span> _key, <span class="type">int</span> _step) : <span class="built_in">x</span>(_x), <span class="built_in">y</span>(_y), <span class="built_in">key</span>(_key), <span class="built_in">step</span>(_step) { }</span><br><span class="line">} P;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">char</span> maze[<span class="number">107</span>][<span class="number">107</span>];</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">107</span>][<span class="number">107</span>][<span class="number">1050</span>];</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dx[<span class="number">4</span>] = {<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>};</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dy[<span class="number">4</span>] = {<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="built_in">sizeof</span>(vis));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="type">char</span> ch;</span><br><span class="line">    <span class="type">int</span> startX, startY;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">        {</span><br><span class="line">            ch = <span class="built_in">getchar</span>();</span><br><span class="line">            maze[i][j] = ch;</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">'2'</span>)</span><br><span class="line">            {</span><br><span class="line">                startX = i;</span><br><span class="line">                startY = j;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    queue&lt;P&gt; que;</span><br><span class="line">    que.<span class="built_in">push</span>(<span class="built_in">P</span>(startX, startY, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    <span class="type">int</span> curX, curY;</span><br><span class="line">    P p;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        p = que.<span class="built_in">front</span>();</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(maze[p.x][p.y] == <span class="string">'3'</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, p.step);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            curX = p.x + dx[i];</span><br><span class="line">            curY = p.y + dy[i];</span><br><span class="line">            <span class="keyword">if</span>(curX &lt; <span class="number">0</span> || curX&gt;=n || curY &lt; <span class="number">0</span> || curY &gt;= m || maze[curX][curY] == <span class="string">'0'</span> || vis[curX][curY][p.key])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            ch = maze[curX][curY];</span><br><span class="line">            <span class="keyword">if</span>(ch &gt;= <span class="string">'A'</span> &amp;&amp; ch &lt;= <span class="string">'Z'</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>( p.key &amp; (<span class="number">1</span> &lt;&lt; (ch-<span class="string">'A'</span>) ) )</span><br><span class="line">                   {</span><br><span class="line">                       que.<span class="built_in">push</span>(<span class="built_in">P</span>(curX, curY, p.key, p.step<span class="number">+1</span>));</span><br><span class="line">                       vis[curX][curY][p.key] = <span class="literal">true</span>;</span><br><span class="line">                   }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(ch &gt;= <span class="string">'a'</span> &amp;&amp; ch &lt;= <span class="string">'z'</span>)</span><br><span class="line">            {</span><br><span class="line">                que.<span class="built_in">push</span>( <span class="built_in">P</span>(curX, curY, p.key | ( <span class="number">1</span> &lt;&lt; (ch-<span class="string">'a'</span>) ), p.step<span class="number">+1</span>) );</span><br><span class="line">                vis[curX][curY][p.key] = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                que.<span class="built_in">push</span>(<span class="built_in">P</span>(curX, curY, p.key, p.step<span class="number">+1</span>));</span><br><span class="line">                vis[curX][curY][p.key] = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;   </span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="闲言"><a href="#闲言" class="headerlink" title="闲言"></a>闲言</h3><p>之所以说这题对我意义比较大，是因为在一次很久之前的训练时，有学长出了这道题。</p>
<p>那时候我还是个小白，几乎啥都不会，连 dp 是什么都不知道。那时候做到这个题还是蛮受打击的。讲题目时这题是邓新议（应该是）学长讲的。学长又讲到状压，把拿到我钥匙压缩为一个状态，当时我的心里几乎是崩溃的，因为学长们说的名词我都没有听过， 有一种很无力的感觉。</p>
<p>回去的时候，我一个人走在北操前的路上，有些流泪？因为深深地感受到了自己什么都不知道。于是回去查了 dp，状态压缩一些名词的意思， 这才知道原来 dp 是动态规划的意思。</p>
<p>所以对这题印象蛮深的，过去后一直想再见见这题。昨天刷题时看到题目名字中有个迷宫寻路，心想，不会是有钥匙和门的那道吧。</p>
<p>现在在看这道题，只感觉是一道很基础的题目了，很容易地就能够过掉。对比起来，自己还是学到了些知识的，进步了很多。 也算是给那晚独自一人的自己一个回答吧。</p>
]]></content>
      <categories>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>BFS</tag>
        <tag>校招</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ lambda 表达式效率</title>
    <url>/2019/03/01/C-lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%95%88%E7%8E%87/</url>
    <content><![CDATA[<p>今天看代码的时候看到有人在 sort 里用了 lambda 表达式，好奇心爆棚的我就寻思这样用的效率和我们定义一个函数之后调用这个函数两种方法哪个效率高。</p>
<p>于是自己动手比较了下，因为之前从没有用过 lambda 表达式，所以这也算是自己第一次使用 lambda 了。</p>
<h4 id="比较代码"><a href="#比较代码" class="headerlink" title="比较代码"></a>比较代码</h4><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">1e6</span><span class="number">+7</span>;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> <span class="type">int</span> &amp;a, <span class="type">const</span> <span class="type">int</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a&lt;b;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">srand</span>((<span class="type">unsigned</span> <span class="type">int</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">vec</span><span class="params">(MAXN)</span></span>;</span><br><span class="line">    <span class="type">int</span> time1 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> cnt=<span class="number">0</span>; cnt&lt;<span class="number">5</span>; cnt++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;MAXN; i++)</span><br><span class="line">            vec[i] = <span class="built_in">rand</span>();</span><br><span class="line">        <span class="type">int</span> start = <span class="built_in">clock</span>();</span><br><span class="line">        <span class="built_in">sort</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), cmp);</span><br><span class="line">        time1 += <span class="built_in">clock</span>() - start;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> time2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> cnt=<span class="number">0</span>; cnt&lt;<span class="number">5</span>; cnt++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;MAXN; i++)</span><br><span class="line">            vec[i] = <span class="built_in">rand</span>();</span><br><span class="line">        <span class="type">int</span> start = <span class="built_in">clock</span>();</span><br><span class="line">        <span class="built_in">sort</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>(), [](<span class="type">const</span> <span class="type">int</span> &amp;a, <span class="type">const</span> <span class="type">int</span> &amp;b){</span><br><span class="line">                <span class="keyword">return</span> a &lt; b;</span><br><span class="line">             });</span><br><span class="line">        time2 += <span class="built_in">clock</span>() - start;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, time1, time2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>多次实验后， time1 (不用 lambda 方法) 时间大约为 2050 ms 左右，而 time2 （使用 lambda 方法）耗时大约为 2250 ms 左右。所以估计 lambda 表达式效率会低一丢丢。</p>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
        <tag>lambda</tag>
      </tags>
  </entry>
  <entry>
    <title>Defense Lines(ACM/ICPC CERC 2010)</title>
    <url>/2019/02/26/Defense-Lines-ACM-ICPC-CERC-2010/</url>
    <content><![CDATA[<p><a href="https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;Itemid=8&amp;page=show_problem&amp;problem=4217">题目传送门</a></p>
<p><a href="https://sites.google.com/site/zsgititit/home/jin-jiec-cheng-shi-she-ji/uva-1471---defense-lines">博客参考 : https://sites.google.com/site/zsgititit/home/jin-jiec-cheng-shi-she-ji/uva-1471---defense-lines</a></p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>DP</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>LIS</tag>
      </tags>
  </entry>
  <entry>
    <title>印度之旅对乔布斯的影响</title>
    <url>/2019/01/25/%E5%8D%B0%E5%BA%A6%E4%B9%8B%E6%97%85%E5%AF%B9%E4%B9%94%E5%B8%83%E6%96%AF%E7%9A%84%E5%BD%B1%E5%93%8D/</url>
    <content><![CDATA[<p>我回到美国之后感受到的文化冲击，比我去印度时感受到的还要强烈。印度乡间的人与我们不同，我们运用思维，而他们运用直觉，他们的直觉比世界上其他地方的人要发达得多。直觉是非常强大的，在我看来比思维更加强大。直觉对我的工作有很大的影响。</p>
<p>西方的理性思维并不是人类先天就具有的，而是通过学习获得的，它是西方文明的一项伟大成就。而在印度的村子里，人们从未学习过理性思维。他们学习的是其他的东西，在某些方面与理性思维同样有价值，那就是直观和经验智慧的力量。</p>
<p>在印度的村庄待了 7 个月后再回美国，我看到了西方世界的疯狂以及理性思维的局限。如果你坐下来静静观察，你会发现自己的心灵有多焦躁，如果你想平静下来，那情况只会更更糟，但是时间久了之后总会平静下来，心看事情会更加透彻，也更能感受现实的环境。你的心灵逐渐平静下来，你的视界会极大地延伸。你能看到之前看不到的东西。这是一种修行，你必须不断练习。</p>
<p>禅对我的生活一直有很深的影响。我曾经想过要去日本，到永平寺修行，但我的精神导师要我留在这儿。他说那里有的东西这里都有，他说得没错。我从禅中学到的真理就是，如果你愿意跋山涉水去见一个导师的话，往往你的身边就会出现一位。</p>
]]></content>
      <tags>
        <tag>乔布斯</tag>
      </tags>
  </entry>
  <entry>
    <title>观《西南联大》纪录片有感</title>
    <url>/2018/12/28/%E8%A7%82%E3%80%8A%E8%A5%BF%E5%8D%97%E8%81%94%E5%A4%A7%E3%80%8B%E7%BA%AA%E5%BD%95%E7%89%87%E6%9C%89%E6%84%9F/</url>
    <content><![CDATA[<p>近日复习之暇，看完了《西南联大》纪录片，几度落泪，盖一年之泪点皆在此。思大一时近现代史纲要报告，吾题为《违千夫之诺诺，作一士之诺诺》，即写西南联大事。余于大学两载，眼界始阔，今日观此片，又生新悟，每看联大，皆有朝圣之感，故记之。然时至期末，时间尚紧，行笔匆匆，文章烂漫，加之感悟颇多，不免混杂失秩，有所佚露，来日有时更复修。</p>
<p>纪录片开头引《西潮》句，“目睹国帜三易”，仅仅六字，时事何坚！此余初落泪耶。思之痛之，更复叹之。时中国积百年之弱，不堪帝强欺凌，受鲸吞蚕食之耻而难以抗。今日有国泰民安之象，目光放远，览千年之史，方知不易，复看今年时局，更不敢放下一丝警惕。一年来，观媒体之言，群众之应，惊民智之未化，觉一国之根基需在教育，非知识之教育，而乃眼界之教育，智慧之教育。<span id="more"></span></p>
<p>鹏宇兄言：“这部纪录片开头有一句话很亮，1889 年，在光绪治理下的大清帝国，这一年没有大事发生。然而就在那一年，蔡元培、梁启超中举，张伯苓被招收进北洋水师学堂，梅贻琦在 12 月 29 日出生”，有法国大革命路易十六的日记 “七月十四日，晴，无事” 之感。吾亦思 “奥斯维辛没有什么新闻”。觉遇一文友为一幸事。纪录片首篇为《八音合奏》，取西南联大纪念碑中 “五色交辉，相得益彰，八音合奏，终和且平” 之句，主讲联大成立与之后管理事。联大为危难之时三校联立，不免有权力争夺，又文人相轻，自古有之，前期难免关系微妙，部分师生欲显己校之地位，然钱穆一语 “此乃何时”，力压众议。蒋梦麟、张伯苓让权于梅，三校虽有不同之历史，各异之学风，而八年之久，合作无间，同无妨异，异不害同，可见联大其兼容并包之精神，此精神吾常心慕之！吾对兼容并包之精神情所独钟，欲于弱冠之时写文详言。 吾加国学社亦慕联大之事，故于社团不主张权利之事，一为国学社为学习修贤之地，唯恐沾一丝官僚之气，而伤学习之风；二为仰联大之精神，兼容并包，余于社内交挚友二三，不时畅言，宜心宜神，常仰苏苏之君子、丁力之智、铭毓之文、鹏宇之思、宇龙之史、及众人之辽阔知识、家国抱负，实乃一生幸事。</p>
<p>记此学期开课之初，某老师极贬吾之民族，又言文人无骨，余尤为不爽，课上欲以《正气歌》怼之，但又思其不过一民之偏激，以偏概全，不必与之一般见识。无骨之文人故有之，然文人岂无骨？嵇康对屠刀，而《广陵》凌逸；希文低宰相，故《百官》讥讽。更不必言太史笔、常山舌。此皆文人之浩气，民族之脊梁。然文人风骨皆见于生死之间耶？非也。看联大大师，虽时处国难，生活艰辛，颠沛流离，然笔耕不辍，一手挑己家之生活，一肩担国家之栋梁。更有不少大师，舍一人一家之幸福，而兴学术之成就、渡国运之济昌、铸民族之未来，坚守于联大，不怨薪水之低微，不受他校高薪之青睐。弃稳定之官位，而迎艰苦之南渡。余不忍泣下。吾仰 “痛饮酒，熟读《离骚》，方为真名士” 闻一多先生，知丛豺伏乱，仍挥手开河，“国家糟到这步国地，我们再不出来说话，还要等到什么时候！”，潇洒自若，而后不屈之体倒于巷中，倒于枪声。忆先生由武汉南下时，与家人言 “不知何时归还”，不禁潸然泫然，其无归还乎！国运坎坷，先生撑起山河。</p>
<p>大师于乱世下克服艰难，辛苦治学，实是敬慕。陈寅恪先生患眼疾而难以就医，犹勤治文。后双目失明，不由让人扼腕叹息。时事艰辛，然学子仍精于学业，为求质高。反观今日，良心不禁受谴。余于作业考试，不免有应付之态度，惟因不喜，故舍课程，作业亦是时限终了时仓促完成，难言用心。有时又欲精雕细琢，恐成果难符己意，故蹉跎不前。网络发达，报告荡于网上而未施于实践；选题平庸，于何处现精英之资？较联大之学子，去之甚甚甚远。联大之精神，在 “独立之精神，自由之思想”。余于少时，以为不难做到，于大学中应能如此，今日思之向之，方知其难！更因此难，吾更爱联大之精神，之氛围，之大师。</p>
<p>向来吾知宾四《国史大纲》其名，然不知其写于此时，亦不知其写作缘由。今日知之，悲怆豪壮共生于膺。“一国家当动荡变进之时，其以往历史，在冥冥中必会发生无限力量，诱导着它的前程，规范着它的旁趋，此乃人类历史本身无可避免之大例。” 此书乃镜鉴之用！于浩荡波澜中观往史而勉吾国人。此学期，余于图书馆中阅一书，忘其为《国史大纲》或是吕著《中国通史》，上写不从中国角度来看中国往史，只算 “有知识的人” 而非 “有知识的中国人”，大意为此，他日有机会吾再去读之。观完此片，对宾四更加仰慕，欲购读《国史大纲》。</p>
<p>“南渡自应思往事，北归端可待来生。”“稽之往史，我民族若不能立足于中原、偏安江表，称曰南渡。南渡之人，未有能北返者。晋人南渡，其例一也；宋人南渡；其例二也；明人南渡，其例三也。风景不殊，晋人之深悲；还我河山，宋人之虚愿。吾人为第四次之南渡，乃能于不十年间，收恢复之全功，庾信不哀江南，杜甫喜收蓟北，此其可纪念者四也。联合大学初定校歌，其辞始叹南迁流难之苦辛，中颂师生不屈之壮志，终寄最后胜利之期望；校以今日之成功，历历不爽，若合符契。联合大学之始终，岂非一代之盛事、旷百世而难遇者哉！” 两者为陈寅恪诗与联大纪念碑碑文，诉南渡之不甘与北归之期望及成功北归后之喜悦。其感人肺腑，莫若如此。吾又思《毕业歌》词，“听吧，满耳是大众的嗟伤！看吧，一年年国土的沦丧！”，壮怀激烈，更思高中时同桌之言，知复兴之业在吾辈！</p>
<p>最终以西南联大校歌结尾吧：</p>
<blockquote>
<p>万里长征，辞却了五朝宫阙，暂驻足衡山湘水，又成离别。绝徼移栽桢干质，九州遍洒黎元血。尽笳吹，弦诵在山城，情弥切。</p>
<p>千秋耻，终当雪。中兴业，须人杰。便一成三户，壮怀难折。多难殷忧新国运，动心忍性希前哲。待驱除仇寇，复神京，还燕碣。</p>
</blockquote>
<p>（观时豪情壮志，写后觉自己文笔平庸，难述心胸，实为一憾。行文杂乱，期来日删改）</p>
<p align="right">2018 年 12 月 28 日<br>于学科楼 215</p>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>纪录片</tag>
      </tags>
  </entry>
  <entry>
    <title>交换两个数据块位置（数组的连续移位）</title>
    <url>/2018/12/20/%E4%BA%A4%E6%8D%A2%E4%B8%A4%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%9D%97/</url>
    <content><![CDATA[<p>连续的数据，如 <code>abcdefg</code> , 经过多次循环移位后，（如 <code>abcdefg</code> 经一次循环移位后变为  <code>bcdefga</code> ），该数据会变为什么。</p>
<p>我们知道数组的移位是 O (n)，很耗时间，如果连续移动 m 次的话时间消耗会很大。最近在读《编程珠玑》， 上边提供了两种算法。第一种称之为 “杂技算法”，即给定一些临时空间（设为可存放 <code>k</code> 个数据，需连续移动 <code>m</code> 次），先将前 <code>k</code> 个数据放入里面，之后将第 <code>m+1</code> 到第 <code>m+k</code> 个数据移入第 <code>1</code> 个到第 <code>k</code> 个中，其后依次移入其所在位置。（本文章并不想详细说此方法）。</p>
<p>第二种方法则比较巧妙，使我想起了暑假集训时做到的一道题目。那道题目和本题很相似，不过是要做多次这种连续移位，更加复杂。但其解决方法的思想和第二种方法思想一致。若总共有 <code>n</code> 个数据，要连续移动 <code>m</code> 次，算法如下：</p>
<ul>
<li>Reserve(0, m-1)</li>
<li>Reserve(m, n-1)</li>
<li>Reserve(0, n-1)</li>
</ul>
<p>如 <code>abcdefg</code> ， 第一步翻转后变为 <code>cbadefg</code> , 第二步后变为 <code>cbagfed</code> , 第三步后变为 <code>defgabc</code>。 即为答案，十分巧妙！</p>
<p>暑假那题因为需要多次进行连续移位，所以用到了 Splay 树。还有巨巨们用了 rope（块状链表）。 也是我第一次听说这种数据结构。不过 Splay 树效率更高些。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ 子类中函数的重定义</title>
    <url>/2018/12/18/C-%E5%AD%90%E7%B1%BB%E4%B8%AD%E5%87%BD%E6%95%B0%E7%9A%84%E9%87%8D%E5%AE%9A%E4%B9%89/</url>
    <content><![CDATA[<p>我一直只知道 C++ 子类函数对父类函数有重写操作，最近才知道了有重定义这么个概念，原因来源于类似如下代码：</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Base</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="type">int</span> a;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">seta</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        a = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Derived</span> : <span class="keyword">public</span> Base</span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">seta</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        a = x;</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    Derived a;</span><br><span class="line">    a.<span class="built_in">seta</span>();   <span class="comment">//error，candidate expects 1 argument, 0 provided</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>我的本意是想调用父类中的 <code>seta()</code> 方法，结果却报错了。这是我当初写代码时不曾想到的。我本想这算是函数的重载，派生类中有两个方法，结果事实（程序）却说明派生类中只有一个 <code>seta(intx)</code> 。</p>
<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>函数重载发生在相同的范围内， 也就是说在同一个作用域内， 而上面代码两个方法一个在父类， 一个在子类， 并不处于同一个作用域。 这里发生的是重定义， 基类的方法将会被隐藏。</p>
<p>下面给出重载，重写，重定义三者的特征。(来源： <a href="https://blog.csdn.net/Xiejingfa">Fred^_^</a>)</p>
<ul>
<li><p>函数重载（overload）<br>函数重载是指在一个类中声明多个名称相同但参数列表不同的函数，这些的参数可能个数或顺序，类型不同，但是不能靠返回类型来判断。特征是：<br>（1）相同的范围（在同一个作用域中）；<br>（2）函数名字相同；<br>（3）参数不同；<br>（4）virtual 关键字可有可无（注：函数重载与有无 virtual 修饰无关）；<br>（5）返回值可以不同；</p>
</li>
<li><p>函数重写（也称为覆盖 override）<br>函数重写是指子类重新定义基类的虚函数。特征是：<br>（1）不在同一个作用域（分别位于派生类与基类）；<br>（2）函数名字相同；<br>（3）参数相同；<br>（4）基类函数必须有 virtual 关键字，不能有 static 。<br>（5）返回值相同，否则报错；<br>（6）重写函数的访问修饰符可以不同；</p>
</li>
<li><p>重定义（也称隐藏）<br>（1）不在同一个作用域（分别位于派生类与基类） ；<br>（2）函数名字相同；<br>（3）返回值可以不同；<br>（4）参数不同。此时，不论有无 virtual 关键字，基类的函数将被隐藏（注意别与重载以及覆盖混淆）；<br>（5）参数相同，但是基类函数没有 virtual 关键字。此时，基类的函数被隐藏（注意别与覆盖混淆）</p>
</li>
</ul>
]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>坑</tag>
      </tags>
  </entry>
  <entry>
    <title>cout 从右向左入栈</title>
    <url>/2018/12/18/cout%E4%BB%8E%E5%8F%B3%E5%90%91%E5%B7%A6%E5%85%A5%E6%A0%88/</url>
    <content><![CDATA[<p>之前一直读不懂书上说的 <code>cout</code> 运算顺序为从右向左什么意思。昨天遇到一个问题明白了一些。题意大概是让我们写个 <code>ID</code> 类，<code>ID</code> 类里有个方法是 <code>nextID()</code> ，即返回现在的 <code>id</code> ，再让 <code>id</code> 自增 1（<code>id</code> 初始为 0）。所以我觉得这样写就好。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">nextID</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> id++;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>在之后的输出中（为了简便，我把空格啥的都删了）</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">IDSystem x;</span><br><span class="line">cout &lt;&lt; x.<span class="built_in">nextID</span>() &lt;&lt; x.<span class="built_in">nextID</span>() &lt;&lt; x.<span class="built_in">nextID</span>();</span><br><span class="line">cout &lt;&lt; x.<span class="built_in">nextID</span>() &lt;&lt; x.<span class="built_in">nextID</span>() &lt;&lt; x.<span class="built_in">nextID</span>();</span><br></pre></td></tr></tbody></table></figure>

<p>我本来觉得应该输出 0 1 2 3 4 5，但事实却是 2 1 0 5 4 3。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20181218/9YfPs7CBO6CR.jpg" alt="mark"></p>
<p>我惊了，我本以为是 Codeblocks 出 Bug 了，重启后结果还是如此。此后，在校队群里问了后才想起知道原来是 <code>cout</code> 从右向左压栈搞的鬼。这样也就不难理解为什么如此了。(也懂了其他一些运算顺序从右向左的道理)</p>
<p>下面给出刁老板找出编译器汇编的代码：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20181218/bl9HYsHGn4zA.png" alt="mark"></p>
<p>原来 <code>cout</code> 是有栈的。<br>之后刁老板又测试了如下代码：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20181218/NK7N3KqhKHQJ.png" alt="mark">发现已经解释不通了。孙心乾大佬说一个语句中同时读和写同一个变量算是 ub (undefined behaviour) 吧。</p>
]]></content>
      <categories>
        <category>C++</category>
        <category>编程</category>
      </categories>
      <tags>
        <tag>坑</tag>
      </tags>
  </entry>
  <entry>
    <title>十动然拒</title>
    <url>/2018/11/30/%E5%8D%81%E5%8A%A8%E7%84%B6%E6%8B%92/</url>
    <content><![CDATA[<p>哈哈哈，被谷歌十动然拒了。</p>
<p>继续加油。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20181130/mBlnssmU1vuM.jpg" alt="mark"></p>
]]></content>
      <tags>
        <tag>Google</tag>
      </tags>
  </entry>
  <entry>
    <title>写给荷</title>
    <url>/2018/11/29/%E5%86%99%E7%BB%99%E8%8D%B7/</url>
    <content><![CDATA[<p>初遇荷是今年 6 月份时的初夏，那时候正在去往活动室复习数电的路上，南京略闷热的天气和备考复习课程的不适让我有些压抑。这样的行走，感觉每一步都踩着不甘。心惶惶，不知自己的内心是早些到 215 还是故意慢些，在路上散散心，逃避一刻的烦忧。可是恰在这时，在我路过鼎山后一塘小水沟时，邂逅了令我魂牵这一夏一秋的荷。不是答答的马蹄，而是一个柚子的脚步。<span id="more"></span></p>
<p>初见时她们还是含苞待放，细嫩的茎枝立于水中，枝头的菡萏惹人喜爱，让人预期到盛开的希望。原本压抑的心情豁然清爽了许多，像一股清泉涌入干旱的土地般，带了丝甜味。不由得心生喜爱，想着以后定是多来此，路过时多看荷几眼，多陪荷一会。想必是半年的爱恋在初见第一眼时就定下了根源。（或许当时心情的压抑还与所租房子的 “房东” 不和有些关系）</p>
<p>就这样，这池莲花陪着我度过了烦闷的考试周，每日看到它们时都会觉得生活的美好，为了见到它们甘愿绕远多走些路，像是每天的一份仪式感。这时的荷还是只有着一点点欲开的骨朵，或是几枝荷华依偎在一起零零星星的几点嫩红，给人以希望。考试周过去就是暑假了，我认识实习、回家及外出比赛，觉得久久都不曾见到它，心中不免有些思念与期待。它们怎么样了，花朵开未，在那一渠小水沟里过得如何？</p>
<p>再回来时已是七月下旬，差不多盛夏了！我过着痛苦又喜悦的暑期集训生活，心中还是难以忘记着她们。纵使题目繁杂，路遥马寒，每每想到那池清荷，心里便会清凉舒畅，纸上的文字也似变成了水中的景色，波漾诱人起来。于是每日去巴弟烤饭或是食堂路过鼎山后，便是我与荷的相期一场约会。原来荷并不是严格按照时节一起生长的，而是有些已经盛开，有些还是娇羞的骨朵，摇曳在水中。水中点点泛起波纹，荷在向我打招呼呢。不知众荷喧哗，哪个才是离我最近的一朵呢？是近岸那枝？绽放的荷花诠释着盛夏的气息。抑或是水中的那枝？仍是含羞待放，像是 “一个女子的脸红胜过大段对白”。荷叶田田，荷花朵朵，姿态各异，不由得让人想起那句 “要我说女孩子呀，各有各的漂亮法。有的眉目清泠，像是一整季的雪水都融在了她的眼睛里。有的酒窝甜蜜，她笑一笑漫山遍野的风声都要消息。有的天生绵软，你朝她挨过去，像碰着了一团云。有的发汗时竟能生出浅浅的香气，散在天地间顿觉云销雨霁。如何不漂亮呢？她若是瘦，你便看她伸懒腰时优雅得像天鹅抻颈。她若丰盈，你便看她日光底下肌肤亮起时有多绮丽。她若生斑，你便赞她漂亮得发光上帝这才在她的眼角鼻翼投下了淡淡的影。她若佝偻，你便赞她小小只多秀气刚刚好搂在怀里。你瞧，女孩子生来就漂亮得不讲道理。” 荷便是女子吧！</p>
<p>就这样，我陪着荷成长，荷也陪着我成长。转尔到了秋日，自古逢秋悲寂寥，我开始担忧起荷的凋零。所以每天都要多走几次那条小路，多看荷几眼，惟恐一日她散入水中不能再陪我。看着荷的老去于我于荷都是残忍的，她每老一点，我的心就会多皱一丝。惟草木之零落兮，恐美人之迟暮。时光像是飞逝，荷的老去像是要比它的绽开急促得多，我看着她花瓣一朵朵地飘零，直到只剩莲藕，再到慢慢地叶子落去，留得枯荷，再到池水没过了荷。</p>
<p>我本以为看不到荷的时候会很难过，但真正来到的那天，反而并没有。因为我觉得，来年可期。 </p>
<p>感谢荷夏秋的相伴。这年冬，愿有飞雪相伴，带小姐姐乘一路公交，看遍金陵。</p>
<p align="right">2018.11.29<br>于学科楼 215</p>]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>荷</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 手机安装谷歌服务框架</title>
    <url>/2018/11/22/Android%E6%89%8B%E6%9C%BA%E5%AE%89%E8%A3%85%E8%B0%B7%E6%AD%8C%E6%9C%8D%E5%8A%A1%E6%A1%86%E6%9E%B6/</url>
    <content><![CDATA[<p>程序员果真离开了自己的电脑就不会用电脑。新换了手机，还好小米有着一键换机，可以把一些数据转移过去，不然不知道自己要纠结多久才能适应新的手机。</p>
<p>当然一键换机并不能把全部的设置都配置过去，在谷歌服务框架上就出了些问题。新手机上并没有安装好谷歌服务框架，我怎么忍受得了。而且 Go 谷歌安装器好像在 Android 8 上并不能用。于是只好自己手动安装服务框架。</p>
<p>所谓的谷歌服务框架，其实就是谷歌三件套（Google Services Framework、Google Account Manager、Google Play services），和一个可选的 Google Play 商城。</p>
<p>自己像原来一样在网上分别下载了这些的 APK, 不过打开 Google Play 商城的时候，要登录账号（这时候的 UI 非常之丑），一直说我无法与服务器建立可靠的数据连接。确保自己 SSR 能用的情况下，多次尝试还是不行，于是觉得是安装的 APK 的锅。</p>
<p>所以在这里说下我重新安装（下载 APK 的地方）的方法。（墙外）</p>
<ol>
<li><p>首先打开 <a href="https://www.apkmirror.com/">www.apkmirror.com</a></p>
</li>
<li><p> 在网页上搜索 com.google.android.gsf，这个是 Google Services Framework。（版本最好和自己 Android 相合，我猜的）</p>
<p>com.google.android.gsf.login，这个是 Google Account Manager。</p>
<p>com.google.android.gms，这个是 Google Play services。</p>
<p>com.android.vending， 这个是 Google Play 商城。</p>
</li>
</ol>
<p>安装好后打开 Google Play 商城，发现账号登录界面已经是新的了，很现代的 UI。当时心里就知道成了。果然。毫无问题的登录成功。</p>
<p>现在想来，应该是之前安装的一些 APK 版本太旧了吧。</p>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>fork () 函数解析 (只是放个链接)</title>
    <url>/2018/11/15/fork-%E5%87%BD%E6%95%B0%E8%A7%A3%E6%9E%90-%E5%8F%AA%E6%98%AF%E6%94%BE%E4%B8%AA%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<p>放一篇很棒的 fork () 函数解析：<a href="https://blog.csdn.net/jason314/article/details/5640969">linux 中 fork（）函数详解 jason314</a></p>
]]></content>
      <categories>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>安利</tag>
        <tag>函数解析</tag>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>文以载道</title>
    <url>/2018/11/10/%E6%96%87%E4%BB%A5%E8%BD%BD%E9%81%93/</url>
    <content><![CDATA[<h1 align="center">文以载道</h1>

<h2 id="什么是文以载道"><a href="#什么是文以载道" class="headerlink" title="什么是文以载道"></a>什么是文以载道</h2><ul>
<li><p>文以载道是关于文学社会作用的观点</p>
</li>
<li><p>指文章是为了说明道理，弘扬精神的。</p>
</li>
<li><p>意思是说 “文” 像车，“道” 像车上所载之货物，通过车的运载，可以达到目的地。文学也就是传播 “道” 的手段和工具。（摘自互动百科，原文中说传播儒家的道，指当时文以载道的意义，而我在要讲的有所差别，是更广义的文以载道）。</p>
</li>
<li><p>古人说‘文以载道’，用现在的话说，写文章就是表达思想。”（郭沫若《关于文风问题答〈新观察〉记者问》）</p>
</li>
<li><p>出自宋理学家周敦颐《通书・文辞》：“文所以载道也。轮辕饰而人弗庸，徒饰也，况虚车乎。” 文以载道是关于文学社会作用的观点。由中唐时期韩愈等古文运动家提出的 “文以明道” 发展，经宋代理学家周敦颐的解释得到完善。</p>
</li>
<li><p>其实 “文以载道” 的思想，早在战国时《荀子》中己露端倪。荀子在《解蔽》、《儒效》、《正名》等篇中，就提出要求 “文以明道”。</p>
</li>
<li><p>关于 “道”，其原义为 “所行道也”，即最朴素的道路。后引申为规律、道理、原理、法则。（在文字中，“导” 繁体为 “導”，希望晨曦可以给我们扩展下。）</p>
<ul>
<li>国学社学习会上有过很多 “道” 是什么的讨论，大家踊跃发言，你说我辩，好不激烈。但我个人觉得很多都是大而空的论断，是无意义的闲聊瞎扯，所以今天我并不想我们来谈论这个道到底为何，而希望能把它笼统地概括为正确的道理、法则，主要来讨论文章的实际意义，望见谅。<span id="more"></span></li>
</ul>
</li>
</ul>
<h2 id="一些引用"><a href="#一些引用" class="headerlink" title="一些引用"></a>一些引用</h2><blockquote>
<p>文所以载道也，轮辕饰而人弗庸，涂饰也。况虚车乎？文辞，艺也；道德，实也。美则爱，爱则传焉。贤者得以学而至之，是为教。故曰：‘言之不文，行之不远。’然不贤者。虽父兄临之，师保勉之，不学也；强之，不从也。不知务道德而第以文辞为能者，艺焉而已。 		—— 周敦颐《周子通书・文辞》</p>
</blockquote>
<p>译注：</p>
<blockquote>
<p>文所以載道，猶車所以載物，故為車者必飾其輪轅，為文者必善其詞說，皆欲人之愛而用之。然我飾之，而人不用，則猶為虛飾，而無益于實；況不載物之車、不載道之文，雖美其飾，亦何所為乎②？</p>
</blockquote>
<blockquote>
<p>写作文章的目的，就是要宣扬儒家的仁义道德和伦理纲常，为封建统治的政治教化服务；评价文章好坏的首要标准是其内容的贤与不贤，如果仅仅是文辞漂亮，却没有道德内容，这样的文章是不会广为流传的。</p>
</blockquote>
<p>最喜欢的一句话：</p>
<blockquote>
<p>昔诗人什篇，为情而造文；辞人赋颂，为文而造情。	—— 刘勰《文心雕龙 情采》</p>
</blockquote>
<p>《情采篇》全文（因甚爱此篇，且语言精简，华美而不矫揉，故不辞篇幅，全文录之）（文心雕龙建议一读）</p>
<blockquote>
<pre><code>圣贤书辞，总称文章，非采而何？夫水性虚而沦漪结，木体实而花萼振，文附质也。虎豹无文，则鞟同犬羊；犀兕有皮，而色资丹漆，质待文也。若乃综述性灵，敷写器象，镂心鸟迹之中，织辞鱼网之上，其为彪炳，缛采名矣。

　　故立文之道，其理有三∶一曰形文，五色是也；二曰声文，五音是也；三曰情文，五性是也。五色杂而成黼黻，五音比而成韶夏，五性发而为辞章，神理之数也。

　　《孝经》垂典，丧言不文；故知君子常言，未尝质也。老子疾伪，故称“美言不信”，而五千精妙，则非弃美矣。庄周云“辩雕万物”，谓藻饰也。韩非云“艳乎辩说”，谓绮丽也。绮丽以艳说，藻饰以辩雕，文辞之变，于斯极矣。

　　研味《孝》、《老》，则知文质附乎性情；详览《庄》、《韩》，则见华实过乎淫侈。若择源于泾渭之流，按辔于邪正之路，亦可以驭文采矣。夫铅黛所以饰容，而盼倩生于淑姿；文采所以饰言，而辩丽本于情性。故情者文之经，辞者理之纬；经正而后纬成，理定而后辞畅：此立文之本源也。

　　昔诗人什篇，为情而造文；辞人赋颂，为文而造情。何以明其然？盖风雅之兴，志思蓄愤，而吟咏情性，以讽其上，此为情而造文也；诸子之徒，心非郁陶，苟驰夸饰，鬻声钓世，此为文而造情也。故为情者要约而写真，为文者淫丽而烦滥。而后之作者，采滥忽真，远弃风雅，近师辞赋，故体情之制日疏，逐文之篇愈盛。故有志深轩冕，而泛咏皋壤。心缠几务，而虚述人外。真宰弗存，翩其反矣。

　　夫桃李不言而成蹊，有实存也；男子树兰而不芳，无其情也。夫以草木之微，依情待实；况乎文章，述志为本。言与志反，文岂足征？

　　是以联辞结采，将欲明理，采滥辞诡，则心理愈翳。固知翠纶桂饵，反所以失鱼。“言隐荣华”，殆谓此也。是以“衣锦褧衣”，恶文太章；贲象穷白，贵乎反本。夫能设模以位理，拟地以置心，心定而后结音，理正而后攡藻，使文不灭质，博不溺心，正采耀乎朱蓝，间色屏于红紫，乃可谓雕琢其章，彬彬君子矣。

　　赞曰∶

　　言以文远，诚哉斯验。心术既形，英华乃赡。

　　吴锦好渝，舜英徒艳。繁采寡情，味之必厌。
</code></pre>
</blockquote>
<h2 id="“文以载道”的内容"><a href="#“文以载道”的内容" class="headerlink" title="“文以载道”的内容"></a>“文以载道” 的内容</h2><p>文章本来就是传达思想的，为什么 “文以载道” 会成为韩愈为文的宗旨，并投身古文运动（古文运动为唐宋两代改革文章体裁的运动，主要目的在于扭转写作骈文的风气，改为学习三代两汉的古文。）。</p>
<ol>
<li><p>破骈为散</p>
<p>自魏晋南北朝骈文大行，文风绮靡，侧重形式，忽略内容。唐朝的骈文过度要求排比、对偶、用典以及格律，缺乏实用价值。骈文往往艰涩隐晦，所用典故，若其事甚繁，剪裁不易，不免晦涩难明，有时为了迁就四六句式，不惜割裂词语，以致内容未能明确表达，不利叙事。</p>
</li>
<li><p>内容为主</p>
<p>个人观点：韩愈反对的本质不是骈文文体，而是其所带来的言而无物，内容空洞，艰涩隐晦的靡靡文风。</p>
<p>韩愈是一个标准的儒生，以 “志于道” 为人生信仰，将生命投入 “弘道” 以寻求自己的安身立命之处。对所有儒生来说，<strong>“道借文传”，文（经）是媒介，帮助探求圣人之道</strong>。所以每当文章经传脱离道之信仰而成为专意研究的客体后，他们必然会产生无所适从的感觉。</p>
<p>这种脱离在历史上是存在的，主要体现在两方面，其一是<strong>文成为学问研究对象</strong>，也就是所谓的章句之学。研读五经，本为通经致用，以扬圣人之道，却因科举而为利禄之途，必然僵化。章句之学有二弊端：一为僵化，固执家法，不敢创新；一为繁琐，堆积材料，以多为能。其二是<strong>文成为艺术研究对象</strong>，譬如六朝时文人喜好在辞藻句式上下工夫，写出的文字多绮丽华美，极具艺术观赏性，绮丽柔靡的骈文盛行，就必然挤压文中 “道” 的生存空间。这两种状况盛行的时代，通常被儒生称之为 “文丧道敝”。</p>
<p>而不幸的是，这两种 “文丧道敝” 的状况被韩愈生活的时代占了个全。唐初《五经正义》修订后，唐人就重章句之学，而疏于义理之探讨；同时骈文根深蒂固，写作骈文以成积习，虽有王通等人努力，而社会文风变化不大。</p>
<p>我觉得，文风是当时士人风气的一面，内容空洞、绮丽柔靡的文风或许会反映当时社会浮躁、矫揉造作、士风浮薄的风气。（没有考证过，我凭空而语的。）</p>
<p>（闲话对当今古风看法。）</p>
</li>
</ol>
<p>稍微说下古文运动，古文运动指改革文章体裁，学习三代两汉的古文。这里的古文，是指古文的精神、风骨，而非古字。文以载道也忌讳生僻难读，佶屈聱牙的字词。</p>
<h2 id="“文以载道”的主张及影响"><a href="#“文以载道”的主张及影响" class="headerlink" title="“文以载道”的主张及影响"></a>“文以载道” 的主张及影响</h2><p>韩愈主张文以 “载道” 之思想 (然此一名词至周敦颐始正式提出)，宣扬儒道，攘斥佛、老，“破骈为散”，反对六朝以来的骈文文风，主张恢复三代两汉自然质朴的文体，“言贵独到”，“词必己出”，要 “文从字顺”，唯陈言之务去。</p>
<p>唐代古文运动直接影响到宋代古文运动，而其对散文的影响则远及清代。由于重视古文，经史遂成为文学的正统。但过于偏重文学的实际功用，而轻视了艺术的生命与美的价值，也容易造成后代贵古贱今的观念。</p>
<h2 id="“文以载道”的意义"><a href="#“文以载道”的意义" class="headerlink" title="“文以载道”的意义"></a>“文以载道” 的意义</h2><ol>
<li><p>发挥文章的价值</p>
<p>文章富有内容，感情充沛。或针砭时敝，或宣召仁义，或对一事一物发出自己的见解。我觉得这是极好的，极重要的。</p>
</li>
<li><p>整顿社会风气</p>
<p>刚才所说士风浮薄。</p>
</li>
<li><p>复兴文道、改革救国</p>
<p>背景：文道不传又兼国难。历时八年的安史之乱，使盛唐时代强大繁荣、昂扬阔大的气象一去不返，代之而起的，是藩镇割据、宦官专权、民贫政乱以及吏治日坏、士风浮薄等一系列问题。志士仁人由此慨然奋起，思欲变革，以期王朝中兴。韩愈就有诗称：“大贤事业异，远抱非俗观。报国心皎洁，念时涕汍澜。”</p>
<p>安史乱后唐朝国势衰落，藩镇割据，宦官弄权，故韩愈、柳宗元主张古文运动以移风易俗，巩固王室。当时佛、道二教盛行，不事生产，韩愈以捍卫儒家道统为己任，以古文排斥佛老。</p>
<p>永贞元年亦即贞元二十一年 (805 年)，以王叔文为首，柳宗元、刘禹锡、吕温等为中坚的一批士人，发起了政治革新运动。改革的经世致用思潮需要文体文风改革，韩、柳要宣传自己的政治主张和儒家思想，就必须开展文体革新运动。</p>
</li>
</ol>
<h2 id="宋代的古文运动"><a href="#宋代的古文运动" class="headerlink" title="宋代的古文运动"></a>宋代的古文运动</h2><p>宋代古文运动源于骈文的再度流行。韩愈、柳宗元以后唐代散文衰落，李翱过于重道，但他的文章不足以继续领导风气；皇甫湜则使散文走上怪僻艰涩之途。晚唐李商隐、温庭筠等人专事雕章琢句，六朝风气又盛行起来。宋初文风绮靡，文人多写歌功颂德、华而不实的骈文。宋真宗时，西昆派更重视雕章丽句。另一方面，宋代尊王攘夷思想与哲理风气兴起，亦推动古文运动盛行。</p>
<p>宋代古文运动可分两阶段。第一阶段的鼓吹者有石介、柳开、孙复、穆修、尹洙和王禹偁，主张有明道、致用、尊韩、重散体及反西昆体五点。</p>
<p>第二阶段以欧阳修为领导者，主张文道并重，先道后文，除理论外他还有优秀的作品，支持者有梅尧臣、苏舜钦、王安石、苏洵、苏轼、苏辙及曾巩。（古文运动成功）</p>
<p>宋代古文运动阻遏纤巧绮靡文风的流行，反对艰涩怪僻，建立了平易流畅的文章风格，使散文更具表达力和生命力。宋代古文运动并主张文道合一，建立古文的正统地位，影响直至清末。</p>
<h2 id="一些人物及作品"><a href="#一些人物及作品" class="headerlink" title="一些人物及作品"></a>一些人物及作品</h2><p>陈子昂、韩柳、元白、王禹偁、欧阳修、梅尧臣、苏舜钦、王安石、苏洵、苏轼、苏辙及曾巩。</p>
<p>韩柳文：个人比较喜欢韩文，韩愈散文内容丰富，形式多样化，众体兼长，不落俗套，力求创新、构思奇巧，词锋锐利，雄奇奔放，气势磅礡，汪洋恣肆，曲折多变，波澜起伏，想像丰富，感情充沛，析理透辟，逻辑严密，设譬巧妙，笔触幽默，句法则骈散交错。（QAQ，柳文几乎没看过，所以不知如何。但从《小石潭记》可见一斑，不愧与韩并称！）《祭十二郎文》、《原道》、《进学解》、《谏迎佛骨表》、《柳子厚墓志铭》、《送孟东野序》、《送李原归盘古序》、《答李翊书》、《捕蛇者说》、《箕子碑》、《种树郭橐驼传》</p>
<p>链接：<a href="https://zh.wikisource.org/wiki/%E6%98%8C%E9%BB%8E%E5%85%88%E7%94%9F%E9%9B%86">昌黎先生集</a> <a href="https://zh.wikisource.org/zh/Author:%E6%9F%B3%E5%AE%97%E5%85%83">柳宗元</a></p>
<p>元白文：所读甚微，无推荐</p>
<p>王禹偁：《黄冈竹楼记》</p>
<p>欧阳修：《五代史伶官传序》、《朋党论》、《泷冈阡表》、《秋声赋》、《醉翁亭记》、《梅圣俞诗集序》、《祭石曼卿文》、《朋党论》、《纵囚论》</p>
<p>苏洵：《管仲论》、《辨奸论》</p>
<p>苏轼：《范增论》、《贾谊论》、《晁错论》、《留侯论》、《六国论》、《喜雨亭记》、《超然		 台记》、《宝绘堂记》、《方山子传》</p>
<p>苏辙：《上枢密韩太尉书》、《黄州快哉亭记》</p>
<p>范仲淹：《严先生祠堂记》</p>
<p>归有光：《项脊轩志》</p>
<p>王阳明：《瘗旅文》、《象祠记》</p>
<h2 id="《答李翊书》"><a href="#《答李翊书》" class="headerlink" title="《答李翊书》"></a>《答李翊书》</h2><p>六月二十六日，愈白。李生足下：生之书辞甚高，而其问何下而恭也。能如是，谁不欲<br>告生以其道？道德之归也有日矣，况其外之文乎？抑愈所谓望孔子之门墙而不入于其宫者，焉足以知是且非邪？虽然，不可不为生言之。<br>生所谓 “立言” 者，是也；生所为者与所期者，甚似而几矣。抑不知生之志：蕲胜于人而取于人邪？将蕲至于古之立言者邪？蕲胜于人而取子人，则固胜于人而可取于人矣！将蕲至于古之立言者，则无望其速成，无诱于势利，养其根而俟其实，加其膏而希其光。根之茂者其实遂，膏之沃者其光晔。仁义之人，其言蔼如也。<br>抑又有难者。愈之所为，不自知其至犹未也；虽然，学之二十余年矣。始者，非三代两汉之书不敢观，非圣人之志不敢存。处若忘，行若遗，俨乎其若思，茫乎其若迷。当其取于心而注于手也，惟陈言之务去，戛戛乎其难哉！其观于人，不知其非笑之为非笑也。如是者亦有年，犹不改。然后识古书之正伪，与虽正而不至焉者，昭昭然白黑分矣，而务去之，乃徐有得也。<br>当其取于心而注于手也，汩汩然来矣。其观于人也，笑之则以为喜，誉之则以为忧，以其犹有人之说者存也。如是者亦有年，然后浩乎其沛然矣。吾又惧其杂也，迎而距之，平心而察之，其皆醇也，然后肆焉。虽然，不可以不养也，行之乎仁义之途，游之乎诗书之源，无迷其途，无绝其源，终吾身而已矣。<br>气，水也；言，浮物也。水大而物之浮者大小毕浮。气之与言犹是也，气盛则言之短长与声之高下者皆宜。虽如是，其敢自谓几于成乎？虽几于成，其用于人也奚取焉？虽然，待用于人者，其肖于器邪？用与舍属诸人。君子则不然。处心有道，行己有方，用则施诸人，舍则传诸其徒，垂诸文而为后世法。如是者，其亦足乐乎？其无足乐也？<br>有志乎古者希矣，志乎古必遗乎今。吾诚乐而悲之。亟称其人，所以劝之，非敢褒其可褒而贬其可贬也。问于愈者多矣，念生之言不志乎利，聊相为言之。愈白。</p>
<blockquote>
<p>《答李翊书》是唐代文学家韩愈于唐贞元十七年（801 年）创作的一篇书信体论说文。李翊曾向韩愈请教写文章的技巧，韩愈写了这篇文章作答。文章比较系统地阐述了作者的文学观，认为文章的思想内容决定表现形式，所谓 “气盛则言宜”；同时结合自己的写作实践具体指出，写好文章的基本条件是要不断加强学习和修养，无望其速成，不诱于势利，树立 “立言” 的志向，并且要注意修改，求新，“惟陈言之务去”。 —— 百度百科</p>
</blockquote>
]]></content>
      <categories>
        <category>文学</category>
        <category>古文</category>
      </categories>
      <tags>
        <tag>古文</tag>
      </tags>
  </entry>
  <entry>
    <title>感谢贴</title>
    <url>/2018/11/09/%E6%84%9F%E8%B0%A2%E8%B4%B4/</url>
    <content><![CDATA[<p>早在暑假末或者九月初，七牛云就告诉用户政策更换，测试域名会 30 天内回收，要用户自己绑定一个备案的域名。懊恼。因为自己用的测试域名里边放了很多图片，而自己也没有备案的域名。所以一直苟活着，时常惊喜地发现博客中的图片还能用。</p>
<p>可今天，七牛云突然发邮件说测试域名将于七天后回收。想着如果回收的话里边的图片要一个个更换图床，再从原文中一个个更换外链，就觉得麻烦，很烦燥。于是心里有了邪恶的想法，借个别人备案的域名。于是发了个说说，想借个域名，本来也没抱多大希望，因为觉得这东西一般大家并不会再加个解析指向别人的网站，太麻烦别人了。</p>
<p>没想到惊喜的是一个学长和一个学弟评论可以借我。惊喜万分。</p>
<p>七牛云终于可以接着用了，原本的 markdown 文件也只是轻松地一键替换了外链的域名。（不过因为博客设置有按更新日期排序，所以这次更新后排序乱了。不过无伤大雅。）</p>
<p>在此十分感谢 <a href="http://www.likent.cn/">lcy</a> 学长， <a href="http://www.cfzhao.com/">zyw</a> 学弟！</p>
<p align="right">2018 年 11 月 9 日</p>

<p><img src="https://static.baydn.com/media/media_store/image/d645ebd19d7c25f737f8c43c5295bf46.jpeg"></p>
]]></content>
  </entry>
  <entry>
    <title>Java GUI 组件动态变化问题及 Thread 的 run () 与 start () 区别</title>
    <url>/2018/10/25/Java-GUI%E7%BB%84%E4%BB%B6%E5%8A%A8%E6%80%81%E5%8F%98%E5%8C%96%E9%97%AE%E9%A2%98%E5%8F%8AThread%E7%9A%84run-%E4%B8%8Estart-%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<p>近来，用 Java Swing 做一个抽奖的程序，为了观赏性高一些，抽奖时 JLabel 上的号码会一直变化。当我实现好功能测试时却发现，当我按下按钮后，界面卡住了，并没有出现预期的效果，JLabel 上的数字并不变化， 只是在最终显示出最终的结果。</p>
<p>原来，因为 <code>JavaSwing</code> 中，界面刷新是线程同步的，同一时间只有一个线程能执行刷新界面的代码，上例中，多次调用 <code>setText()</code> 方法，均是在主线程中调用，造成线程阻塞，线程并没有退出，所以界面刷新线程不能获得执行刷新的机会，而最后一次 <code>setText()</code> 后，线程退出，界面才能执行刷新，只能看到最后一次的值，如果多次不断地刷新，必须把代码放到一个单独的线程中，从而刷新界面。</p>
<p><strong>Code</strong></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Thread</span>(newRunnable(){</span><br><span class="line">    </span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>{</span><br><span class="line">	<span class="comment">//代码放在单独的线程中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++) {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=<span class="number">6</span>; j++) {</span><br><span class="line">                jl.setText(<span class="string">""</span> + j);</span><br><span class="line">                Thread.Sleep(<span class="number">10</span>);	<span class="comment">//省略了异常的处理</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">	}</span><br><span class="line">}).start();</span><br></pre></td></tr></tbody></table></figure>

<p>一开始，我把 <code>start()</code> 写成了 <code>run()</code> ，发现程序还是没有变化，不是预期的结果，= w =，不太熟悉 Java 的我抱着试一试的态度换成了 <code>start()</code>， 没想到居然成功了！</p>
<p>于是引出了下一个问题， 在 Thread 中两个方法有什么区别。</p>
<p>1.start（）方法来启动线程，真正实现了多线程运行，这时无需等待 run 方法体代码执行完毕而直接继续执行下面的代码： 通过调用 Thread 类的 start () 方法来启动一个线程， 这时此线程是处于就绪状态， 并没有运行。 然后通过此 Thread 类调用方法 run () 来完成其运行操作的， 这里方法 run () 称为线程体， 它包含了要执行的这个线程的内容， Run 方法运行结束， 此线程终止， 而 CPU 再运行其它线程。</p>
<p>2.run（）方法当作普通方法的方式调用，程序还是要顺序执行，还是要等待 run 方法体执行完毕后才可继续执行下面的代码： 而如果直接用 Run 方法， 这只是调用一个方法而已， 程序中依然只有主线程–这一个线程， 其程序执行路径还是只有一条， 这样就没有达到写线程的目的。</p>
]]></content>
      <categories>
        <category>Java</category>
        <category>多线程</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>多线程</tag>
      </tags>
  </entry>
  <entry>
    <title>卜算子 答施</title>
    <url>/2018/10/09/%E5%8D%9C%E7%AE%97%E5%AD%90-%E7%AD%94%E6%96%BD/</url>
    <content><![CDATA[<h2 align="center">卜算子 答施</h2><h2>
</h2><h3 align="center">樂婉</h3>


<div style="writing-mode: vertical-rl;">相思似海深<br>舊事如天遠<br>淚滴千千萬萬行<br>更使人<br>愁斷腸</div>
<p></p>
<div style="writing-mode: vertical-rl;">要見無因見<br>拚了終難拚<br>若是前生未有緣<br>待重結<br>來生願</div>]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>詩詞</tag>
        <tag>愛而不得</tag>
      </tags>
  </entry>
  <entry>
    <title>记得吗，你的名字叫炎黄</title>
    <url>/2018/10/08/%E8%AE%B0%E5%BE%97%E5%90%97%EF%BC%8C%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97%E5%8F%AB%E7%82%8E%E9%BB%84/</url>
    <content><![CDATA[<blockquote class="blockquote-center">当我登上那古老的城墙，当我抚摸着腐朽的柱梁，当我兴奋的倚栏远望，总会有一丝酸涩冲上喉头，总听到有一个声音大声的说：记得吗？你的祖先名叫炎黄。
书上说有一条大鱼，生活在北冥那个地方，它化作一只巨鸟，在天地之间翱翔。巨鸟有如垂天之云般的翅膀，虽九万里亦可扶摇直上。圣贤赋予我们可以囊括天宇的胸襟，为我们塑造一个博大恢弘的殿堂。
那时候，有个怪异的青年名叫嵇康，他临刑前，弹奏了一曲绝响，那宽袍博带在风中飞扬，他用了最优雅的姿态面对死亡。几千年过去，依旧有余音绕梁，只是他不知道，真正断绝的不是曲谱，而是他的傲骨，乃至他身上的衣裳。
我也曾梦回大唐，和一个叫李白的诗人云游四方，他用来下酒的是剑锋上的寒光，他的情人是空中的月亮。我曾见他在月下徘徊、高歌吟唱，长风吹开他的发带，长袍飘逸宛如仙人模样。
可是后来换了帝王，他用一杯酒捧起了文人，摒弃了武将。他的子孙最终躲进人间天堂，把大片的土地拱手相让。然而在寒冷的北方，正有一支军队征战沙场，敌人都说，有岳家军在，我们打不了胜仗。可叹英雄遭忌，谗士高张，一缕忠魂终于消散在西湖之傍，一个民族的精神就这么无可逆转的消亡。然而血色夕阳中，我依稀见到，有人把它插进土壤，那是将军用过的，一支宁折不弯的缨枪。
时间的车轮悠悠荡荡，终于在甲申那里失了方向。于是瘦西湖畔，梅花岭上，为纪念这个悲剧建起一座祠堂。那个叫史可法的文弱书生，他不愿散开高束的发髻，更不能脱去祖先留给他的衣裳，于是他决定与城共存共亡，丢了性命，护了信仰。残酷的杀戮，如山的尸骨，并不能把民族的精神埋葬，有人相信，终有一天，它还会在中华大地上熠熠发光。
几百年后，我坐进麦当劳的厅堂，我穿起古奇牌的时装，我随口唱着 my heart will go on，却莫名其妙的心伤，因为我听到一个声音大声的说：忘了吗？你的祖先名叫炎黄。
我记得了，一群褐发篮眼的豺狼，带着坚船利炮，拆了我们的庙宇，毁了我们的殿堂。于是在历经无数灾难之后的今天 ——
我们懂得民主自由，却忘了伦理纲常，我们拥有音乐神童，却不识角徵宫商，我们能建起高楼大厦，却容不下一块公德牌坊，我们穿着西服革履，却没了自己的衣裳。
在哪里，那个礼仪之邦？在哪里，我的汉家儿郎？
为什么我穿起最美丽的衣衫，你却说我行为异常？为什么我倍加珍惜的汉装，你竟说它属于扶桑？为什么我真诚的告白，你总当它是笑话一场？为什么我淌下的热泪，丝毫都打动不了你的铁石心肠？
在哪里，那个信义之乡？在哪里，我的汉家儿郎？
我不愿为此痛断肝肠，不愿祖先的智慧无人叹赏，更不愿我华夏衣冠留落异邦。所以心中总有一个渴望，梦想有一天，我们可以拾起自己的文化，撑起民族的脊梁。 记住吧，记住吧，有一个时代叫汉唐，有一条河流叫长江，有一对图腾叫龙凤，有一件羽衣 —— 名叫霓裳！</blockquote>]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>汉服，朗诵</tag>
      </tags>
  </entry>
  <entry>
    <title>南鄉子 自述</title>
    <url>/2018/10/08/%E5%8D%97%E9%84%89%E5%AD%90-%E8%87%AA%E8%BF%B0/</url>
    <content><![CDATA[<h2 align="center">南鄉子 自述</h2>

<h3 align="center">蘇軾</h3>

<div align="center">凉簟碧紗廚。一枕清風晝睡餘。睡聽晚衙無一事，徐徐，讀盡牀頭幾卷書。<br>搔首賦歸歟。自覺功名懶更疏。若問使君才與術，何如，占得人間一味愚。</div>

]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>詩詞</tag>
        <tag>蘇軾</tag>
      </tags>
  </entry>
  <entry>
    <title>2018CCPC 秦皇岛站记录及暑假集训感受</title>
    <url>/2018/09/29/2018CCPC%E7%A7%A6%E7%9A%87%E5%B2%9B%E7%AB%99%E8%AE%B0%E5%BD%95%E5%8F%8A%E6%9A%91%E5%81%87%E9%9B%86%E8%AE%AD%E6%84%9F%E5%8F%97/</url>
    <content><![CDATA[<blockquote class="blockquote-center">男儿何不带吴钩<br>收取关山五十州</blockquote>
### 流水账，记录下一些大事的时间
| 时间                  | 事务           |
| --------------------- | -------------- |
| 9月26日  9：30——14：30 | 南京南——秦皇岛 |
| 9月27日  14：00——15：00 | 比赛开幕式 |
| 9月27日  15：00——17：00 | 热身赛 |
| 9月28日 9：10——14：10 | 正式比赛 |
| 9月28日 15：00——16：00|  颁奖仪式暨闭幕式 |
| 9月29日 8：02——12：15 |  秦皇岛——北京 |
| 9月29日 13：00——14：30 | 游天坛 |
| 9月29日  16：15——21：43| 北京南——南京南 |

<h1 id="启程"><a href="#启程" class="headerlink" title="启程"></a>启程</h1><h2 id="获得名额"><a href="#获得名额" class="headerlink" title="获得名额"></a>获得名额</h2><p>七场激烈的网络赛尘埃落定，team002 （到目前为止）获得了 1+1 场比赛机会。在比赛还未结束时，我们差不多已把握了 CCPC 秦皇岛赛区的名额。秦皇岛赛区是时间较早的一个赛区， 暑假完后不到一个月就已开始，我们队因为自己还未充分准备，想多补补题，做做题目，加之比赛需要我们请假四天，大三课程紧张，四天要旷课许多，我们队便有了想换赛区的想法，改为 CCPC 桂林站或者是两场 ICPC 比赛。但和老板沟通后，因为如果我们赛区改动，别的队伍将来不及安排，于是我们队选择大橘为重，擎南邮之帜，以 “以上队伍成绩无效” 之名，进军秦皇岛。<span id="more"></span></p>
<h2 id="行程安排"><a href="#行程安排" class="headerlink" title="行程安排"></a>行程安排</h2><p>青岛网络赛结束后，队友因为数模提前回去，我和八队留在了活动室计划行程。此处省略 N 字，本来以为是件简单的事情，没想到买个票，订个房这破事能用两个小时，无语 |||。</p>
<p>行程定好，我急匆匆赶去易班面试新人，和技术部众大佬一顿吹比之后，回宿舍时已是黑夜。仰观皓月之明，繁星璀璨 (瞎编的)，心中不由燃起一句诗。</p>
<blockquote>
<p>男儿何不带吴钩， 收取关山五十州。</p>
</blockquote>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>时间紧迫，比赛就在眼前，我们队为了稳定下成绩，自己用课下的时间做了些训练。正式比赛在中秋节后，于是我们利用中秋假期做了两场训练，一场是去年秦皇岛赛区的原题，我们前两个多小时差不多就写好了铜牌题目。开始向银牌题发起进攻。我和葛宇轩各开一题，最终双双开花，都 AC 了， 过掉了五个还是六个题目，记不太清楚了，定在了银牌区。第二场题目是一些银牌题的汇总，对于银牌题，我之前是不敢做的，但接触后发现银牌题蛮好玩的，不像自己想象的那么可怕，（对银牌题产生了兴趣）。做银牌题其实有些不太顺畅的，四个小时最终 A 出了两道。不过这两道让自己受益蛮多的。</p>
<p>其实，我和时光一直想着中秋能够出去玩下，尤其是我，想带时光在南京转转，因为来了四个半月，我们只一起去过家门口的夫子庙。一直想带她去的老门东都是一拖再拖。我们一直期待着中秋，可我又辜负了中秋。想来蛮遗憾，又有些说不出的难过。</p>
<h2 id="扬帆，起航"><a href="#扬帆，起航" class="headerlink" title="扬帆，起航~"></a>扬帆，起航～</h2><p>时间来到了乘坐高铁上，我们大家偶尔歇息，大多都是在看算法。三个人在高铁上学习了很多东西，emmm，准确地说是队友学习了很多，wade 看着上次训练的银牌题， Bule_Zst 在看字符串里的后缀数组，我复习了下数位 dp， 尽力地去感受下它状态转移的思想，后来又是看了状压 dp， 经典的铺砖问题， 看到终点时，仍未理解其意，它用滚动数组来节省空间地记录状态，看了许多都难以真正明白，大概还是自己太菜了。来还看了些图论。将近秦皇岛，心中不禁翻涌起主席的词。秦皇岛外打鱼船、大雨落幽燕、白浪滔天、魏武挥鞭、东临碣石有遗篇、换了人间，一个个没有顺序地往上冒。</p>
<h1 id="在秦皇岛"><a href="#在秦皇岛" class="headerlink" title="在秦皇岛"></a>在秦皇岛</h1><h2 id="一些赛前的事"><a href="#一些赛前的事" class="headerlink" title="一些赛前的事"></a>一些赛前的事</h2><p>一直以为秦皇岛在河北，会是河北口音，结果下了高铁打的时师傅张嘴一口东北话惊了个呆。后来发现秦皇岛居然是东北口音。看到宾馆房间的一刻，觉得还是蛮好的，三个人只要 131 一晚，床蛮豪华的，不潮，还有桌子。觉得宾馆蛮好蛮值的。一个队友问 “这是什么”，我带着北方人的骄傲自豪说：“暖气”，队友恍然大悟地 “哦～”，（晚上，队友突然说 “要不我们打开暖气感受一下”， 我， emmmmm, 我应该怎么告诉它暖气要怎么用 = w=， 南方人真可爱。）</p>
<p>到达后我们决定找些吃的，和队友一番觅食后找到了一条美食街，又是一番选择，最后两个队来了烤肉店，QAQ，给我们烤肉的小哥哥超帅！或许是我们下午去的，客人还比较少，小哥哥就一直在我们桌这里给我们烤肉，还会夹给我们，QAQ，好评好评，小哥哥站在我身边，总是忍不住偷瞄几眼。</p>
<p>本来我们想吃好六点半回去打场训练赛，可是韩式烤肉这东西，你懂得，贼耗时间，烤半天才吃那么几口，我实在是不适合吃这个 TAT，忍不住馋呀。吃完回去差不多已经是七点半多，我们好像没有打训练赛，而是看起了自己的。我给学长做了几道水题后也看起了之前积累的题目。Bule_Zst 看字符串看得很开心，心想，这次比赛如果遇到字符串稳了。</p>
<p>第二天早上喝了羊汤便去报到，匆匆走了遍流程，换上了粉色的衣服，大家在校徽牌下拍了照，传给了老板。（万恶之源从这里开始）结果老板对照片不太满意，告诉我们拍照要离牌子远一些，这样能突出人。然后疯狂暗示，在大群里分享知乎上一些如何拍出好看的集体照的问题，疯狂暗示。我们几个人便谈起老板，于是 “建议转为非常规队员 / 荣誉队员的梗”、“建转非” 诞生。这个梗被我们不厌其烦地玩着，直到现在还在一直说。如我和 wade 不约而同地唱起了智斗，他们就会说：“经过大家一致讨论，建议你俩转为荣誉队员，更好地去唱京剧，考虑到 ACM 协会长远发展，把机会留给需要的同学”（求大家给个标准版本呀，我这个记得不太清楚）， 曹老板第二天煎鸡蛋，我们就说建议你转为非常规队员，更好地记享受生活，云云。每次提到这个梗大家都笑个前仰后合，或许别人不知所以然，但 A 协的估计看到大多会莞然一笑，深领其意。</p>
<p>还有一件事情就是和朱兄面了基，QAQ，开心，聊了一年多，终于见面啦，还有一些小紧张呢。</p>
<h2 id="热身赛"><a href="#热身赛" class="headerlink" title="热身赛"></a>热身赛</h2><p>我们队伍赛有一个魔咒，一到热身赛就会懵比，简单的题目会一直 WA 和 T， 或者不知道怎么做。我们仨谓之攒人品，这次热身赛前也想着不小心 WA 些次，给正式比赛攒点人品。但这次热身赛是真的懵，不知所以。C 题是签到题，我看了一眼后就有了答案，1e4 的数据，只要找到最大最小值就好，预计两三分钟就能 A。然而，1e4 的数据，我们扫一遍数组 O (n) 的算法，在 1s 的时限下居然 T 了？？？？简直不敢相信，于是我上场，进行了一波玄学优化，把循环的 <code>i</code> 设为寄存器变量，加速循环。Submit， 红色的 WA 赫然显目。还好是 WA，在惊叹寄存器访问速度的同时 wade 找到了问题所在， 题目中说的是 “any two numbers”，任意两个数字，如果最大最小值一样的话我们两个都会选择数组第一个，知道了问题后立即改正，submit， T？？？当时心态就炸了，尼玛，1e4 的数据，我就扫一遍数组，O (n)，你告诉我 T？？？题目叙述不清， 数字个数可能为 1 个，这种情况你让我们输出什么？？？ any two numbers 是位置不同还是值不同，需要不同吗。心太炸裂，无论我们怎么优化，都是 T，偶尔有 WA，但我们可以接受。虽然知道是题目的问题，但这种感觉就很不爽，一道签到题过不了就感觉很难受，心里不知道骂了多少次出题人。看着别的队伍一个个 AC 掉，升起气球，焚心似火。 在之前 wade 一眼看出了 B 的做法，因为 C 题耽误了很久，我们选择让 wade 先敲 B， 我和 Bule_Zst 打印出 C 来看，还是那句话，虽然知道是题目的问题，但 A 不出，真的很难受。 wade 1A 了 B，我们心里算是有了些底，一起再看 C，之后还是 T。一道一眼题我们竟签到了两个小时？？？出题人 *** 去吧。最后几分钟过了 C，然后再多次交代码都 AC 了？？？然后开始测评测机速度， 循环大概 5e8 左右， long long 乘法取模可以 2e8 次，评测机还算蛮豪华的，想想自己 1e4 的数据 O (n) 会 T 更是不解。想去知乎上喷出题人。热身赛这么坎坷也算是大攒一次人品吧。热身赛后我问我们背后队伍的小姐姐 C 题做法，他们是排序下取最大最小，O (nlogn) 的算法，过了。？？？？这个方法我们后来也用了，但好像 WA 了。后来又和 8 队谈，他们根本没考虑 “any two numbers”，想骂出题人 ++.</p>
<h2 id="晚上训练"><a href="#晚上训练" class="headerlink" title="晚上训练"></a>晚上训练</h2><p>热身赛后的晚上我们小训练了下，做的是去年 CCPC 哈尔滨场， 一个毒瘤场，2 题铜。</p>
<p>第一个题目是让你构造从 1 到 n 的全排列，使对于 $i \ge 3 时， a_i  \equiv 0 \pmod {|a_i-a_{i-2}|}$ 。我先想出了 n 到 10 时的情况，发现并找不到规律。一番思索后，和 wade 同时想出了答案。（我拿起笔准备写的同时， wade 给我要笔，结果看我写完说他要写的也是这个）。我们的方法就是把 n 分成两段， 然后间隔输出。如 1 到 10 就是分成 1<del>5 和 6</del>10， 答案就是 <code>1 6 2 7 3 8 4 9 5 10 </code> 。AC。</p>
<p>第二个题目是有 n 堆石子，每堆石子数量告诉你，每次操作只能从一堆取一个石子移到另一堆，要把这些石子操作成每堆石子的数量都是一个数的倍数，问最少的操作次数是多少。首先可以很明显地想到要对石子总数求其因子，这也是队友的想法， 枚举因子是 $O (\sqrt {sum})$ 的时间复杂度，之后要求出对于每个因子最少需要的操作次数，在求操作次数时队友遇到了小麻烦，因为我们不能够预先知道当前石子需要填补还是移到别的石子中， 比如 “2 2 3” 我们需要移动 4 次， “2 6 6 11” 在让每堆石子数是 5 倍数时操作数为 3，（分别从 6，6，11 拿一个移到 2 上）。我们找不到解法。这时，我有一种感觉，这是我擅长解决的题目。我也不知道哪来的感觉，但就觉得这是自己所擅长的。一开始，我陷入了和队友一样的困境，无法考虑当前石子最优的方法选择，感觉 dp，贪心什么的都没有方案。看到 $O (\sqrt {sum})$ 有些大，可能会 $T$ ，灵感闪了下， 感觉不用枚举全部因子，枚举素因子就好，给队友说 “因子的倍数必是素因子的倍数”，一语中的，三人恍然大悟， 自己也是兴奋不已， 站起来喊了声 <strong>“崔明浩牛逼！”</strong>。这样就把算法优化到了 $O (log sum)$ 。然后又开始了对操作次数的思考，久久思索，不见答案，但总觉得自己可以解决。一瞬间，又是一闪灵光。瞬间想到了答案，对于刚才”2 6 6 11” 的情况，写下了”2 1 1 1”，之后 (2+1+1+1)/5=1， 5-2=3， <strong>bingo!</strong> 得出答案。我们先用每堆石子对当前情况下的素因子取余， 把余数相加，其必是该素因子的个数，（别问我为什么，自己想），将和除以该素因子 $p$ 所得商为石块归并后的堆数 $m$ ，之后对余数排序，选出最大的 $m$ 个，$a_1, a_2, ……, a_m$，$\sum_{i=1}^m (p-a_i)$ 即为 $p$ 情况下的最少操作数。把作法告诉队友，站起了又喊了声 <strong>欢迎 hack~</strong> ，AC。两个小时的时间做完了铜牌题，信心大增，十分地振奋。 后来，“崔明浩牛逼！” 和 “欢迎 hack~” 成了新梗，队友称之为自信二连。</p>
<h2 id="正式赛"><a href="#正式赛" class="headerlink" title="正式赛"></a>正式赛</h2><p>正式赛的早上在宾馆吃了自助餐，虽然照在上海吃的宾馆自助餐差很远，但我觉得种类虽然少，但还蛮可以的。8 队的曹老板惊奇的发现了煎蛋器和烤面包机，曹老板将他的富有生活情趣发挥到了极致。煎个鸡蛋，烤个面包，美滋滋。</p>
<p>到东秦体育馆后有些想上厕所，结果这时候男厕居然破天荒的排起了队 = =，比赛很快就要开始了，队伍还很长。这时有老师说另外一边还有一个给我们开放了，我们便跑了过去。之所以说上厕所这事是因为在去的路上，我看到了气球！我发现有黄、浅绿、蓝三种颜色气球比较多，心里大概有了底，可以做三题，然后发现黄色的最多，那应该就是签到题了。回来告诉了队友自己的发现。比赛推迟了 10 分钟，虽然不让动键鼠，但已经有人敲起了模板，我们也敲了起来，对面有个队伍竟然已经打开了题目册，这个不能忍 = =。</p>
<p>9 点 10 分，比赛开始。</p>
<p>我们打开了题目册，三人读题，登录账号，发现 B 有人提交，三人一起看 B，签到题确认无疑。B 题就是一个时钟，给你两个时间，问两个时间过程中时针和分针相交次数，左端点重合算，右端点重合不算。一番考虑，11 点内不分重合，所以不算 11 点，23 点就好，试了些样例，sumbit， 1A。心里有了些底，虽然验证耗了些时间，但我们觉得值得。</p>
<p>我和 wade 开 G 题，看了一会后发现暂时没了思路，看了下榜，B 题通过人数在上升！分析了下环境，G 应该是蓝气球，B 是黄色气球。我们转向 B 题，很快有了思路，字典序枚举答案就好，用全排列 6*6 = 36 种可能。之后再用枚举的答案去匹配它给的串，匹配成功就返回。Bule_Zst 敲好代码，我们测了几个比较苛刻的样例，通过，Submit， CE？？？？？？一脸懵比，这个平台又不能看编译错误在哪，本地没有问题。。看了一眼榜，居然有 - 1，woc？CE 居然算罚时，打开问题板，发现大家都在说 B 题 CE 的问题，管理回复说已经 rejude 重测，看了一眼状态，提交的那发 WA 了。有些难受，三人秒调整心情，找 WA 点，但卡了好久，这时候，wade 和 我打开了红牛。。wade 说红牛买假了，喝了犯困 = =，后来我看了红牛罐，发现上边标着 Fe，突然一种不祥的预感，但不能告诉队友，怕涣散军心。。就瞒着这件事。看着周边的队伍一个又一个过了 B，升起了黄气球，看了下主页，大约百个队伍过了 B，又是焚心似火， 不过又有些安慰，因为看队友状态，我感觉这题能过。时间分分在流逝，突然 wade 找到了 WA 点，我们的字典序有问题！会有重复，去重之后再提交，AC！心情稳定了下来，有了底。</p>
<p>我们便去 rush G。G 题题目是给你一棵无根树，问你他是不是一棵 K 叉满树。如果是，输出最小的 K。虽然写 B 的时候我和 wade 没有想 G，但现在回来看竟然有了一致的思路。我给 wade 说起了思路，我们把点分为根结点，叶子结点，和中间结点。如果他是一棵 K 叉满树，那个根结点度为 K，叶子结点度为 1， 中间结点度为 K+1。我们统计这三个度数的个数，一般情况下，找到数量为 1 的，就是根结点，那么我们获得了 K，已经知道了它是 K 叉树，然后获取度为 1 的结点的数量，其必有 K 的 n 次方， 这样我们就可以获得树的层数，为 n+1，然后我们可以算出理论上度为 K+1 结点的个数，再和实际的比较，如果相等，那么它就是 K 叉满树。这是一般情况，其它特殊情况判断下就好。 wade 让我去指引 Bule_Zst 敲代码， = =， 真的，太痛苦了，看 Bule_Zst 的代码命名和花括号居然不换行，我有想打队友的冲动 = w=，我指引写代码坎坎坷坷，wade 看我俩费劲忍不住亲自来敲。敲好后我们测了自己的样例，通过，这时我更改了下出的 3 叉满树的样例，将一个叶子结点连到了根结点下，结果程序还是输出 3。成功 Hack！我发现这组样例根结点变了，由 1 变成了 4，这时提出了想法，将树根换为 4 重整树！我和 wade 很快的发现了问题，我们这样判断的，是它是不是一棵 K 叉树！并不能判断其满树情况。于是 wade 开始敲验证满树代码，G 题我们用了很多时间，Submit， 红红的 WA 震惊了三人。我们一直有个疑问，就是结点数为 1 时，我们输出 -1 还是 1， 这也是出题人被喷得最惨的地方，下面会详述。。我们用了很长时间检查了代码，觉得思路没问题，唯一的问题就是结点数为 1，又是一番纠结，改为 1 后， Submit， TLE！一阵心惊，三人很快互相鼓气，说没事，稳住。我们分析了数据范围和算法的时间复杂度，觉得可以过，将问题移向了 vector 的使用和一些初始化操作 (clear 及 memset 操作的耗时)，将树由 <code>vector</code> 保存转为了 前向星写法，将 <code>memset</code> 改为 <code>for</code> 循环来清空。submit， 心中默默祈祷，AC！三人长舒一口气。</p>
<p>看了下榜，I 过题人数比较多，我们开始 rush I 题。我和 wade 有了不同的想法，wade 觉得是满流的最大流问题，但是要求求出多解的方案数，不会，我们先让 Bule_Zst 敲 Dinic 算法的模板， 我的想法是状态压缩 + 暴力搜索。后来大家觉得我的做法比较可靠，便放弃了最大流，转为状压和部分和搜索。 Bule_Zst 的撸代码能力着实让我吃惊，在我还构思的时候他已经在很快地敲上，感觉一气呵成。虽然思路还不明确，但着实让我震惊。I 题我们没有很明确的思路，所以只能试着碰碰运气， Bule_Zst 最后代码结构也乱了，能感觉出来，这里改改，那里改改，很容易失去结构。我们只能靠着样例来判断，可程序会爆 segment fault， 改改，过了第一个样例跑第二个，最终终是无能为力。。（晚上 Bule_Zst 说在最后半小时的压力真的让他承受不住，要崩溃了。）</p>
<p>比赛结束。</p>
<p>我觉得三题拿铜没问题，而且我们错误的提交比较少，封榜前是 95 名，离铁牌区还有着 50 多名的距离。再说如果后边的人真的厉害，早就过题了。但 wade 蛊惑人心说可能铁，想想自己在红牛上看到的 Fe（比赛结束也告诉了他们），自己也有些虚。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180929/E4Ak59I4i5.png" alt="mark">（写着 Fe 的红牛 = =）</p>
<p>赛后问了后面队伍的小姐姐他们 I 题怎么过的，小姐姐告诉我说是个很复杂的 dp， 他们用了好像三四层 for 循环。一瞬间有些后悔，因为自己一开始也想了状压 dp，但后来改向了更暴力的搜索。自己有些内疚的，因为队伍里 dp 的话一般是由我来想状态转移，这次没能 rush 出来。三个人的心情也有些坦然，没过多地去后悔代码没能写出，因为写出来等待我们的也可能是 T。 </p>
<p>比赛时状态还是会受周围一些影响的。比赛时向右看了下，突然发现了 jls 居然在我们这一排。jls 有些可爱 = =，瞅他了很多次，有次他敲代码时还是会敲指甲，和 World Final 直播里看到的他简直一模一样。偶尔凑巧看到前边队伍笑得很开心，自己好像也有动力去想题目。最后的时候复旦的拉格朗过了 D，看到 AC 的时候他们队沸腾了，全场都在看他们，其中一人跳着说 夺冠了！而当前我们还在写 I 题，压力让我有点羡慕他们。</p>
<h2 id="颁奖前的小等待"><a href="#颁奖前的小等待" class="headerlink" title="颁奖前的小等待"></a>颁奖前的小等待</h2><p>比赛结束到颁奖仪式有 50 分钟的时间，我就在赛场晃悠，有时找朱兄去玩，有时去看看别的队伍。找朱兄的时候队友 QQ 告诉我打铁了，心中寒了下，很快地回到自己座位，原来是在逗我，志愿者通知过了，我们是铜。一瞬间压力释放了些，但却没有开心，更多的是有着很多的不甘。这些等写下面总结的时候写吧。</p>
<p>震惊！女朋友居然会看榜！！女票说她看我们 95 名时我简直惊了个呆，这货居然快成行内人，会看榜了！<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180929/A5klDjaBK4.png" alt="mark"> 热身赛后举办方采访我们，让我们比手势说 “CCPC， 耶！”， 采访的时候我就有些不详的预感，果然。。。结束后放视频居然有我们。。放到的时候我捂着 wade 低下头想不被人发现我们。过去后后面队伍的小姐姐对我说：“我看到你了。”？？？？嘤嘤嘤。然后 = =，女票， = = 居然看到了这视频的照片，嘤嘤嘤嘤嘤嘤嘤嘤！<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180929/JhKFAIacD6.png" alt="mark"></p>
<h2 id="颁奖"><a href="#颁奖" class="headerlink" title="颁奖"></a>颁奖</h2><p>嘻嘻嘻，队友简直是天选之人，铜奖最后一批上去，站在了最中间。从两边向中间开始发奖牌，到队友那里刚好没有了。队友在上面一脸懵比，看着他的表情，我笑得不行。也不知道要不要拍照，哈哈哈，上台了没有奖。队友：虽然我没有牌子，但也要努力地笑出来，尴尬而不失礼貌。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180929/hhkAdmcgFH.jpg" alt="mark"> <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180929/K1jh34jIFb.jpg" alt="mark"></p>
<h2 id="如何看待-2018-CCPC-秦皇岛站"><a href="#如何看待-2018-CCPC-秦皇岛站" class="headerlink" title="如何看待 2018 CCPC 秦皇岛站"></a>如何看待 2018 CCPC 秦皇岛站</h2><p>赛前王和兴老师会在群里问大家需要的 IDE 和 编辑器，觉得还是蛮好的。</p>
<p>出题人是真的垃圾，出题题意说明不清让人来猜是真的该被喷，热身赛的 C 真的让我恶心到了，后来好像还 rejudge fst 了， -27， 呵呵。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180929/46H6gA560k.png" alt="mark"> <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180929/6ChI8J8dm4.png" alt="mark"> <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180929/32HC1iB19L.png" alt="mark"></p>
<p>暂时写到这吧，一些感想等下更。未完待续……</p>
<p align="right"> 2018 年 9 月 29 日 </p>
<p align="right"> 于高铁上 </p>]]></content>
      <categories>
        <category>综合比赛</category>
      </categories>
      <tags>
        <tag>比赛记录</tag>
      </tags>
  </entry>
  <entry>
    <title>致疯狂的人</title>
    <url>/2018/09/22/%E8%87%B4%E7%96%AF%E7%8B%82%E7%9A%84%E4%BA%BA/</url>
    <content><![CDATA[<p>&amp;emsp;&amp;emsp; 致疯狂的人。他们特立独行。他们桀骜不驯。他们惹是生非。他们格格不入。他们用与众不同的眼光看待事物。他们不喜欢墨守成规。他们也不愿安于现状。你可以认同他们，反对他们，颂扬或是诋毁他们。但唯独不能漠视他们。因为他们改变了寻常事物。他们推动人类向前迈进。或许他们是别人眼里的疯子，但他们却是我们眼中的天才。因为只有那些疯狂到以为自己能够改变世界的人…… 才能真正改变世界。</p>
]]></content>
      <tags>
        <tag>乔布斯</tag>
      </tags>
  </entry>
  <entry>
    <title>两道树状数组</title>
    <url>/2018/09/11/%E4%B8%A4%E9%81%93%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p>最近又好颓废呀，暑假想写的两道树状数组的题解拖到了今天。</p>
<h1 id="Movie-Collection-NWERC-2011"><a href="#Movie-Collection-NWERC-2011" class="headerlink" title="Movie Collection(NWERC 2011)"></a>Movie Collection(NWERC 2011)</h1><p>传送门： <a href="http://codeforces.com/gym/100729/attachments">Gym - 100729C</a></p>
<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Mr. K. I. has a very big movie collection. He has organized his collection in a big stack.<br>Whenever he wants to watch one of the movies, he locates the movie in this stack and removes<br>it carefully, ensuring that the stack doesn’t fall over. After he finishes watching the movie, he<br>places it at the top of the stack.<br>Since the stack of movies is so big, he needs to keep track of the position of each movie.<br>It is sufficient to know for each movie how many movies are placed above it, since, with this<br>information, its position in the stack can be calculated. Each movie is identified by a number<br>printed on the movie box.<br>Your task is to implement a program which will keep track of the position of each movie.<br>In particular, each time Mr. K. I. removes a movie box from the stack, your program should<br>print the number of movies that were placed above it before it was removed.<span id="more"></span></p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>On the first line a positive integer: the number of test cases, at most 100. After that per test<br>case:<br>• one line with two integers n and m (1 ≤ n, m ≤ 100 000): the number of movies in the<br>stack and the number of locate requests.<br>• one line with m integers a1, . . . , am (1 ≤ ai ≤ n) representing the identification numbers<br>of movies that Mr. K. I. wants to watch.<br>For simplicity, assume the initial stack contains the movies with identification numbers 1, 2, . . . , n<br>in increasing order, where the movie box with label 1 is the top-most box.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Per test case:<br>• one line with m integers, where the i-th integer gives the number of movie boxes above<br>the box with label ai<br>, immediately before this box is removed from the stack.<br>Note that after each locate request ai<br>, the movie box with label ai<br>is placed at the top of the<br>stack.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><p>2<br>3 3<br>3 1 1<br>5 3<br>4 4 5</p>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><p>2<br>3 3<br>3 1 1<br>5 3<br>4 4 5</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>这题有些像树状数组求逆序数对个数的思路。自己一开始的想法很接近正解，但是因为没有完全理解求逆序数个数的思想，只有模糊的思路，不会敲，很可惜！</p>
<p>首先，我们用数组来模拟题意，n=5 时一开始的状态为 54321， 如果要看 4，则变为 53214，在后边加一个数字。用一个大小为 n+m 的树状数组来维护前缀和， bit [i] 表示到 i 位置有多少部片子，最初在每个位置都加 1，当我们观看一部时，就在它原来的位置 - 1，在新的位置加 1，更新它的位置即可。见代码。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 100010</span></span><br><span class="line"><span class="type">int</span> bit[MAXN&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> pos[MAXN];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(x&lt;(MAXN&lt;&lt;<span class="number">1</span>))</span><br><span class="line">    {</span><br><span class="line">        bit[x] += val;</span><br><span class="line">        x += (x&amp;-x);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    {</span><br><span class="line">        sum += bit[x];</span><br><span class="line">        x -= (x&amp;-x);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">memset</span>(bit, <span class="number">0</span>, <span class="built_in">sizeof</span>(bit));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">update</span>(i, <span class="number">1</span>);</span><br><span class="line">            pos[i] = n-i<span class="number">+1</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line"></span><br><span class="line">            ans = <span class="built_in">query</span>(i+n<span class="number">-1</span>) - <span class="built_in">query</span>(pos[x]);</span><br><span class="line">            <span class="built_in">update</span>(pos[x], <span class="number">-1</span>);</span><br><span class="line">            pos[x] = i+n;</span><br><span class="line">            <span class="built_in">update</span>(pos[x], <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, ans, <span class="string">" \n"</span>[i==m]);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>感觉是极其经典的树状数组的应用，更加理解了求逆序数对的方法。</p>
<h1 id="Bitris-SEERPC-2012"><a href="#Bitris-SEERPC-2012" class="headerlink" title="Bitris(SEERPC 2012)"></a>Bitris(SEERPC 2012)</h1><p>传送门: [Gym - 101472B]</p>
<h2 id="Problems"><a href="#Problems" class="headerlink" title="Problems"></a>Problems</h2><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>There is a set of 2xN cubes. Each cube has an integer ranging from 1 to N assigned to it, labeling<br>each of the cube’s sides. Each number is written on exactly two cubes. Cubes are placed one on<br>top of another, in a pile. If two cubes with the same number stand next to each other, they<br>annihilate: both cubes disappear, and cubes standing above come down to fill the space.<br>Your task is to disassemble the pile – eliminate all cubes. You are allowed<br>to swap any two neighboring cubes. A swap could be done only after all<br>possible annihilations are done.<br>For example, if N=4 and cubes are standing as you see on the right then<br>you need to make one swap. Cubes with label 3 annihilate immediately;<br>you swap the fourth bottom cube (with label 1) and the fifth bottom cube<br>(with label 4); afterwards, cubes with labels 4 annihilate, followed by cubes<br>with labels 1 and labels 2. Other option is to swap third and fourth bottom<br>cubes (in this case cubes with labels 1 and 4 annihilate at same time,<br>followed by cubes with label 2), or second and third.<br>If N=3, and cubes are standing like shown on the right, you need to<br>perform 3 swaps. One way to solve is to swap fifth and sixth cubes, then<br>fourth and fifth; cubes with labels 2 annihilate; then swap second and<br>third; other cubes annihilate simultaneously.<br>The task is to find the minimal number of swaps, such that all cubes are<br>eliminated.</p>
<h3 id="Input-data"><a href="#Input-data" class="headerlink" title="Input data."></a>Input data.</h3><p> The first line in the input file contains the positive integer N,<br>2&lt;=N&lt;=100000. The second line contains the labels of all cubes, bottom up, split by spaces.</p>
<h3 id="Output-data"><a href="#Output-data" class="headerlink" title="Output data."></a>Output data.</h3><p>The only line in the output should contain one non-negative integer M – the minimal<br>number of swaps necessary to destroy all cubes.</p>
<h3 id="Sample-iutput"><a href="#Sample-iutput" class="headerlink" title="Sample iutput"></a>Sample iutput</h3><p>4<br>2 1 4 3 3 1 4 2</p>
<h3 id="Sample-output"><a href="#Sample-output" class="headerlink" title="Sample output"></a>Sample output</h3><p>1</p>
<h3 id="Sample-input"><a href="#Sample-input" class="headerlink" title="Sample input"></a>Sample input</h3><p>3</p>
<p>1 3 2 1 3 2</p>
<h3 id="Sample-output-1"><a href="#Sample-output-1" class="headerlink" title="Sample output"></a>Sample output</h3><p>3</p>
<h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Idea-1"><a href="#Idea-1" class="headerlink" title="Idea"></a>Idea</h3><p>每进来一个，如果之前出现过这个数字，我们优先让它消除就好。至于要交换多少次，就类似上面一题的思路。</p>
<p>2018.09.21 更</p>
<p>懒惰，不想写了，放过我吧。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>数据结构</category>
        <category>树状数组</category>
      </categories>
      <tags>
        <tag>树状数组</tag>
      </tags>
  </entry>
  <entry>
    <title>两道单调队列题目 (初识单调队列)</title>
    <url>/2018/08/28/%E4%B8%A4%E9%81%93%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97%E9%A2%98%E7%9B%AE-%E5%88%9D%E8%AF%86%E5%8D%95%E8%B0%83%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<p>尺取法、单调队列、滑动窗口一直傻傻分不清。以前觉得尺取法就是滑动窗口，现在又觉得单调队列和滑动窗口是一回事。</p>
<p>算法的美妙之处就在于当你明了一个算法时，会发自内心惊叹它的美。我于树状数组如此，学习单调队列后亦如此。</p>
<p>关于单调队列的用法主要看了下<a href="https://www.cnblogs.com/neverforget/archive/2011/10/13/ll.html">单调队列及其应用</a>中的内容， 以下引用一些内容。</p>
<blockquote>
<p>   单调队列及其应用</p>
<pre><code>单调队列，望文生义，就是指队列中的元素是单调的。如：{a1,a2,a3,a4……an}满足a1&lt;=a2&lt;=a3……&lt;=an,a序列便是单调递增序列。同理递减队列也是存在的。

单调队列的出现可以简化问题，队首元素便是最大（小）值，这样，选取最大（小）值的复杂度便为o（1），由于队列的性质，每个元素入队一次，出队一次，维护队列的复杂度均摊下来便是o（1）。
</code></pre>
<p>如何维护单调队列呢，以单调递增序列为例：</p>
<p>1、如果队列的长度一定，先判断队首元素是否在规定范围内，如果超范围则增长队首。</p>
<p>2、每次加入元素时和队尾比较，如果当前元素小于队尾且队列非空，则减小尾指针，队尾元素依次出队，直到满足队列的调性为止</p>
<p>要特别注意头指针和尾指针的应用。</p>
</blockquote>
<span id="more"></span>

<h1 id="1-Non-negative-Partial-Sums-Southwestern-European-Regional-Programming-Contest-2011-Gym-101561G-Uva-12393"><a href="#1-Non-negative-Partial-Sums-Southwestern-European-Regional-Programming-Contest-2011-Gym-101561G-Uva-12393" class="headerlink" title="1. Non-negative Partial Sums(Southwestern European Regional Programming Contest 2011 - Gym 101561G - Uva 12393)"></a>1. Non-negative Partial Sums(Southwestern European Regional Programming Contest 2011 - Gym 101561G - Uva 12393)</h1><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>You are given a sequence of n numbers a0, . . . , an−1. A cyclic shift by k positions (0 ≤ k ≤ n − 1) results<br>in the following sequence: ak, ak+1, . . . , an−1, a0, a1, . . . , ak−1. How many of the n cyclic shifts satisfy the<br>condition that the sum of the first i numbers is greater than or equal to zero for all i with 1 ≤ i ≤ n?</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Each test case consists of two lines. The first contains the number n $(1 ≤ n ≤ 10^6)$, the number of<br>integers in the sequence. The second contains n integers a0, . . . , an−1 (−1000 ≤ ai ≤ 1000) representing the<br>sequence of numbers. The input will finish with a line containing 0.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, print one line with the number of cyclic shifts of the given sequence which satisfy the<br>condition stated above.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><p>3<br>2 2 1<br>3<br>-1 1 1<br>1<br>-1<br>0</p>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><p>3<br>2<br>0</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h3><p>一个数列，依次将最后一个数移到最前边，问有多少种情况其前缀和均大于等于 0。</p>
<h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>队友给我讲完题意后第一反应就是将数列再复制一倍，如 -1 1 1 变为 -1 1 1 -1 1 1。之后 = w=，就没思路啦。之后接触啦单调队列，发现实在是太神奇啦 QAQ。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 1000010</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[MAXN], sum[MAXN&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="type">int</span> que[MAXN&lt;&lt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[<span class="number">0</span>]);</span><br><span class="line">        sum[<span class="number">0</span>] = a[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, a+i);</span><br><span class="line">            sum[i] = sum[i<span class="number">-1</span>] + a[i];</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n; i&lt;(n&lt;&lt;<span class="number">1</span>); i++)</span><br><span class="line">            sum[i] = sum[i<span class="number">-1</span>] + a[i-n];</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;(n&lt;&lt;<span class="number">1</span>); i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">// l&lt;r表示队列非空</span></span><br><span class="line">            <span class="keyword">while</span>(l&lt;r &amp;&amp; sum[i] &lt; sum[que[r<span class="number">-1</span>]])	<span class="comment">//入队操作，参照引用中的1</span></span><br><span class="line">                r--;</span><br><span class="line">            que[r++] = i;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i&gt;=n &amp;&amp; sum[que[l]] - sum[i-n] &gt;= <span class="number">0</span>)</span><br><span class="line">                ans++;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r &amp;&amp; que[l] &lt;= i-n<span class="number">+1</span>)	<span class="comment">//出队操作，将超出区间的出队</span></span><br><span class="line">                l++;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<h1 id="2-Miraculous-Drug-Southeastern-European-Regional-Programming-Contest-2012-Gym-101472G"><a href="#2-Miraculous-Drug-Southeastern-European-Regional-Programming-Contest-2012-Gym-101472G" class="headerlink" title="2. Miraculous Drug(Southeastern European Regional Programming Contest 2012, Gym 101472G)"></a>2. Miraculous Drug(Southeastern European Regional Programming Contest 2012, Gym 101472G)</h1><h2 id="Problem-1"><a href="#Problem-1" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><div align="center">Input File: G.IN<br>
Output File: standard output<br>
Program Source File: G.C, G.CPP, G.JAVA </div>

<p>Joe is an enthusiast biomedical researcher. He is very close to discover the cure for a terrible<br>disease. In order to prepare the miraculous drug he needs to buy a special enzyme, that is quite<br>expensive and unfortunately loses its properties after a fixed period of time. Now Joe is in the<br>clinical trial phase. He needs a drug available at each hour. Thus he has to prepare exactly the<br>same quantity of drug every hour. The price of the enzyme might vary from hour to hour. The cost<br>of the enzyme on hour i is ci. The life time of the enzyme is h hours. Given the prices for the<br>next n hours, Joe has to find out the optimal cost to purchase enzymes such that the drug is<br>available in each of the n hours. If the price is the same Joe prefers to buy fresh enzymes, not to<br>stock them. We assume an unlimited quantity of enzymes is available each hour. Can you help<br>Joe?<br>The program input is from a text file. The file contains several data sets. A data set starts with the<br>number n (n&lt;10000) of hours. Follows h (h&lt;10000) the number of hours of the enzyme life<br>time, b the starting point, e the ending point of the printing interval (1≤b,e≤n), and the enzyme<br>costs ci (ci&lt;10000), i=1..n. The program prints for each hour in the interval [b,e] the<br>number of enzymes Joe decides to buy.<br>White spaces can occur freely in the input. The input data are correct and terminate with an end<br>of file. For each set of data the program prints the result to the standard output from the beginning<br>of a line. An input/output sample is in the table below. There are two data sets. For the first one<br>n=6, h=3, b=1, e=6, and the costs are 5 4 4 3 5 6. The result consists of the numbers of<br>enzymes bought every hour, printed from the beginning of the line, separated with tabs.</p>
<h3 id="Sample-input"><a href="#Sample-input" class="headerlink" title="Sample input"></a>Sample input</h3><p>6 3 1 6<br>5 4 4 3 5 6<br>3 3 2 3</p>
<h3 id="Sample-output"><a href="#Sample-output" class="headerlink" title="Sample output"></a>Sample output</h3><p>1 1 1 3 0 0<br>1 1</p>
<h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><h2 id="Idea-1"><a href="#Idea-1" class="headerlink" title="Idea"></a>Idea</h2><p>昨天刚看的单调队列，没想到今天就有一个题。</p>
<p>看到的第一眼就想用单调队列来做。</p>
<p>细菌存活的寿命即为滑动窗口的长度，队列存当前可买的细菌为第几天，队首存价格最低时为第几天，递增队列。现在感觉单调队列蛮灵活的，出队入队写的位置根据题目来确定。</p>
<h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 10010</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ans[MAXN], que[MAXN], c[MAXN], res[MAXN];</span><br><span class="line"><span class="type">int</span> b, e, n, h;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">"G.IN"</span>, <span class="string">"r"</span>, stdin);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;n, &amp;h, &amp;b, &amp;e) == <span class="number">4</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">memset</span>(res, <span class="number">0</span>, <span class="built_in">sizeof</span>(res));</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, c+i);</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>, r=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> stock=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r &amp;&amp; i - que[l] &gt;= h)		<span class="comment">//出队操作，到今天过期的细菌不可再买，故出队</span></span><br><span class="line">                l++;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r &amp;&amp; c[i] &lt;= c[que[r<span class="number">-1</span>]])	<span class="comment">//入队操作</span></span><br><span class="line">                r--;</span><br><span class="line">            que[r++] = i;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(stock == <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                ans[i] = que[l];	<span class="comment">//第ans[i]天买第que[l]天的</span></span><br><span class="line">                stock=<span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            stock--;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            res[ans[i]]++;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=b; i&lt;=e; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, res[i], <span class="string">" \n"</span>[i==e]);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><p>初识单调队列的两道题，感觉应该蛮经典的。很开心第二天可以自己码出答案并 1A。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>数据结构</category>
        <category>单调队列</category>
      </categories>
  </entry>
  <entry>
    <title>两道数论题 (素数筛)</title>
    <url>/2018/08/28/%E4%B8%A4%E9%81%93%E6%95%B0%E8%AE%BA%E9%A2%98-%E7%B4%A0%E6%95%B0%E7%AD%9B/</url>
    <content><![CDATA[<p><img src="https://www.lifeofpix.com/wp-content/uploads/2018/04/IMG_0025-1600x900.jpg" alt="插图"><span id="more"></span></p>
<h1 id="1-Remoteland-Southwestern-Europe-Regional-Contest-2011"><a href="#1-Remoteland-Southwestern-Europe-Regional-Contest-2011" class="headerlink" title="1. Remoteland (Southwestern Europe Regional Contest 2011)"></a>1. Remoteland (Southwestern Europe Regional Contest 2011)</h1><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>In the Republic of Remoteland, the people celebrate their independence day every year. However, as it was<br>a long long time ago, nobody can remember when it was exactly. The only thing people can remember is<br>that today, the number of days elapsed since their independence (D) is a perfect square, and moreover it is<br>the largest possible such number one can form as a product of distinct numbers less than or equal to n.<br>As the years in Remoteland have 1, 000, 000, 007 days, their citizens just need D modulo 1, 000, 000, 007.<br>Note that they are interested in the largest D, not in the largest D modulo 1, 000, 000, 007.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Every test case is described by a single line with an integer n, (1 ≤ n ≤ 10, 000, 000). The input ends<br>with a line containing 0.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output the number of days ago the Republic became independent, modulo 1, 000, 000, 007,one per line.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><p>4<br>9348095<br>6297540<br>0</p>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><p>4<br>177582252<br>644064736</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Todo"><a href="#Todo" class="headerlink" title="Todo"></a>Todo</h3><p>在前 n 个数中选出一些数，使这些数的乘积为尽可能大的完全平方数。</p>
<h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>可以将 $n!$ 做素因子分解， 例如前 $5$ 个数中， $5! = 24 = 2^3 \times 3^1$ ， 完全平方数可表示为 $a^2 = (a_1 \times a_2)^2 = a_1^2 \times a_2^2$，所以我们将 $n!$ 素因子分解后偶数次幂的项保留， 奇数次幂的幂次减 1，再求乘积即为所求答案。</p>
<p>此题中我们需要对这一过程进行优化，先预处理出 $n!$， 之后再依次除以全部幂次为奇数的素数即可。</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">10000007</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> notprime[MAXN<span class="number">+1</span>];</span><br><span class="line"><span class="type">int</span> prime[MAXN];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getPrime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(notprime, <span class="literal">false</span>, <span class="literal">true</span>);</span><br><span class="line">    <span class="built_in">memset</span>(prime, <span class="number">0</span>, <span class="built_in">sizeof</span>(prime));</span><br><span class="line">    notprime[<span class="number">0</span>] = notprime[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=MAXN; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(!notprime[i])</span><br><span class="line">            prime[++prime[<span class="number">0</span>]] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=prime[<span class="number">0</span>]&amp;&amp;prime[j]&lt;=MAXN/i; j++)</span><br><span class="line">        {</span><br><span class="line">            notprime[prime[j]*i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j] == <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">qpow</span><span class="params">(LL a, LL b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    a = a%MOD;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            res = res * a % MOD;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a*a%MOD;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 一个之前没遇到的知识点为全局数组定义时初始化如果部分初始化</span></span><br><span class="line"><span class="comment"> * 如 jc[MAXN] = {1, 1}，会因为自动补0导致编译出来的文件很大</span></span><br><span class="line"><span class="comment"> * 这题一开始是这样写的，交上去是CE， 报错为 Complied file is too large.</span></span><br><span class="line"><span class="comment"> * 而且在本机编译时需要的时间也为七八秒，时间极长。</span></span><br><span class="line"><span class="comment"> * 一开始以为是MLE了，疯狂缩小数组大小，发现并无卵用，后来才发现是这里的问题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="type">int</span> jc[MAXN];	</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    jc[<span class="number">0</span>] = jc[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;MAXN; i++)</span><br><span class="line">        jc[i] = <span class="number">1LL</span> * jc[i<span class="number">-1</span>] * i % MOD;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">getPrime</span>();</span><br><span class="line">    <span class="type">int</span> cnt;</span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> p, z;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    {</span><br><span class="line">        res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=prime[<span class="number">0</span>] &amp;&amp; prime[i]&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            cnt = <span class="number">0</span>;</span><br><span class="line">            p = prime[i];</span><br><span class="line">            z = n;</span><br><span class="line">            <span class="keyword">while</span>(z)</span><br><span class="line">            {</span><br><span class="line">                cnt += z/p;</span><br><span class="line">                z /= p;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(cnt &amp; <span class="number">1</span>)</span><br><span class="line">            {</span><br><span class="line">                res = (res * p) % MOD;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, jc[n] * <span class="built_in">qpow</span>(res, MOD<span class="number">-2</span>) % MOD);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h1 id="2-Counting-Divisors-2017多校联合训练第四场-HDOJ-6069"><a href="#2-Counting-Divisors-2017多校联合训练第四场-HDOJ-6069" class="headerlink" title="2. Counting Divisors (2017多校联合训练第四场 HDOJ 6069)"></a>2. Counting Divisors (2017 多校联合训练第四场 HDOJ 6069)</h1><p>传送门: <a href="http://acm.hdu.edu.cn/showproblem.php?pid=6069">Counting Divisors HDOJ 6069</a></p>
<h2 id="Problem-1"><a href="#Problem-1" class="headerlink" title="Problem"></a>Problem</h2><div align="center"><font><b><span style="font-family:Arial;font-size:14px;font-weight:bold;color:green">Time Limit: 10000/5000 MS (Java/Others)&nbsp;&nbsp;&nbsp;&nbsp;Memory Limit: 524288/524288 K (Java/Others)<br>Total Submission(s): 3996&nbsp;&nbsp;&nbsp;&nbsp;Accepted Submission(s): 1450<br></span></b></font><br></div>

<h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>In mathematics, the function $d(n)$ denotes the number of divisors of positive integer $n$.<br>For example, $d(12)=6$ because $1,2,3,4,6,12$ are all $12$’s divisors.<br>In this problem, given $l,r$ and $k$, your task is to calculate the following thing :<br>$\left(\sum_{i=l}^r d(i^k)\right)\bmod 998244353$<br></p>
<h3 id="Input-1"><a href="#Input-1" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input contains an integer $T(1\leq T\leq15)$, denoting the number of test cases.<br>In each test case, there are $3$ integers $l,r,k(1\leq l\leq r\leq 10^{12},r-l\leq 10^6,1\leq k\leq 10^7)$.</p>
<h3 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h3><p>For each test case, print a single line containing an integer, denoting the answer.</p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1 5 1</span><br><span class="line">1 10 2</span><br><span class="line">1 100 3</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">10</span><br><span class="line">48</span><br><span class="line">2302</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h2><h2 id="Idea-1"><a href="#Idea-1" class="headerlink" title="Idea"></a>Idea</h2><ol>
<li>首先是 <strong>唯一分解定理</strong> 和 <strong>因子个数求法</strong>。每个大于 1 的自然数均可写为质数的积，而且这些素因子按大小排列之后，写法仅有一种方式。 其因子的个数为每个质数的幂次 + 1 后的乘积。<br>比如 $100 = 2^2 \times 5^2$， 其因子的个数即为 $(2+1) \times (2+1) = 9$.</li>
<li> 根据 1 我们不难得出一个数字的幂的因子个数， $a = {a_1}^{n_1} \times {a_2}^{n_2}… \times {a_n}^{n_n}$, 则 $a^k$ 因子个数为 $(kn_1+1) \times (kn_2+1)…… \times (ka_n+1)$。如 $100^3$ 的因子个数为 $( (2\times3+1) \times (2 \times 3 +1) )$.</li>
<li> 这题我们可以先预先筛出 $\sqrt {r} = 10^6$ 的素数，之后依次用筛出来的每个素数 $p$ 对区间 $p$ 的倍数进行处理，看其因子中有几个 $p$，从而算出区间内每个数因子的个数。进行完前边的处理后，若区间内一个数还有素数因子没处理到，则该素数的幂次为 $1$。具体细节在代码中体现。</li>
<li>区间 $[l,r]$ 内第一个数字 $p$ 的倍数为 $\lfloor {l+p-1 \over p} \rfloor \times p$。</li>
</ol>
<h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">1e6</span><span class="number">+7</span>;</span><br><span class="line">LL prime[MAXN<span class="number">+1</span>];</span><br><span class="line">LL num[MAXN<span class="number">+1</span>];</span><br><span class="line">LL a[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> LL MOD = <span class="number">998244353</span>;</span><br><span class="line">LL l, r, k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getPrime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(prime, <span class="number">0</span>, <span class="built_in">sizeof</span>(prime));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;=MAXN; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(!prime[i])</span><br><span class="line">            prime[++prime[<span class="number">0</span>]] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=prime[<span class="number">0</span>] &amp;&amp; prime[j]&lt;=MAXN/i; j++)</span><br><span class="line">        {</span><br><span class="line">            prime[prime[j]*i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">process</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    LL p, cnt;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(LL i=<span class="number">1</span>; i&lt;=prime[<span class="number">0</span>] &amp;&amp; prime[i] * prime[i]&lt;=r; i++)</span><br><span class="line">    {</span><br><span class="line">        p = prime[i];</span><br><span class="line">        <span class="keyword">for</span>(LL j=(l+p<span class="number">-1</span>)/p*p; j&lt;=r; j+=p)</span><br><span class="line">        {</span><br><span class="line">            cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span>((a[j-l]%p==<span class="number">0</span>) )</span><br><span class="line">            {</span><br><span class="line">                cnt++;</span><br><span class="line">                a[j-l] /= p;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            num[j-l] = (num[j-l] * ((k*cnt + <span class="number">1</span>) % MOD)) % MOD;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">getPrime</span>();</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%I64d%I64d%I64d"</span>, &amp;l, &amp;r, &amp;k);</span><br><span class="line">        <span class="type">int</span> len = r-l<span class="number">+1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;len; i++)</span><br><span class="line">        {</span><br><span class="line">            a[i] = l+i;</span><br><span class="line">            num[i] = <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">process</span>();</span><br><span class="line">        LL ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(LL i=l; i&lt;=r; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(a[i-l] &gt; <span class="number">1</span>)</span><br><span class="line">                num[i-l] = num[i-l] * (k<span class="number">+1</span>) % MOD;</span><br><span class="line">            ans = (ans + num[i-l]) %MOD;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>, ans);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>这是去年多校训练时一道题目，当时觉得是自己触不可及的题目，是极难、不可能做出的。</p>
<p>今年队伍自己拉题训练时拉了这套题，自己竟惊奇地发现这题在自己可以做的范围内。虽然自己的一开始的算法还很笨拙，是一点点优化到 AC，但发现自己不再像去年那么惧怕这题。很开心。</p>
<p>或许有些事真的是水到渠成的。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>数论</category>
      </categories>
      <tags>
        <tag>素数筛</tag>
      </tags>
  </entry>
  <entry>
    <title>Gym 100085E Eve (并查集)(Northeastern European Regional Contest 2011)</title>
    <url>/2018/08/23/Gym-100085E-Eve-%E5%B9%B6%E6%9F%A5%E9%9B%86-Northeastern-European-Regional-Contest-2011/</url>
    <content><![CDATA[<p>传送门:<a href="https://odzkskevi.qnssl.com/2cabff6f0a36e98d56356562c5755389?v=1534601556">Northeastern European Regional Contest 2011 E. Eve</a></p>
<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p align="center">Input file: eve.in<br>Output file: eve.out</p>
Mitochondrial DNA is the Deoxyribonucleic acid molecule that is contained in mitochondria within cellsof an organism.
Mitochondrial DNA is normally passed to a child exclusively from its mother. Because of this fact, it is
possible to speak of “Mitochondrial Eve” which refers to the most recent common matrilineal ancestor
of the entire population. Matrilineal ancestry is traced through female line: mother, grandmother, etc.
Mitochondrial Eve of the Earth’s human population is estimated to have lived around 200 000 years ago,
most likely in the East Africa.![](https://www.lifeofpix.com/wp-content/uploads/2018/04/IMG_4475-1600x900.jpg)<span id="more"></span>

<p>In this problem, we consider a certain population of the same biological species (eukaryotic and anisogamous).<br>The population has been observed for a period of time, and all births and deaths were clearly<br>recorded. For some of the individuals within the population, their mitochondrial DNA was sequenced.<br>It is assumed that each individual in the observed population received its mitochondrial DNA from its<br>mother without any mutations.<br>Your task is to find out, whether all individuals currently alive have the same mitochondrial DNA.<br>Input<br>The first line of the input file contains integer n (1 ≤ n ≤ 100 000), the number of individuals that were<br>alive at the beginning of the observation period. IDs of these individuals are integers from 1 to n.<br>Next n lines contain one character each. The i-th of these lines describes the sex of the individual with<br>ID i. ‘M’ stands for male, ‘F’ stands for female.<br>The next line contains integer m (0 ≤ m ≤ 100 000), the total number of births and deaths that happened<br>during the observation period.<br>Next m lines contain description of birth and death events, listed in chronological order.<br>A birth event is described by three space-separated tokens: the ID of the father, the ID of the mother,<br>and a character that describes the sex of the child (‘M’ for male, ‘F’ for female). The ID given to the<br>offspring is the smallest positive integer that hasn’t been used as an ID by this point of time.<br>A death event is described by a single negative integer, whose absolute value equals the ID of the individual<br>that died.<br>The next line contains integer k (0 ≤ k ≤ n + m), the number of sequenced mitochondrial DNAs.<br>Each of the next k lines contains two space-separated integers, the ID of the individual whose mitochondrial<br>DNA has been sequenced, and the unique identifier of the mitochondrial DNA of that individual.<br>Unique identifiers of two mitochondrial DNAs are the same if and only if the corresponding sequenced<br>mitochondrial DNAs are the same. All unique identifiers of the mitochondrial DNAs are integers from 1<br>to 109<br>.<br>All the data given in the input file is consistent and non-contradictory. Each individual’s mitochondrial<br>DNA was sequenced at most once. At least one individual was alive at the end of the observation period.<br>Output<br>The output file must contain a single word:<br>• YES – if it can be derived that all the individuals that are alive at the end of the experiment have<br>the same mitochondrial DNA;<br>• NO – if it can be derived that some of the individuals that are alive at the end of the experiment<br>have different mitochondrial DNA;<br>• POSSIBLY – if none of the cases above takes place.<br>of an organism.<br>Mitochondrial DNA is normally passed to a child exclusively from its mother. Because of this fact, it is<br>possible to speak of “Mitochondrial Eve” which refers to the most recent common matrilineal ancestor<br>of the entire population. Matrilineal ancestry is traced through female line: mother, grandmother, etc.<br>Mitochondrial Eve of the Earth’s human population is estimated to have lived around 200 000 years ago,<br>most likely in the East Africa.<br>In this problem, we consider a certain population of the same biological species (eukaryotic and anisogamous).<br>The population has been observed for a period of time, and all births and deaths were clearly<br>recorded. For some of the individuals within the population, their mitochondrial DNA was sequenced.<br>It is assumed that each individual in the observed population received its mitochondrial DNA from its<br>mother without any mutations.<br>Your task is to find out, whether all individuals currently alive have the same mitochondrial DNA.<br>Input<br>The first line of the input file contains integer n (1 ≤ n ≤ 100 000), the number of individuals that were<br>alive at the beginning of the observation period. IDs of these individuals are integers from 1 to n.<br>Next n lines contain one character each. The i-th of these lines describes the sex of the individual with<br>ID i. ‘M’ stands for male, ‘F’ stands for female.<br>The next line contains integer m (0 ≤ m ≤ 100 000), the total number of births and deaths that happened<br>during the observation period.<br>Next m lines contain description of birth and death events, listed in chronological order.<br>A birth event is described by three space-separated tokens: the ID of the father, the ID of the mother,<br>and a character that describes the sex of the child (‘M’ for male, ‘F’ for female). The ID given to the<br>offspring is the smallest positive integer that hasn’t been used as an ID by this point of time.<br>A death event is described by a single negative integer, whose absolute value equals the ID of the individual<br>that died.<br>The next line contains integer k (0 ≤ k ≤ n + m), the number of sequenced mitochondrial DNAs.<br>Each of the next k lines contains two space-separated integers, the ID of the individual whose mitochondrial<br>DNA has been sequenced, and the unique identifier of the mitochondrial DNA of that individual.<br>Unique identifiers of two mitochondrial DNAs are the same if and only if the corresponding sequenced<br>mitochondrial DNAs are the same. All unique identifiers of the mitochondrial DNAs are integers from 1<br>to 109<br>.<br>All the data given in the input file is consistent and non-contradictory. Each individual’s mitochondrial<br>DNA was sequenced at most once. At least one individual was alive at the end of the observation period.<br>Output<br>The output file must contain a single word:<br>• YES – if it can be derived that all the individuals that are alive at the end of the experiment have<br>the same mitochondrial DNA;<br>• NO – if it can be derived that some of the individuals that are alive at the end of the experiment<br>have different mitochondrial DNA;<br>• POSSIBLY – if none of the cases above takes place.</p>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Mitochondrial DNA is the Deoxyribonucleic acid molecule that is contained in mitochondria within cells<br>of an organism.<br>Mitochondrial DNA is normally passed to a child exclusively from its mother. Because of this fact, it is<br>possible to speak of “Mitochondrial Eve” which refers to the most recent common matrilineal ancestor<br>of the entire population. Matrilineal ancestry is traced through female line: mother, grandmother, etc.<br>Mitochondrial Eve of the Earth’s human population is estimated to have lived around 200 000 years ago,<br>most likely in the East Africa.<br>In this problem, we consider a certain population of the same biological species (eukaryotic and anisogamous).<br>The population has been observed for a period of time, and all births and deaths were clearly<br>recorded. For some of the individuals within the population, their mitochondrial DNA was sequenced.<br>It is assumed that each individual in the observed population received its mitochondrial DNA from its<br>mother without any mutations.<br>Your task is to find out, whether all individuals currently alive have the same mitochondrial DNA.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input file contains integer n (1 ≤ n ≤ 100 000), the number of individuals that were<br>alive at the beginning of the observation period. IDs of these individuals are integers from 1 to n.<br>Next n lines contain one character each. The i-th of these lines describes the sex of the individual with<br>ID i. ‘M’ stands for male, ‘F’ stands for female.<br>The next line contains integer m (0 ≤ m ≤ 100 000), the total number of births and deaths that happened<br>during the observation period.<br>Next m lines contain description of birth and death events, listed in chronological order.<br>A birth event is described by three space-separated tokens: the ID of the father, the ID of the mother,<br>and a character that describes the sex of the child (‘M’ for male, ‘F’ for female). The ID given to the<br>offspring is the smallest positive integer that hasn’t been used as an ID by this point of time.<br>A death event is described by a single negative integer, whose absolute value equals the ID of the individual<br>that died.<br>The next line contains integer k (0 ≤ k ≤ n + m), the number of sequenced mitochondrial DNAs.<br>Each of the next k lines contains two space-separated integers, the ID of the individual whose mitochondrial<br>DNA has been sequenced, and the unique identifier of the mitochondrial DNA of that individual.<br>Unique identifiers of two mitochondrial DNAs are the same if and only if the corresponding sequenced<br>mitochondrial DNAs are the same. All unique identifiers of the mitochondrial DNAs are integers from 1<br>to $10^9$.<br>All the data given in the input file is consistent and non-contradictory. Each individual’s mitochondrial<br>DNA was sequenced at most once. At least one individual was alive at the end of the observation period.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>The output file must contain a single word:<br>• YES – if it can be derived that all the individuals that are alive at the end of the experiment have<br>the same mitochondrial DNA;<br>• NO – if it can be derived that some of the individuals that are alive at the end of the experiment<br>have different mitochondrial DNA;<br>• POSSIBLY – if none of the cases above takes place.</p>
<h3 id="Sample-input-ans-output"><a href="#Sample-input-ans-output" class="headerlink" title="Sample input ans output"></a>Sample input ans output</h3><table>
<thead>
<tr>
<th>eve.in</th>
<th>eve.out</th>
</tr>
</thead>
<tbody><tr>
<td></td>
<td></td>
</tr>
<tr>
<td>:—————————————————–:</td>
<td>:—–:</td>
</tr>
<tr>
<td>——————————————————-</td>
<td>——-</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>4<br>M</td>
<td></td>
</tr>
<tr>
<td>F</td>
<td></td>
</tr>
<tr>
<td>M</td>
<td></td>
</tr>
<tr>
<td>F</td>
<td></td>
</tr>
<tr>
<td>12</td>
<td></td>
</tr>
<tr>
<td>3 4 F</td>
<td></td>
</tr>
<tr>
<td>1 2 M</td>
<td></td>
</tr>
<tr>
<td>1 2 M</td>
<td></td>
</tr>
<tr>
<td>3 4 F</td>
<td></td>
</tr>
<tr>
<td>-3</td>
<td></td>
</tr>
<tr>
<td>-2</td>
<td></td>
</tr>
<tr>
<td>-4</td>
<td></td>
</tr>
<tr>
<td>-1</td>
<td></td>
</tr>
<tr>
<td>6 5 M</td>
<td></td>
</tr>
<tr>
<td>7 5 F</td>
<td></td>
</tr>
<tr>
<td>-7</td>
<td></td>
</tr>
<tr>
<td>-6</td>
<td></td>
</tr>
<tr>
<td>0</td>
<td>YES</td>
</tr>
<tr>
<td>3<br>F</td>
<td></td>
</tr>
<tr>
<td>F</td>
<td></td>
</tr>
<tr>
<td>M</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td></td>
</tr>
<tr>
<td>3 2 M</td>
<td></td>
</tr>
<tr>
<td>3 1 F</td>
<td></td>
</tr>
<tr>
<td>-3</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td></td>
</tr>
<tr>
<td>4 100500</td>
<td></td>
</tr>
<tr>
<td>5 100500</td>
<td>YES</td>
</tr>
<tr>
<td>3<br>M</td>
<td></td>
</tr>
<tr>
<td>F</td>
<td></td>
</tr>
<tr>
<td>M</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td></td>
</tr>
<tr>
<td>1 2 M</td>
<td></td>
</tr>
<tr>
<td>3 2 F</td>
<td></td>
</tr>
<tr>
<td>0</td>
<td>POSSIBLY</td>
</tr>
<tr>
<td>2<br>M</td>
<td></td>
</tr>
<tr>
<td>F</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td></td>
</tr>
<tr>
<td>1 2 M</td>
<td></td>
</tr>
<tr>
<td>-2</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td></td>
</tr>
<tr>
<td>1 2011</td>
<td></td>
</tr>
<tr>
<td>2 2012</td>
<td>NO</td>
</tr>
</tbody></table>
<p>如果以上表格排版错误，烦请参照下面图片。</p>
<p><img src="http://blogphotograph.oss-cn-beijing.aliyuncs.com/18-8-28/65972038.jpg"></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>大水题，用并查集即可，把同母的放入一个并查集中。最后进行判断有几个并查集。</p>
<p>(比赛时读错题拐跑了队友，强行增加难度，把新出生的 id 读成了现在没人用的正数 = =)<img src="http://b384.photo.store.qq.com/psb?/V10leItY1b9BLO/s3RTSkVF9jV3iCzY1lsBsZ7SaLU83ze6V3JSEprZek0!/b/dIABAAAAAAAA&amp;bo=ZABkAGQAZAACEDQ!"></p>
<h3 id="AC-Code"><a href="#AC-Code" class="headerlink" title="AC Code"></a>AC Code</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 300010</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> mo[MAXN];</span><br><span class="line"><span class="type">char</span> gendar[MAXN];</span><br><span class="line"></span><br><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; dna;</span><br><span class="line"><span class="type">bool</span> life[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;MAXN; i++)</span><br><span class="line">    {</span><br><span class="line">        mo[i] = i;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ufind</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(mo[x] == x)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> mo[x] = <span class="built_in">ufind</span>(mo[x]);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">unite</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    x = <span class="built_in">ufind</span>(x);</span><br><span class="line">    y = <span class="built_in">ufind</span>(y);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(x == y)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    mo[x] = y;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">same</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">ufind</span>(x) == <span class="built_in">ufind</span>(y);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">"eve.in"</span>, <span class="string">"r"</span>, stdin);</span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">"eve.out"</span>, <span class="string">"w"</span>, stdout);</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    {</span><br><span class="line">        gendar[i] = <span class="built_in">getchar</span>();</span><br><span class="line">        life[i] = <span class="literal">true</span>;</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> fa, mot, id, shiji;</span><br><span class="line">    <span class="type">char</span> sex;</span><br><span class="line">    <span class="type">int</span>  tot = n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;fa);</span><br><span class="line">        <span class="keyword">if</span>(fa &gt; <span class="number">0</span>)  <span class="comment">//birth</span></span><br><span class="line">        {</span><br><span class="line">            tot++;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d %c"</span>, &amp;mot, &amp;sex);</span><br><span class="line">            id = tot;</span><br><span class="line"></span><br><span class="line">            gendar[id] = sex;</span><br><span class="line">            <span class="built_in">unite</span>(id, mot);</span><br><span class="line">            life[id] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span>    <span class="comment">//die</span></span><br><span class="line">        {</span><br><span class="line">            life[-fa] = <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt = tot;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;k);</span><br><span class="line">    <span class="type">int</span> seq;</span><br><span class="line">    set&lt;<span class="type">int</span>&gt; qwer;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=k; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;id, &amp;seq);</span><br><span class="line">        <span class="keyword">if</span>(dna[seq] != <span class="number">0</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="comment">// id 和 dna[seq]一个并查集</span></span><br><span class="line">            <span class="built_in">unite</span>(id, dna[seq]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            dna[seq] = ++cnt;</span><br><span class="line">            <span class="built_in">unite</span>(id, cnt);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=tot; i++)</span><br><span class="line">        <span class="built_in">ufind</span>(i);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    set&lt;<span class="type">int</span>&gt; foo;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=tot; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(life[i])</span><br><span class="line">        {</span><br><span class="line">            mot = <span class="built_in">ufind</span>(i);</span><br><span class="line">            qwer.<span class="built_in">insert</span>(mot);</span><br><span class="line">            <span class="keyword">if</span>(mot &gt; tot)</span><br><span class="line">                foo.<span class="built_in">insert</span>(mot);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(qwer.<span class="built_in">size</span>() &lt;= <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"YES"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(foo.<span class="built_in">size</span>() &gt;= <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"NO"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"POSSIBLY"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
        <category>数据结构</category>
        <category>并查集</category>
      </categories>
  </entry>
  <entry>
    <title>LightOJ 1269.Consecutive Sum (01 字典树)</title>
    <url>/2018/08/22/LightOJ-1269-Consecutive-Sum-01%E5%AD%97%E5%85%B8%E6%A0%91/</url>
    <content><![CDATA[<p>传送门:<a href="https://vjudge.net/problem/26979/origin">LightOJ 1269..Consecutive Sum</a></p>
<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Little Jimmy is learning how to add integers. As in decimal the digits are 0 to 9, it makes a bit hard for him to understand the summation of all pair of digits. Since addition of numbers requires the knowledge of adding digits. So, his mother gave him a software that can convert a decimal integer to its binary and a binary to its corresponding decimal. So, Jimmy’s idea is to convert the numbers into binaries, and then he adds them and turns the result back to decimal using the software. It’s easy to add in binary, since you only need to know how to add (0, 0), (0, 1), (1, 0), (1, 1). Jimmy doesn’t have the idea of carry operation, so he thinks that</p>
<p>1 + 1 = 0</p>
<p>1 + 0 = 1</p>
<p>0 + 1 = 1</p>
<p>0 + 0 = 0</p>
<p>Using these operations, he adds the numbers in binary. So, according to his calculations,</p>
<p>3 (011) + 7 (111) = 4 (100)</p>
<p>Now you are given an array of <strong>n</strong> integers, indexed from <strong>0</strong> to <strong>n-1</strong>, you have to find two indices <strong>i j</strong> in the array <strong>(0 ≤ i ≤ j &lt; n)</strong>, such that the summation (according to Jimmy) of all integers between indices <strong>i</strong> and <strong>j</strong> in the array, is maximum. And you also have to find two indices, <strong>p q</strong> in the array <strong>(0 ≤ p ≤ q &lt; n)</strong>, such that the summation (according to Jimmy) of all integers between indices <strong>p</strong> and <strong>q</strong> in the array, is minimum. You only have to report the maximum and minimum integers.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Input starts with an integer **T (**<strong>≤ 10)</strong>, denoting the number of test cases.</p>
<p>Each case starts with a line containing an integer <strong>n (1 ≤ n ≤ 50000)</strong>. The next line contains <strong>n</strong> space separated non-negative integers, denoting the integers of the given array. Each integer fits into a 32 bit signed integer.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each case, print the case number, the maximum and minimum summation that can be made using Jimmy’s addition.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><p>2</p>
<p>5</p>
<p>6 8 2 4 2</p>
<p>5</p>
<p>3 8 2 6 5</p>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><p>Case 1: 14 2</p>
<p>Case 2: 15 1</p>
<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>Dataset is huge, use faster I/O methods.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2>]]></content>
      <categories>
        <category>ACM</category>
        <category>数据结构</category>
        <category>字典树</category>
      </categories>
  </entry>
  <entry>
    <title>2018 牛客网暑期 ACM 多校训练营 (第五场) F.take (树状树组求期望)</title>
    <url>/2018/08/21/2018%E7%89%9B%E5%AE%A2%E7%BD%91%E6%9A%91%E6%9C%9FACM%E5%A4%9A%E6%A0%A1%E8%AE%AD%E7%BB%83%E8%90%A5-%E7%AC%AC%E4%BA%94%E5%9C%BA-F-take-%E6%A0%91%E7%8A%B6%E6%A0%91%E7%BB%84%E6%B1%82%E6%9C%9F%E6%9C%9B/</url>
    <content><![CDATA[<p>传送门: <a href="https://www.nowcoder.com/acm/contest/143/F">2018 牛客网暑期 ACM 多校训练营 (第五场) F.take</a></p>
<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Kanade has n boxes , the i-th box has p[i] probability to have an diamond of d[i] size.  </p>
<p>At the beginning , Kanade has a diamond of 0 size. She will open the boxes from 1-st to n-th. When she open a box,if there is a diamond in it and it’s bigger than the diamond of her , she will replace it with her diamond.  </p>
<p>Now you need to calculate the expect number of replacements.  </p>
<p>You only need to output the answer module 998244353.  <img src="https://cdn.pixabay.com/photo/2018/05/10/22/42/ice-cream-3389010_960_720.jpg" alt="take"><span id="more"></span></p>
<p>Notice: If x%998244353=y*d %998244353 ,then we denote that x/y%998244353 =d%998244353  </p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input:"></a>Input:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">The first line has one integer n.</span><br><span class="line">Then there are n lines. each line has two integers p[i]*100 and d[i].</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Output"><a href="#Output" class="headerlink" title="Output:"></a>Output:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Output the answer module 998244353</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-input"><a href="#Sample-input" class="headerlink" title="Sample input"></a>Sample input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3</span><br><span class="line">50 1</span><br><span class="line">50 2</span><br><span class="line">50 3</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-output"><a href="#Sample-output" class="headerlink" title="Sample output"></a>Sample output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">499122178</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Hint"><a href="#Hint" class="headerlink" title="Hint:"></a>Hint:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">1&lt;= n &lt;= 100000</span><br><span class="line">1&lt;=p[i]*100 &lt;=100</span><br><span class="line">1&lt;=d[i]&lt;=10^9</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="Idea"><a href="#Idea" class="headerlink" title="Idea"></a>Idea</h3><p>取当前钻石的概率为之前的比这个钻石大的皆不取的概率乘取这个的概率，即 $\prod_{j&lt;i, size_j&gt;size_i}(1-p_j) \times p_i$, 我们可以对钻石先排个序，使（个大的） 或 （同大但先出现的）排在前边，用一个树状数组来维护 $1-p_i$ 的前缀积。</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">1</span>&lt;&lt;<span class="number">17</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">LL bit[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">qpow_mod</span><span class="params">(LL a, LL b = MOD<span class="number">-2</span>)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    LL ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>)</span><br><span class="line">            ret = ret * a % MOD;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a*a%MOD;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> id, sz, p;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt; (<span class="type">const</span> node &amp;a) <span class="type">const</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">return</span> sz &gt; a.sz || sz == a.sz &amp;&amp; id &lt; a.id;</span><br><span class="line">    }</span><br><span class="line">} P[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(LL x, LL v)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span>(LL i=x; i &lt;= n; i += i&amp;-i )</span><br><span class="line">        bit[i] = bit[i]*v%MOD;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(LL x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    LL ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    {</span><br><span class="line">        ret = (ret * bit[x]) % MOD;</span><br><span class="line">        x -= x&amp;-x;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    LL ans = <span class="number">0</span>;</span><br><span class="line">    LL inv0 = <span class="built_in">qpow_mod</span>(<span class="number">100</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;MAXN; i++)</span><br><span class="line">        bit[i] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    {</span><br><span class="line">        cin &gt;&gt; P[i].p &gt;&gt; P[i].sz;</span><br><span class="line">        P[i].id = i + <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">sort</span>(P, P+n);</span><br><span class="line">    LL temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    {</span><br><span class="line">        temp = (<span class="built_in">query</span>(P[i].id<span class="number">-1</span>) * (inv0*P[i].p%MOD) )%MOD;</span><br><span class="line">        ans = (ans+temp)%MOD;</span><br><span class="line">        <span class="built_in">update</span>(P[i].id, inv0*(<span class="number">100</span>-P[i].p)%MOD);</span><br><span class="line">    }</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>之前的自己以为不可能做出这种题目，好好补题后发现其实它并没有自己想得那么可怕，那些逆元什么的只要知道基础知识就好了。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>数据结构</category>
        <category>树状数组</category>
      </categories>
  </entry>
  <entry>
    <title>百度之星 2018 复赛 1003. 带劲的 and 和</title>
    <url>/2018/08/20/%E7%99%BE%E5%BA%A6%E4%B9%8B%E6%98%9F2018%E5%A4%8D%E8%B5%9B-1003-%E5%B8%A6%E5%8A%B2%E7%9A%84and%E5%92%8C/</url>
    <content><![CDATA[<p align="center">Accepts: 791 Submissions: 2435<br>Time Limit: 2000/1000 MS (Java/Others)<br>Memory Limit: 65536/65536 K (Java/Others)</p>

<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>度度熊专门研究过 “动态传递闭包问题”，他有一万种让大家爆蛋的方法；但此刻，他只想出一道简简单单的题 —— 至繁，归于至简。</p>
<p>度度熊有一张 n 个点 m 条边的<strong>无向图</strong>，第 $i$ 个点的点权为 $v_i$。</p>
<p>如果图上存在一条<strong>路径</strong>使得点 i 可以走到点 j，则称 i,j 是<strong>带劲</strong>的，记 $f (i,j)=1$；否则 $f (i,j)=0$。显然有 $f (i,j) = f (j,i)$。</p>
<p>度度熊想知道求出：$\sum ^{n-1}<em>{i=1} \sum^{n}</em>{j=i+1} f(i, j) \times \max(v_i, v_j) \times (v_i &amp; v_j)$ </p>
<p><img src="https://cdn.pixabay.com/photo/2018/08/08/05/12/cat-3591348_960_720.jpg" alt="这里是只喵QAQ"></p>
 <span id="more"></span>

<p>其中 $&amp;$ 是 C++ 中的 and 位运算符，如 $1 &amp; {3}=1, 2 &amp; 3=2$。</p>
<p>请将答案对 $10^9+7$ 取模后输出。</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>第一行一个数，表示数据组数 TT。	</p>
<p>每组数据第一行两个整数 n,m；第二行 n 个数表示 $v_i​$；接下来 mm 行，每行两个数 u,v，表示点 u 和点 v 之间有一条无向边。<strong>可能有重边或自环。</strong></p>
<p>数据组数 T=50，满足：</p>
<ul>
<li>$1 \le n,m \le 100000$</li>
<li>$1 \le v_i \le 10^9$</li>
</ul>
<p>其中 90% 的数据满足 $n,m \le 1000$</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>每组数据输出一行，每行仅包含一个数，表示带劲的 and 和。</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">1</span><br><span class="line">5 5</span><br><span class="line">3 9 4 8 9 </span><br><span class="line">2 1</span><br><span class="line">1 3</span><br><span class="line">2 1</span><br><span class="line">1 2</span><br><span class="line">5 2</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">99</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>先放下官方题解吧</p>
<blockquote>
<p>比较简单的数据结构题，需要掌握位运算每一位是独立的性质，难度 3 分。</p>
<p>因为是无向图，所以有 f (i,j) = f (j,i) f (i,j)=f (j,i)，不妨用<strong>并查集</strong>得到图上各个连通块，连通块中每对点的 ff 均为 1，而不同连通块的点对互不影响。</p>
<p>求和的式子中有 $\max$ 一项，不妨对于每个联通块中的点，将它们的权值 vv 从小到大排序，这样枚举到一个点，计算它和前面点之间的贡献时，$\max$ 就是当前点的权值。</p>
<p>还需要处理 &amp;&amp; 运算符，这是一个经典的套路，只需要对于二进制的每一位统计出有多少个点在这一位上是 1，对于每一位分开计算贡献即可。举个例子，如果要计算权值 11 和权值 7 的贡献，则有</p>
<p>$max(7,11) \times (7 &amp; 11) = 11 \times ((1 + 2 + 4) &amp; (1 + 2 + 8)) = 11 \times 1 + 11 \times 2$</p>
<p>复杂度为 $O (n \log n + n \times 30)$，因为二进制位有 30 个。</p>
</blockquote>
<p>并查集和排序自己想到了，但按位的操作自己没有见过，这次也算是见识到了。</p>
<p>用一个 dp 数组记录下比它小的数字该位有多少个 1 就吼惹。</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN=<span class="number">100000</span><span class="number">+7</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL long long int</span></span><br><span class="line"><span class="type">const</span> LL mod=<span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;ufs[MAXN];</span><br><span class="line"><span class="type">int</span> fa[MAXN];</span><br><span class="line">LL w[MAXN];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">u_find</span><span class="params">(<span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(p!=fa[p])</span><br><span class="line">    {</span><br><span class="line">        fa[p]=fa[fa[p]];</span><br><span class="line">        p=fa[p];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">ufsunion</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    x=<span class="built_in">u_find</span>(x);</span><br><span class="line">    y=<span class="built_in">u_find</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(x==y)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        fa[y]=x;	<span class="comment">//提交的代码没用ufs路径优化</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> T,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;=n; i++)</span><br><span class="line">            ufs[i].<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%I64d"</span>,&amp;w[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;=n; i++)</span><br><span class="line">            fa[i]=i;</span><br><span class="line">        <span class="type">int</span> u,v;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">            u--,v--;</span><br><span class="line">            <span class="built_in">ufsunion</span>(u,v);</span><br><span class="line">        }</span><br><span class="line">        LL ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">            ufs[<span class="built_in">u_find</span>(i)].<span class="built_in">push_back</span>(w[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(ufs[i].<span class="built_in">empty</span>())</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">sort</span>(ufs[i].<span class="built_in">begin</span>(),ufs[i].<span class="built_in">end</span>());</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span> dp[<span class="number">32</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line">            <span class="type">int</span> len=ufs[i].<span class="built_in">size</span>();</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;len; j++)</span><br><span class="line">            {</span><br><span class="line">                LL it=ufs[i][j];</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;<span class="number">30</span>; j++)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span>(it&amp;(<span class="number">1</span>&lt;&lt;j))</span><br><span class="line">                    {</span><br><span class="line">                        ans=(ans+(<span class="number">1LL</span>*it*dp[j]%mod)*(<span class="number">1</span>&lt;&lt;j))%mod;	<span class="comment">//计算当前数字每一位的贡献</span></span><br><span class="line">                        dp[j]++;		<span class="comment">//更新该位1的个数</span></span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>,ans);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>并查集</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode 41. First Missing Positive</title>
    <url>/2018/08/20/LeetCode-41-First-Missing-Positive/</url>
    <content><![CDATA[<blockquote class="blockquote-center">我失去了一只臂膀， 就睁开了一只眼睛。 <br>—— 顾城</blockquote>

<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Given an unsorted integer array, find the smallest missing positive integer.<span id="more"></span></p>
<p><strong>Example 1:</strong></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Input: [1,2,0]</span><br><span class="line">Output: 3</span><br></pre></td></tr></tbody></table></figure>

<p><strong>Example 2:</strong></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Input: [3,4,-1,1]</span><br><span class="line">Output: 2</span><br></pre></td></tr></tbody></table></figure>

<p><strong>Example 3:</strong></p>
<figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Input: [7,8,9,11,12]</span><br><span class="line">Output: 1</span><br></pre></td></tr></tbody></table></figure>

<p><strong>Note:</strong></p>
<p>Your algorithm should run in <em>O</em>(<em>n</em>) time and uses constant extra space.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p><strong>LeetCode 第一题</strong> </p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>打 ACM 被血虐，无聊来看看 LeetCode，顺手选了一个 Hard 的题目。题意很简单，不像 ACM 一样嘟噜嘟噜说很多。第一反应有些懵，要求 O (n) 的时间复杂度，和 O (1) 的空间。但很快灵光一闪想到 O (n) 时间复杂度的排序后，就有了思路。数列中 n 个数，最优情况下值分别为 1~n，这样我们可以分别把数列中的数字放到自己对应的下标中去 (我向 vector 中额外加了一个数，这样子就可以对应的下标放对应的数)，遇到大于 n 或小于 0 的数就不进行操作。处理完之后开始扫一遍数组，(因为我加了一个数，所以从下标为 1 的位置开始扫到 n 就好了)，第 1 个值和下标不对应的数就是答案。如果全都对应，那答案为 n+1。</p>
<p>一开始本来想用迭代完成对数组的处理 (想以最优的解法来处理，减少数字变动的次数)，结果写崩了，思路不是太流畅。遂用了递归实现，结果发现用了 4ms，仅击败了 80% 左右的答案。又开始优化，虽然比一开始的想法差点，数字交换次数会多一些，但代码很简洁，代码量极少。而且仅用了 0ms，为最优答案。</p>
<h3 id="AC代码-Ver1"><a href="#AC代码-Ver1" class="headerlink" title="AC代码 Ver1"></a>AC 代码 Ver1</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">int</span> pos, <span class="type">int</span> foo, vector&lt;<span class="type">int</span>&gt;&amp; a)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="type">int</span> val = a[pos];</span><br><span class="line">        <span class="keyword">if</span>(val == pos)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span>(val &lt; <span class="number">0</span> || val &gt; n)</span><br><span class="line">        {</span><br><span class="line">            a[pos] = pos;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            a[pos] = foo;</span><br><span class="line">            <span class="built_in">f</span>(val, val, a);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">firstMissingPositive</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="type">int</span> cur=<span class="number">0</span>, temp, pre, now;</span><br><span class="line">        n = nums.<span class="built_in">size</span>();</span><br><span class="line">        nums.<span class="built_in">push_back</span>(<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(cur &lt;= n)</span><br><span class="line">        {</span><br><span class="line">            temp = nums[cur];</span><br><span class="line">            <span class="keyword">if</span>(temp == cur)</span><br><span class="line">            {</span><br><span class="line">                cur++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(temp &gt; n || temp &lt; <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="comment">//nums[cur++] = -1;</span></span><br><span class="line">                cur++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">f</span>(cur, nums[cur], nums);</span><br><span class="line">                cur++;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(nums[i] != i)</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> n<span class="number">+1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180820/DmjA8h22G1.png" alt="mark"></p>
<h3 id="AC代码-Ver2"><a href="#AC代码-Ver2" class="headerlink" title="AC代码 Ver2"></a>AC 代码 Ver2</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span></span><br><span class="line">{</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">firstMissingPositive</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="type">int</span> n = nums.<span class="built_in">size</span>();</span><br><span class="line">        nums.<span class="built_in">push_back</span>(<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="keyword">while</span>(nums[i] &gt;= <span class="number">0</span> &amp;&amp; nums[i]&lt;=n &amp;&amp; nums[nums[i]] != nums[i])</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">swap</span>(nums[i], nums[nums[i]]);</span><br><span class="line">                <span class="comment">//nums[i] ^= nums[nums[i]];</span></span><br><span class="line">                <span class="comment">//nums[nums[i]] ^= nums[i];</span></span><br><span class="line">                <span class="comment">//nums[i] ^= nums[nums[i]];</span></span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="keyword">if</span>(nums[i] != i)</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        <span class="keyword">return</span> n<span class="number">+1</span>;</span><br><span class="line">    }</span><br><span class="line">};</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180820/ima82mh808.png" alt="mark"></p>
<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>自己 LeetCode 第一题 1A，还是很开心的。一开始打 ACM 心情不太好，看这题过了突然高兴起来。</p>
<p>递归速度要比迭代慢一些，而且有一定的空间消耗。</p>
<p><strong>小心用异或来交换值</strong>，比如这题自己写了</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">nums[i] ^= nums[nums[i]];</span><br><span class="line">nums[nums[i]] ^= nums[i];</span><br><span class="line">nums[i] ^= nums[nums[i]];</span><br></pre></td></tr></tbody></table></figure>

<p>结果却报了错，自己懵了许久。过了一会才恍然大悟，因为 <code>nums[nums[i]]</code> 中使用了 <code>nums[i]</code> 作下标， 而 <code>nums[i]</code> 的值在之前的异或中已经更换了值 = =。</p>
<p>好像 <code>std::swap()</code> 函数交换要快一些，自己用异或写的函数竟然会 4ms，而 <code>swap()</code> 实现的版本只要 0ms。</p>
]]></content>
  </entry>
  <entry>
    <title>FZU 2150 Fire Game(BFS)</title>
    <url>/2018/08/15/FZU-2150-Fire-Game-BFS/</url>
    <content><![CDATA[<p>传送门：<a href="https://vjudge.net/contest/244906#problem/I">Fire Game</a></p>
<blockquote class="blockquote-center"> 人一我百！人十我万！永不放弃～～～怀着自信的心，去追逐梦想 ——kuangbin </blockquote>

<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Fat brother and Maze are playing a kind of special (hentai) game on an N*M board (N rows, M columns). At the beginning, each grid of this board is consisting of grass or just empty and then they start to fire all the grass. Firstly they choose two grids which are consisting of grass and set fire. As we all know, the fire can spread among the grass. If the grid (x, y) is firing at time t, the grid which is adjacent to this grid will fire at time t+1 which refers to the grid (x+1, y), (x-1, y), (x, y+1), (x, y-1). This process ends when no new grid get fire. If then all the grid which are consisting of grass is get fired, Fat brother and Maze will stand in the middle of the grid and playing a MORE special (hentai) game. (Maybe it’s the OOXX game which decrypted in the last problem, who knows.)<img src="https://www.lifeofpix.com/wp-content/uploads/2018/07/pink-mountains-1600x1067.jpg"><span id="more"></span></p>
<p>You can assume that the grass in the board would never burn out and the empty grid would never get fire.</p>
<p>Note that the two grids they choose can be the same.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the date is an integer T, which is the number of the text cases.</p>
<p>Then T cases follow, each case contains two integers N and M indicate the size of the board. Then goes N line, each line with M character shows the board. “#” Indicates the grass. You can assume that there is at least one grid which is consisting of grass in the board.</p>
<p>1 &lt;= T &lt;=100, 1 &lt;= n &lt;=10, 1 &lt;= m &lt;=10</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each case, output the case number first, if they can play the MORE special (hentai) game (fire all the grass), output the minimal time they need to wait after they set fire, otherwise just output -1. See the sample input and output for more details.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">4</span><br><span class="line">3 3</span><br><span class="line">.#.</span><br><span class="line">###</span><br><span class="line">.#.</span><br><span class="line">3 3</span><br><span class="line">.#.</span><br><span class="line">#.#</span><br><span class="line">.#.</span><br><span class="line">3 3</span><br><span class="line">...</span><br><span class="line">#.#</span><br><span class="line">...</span><br><span class="line">3 3</span><br><span class="line">###</span><br><span class="line">..#</span><br><span class="line">#.#</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Case 1: 1</span><br><span class="line">Case 2: -1</span><br><span class="line">Case 3: 0</span><br><span class="line">Case 4: 2</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 13</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="type">int</span> T, n, m, sum;</span><br><span class="line"><span class="type">char</span> mz[MAXN][MAXN];</span><br><span class="line"><span class="type">bool</span> vis[MAXN][MAXN];</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dx[<span class="number">4</span>] = {<span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">1</span>};</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dy[<span class="number">4</span>] = {<span class="number">-1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">point</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> x, y, t;</span><br><span class="line">    <span class="built_in">point</span>() {}</span><br><span class="line">    <span class="built_in">point</span>(<span class="type">int</span> _x, <span class="type">int</span> _y, <span class="type">int</span> <span class="type">_t</span>)</span><br><span class="line">    {</span><br><span class="line">        x = _x, y = _y, t = <span class="type">_t</span>;</span><br><span class="line">    }</span><br><span class="line">} P;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span>   <span class="comment">//返回在x， y两点放火所需的时间</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> curx1 = x/m, cury1 = x-x/m*m;</span><br><span class="line">    <span class="type">int</span> curx2 = y/m, cury2 = y-y/m*m;</span><br><span class="line"></span><br><span class="line">    queue&lt;P&gt; que;</span><br><span class="line">    P p;</span><br><span class="line"></span><br><span class="line">    que.<span class="built_in">push</span>(<span class="built_in">P</span>(curx1, cury1, <span class="number">0</span>));</span><br><span class="line">    vis[curx1][cury1] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    que.<span class="built_in">push</span>(<span class="built_in">P</span>(curx2, cury2, <span class="number">0</span>));</span><br><span class="line">    vis[curx2][cury2] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(x == y)</span><br><span class="line">        cnt++;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cnt += <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(cnt == sum)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        p = que.<span class="built_in">front</span>();</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        curx1 = p.x;</span><br><span class="line">        cury1 = p.y;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> d=<span class="number">0</span>; d&lt;<span class="number">4</span>; d++)</span><br><span class="line">        {</span><br><span class="line">            curx2 = curx1 + dx[d];</span><br><span class="line">            cury2 = cury1 + dy[d];</span><br><span class="line">            <span class="keyword">if</span>(curx2 &gt;= <span class="number">0</span> &amp;&amp; curx2 &lt; n &amp;&amp; cury2 &gt;= <span class="number">0</span> &amp;&amp; cury2 &lt; m &amp;&amp; !vis[curx2][cury2] &amp;&amp; mz[curx2][cury2] == <span class="string">'#'</span>)</span><br><span class="line">            {</span><br><span class="line">                vis[curx2][cury2] = <span class="literal">true</span>;</span><br><span class="line">                que.<span class="built_in">push</span>(<span class="built_in">P</span>(curx2, cury2, p.t<span class="number">+1</span>));</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="keyword">if</span>(cnt == sum)</span><br><span class="line">                    <span class="keyword">return</span> p.t<span class="number">+1</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> INF;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> sz  = n*m;</span><br><span class="line">    <span class="type">int</span> ans = INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;sz; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(mz[i/m][i-i/m*m] == <span class="string">'.'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i; j&lt;sz; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(mz[j/m][j-j/m*m] == <span class="string">'.'</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="built_in">sizeof</span>(vis));</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">bfs</span>(i, j));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> kiss = <span class="number">1</span>; kiss&lt;=T; kiss++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;m; j++)</span><br><span class="line">            {</span><br><span class="line">                mz[i][j] = <span class="built_in">getchar</span>();</span><br><span class="line">                <span class="keyword">if</span>(mz[i][j] == <span class="string">'#'</span>)</span><br><span class="line">                    sum++;</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">getchar</span>();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ans = <span class="built_in">solve</span>();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d: %d\n"</span>, kiss, ans==INF ? <span class="number">-1</span> : ans);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>kuangbin带你飞</tag>
      </tags>
  </entry>
  <entry>
    <title>POJ 3414 Pots (BFS + 记录路径)</title>
    <url>/2018/08/15/POJ-3414-Pots-BFS-%E8%AE%B0%E5%BD%95%E8%B7%AF%E5%BE%84/</url>
    <content><![CDATA[<p>传送门：<a href="http://poj.org/problem?id=3414">Pots</a></p>
<blockquote class="blockquote-center"> 人一我百！人十我万！永不放弃～～～怀着自信的心，去追逐梦想 ——kuangbin </blockquote>

<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>You are given two pots, having the volume of <strong>A</strong> and <strong>B</strong> liters respectively. The following operations can be performed:</p>
<ol>
<li>FILL(i)        fill the pot <strong>i</strong> (1 ≤ <strong>i</strong> ≤ 2) from the tap;</li>
<li>DROP(i)      empty the pot <strong>i</strong> to the drain;</li>
<li>POUR(i,j)    pour from pot <strong>i</strong> to pot <strong>j</strong>; after this operation either the pot <strong>j</strong> is full (and there may be some water left in the pot <strong>i</strong>), or the pot <strong>i</strong> is empty (and all its contents have been moved to the pot <strong>j</strong>).</li>
</ol>
<p>Write a program to find the shortest possible sequence of these operations that will yield exactly <strong>C</strong> liters of water in one of the pots.<span id="more"></span></p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>On the first and only line are the numbers <strong>A</strong>, <strong>B</strong>, and <strong>C</strong>. These are all integers in the range from 1 to 100 and <strong>C</strong>≤max(<strong>A</strong>,<strong>B</strong>).</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>The first line of the output must contain the length of the sequence of operations <strong>K</strong>. The following <strong>K</strong> lines must each describe one operation. If there are several sequences of minimal length, output any one of them. If the desired result can’t be achieved, the first and only line of the file must contain the word ‘<strong>impossible</strong>’.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3 5 4</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">6</span><br><span class="line">FILL(2)</span><br><span class="line">POUR(2,1)</span><br><span class="line">DROP(1)</span><br><span class="line">POUR(2,1)</span><br><span class="line">FILL(2)</span><br><span class="line">POUR(2,1)</span><br></pre></td></tr></tbody></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>这是一道走马分油的题目，要求路径回溯，觉得挺好玩的，写了下。</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN　210</span></span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"><span class="type">bool</span> vis[MAXN][MAXN];</span><br><span class="line"></span><br><span class="line"><span class="comment">//这是一道走马分油的题，有意思</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> pre, id, po1, po2, op, op1, op2, step;</span><br><span class="line">};</span><br><span class="line">vector&lt;node&gt; arr;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    queue&lt;node&gt; que;</span><br><span class="line">    node cur = {<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>};</span><br><span class="line">    que.<span class="built_in">push</span>(cur);</span><br><span class="line">    arr.<span class="built_in">push_back</span>(cur);</span><br><span class="line">    vis[<span class="number">0</span>][<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="type">int</span> p1, p2, id, cnt = <span class="number">1</span>, step;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        cur = que.<span class="built_in">front</span>();</span><br><span class="line"></span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="comment">//cout &lt;&lt; "Pre:" &lt;&lt; arr[cur.pre].po1 &lt;&lt; " " &lt;&lt; arr[cur.pre].po2  &lt;&lt; " Op: " &lt;&lt; cur.op &lt;&lt; cur.op1 &lt;&lt; cur.op2 &lt;&lt; endl &lt;&lt; "Now: " &lt;&lt; cur.po1 &lt;&lt; " " &lt;&lt; cur.po2 &lt;&lt; endl;</span></span><br><span class="line">        <span class="comment">//getchar();</span></span><br><span class="line">        <span class="keyword">if</span>(cur.po1 == c || cur.po2 == c)</span><br><span class="line">            <span class="keyword">return</span> cur.id;</span><br><span class="line"></span><br><span class="line">        p1 = cur.po1;</span><br><span class="line">        p2 = cur.po2;</span><br><span class="line">        id = cur.id;</span><br><span class="line">        step = cur.step;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!vis[a][p2])</span><br><span class="line">        {</span><br><span class="line">            vis[a][p2] = <span class="literal">true</span>;</span><br><span class="line">            node todo = {id, cnt++, a, p2, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, step<span class="number">+1</span>};</span><br><span class="line">            que.<span class="built_in">push</span>(todo);</span><br><span class="line">            arr.<span class="built_in">push_back</span>(todo);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(!vis[p1][b])</span><br><span class="line">        {</span><br><span class="line">            vis[p1][b] = <span class="literal">true</span>;</span><br><span class="line">            node todo = {id, cnt++, p1, b, <span class="number">1</span>, <span class="number">2</span>, <span class="number">0</span>, step<span class="number">+1</span>};</span><br><span class="line">            que.<span class="built_in">push</span>(todo);</span><br><span class="line">            arr.<span class="built_in">push_back</span>(todo);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(!vis[<span class="number">0</span>][p2])</span><br><span class="line">        {</span><br><span class="line">            vis[<span class="number">0</span>][p2] = <span class="literal">true</span>;</span><br><span class="line">            node todo = {id, cnt++, <span class="number">0</span>, p2, <span class="number">2</span>, <span class="number">1</span>, <span class="number">0</span>, step<span class="number">+1</span>};</span><br><span class="line">            que.<span class="built_in">push</span>(todo);</span><br><span class="line">            arr.<span class="built_in">push_back</span>(todo);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span>(!vis[p1][<span class="number">0</span>])</span><br><span class="line">        {</span><br><span class="line">            vis[p1][<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">            node todo = {id, cnt++, p1, <span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>, step<span class="number">+1</span>};</span><br><span class="line">            que.<span class="built_in">push</span>(todo);</span><br><span class="line">            arr.<span class="built_in">push_back</span>(todo);</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span> cur1, cur2;</span><br><span class="line">        <span class="comment">//pot1 -&gt; pot2</span></span><br><span class="line">        cur1 = p1-(b-p2);</span><br><span class="line">        <span class="keyword">if</span>(cur1 &lt; <span class="number">0</span>)</span><br><span class="line">            cur1 = <span class="number">0</span>;</span><br><span class="line">        cur2 = p2+p1;</span><br><span class="line">        <span class="keyword">if</span>(cur2 &gt; b)</span><br><span class="line">            cur2 = b;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!vis[cur1][cur2])</span><br><span class="line">        {</span><br><span class="line">            vis[cur1][cur2] = <span class="literal">true</span>;</span><br><span class="line">            node todo = {id, cnt++, cur1, cur2, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, step<span class="number">+1</span>};</span><br><span class="line">            que.<span class="built_in">push</span>(todo);</span><br><span class="line">            arr.<span class="built_in">push_back</span>(todo);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">//pot2 -&gt; pot1</span></span><br><span class="line">        cur2 = p2 - (a-p1);</span><br><span class="line">        <span class="keyword">if</span>(cur2 &lt; <span class="number">0</span>)</span><br><span class="line">            cur2 = <span class="number">0</span>;</span><br><span class="line">        cur1 = p1+p2;</span><br><span class="line">        <span class="keyword">if</span>(cur1 &gt; a)</span><br><span class="line">            cur1 = a;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!vis[cur1][cur2])</span><br><span class="line">        {</span><br><span class="line">            vis[cur1][cur2] = <span class="literal">true</span>;</span><br><span class="line">            node todo = {id, cnt++, cur1, cur2, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, step<span class="number">+1</span>};</span><br><span class="line">            que.<span class="built_in">push</span>(todo);</span><br><span class="line">            arr.<span class="built_in">push_back</span>(todo);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node n1, node n2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> n<span class="number">1.</span>id &lt; n<span class="number">2.</span>id;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="comment">//sort(arr.begin(), arr.end(), cmp);</span></span><br><span class="line">    stack&lt;node&gt; st;</span><br><span class="line">    <span class="type">int</span> last = <span class="built_in">bfs</span>();</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(last != <span class="number">0</span> &amp;&amp; last != <span class="number">-1</span>)</span><br><span class="line">    {</span><br><span class="line">        st.<span class="built_in">push</span>(arr[last]);</span><br><span class="line">        last = arr[last].pre;</span><br><span class="line">        cnt++;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(last == <span class="number">-1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"impossible"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">    node cur;</span><br><span class="line">    <span class="keyword">while</span>(!st.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        cur = st.<span class="built_in">top</span>();</span><br><span class="line">        st.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(cur.op == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"FILL(%d)\n"</span>, cur.op1);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cur.op == <span class="number">2</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"DROP(%d)\n"</span>, cur.op1);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cur.op == <span class="number">3</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"POUR(%d,%d)\n"</span>, cur.op1, cur.op2);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>敲代码时不要轻易复制 TAT，不要因为下边要写的和上边的一样就复制 = =，吃亏了呀。</p>
<p>写的时候还是纠结了下怎么回溯。</p>
<p>最初判断 impossble 的时候考虑不周，会 WA 或 RE。</p>
<p>为了避免麻烦， = =， 没有优化 BFS。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>kuangbin带你飞</tag>
      </tags>
  </entry>
  <entry>
    <title>POJ 3087 Shuffle&#39;m Up (模拟)</title>
    <url>/2018/08/15/POJ-3087-Shuffle-m-Up-%E6%A8%A1%E6%8B%9F/</url>
    <content><![CDATA[<blockquote class="blockquote-center">人一我百！人十我万！永不放弃～～～怀着自信的心，去追逐梦想 ——kuangbin </blockquote>

<p>看了一眼，水题， 不想写了， 感觉提高不大。</p>
]]></content>
      <tags>
        <tag>kuangbin带你飞</tag>
      </tags>
  </entry>
  <entry>
    <title>POJ 3126 Prime Path (素数表 + BFS)</title>
    <url>/2018/08/15/POJ-3126-Prime-Path-%E7%B4%A0%E6%95%B0%E8%A1%A8-BFS/</url>
    <content><![CDATA[<p>传送门：<a href="http://poj.org/problem?id=3126">Prime Path</a></p>
<blockquote class="blockquote-center"> 人一我百！人十我万！永不放弃～～～怀着自信的心，去追逐梦想 ——kuangbin </blockquote>

<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>The ministers of the cabinet were quite upset by the message from the Chief of Security stating that they would all have to change the four-digit room numbers on their offices. <span id="more"></span></p>
<p>— It is a matter of security to change such things every now and then, to keep the enemy in the dark. </p>
<p>— But look, I have chosen my number 1033 for good reasons. I am the Prime minister, you know! </p>
<p>— I know, so therefore your new number 8179 is also a prime. You will just have to paste four new digits over the four old ones on your office door. </p>
<p>— No, it’s not that simple. Suppose that I change the first digit to an 8, then the number will read 8033 which is not a prime! </p>
<p>— I see, being the prime minister you cannot stand having a non-prime number on your door even for a few seconds. </p>
<p>— Correct! So I must invent a scheme for going from 1033 to 8179 by a path of prime numbers where only one digit is changed from one prime to the next prime. </p>
<p>Now, he minister of finance, who had been eavesdropping, intervened. </p>
<p>— No unnecessary expenditure, please! I happen to know that the price of a digit is one pound. </p>
<p>— Hmm, in that case I need a computer program to minimize the cost. You don’t know some very cheap software gurus, do you? </p>
<p>— In fact, I do. You see, there is this programming contest going on… Help the prime minister to find the cheapest prime path between any two given four-digit primes! The first digit must be nonzero, of course. Here is a solution in the case above. </p>
<blockquote>
<p>1033<br>1733<br>3733<br>3739<br>3779<br>8779<br>8179</p>
</blockquote>
<p>The cost of this solution is 6 pounds. Note that the digit 1 which got pasted over in step 2 can not be reused in the last step – a new 1 must be purchased.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>One line with a positive number: the number of test cases (at most 100). Then for each test case, one line with two numbers separated by a blank. Both numbers are four-digit primes (without leading zeros).</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>One line for each case, either with a number stating the minimal cost or containing the word Impossible.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1033 8179</span><br><span class="line">1373 8017</span><br><span class="line">1033 1033</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">6</span><br><span class="line">7</span><br><span class="line">0</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给两个四位素数，每次只能改变其中一位，改后的数字也要求是素数，问最小的改变次数。</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 10007</span></span><br><span class="line"><span class="type">bool</span> notprime[MAXN];</span><br><span class="line"><span class="type">bool</span> vis[MAXN];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> num, step;</span><br><span class="line">}P;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(notprime, <span class="literal">false</span>, <span class="built_in">sizeof</span>(notprime));</span><br><span class="line">    notprime[<span class="number">0</span>] = notprime[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;MAXN; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(!notprime[i])</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(i &gt; MAXN/i)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i*i; j&lt;MAXN; j+=i)</span><br><span class="line">                notprime[j] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> tmp, num, step;</span><br><span class="line">    queue&lt;P&gt; que;</span><br><span class="line"></span><br><span class="line">    que.<span class="built_in">push</span>(P {n, <span class="number">0</span>});</span><br><span class="line">    vis[n] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        num = que.<span class="built_in">front</span>().num;</span><br><span class="line">        step = que.<span class="built_in">front</span>().step;</span><br><span class="line">        <span class="keyword">if</span>(num == m)</span><br><span class="line">            <span class="keyword">return</span> step;</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            tmp = num / <span class="number">10</span> * <span class="number">10</span> + i;</span><br><span class="line">            <span class="keyword">if</span>(tmp == m)</span><br><span class="line">                <span class="keyword">return</span> step<span class="number">+1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!notprime[tmp] &amp;&amp; !vis[tmp])</span><br><span class="line">                que.<span class="built_in">push</span>(P {tmp, step<span class="number">+1</span>}), vis[tmp] = <span class="literal">true</span>; <span class="comment">//辣鸡崔明浩，最初又忘了改变状态</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            tmp = num/<span class="number">100</span>*<span class="number">100</span> + num%<span class="number">10</span> + i*<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">if</span>(tmp == m)</span><br><span class="line">                <span class="keyword">return</span> step<span class="number">+1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!notprime[tmp] &amp;&amp; !vis[tmp])</span><br><span class="line">                que.<span class="built_in">push</span>(P {tmp, step<span class="number">+1</span>}), vis[tmp] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            tmp = num/<span class="number">1000</span>*<span class="number">1000</span> + num%<span class="number">100</span> + i*<span class="number">100</span>;</span><br><span class="line">            <span class="keyword">if</span>(tmp == m)</span><br><span class="line">                <span class="keyword">return</span> step<span class="number">+1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!notprime[tmp] &amp;&amp; !vis[tmp])</span><br><span class="line">                que.<span class="built_in">push</span>(P {tmp, step<span class="number">+1</span>}), vis[tmp] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            tmp = i*<span class="number">1000</span> + num%<span class="number">1000</span>;</span><br><span class="line">            <span class="keyword">if</span>(tmp == m)</span><br><span class="line">                <span class="keyword">return</span> step<span class="number">+1</span>;</span><br><span class="line">            <span class="keyword">if</span>(!notprime[tmp] &amp;&amp; !vis[tmp])</span><br><span class="line">                que.<span class="built_in">push</span>(P {tmp, step<span class="number">+1</span>}), vis[tmp] = <span class="literal">true</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="type">int</span> ans;</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="built_in">sizeof</span>(vis));</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line">        ans = <span class="built_in">bfs</span>();</span><br><span class="line">        <span class="keyword">if</span>(~ans)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Impossible\n"</span>);	<span class="comment">//辣鸡崔明浩，一开始没写Impossible</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>kuangbin带你飞</tag>
      </tags>
  </entry>
  <entry>
    <title>POJ 1426 Find The Multiple(BFS)</title>
    <url>/2018/08/15/POJ-1426-Find-The-Multiple-BFS/</url>
    <content><![CDATA[<p>传送门：<a href="http://poj.org/problem?id=1426">Find the Multiple</a></p>
<blockquote class="blockquote-center"> 人一我百！人十我万！永不放弃～～～怀着自信的心，去追逐梦想 ——kuangbin </blockquote>

<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Given a positive integer n, write a program to find out a nonzero multiple m of n whose decimal representation contains only the digits 0 and 1. You may assume that n is not greater than 200 and there is a corresponding m containing no more than 100 decimal digits.<span id="more"></span></p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input file may contain multiple test cases. Each line contains a value of n (1 &lt;= n &lt;= 200). A line containing a zero terminates the input.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each value of n in the input print a line containing the corresponding value of m. The decimal representation of m must not contain more than 100 digits. If there are multiple solutions for a given value of n, any one of them is acceptable.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">2</span><br><span class="line">6</span><br><span class="line">19</span><br><span class="line">0</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">10</span><br><span class="line">100100100100100100</span><br><span class="line">111111111111111111</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>只用 10 构成一个数，要求长度不能超过 200，此数是所给数的倍数。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题可能数据水，可能有别的规律，用 LL + BFS 就水过去了。不知其所以然。</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">LL tmp;</span><br><span class="line"><span class="function">LL <span class="title">bfs</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    queue&lt;LL&gt; que;</span><br><span class="line">    que.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        tmp = que.<span class="built_in">front</span>();</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(tmp % n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> tmp;</span><br><span class="line">        que.<span class="built_in">push</span>(tmp*<span class="number">10</span>);</span><br><span class="line">        que.<span class="built_in">push</span>(tmp*<span class="number">10</span><span class="number">+1</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    LL ans;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) &amp;&amp; n)</span><br><span class="line">    {</span><br><span class="line">        ans = <span class="built_in">bfs</span>(n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>kuangbin带你飞</tag>
      </tags>
  </entry>
  <entry>
    <title>POJ 3279 Fliptile (爆搜 + 一点点状压的知识)</title>
    <url>/2018/08/13/POJ-3279-Fliptile-%E7%88%86%E6%90%9C-%E4%B8%80%E7%82%B9%E7%82%B9%E7%8A%B6%E5%8E%8B%E7%9A%84%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<p>传送门：<a href="http://poj.org/problem?id=3279">Fliptile</a></p>
<blockquote class="blockquote-center"> 人一我百！人十我万！永不放弃～～～怀着自信的心，去追逐梦想 ——kuangbin </blockquote>

<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Farmer John knows that an intellectually satisfied cow is a happy cow who will give more milk. He has arranged a brainy activity for cows in which they manipulate an <em>M</em> × <em>N</em> grid (1 ≤ <em>M</em> ≤ 15; 1 ≤ <em>N</em> ≤ 15) of square tiles, each of which is colored black on one side and white on the other side.<span id="more"></span></p>
<p>As one would guess, when a single white tile is flipped, it changes to black; when a single black tile is flipped, it changes to white. The cows are rewarded when they flip the tiles so that each tile has the white side face up. However, the cows have rather large hooves and when they try to flip a certain tile, they also flip all the adjacent tiles (tiles that share a full edge with the flipped tile). Since the flips are tiring, the cows want to minimize the number of flips they have to make.</p>
<p>Help the cows determine the minimum number of flips required, and the locations to flip to achieve that minimum. If there are multiple ways to achieve the task with the minimum amount of flips, return the one with the least lexicographical ordering in the output when considered as a string. If the task is impossible, print one line with the word “IMPOSSIBLE”.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Line 1: Two space-separated integers: <em>M</em> and <em>N</em><br>Lines 2..<em>M</em>+1: Line <em>i</em>+1 describes the colors (left to right) of row i of the grid with <em>N</em> space-separated integers which are 1 for black and 0 for white</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Lines 1..<em>M</em>: Each line contains <em>N</em> space-separated integers, each specifying how many times to flip that particular location.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">4 4</span><br><span class="line">1 0 0 1</span><br><span class="line">0 1 1 0</span><br><span class="line">0 1 1 0</span><br><span class="line">1 0 0 1</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">0 0 0 0</span><br><span class="line">1 0 0 1</span><br><span class="line">1 0 0 1</span><br><span class="line">0 0 0 0</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 17</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dx[<span class="number">5</span>] = {<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>};</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> dy[<span class="number">5</span>] = {<span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>};</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> M, N;</span><br><span class="line"><span class="type">int</span> tile[MAXN][MAXN];</span><br><span class="line"><span class="type">int</span> opt[MAXN][MAXN];</span><br><span class="line"><span class="type">int</span> flip[MAXN][MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getcolor</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> c = tile[x][y];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> d=<span class="number">0</span>; d&lt;<span class="number">5</span>; d++)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> x2 = x+dx[d], y2 = y+dy[d];</span><br><span class="line">        <span class="keyword">if</span>(x2&gt;=<span class="number">0</span> &amp;&amp; x2&lt;M &amp;&amp; y2&gt;=<span class="number">0</span> &amp;&amp; y2&lt;N)</span><br><span class="line">            c += flip[x2][y2];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> c&amp;<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">calc</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;M; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;N; j++)</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">getcolor</span>(i<span class="number">-1</span>, j))</span><br><span class="line">                flip[i][j] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;N; j++)</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">getcolor</span>(M<span class="number">-1</span>, j))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;M; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;N; j++)</span><br><span class="line">            ans += flip[i][j];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> res = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i &lt; <span class="number">1</span>&lt;&lt;N; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">memset</span>(flip, <span class="number">0</span>, <span class="built_in">sizeof</span>(flip));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;N; j++)</span><br><span class="line">            flip[<span class="number">0</span>][N-j<span class="number">-1</span>] = i&gt;&gt;j&amp;<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> num = <span class="built_in">calc</span>();</span><br><span class="line">        <span class="keyword">if</span>(num &gt;= <span class="number">0</span> &amp;&amp; (res&lt;<span class="number">0</span> || res &gt; num))</span><br><span class="line">        {</span><br><span class="line">            res = num;</span><br><span class="line">            <span class="built_in">memcpy</span>(opt, flip, <span class="built_in">sizeof</span>(flip));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(res &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"IMPOSSIBLE\n"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;M; i++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;N; j++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, opt[i][j], <span class="string">" \n"</span>[j<span class="number">+1</span> == N]);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;M, &amp;N);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;M; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;N; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;tile[i][j]);</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>kuangbin带你飞</tag>
      </tags>
  </entry>
  <entry>
    <title>POJ 3278 Catch That Cow (BFS + 剪枝)</title>
    <url>/2018/08/11/POJ-3278-Catch-That-Cow-BFS-%E5%89%AA%E6%9E%9D/</url>
    <content><![CDATA[<blockquote class="blockquote-center">人一我百！人十我万！永不放弃～～～怀着自信的心，去追逐梦想 ——kuangbin </blockquote>

<p>传送门：<a href="http://poj.org/problem?id=3278">POJ 3278 Catch That Cow</a></p>
<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Farmer John has been informed of the location of a fugitive cow and wants to catch her immediately. He starts at a point <em>N</em> (0 ≤ <em>N</em> ≤ 100,000) on a number line and the cow is at a point <em>K</em> (0 ≤ <em>K</em> ≤ 100,000) on the same number line. Farmer John has two modes of transportation: walking and teleporting.<span id="more"></span></p>
<p>* Walking: FJ can move from any point <em>X</em> to the points <em>X</em> - 1 or <em>X</em> + 1 in a single minute<br>* Teleporting: FJ can move from any point <em>X</em> to the point 2 × <em>X</em> in a single minute.</p>
<p>If the cow, unaware of its pursuit, does not move at all, how long does it take for Farmer John to retrieve it?</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Line 1: Two space-separated integers: <em>N</em> and <em>K</em></p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Line 1: The least amount of time, in minutes, it takes for Farmer John to catch the fugitive cow.</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">5 17</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">4</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h3><p>The fastest way for Farmer John to reach the fugitive cow is to move along the following path: 5-10-9-18-17, which takes 4 minutes.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 100010</span></span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">point</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> pos, step;</span><br><span class="line">} P;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> minn = INF;</span><br><span class="line"><span class="type">int</span> ans = INF;</span><br><span class="line"><span class="type">bool</span> vis[MAXN];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    queue&lt;P&gt; que;</span><br><span class="line">    que.<span class="built_in">push</span>(P {n, <span class="number">0</span>});</span><br><span class="line">    vis[n] = <span class="literal">true</span>;</span><br><span class="line">    P cur;</span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        cur = que.<span class="built_in">front</span>();</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(cur.pos &lt; k)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(cur.pos<span class="number">-1</span>&gt;=<span class="number">0</span> &amp;&amp; !vis[cur.pos<span class="number">-1</span>])</span><br><span class="line">            {</span><br><span class="line">                que.<span class="built_in">push</span>(P {cur.pos<span class="number">-1</span>, cur.step<span class="number">+1</span>});</span><br><span class="line">                vis[cur.pos<span class="number">-1</span>] = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(cur.pos<span class="number">+1</span>&lt;MAXN &amp;&amp; !vis[cur.pos<span class="number">+1</span>])</span><br><span class="line">                que.<span class="built_in">push</span>(P {cur.pos<span class="number">+1</span>, cur.step<span class="number">+1</span>}), vis[cur.pos<span class="number">+1</span>] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(cur.pos * <span class="number">2</span> &lt; MAXN &amp;&amp; !vis[cur.pos &lt;&lt; <span class="number">1</span>])</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">if</span>(cur.pos * <span class="number">2</span> &lt;= k)</span><br><span class="line">                    que.<span class="built_in">push</span>(P {cur.pos&lt;&lt;<span class="number">1</span>, cur.step<span class="number">+1</span>});</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">if</span>(cur.step + <span class="number">1</span> + cur.pos * <span class="number">2</span> - k &lt;= ans)</span><br><span class="line">                        ans = cur.step + <span class="number">1</span> + cur.pos * <span class="number">2</span> - k;</span><br><span class="line">                }</span><br><span class="line">                vis[cur.pos &lt;&lt; <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cur.pos == k)</span><br><span class="line">        {</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, cur.step);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cur.pos &gt; k)</span><br><span class="line">        {</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, cur.step+cur.pos-k);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(k &lt;= n)</span><br><span class="line">        ans = n-k;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">bfs</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>这个地球真太小了，在地铁上看小米的面经写到了一个算法题，心想挺有意思的，回去写写。回家继续写 kuangbin 带你飞 的题目，结果发现第三道刚好是面经中看到的。太小了太小了。简单题目。哈哈哈，看到 Teleporting 的时候第一反应是 TP。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>kuangbin带你飞</tag>
      </tags>
  </entry>
  <entry>
    <title>lower_bound () 和 upper_bound () 在从大到小数组中的使用</title>
    <url>/2018/08/11/lower-bound-%E5%92%8Cupper-bound-%E5%9C%A8%E4%BB%8E%E5%A4%A7%E5%88%B0%E5%B0%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>今天突发奇想，想知道 <code>lower_bound()</code> 和 <code>upper_bound()</code> 函数在从大到小的数组中怎么使用，猜想 C++ 中应该会有重载， 果不其然， 正确打开姿势是酱紫。</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">lower_bound</span>(begin, end, val, <span class="built_in">greater</span>&lt;T&gt;())</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>C++</category>
        <category>STL</category>
      </categories>
  </entry>
  <entry>
    <title>发现了一个好玩的东东</title>
    <url>/2018/08/10/%E5%8F%91%E7%8E%B0%E4%BA%86%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%8E%A9%E7%9A%84%E4%B8%9C%E4%B8%9C/</url>
    <content><![CDATA[<p><i class="fa fa-spin">发现了一个好玩的东东</i></p>
]]></content>
  </entry>
  <entry>
    <title>POJ 2251 Dungeon Master(BFS)</title>
    <url>/2018/08/10/POJ-2251-Dungeon-Master-BFS/</url>
    <content><![CDATA[<p>传送门：<a href="http://poj.org/problem?id=2251">Dungeon Master</a></p>
<blockquote class="blockquote-center"> 人一我百！人十我万！永不放弃～～～怀着自信的心，去追逐梦想 ——kuangbin </blockquote>

<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>You are trapped in a 3D dungeon and need to find the quickest way out! The dungeon is composed of unit cubes which may or may not be filled with rock. It takes one minute to move one unit north, south, east, west, up or down. You cannot move diagonally and the maze is surrounded by solid rock on all sides.<br>Is an escape possible? If yes, how long will it take? <span id="more"></span></p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The input consists of a number of dungeons. Each dungeon description starts with a line containing three integers L, R and C (all limited to 30 in size).<br>L is the number of levels making up the dungeon.<br>R and C are the number of rows and columns making up the plan of each level.<br>Then there will follow L blocks of R lines each containing C characters. Each character describes one cell of the dungeon. A cell full of rock is indicated by a ‘#’ and empty cells are represented by a ‘.’. Your starting position is indicated by ‘S’ and the exit by the letter ‘E’. There’s a single blank line after each level. Input is terminated by three zeroes for L, R and C.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><blockquote>
<p>Escaped in x minute(s).</p>
</blockquote>
<blockquote>
<p>Trapped!</p>
</blockquote>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3 4 5</span><br><span class="line">S....</span><br><span class="line">.###.</span><br><span class="line">.##..</span><br><span class="line">###.#</span><br><span class="line"></span><br><span class="line">#####</span><br><span class="line">#####</span><br><span class="line">##.##</span><br><span class="line">##...</span><br><span class="line"></span><br><span class="line">#####</span><br><span class="line">#####</span><br><span class="line">#.###</span><br><span class="line">####E</span><br><span class="line"></span><br><span class="line">1 3 3</span><br><span class="line">S##</span><br><span class="line">#E#</span><br><span class="line">###</span><br><span class="line"></span><br><span class="line">0 0 0</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Escaped in 11 minute(s).</span><br><span class="line">Trapped!</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 31</span></span><br><span class="line"><span class="type">char</span> mz[MAXN][MAXN][MAXN];</span><br><span class="line"><span class="type">bool</span> vis[MAXN][MAXN][MAXN];</span><br><span class="line"><span class="type">int</span> L, R, C;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> <span class="title class_">point</span></span><br><span class="line">{</span><br><span class="line">   <span class="type">int</span> x,y,z,needtime;</span><br><span class="line">   <span class="type">bool</span> <span class="keyword">operator</span> == (<span class="type">const</span> point&amp; a) <span class="type">const</span></span><br><span class="line">   {</span><br><span class="line">       <span class="keyword">return</span> x==a.x &amp;&amp; y==a.y &amp;&amp; z==a.z;</span><br><span class="line">   }</span><br><span class="line">}P;</span><br><span class="line"></span><br><span class="line">P st, ed;</span><br><span class="line">queue&lt;P&gt; que;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    P cur = st;</span><br><span class="line">    que.<span class="built_in">push</span>(cur);</span><br><span class="line">    <span class="type">int</span> x, y, z, t;</span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        cur = que.<span class="built_in">front</span>();</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line">        x = cur.x, y = cur.y, z = cur.z, t = cur.needtime + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(cur == ed)</span><br><span class="line">            <span class="keyword">return</span> cur.needtime;</span><br><span class="line">        <span class="comment">//下面这里写麻烦了，可以用个数组来存方向，循环一遍就好。</span></span><br><span class="line">        <span class="keyword">if</span>(x - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; mz[x<span class="number">-1</span>][y][z] != <span class="string">'#'</span> &amp;&amp; !vis[x<span class="number">-1</span>][y][z])</span><br><span class="line">            que.<span class="built_in">push</span>(P {x<span class="number">-1</span>, y, z, t}), vis[x<span class="number">-1</span>][y][z] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(x + <span class="number">1</span> &lt;  R &amp;&amp; mz[x<span class="number">+1</span>][y][z] != <span class="string">'#'</span> &amp;&amp; !vis[x<span class="number">+1</span>][y][z])</span><br><span class="line">            que.<span class="built_in">push</span>(P {x<span class="number">+1</span>, y, z, t}), vis[x<span class="number">+1</span>][y][z] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(y - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; mz[x][y<span class="number">-1</span>][z] != <span class="string">'#'</span> &amp;&amp; !vis[x][y<span class="number">-1</span>][z])</span><br><span class="line">            que.<span class="built_in">push</span>(P {x, y<span class="number">-1</span>, z, t}), vis[x][y<span class="number">-1</span>][z] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(y + <span class="number">1</span> &lt;  C &amp;&amp; mz[x][y<span class="number">+1</span>][z] != <span class="string">'#'</span> &amp;&amp; !vis[x][y<span class="number">+1</span>][z])</span><br><span class="line">            que.<span class="built_in">push</span>(P {x, y<span class="number">+1</span>, z, t}), vis[x][y<span class="number">+1</span>][z] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(z - <span class="number">1</span> &gt;= <span class="number">0</span> &amp;&amp; mz[x][y][z<span class="number">-1</span>] != <span class="string">'#'</span> &amp;&amp; !vis[x][y][z<span class="number">-1</span>])</span><br><span class="line">            que.<span class="built_in">push</span>(P {x, y, z<span class="number">-1</span>, t}), vis[x][y][z<span class="number">-1</span>] = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(z + <span class="number">1</span> &lt;  L &amp;&amp; mz[x][y][z<span class="number">+1</span>] != <span class="string">'#'</span> &amp;&amp; !vis[x][y][z<span class="number">+1</span>])</span><br><span class="line">            que.<span class="built_in">push</span>(P {x, y, z<span class="number">+1</span>, t}), vis[x][y][z<span class="number">+1</span>] = <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;L, &amp;R, &amp;C) &amp;&amp; (L || R || C))</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">            que.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="built_in">sizeof</span>(vis));</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;L; k++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;R; i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;C; j++)</span><br><span class="line">                {</span><br><span class="line">                    mz[i][j][k] = <span class="built_in">getchar</span>();</span><br><span class="line">                    <span class="keyword">if</span>(mz[i][j][k] == <span class="string">'S'</span>)</span><br><span class="line">                    {</span><br><span class="line">                        st.x = i;</span><br><span class="line">                        st.y = j;</span><br><span class="line">                        st.z = k;</span><br><span class="line">                        st.needtime = <span class="number">0</span>;</span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(mz[i][j][k] == <span class="string">'E'</span>)</span><br><span class="line">                    {</span><br><span class="line">                        ed.x = i;</span><br><span class="line">                        ed.y = j;</span><br><span class="line">                        ed.z = k;</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                <span class="built_in">getchar</span>();</span><br><span class="line">            }</span><br><span class="line">            <span class="built_in">getchar</span>();</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span> ans = <span class="built_in">bfs</span>();</span><br><span class="line">        <span class="keyword">if</span>(~ans)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Escaped in %d minute(s).\n"</span>, ans);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"Trapped!"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	垃圾崔明浩</span></span><br><span class="line"><span class="comment">	vis维护写错，vis数组不清空。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">FS511F2Yr;:i:::iii:i:i:i:iii:iii:iii:iiiiiiiiiiiiiiiiiiiiiiiiii:,:,::i:i:::i,............. . .                                             . ..,,::iirr77LvYLuYJJjJujuJUjujUuUuUu2uUu2uUjujjLYvL7777rr;</span><br><span class="line"><span class="comment">//: ..,::ir777ruPZEq1UYL77ri:::i7uu1252511UUjuYuJuu15SS00NkP1uvriiiiii:. :B@B8FJ77vLJ1uvi::iii:i:i:::::::::::::::iir;r;i::.,,:,:::::,:,:::::,:::,:::::,:,:,,.,,....,.... .:i,                                                                                          ........,,,::::.. .,irv77iii;ii:,,:ivj12Uuuuj7r:,,,,,,:,:,:,:,:,:,:,:,:::::,:::,:::::::::::::::::::::.....,,,.,.:,,..                                                                 ..,:::iirr77vvvvLvLvLvYLYLYLJLYLJLjYjYjJuLJLJLYvL777rrrii</span></span><br><span class="line"><span class="comment">//,.:irrvLJLJLL7r7ukZEqXPkPkPSXkPSF1121252F5PX0NZZ8GMMBM@B@B@BBEui:::,:r5P0Uv777LYSFU7ii;irrr;rrriri;i;iriiiiiiii:i:ii77JLLr;:::::i:i:i:i:iiiii:i:iiiiiii::,:,:::::::::::...:ir:.                                                                                 ..,.:,::::::::iii::,,.:rLLuv7:,  ,rLvr7JSkX11u1uLri:::::::i:i:i:i:i:i:i:i:i:iiiii:i:i:iiiiiiiiiiiiiiiii::,,:iii:::::i::.............. .                                             . ..::::;i77vvLLYLjLJYjYjJuJjJujujuuuuUuUuUu2uUu2uUuuuUJuYYLLvv7</span></span><br><span class="line"><span class="comment">//::ir7LLJLJLYv7ii::750OEP5XSXkXkPkqqNNZEGGO8OOOOMOOGOG8ZOG8Z8O@B@8J7SOMPu7LvJLJ5qJrii;r;r;r;r;ririiiiiiiiiiiiiiiiii:::::irJjUY7ii:::::::i:i:i:i:iiiiiii::::.,.,,:::::::::::,:::i;:.                                                                           ....,,,,:,::::iii:i:,...:7UuLri.     :v2XkPFFu2uuLr:::::::::::i:::i:i:::i:i:i:i:i:i:iii:iiiiiii:iii:iiiii:,.:i77r::::::,,.............. .              .rL15Sv,                       ...,::iirrvvLvJLJYjJuJjYuLuYuJuJujujUjuuUuUuUuUu2u2u2uUuUuUJJLYvv</span></span><br><span class="line"><span class="comment">//ii7vLLYLYLL77iiiii:,:iSM@M8EZEGEGZ8E8EGE8EGZ8G8EGZ8ZGZGGGGOZOZMB@B8kuLYLjYuLuP1iiir;r;rrriri;i;iiiiiiiiiiiiii:i:i:i:i::::::;vJ2uY7i::,::i:i:i:i:i:iii::::.,.,,::::::::::::::::::irr:                                                                        ..,.,,:,::::::iii::,,..,:;Luur:       .:72qXFu2jYri:::::::::::::i:::i:::i:i:i:i:i:i:i:i:iii:iii:i:i:iii::,::irvr;:::::,............ . . .             ,7k0ZEZ0EFi                       ..::ii77LLYYuJuYuJjYJYuYuYjJuYuJuJuJUuujuuUuUu2u2u2U2u2u2uUuuYYL</span></span><br><span class="line"><span class="comment">//r7LJLLLJLvrri;ir;i:,  .r1OB@MO0E0ENZNZ0ZEG0GE8EGZ8Z8E8ZOZ8GOB@M0JvvYYjYuJuYjqu:iirir;r;r;ri;iiiiiiiiii:i:iii:i:i:i:::i:::::::::7L12Uj7:,.::::i:i:iii::,:.,.,,:::::::::::::::::::,::rri.                                                                   ...,.,,::::::i:ii:::.,.,,:;LLjL7:.   ...,::rL5F5Lr:::::::::::i:::::::i:i:i:i:i:i:i:i:i:iii:iii:i:iii:iii::,:i777i:::::,......... ...   .              ,vFE0qSk5FSqF7                     .,::ir7vJYuuUjUuuJjJjJJYjJuYuYuJuJuuuuujUuUuUu2u2u2U2u1U2u2u2uuJj</span></span><br><span class="line"><span class="comment">//L7YLYLYv7r;i;iri:,..:rvv77Y5OB@B@880Z0Z0GE8E8ZGEGZ8ZGZGZ8M@B8UvrvYuYuYujuJY1Zii;r;r;r;;iriiiii;iiiiiiiiii:i:i:i:i:i:i:i:::i:::::::7L2Fqkui,.:::,:::::,,...,,::::::i:i:i:i:i:::::::::::77:                                                               ..,.,.:,::iii:iii::,,.,.,,:rYLvrrr7;:,,.::iii:i7Lri,::::::::i:i:i:::::::i:::i:i:i:i:i:i:iii:i:i:i:i:i:i::,:,::i;i:::::,.......... ...   .             :vPNZPX55252F5kkY.                 ..,::i;77YYuu1uUUuuujuJuYuYjJjjuJujujUuUuUuUuuuUuUu1U1u1U2U1U1u2uuj</span></span><br><span class="line"><span class="comment">//LvLJLL7riiiri;::.,:rvjjjJJv7iir2Z@B@BBOOZ8ZGZGZ8G8ZOZ8GBBBkYrvLJYujujuuuuuJ01:irir;ri;i;i;iiiiiiiiii:i:i:i:i:i:::::i:i:::i:i:i::::,:i7vUkZPJ:..::,.......,.,,::::i:i:i:i:i:i:i::::::::,:ii,                                                            ..,.,,::::::iiiii::.,.,..,:i77r:::irLLvii:iiii;;r;i:::::::::::i:::i:i:i:::::i:i:i:i:i:i:i:i:i:i:iiiiiii::,,,:::::::::................ . .            :jkZNqkS5F2525U12kkU:              . ..::ii77LLujUU1U1uUjujuJuYuYuYujuJujujUuUu2uuu2u2U1u1u2U121U1U121uu</span></span><br><span class="line"><span class="comment">//YvJLvrriiirii:,.:iLJUJuJuLLrri:,::rYkEOMOGZ0ZEGE8ZGZMB@O2777JYjJujujUuUjUuu0U:ii;iriii;iiiiiiiiii:i:i:i:i:i:i:::i:::::i:i::::::::::::,:i7710OSi  ::,....,.,,::::i:i:i:i:iii:i:i:i:::::::::ii:.                                                      ..,,,.,,::::::::i::,,.,.,.,:iirii:,,:iv2NSu7iiiirr7rrrri::::::i:i:::::i:i:i:i:::i:i:i:i:::::i:i:i:iiiiii::::i:::::::::,.......... ... . . .           iuNEEXX5S1F5525U2uUu55Fr            ....::ii77LLJu2u1U121UUuUJuYuJuYuJujuJujUuUuujUuUu2u2U1U1U122U5U5U1U1U</span></span><br><span class="line"><span class="comment">//YLv7iiiii;i:,,,i7juuJuJjL7rriiii::.   .rjZMBOM8OG8O@BGJLL2ujLJYujuuUjuuUuUj8YvXi:;iiiii;iiiiiiii:i:::i:i:i:i:::::::::::::::i:::i:i:i:::::irvLXO0:  .::...,,::::::iiiiiiiiiiiii:i:i:i:i:i:::::ii.                                                   ..,.,,:,::::::i:::,...,..,:irrr::...:rUXZPSuYv7rrrrrrr7rrii:::::::::i:i:i:i:::i:::i:i:i:i:i:i:i:i:iiiii::..,ir;::::::............ . . . . .         .iUqGNqSS5F2F5S5F21uUuUu21SL,         ...,::ii77vLYJUu1U1U5U2uUjujuJjYjJuJujuuujUuUuUu2u2u2U1u2u1U22121212F22</span></span><br><span class="line"><span class="comment">//Yrri;irii::.,:7LujuJuYY7rii:::::iivL5NOMMOMOMMMO@B@ZFu225u5q05jLJJuuUU2u1U2GJ;@k::iiiiiiiiiii:iiiii:i:i:::::i:::::::::::::i:::i:i:i::::::,::r7v2MOv  .:::,,,::::i:i:iiiii:i:iii:i:i:i:i::::::,::,                                               ..,.,.:,:,::::::i::,,.,...,:ir7ri:,..,ruNE052juujJL77rrr7r777ri:::::::::i:::i:i:i:i:i:i:i:i:i:i:i:iiiii::,,.  ..::i::,,.............. . . .           ;uEZEXXFS5F5SFk5S11uUuUjuJUuSUi       ..,,::ii77vvYYjj2U12121U1UUuujjjjYuJuJUuUuuu2uUuUu2u2uUU1U1U12111U52521U</span></span><br><span class="line"><span class="comment">//rii;iri:,,.:;LJuJuYjLvri:::i;LuSP8OMMBMOZG0GEZ8@BBXUv7ii:i:;jZOOFuYuu225U52OLiM@5::iiiiiii:iii:::::iiiii:i:::::i:::i:::::::i:i::::::::::::.::ii7vuZBF;..,::::::::i:iiiii:iiiii:i:i:i:i:i:i:i:::::::                                            ..,.,.,,:,::::i:i::...,.,,:ir77i:...:7kZO0XUuuUL7;7LJv7rrrrr7r7rri::::::::i:i:i:i:i:i:i:i:i:::::iiiiiii::..     ..:::.............. . . .   .       .;1qG0NSk5S5SFkFk5521uuuUjujuJuu52v.   ...::iir;77vvYLjjuu2U5U1U5U2uuuuJuJuJujujujUuuuUuUu2uUUUU2u121212115212F25</span></span><br><span class="line"><span class="comment">//;:;i;::.,:;vuJuJuYY7;:::rL5qNPqqG8MOOG8GOZ8ZMB@Z27;:::iiriri::ruOO8Fuu51F2FGj:ZOMj,:iiiiiiiiiirii,....::i::::::::::::::::::,:,:,,,,.,...,,:,,,::;7vLqMEr,.::i:i:::i:i:iiiii:iiiii:i:iii:i:i:i::::::::                                        ...,.,,,,::::::i::,,.,...,:ir7ri:,  .r1MMOX1uuuYri:::i7Jvvrrrr;rr7rrii:::i:i:::::i:i:i:i:i:i:i::iiiri;::,,..   ....................... . .          .71ZEEPXFSFS1kSkSF11UUuUjujuJujuJuj21Ui. .,::iir7vvLLYLuYujuu1U1U121u2uujUJuJuuuuuuuuuuUuUuUuUU1U2u1u5U1U5111515151</span></span><br><span class="line"><span class="comment">//;iii:,.:ivYuYjJjvri:i7UqNqSSSNGM8OG8ZO8OOOO@BNL7ii:iiriri;irii:::7FMMZ515k18F:UMqML,:iii:i:i:::iirri,.   ........,.,,,,:.,.................:::,:::ivvvSB0r.,::iiii:i:iiiiiiiiiiiiiiiiiii:iiiii:i:::::i,                                    ..,.,,,,:,:::::::::.,...,,::r77i:.  .i5GBOZF2JuL7i:,::::irLLvrrii:iirrrii:::i:i:i:i:i:i:i:i:::iiii777ii::..    .................... . . . . .       ,rFN8NqSXFS5XFkSX5F21uUuUu2U2uuuuJuYuJUU1v:.::i;77vvLLJYjJujUuUU22525U2u2uujuuujuJUjUuUuUu2u2uUu2U1U2U125212511251F15</span></span><br><span class="line"><span class="comment">//r::,,.i7JJuYYv7i;rY50PX21S0ZMOO8OG8GOOBMNZ@EJri:iiriririi7YirLL::,,:YZBOqFkNOivZENM7  iii:i:i:::::iirrr:.           . .......   .............,:,::::;vLvSMGi.,::iiiiiiiiiiiiiiiiiiiii:iii:iiiiiii:i:::iri                                ...,.,,:,::::::::::,.....,,ir7r;:.  .iuOMMEX55uJ7i::,:::::::ivLLrr:::iirrrii:i:i:i:::i:i:i:i:i:iirr77ri:,,.    ....................... . .          ,7SZZEPPFSFkFSFkFk15U2u2u221u1UujuJuJuYuYuu1u7iirvvLvJYjJuJujuu2uUU22515U2U2uuuuuuuUJuuuuuu2uUu1U1u1U125U1252F21251S152</span></span><br><span class="line"><span class="comment">//:,.,:rvjYYv77vL21PkS1SXG8MOOG8Z8G88OB@FLXOU7i::ii;iririiv1riir5O17:,.,rqMMXqO2rSZX0M7  ri::::i:i:::::::irr:,                 .    .........,.,.,:::i::iJv7X@X:.::i:iiiiii;iiiiiiiiiiii:iii:iii:iii:i:i:iiLi                            ......,,:,:::::::::.......::rrri:    :UG@MGXS25Yvi:,::::::::::::r7L7rii:::;;riiii:i:::i:i:i:ii;i;iiirr;::..     ....................... . . .       :vkE80NkSSSSXSkFk5511U2U2U2U1uUuUjuJujuJjJjYJuUuJ77vLLjJujujujuJujUu1U2U1U1U1uUuujUuuJuuUuuu2uUu2u2U1U1U121211125251F1F1F</span></span><br><span class="line"><span class="comment">//,.:i7vL7vvu2XP0XXk0EOOM8OZOZ8E8GOOBBq:78Evr::iiiri;iri:rF7:ii::7OBM1r,..r2NqGPvvGPqEMr  7i,..,:ii:::..,.,:rrr:.               .    .........,.,,::::i:::7JvvGB1:,:iiiiiiii;iiiiiiiiiiii:iiiii:iiiiiiiii:i:Y2i                         ....,,,,:,:::::::,,...,.,,ii7ri.    :LGMBGNSF2J7i::,::::::::::::::ir7rri::::iir;;ii:::i:::ii;ii:::iirii,.     ................... ..... . .        :LS8EZqPSkSkFXFXFS1FU1U122u1U2u2uujuujJjJuJJLjLJYuJjYLLjjuuUuUuUuujUuUu2U11521U2uUuUuujuuuuUuUu2u2u2u2U2U125U52525252S1F1F1</span></span><br><span class="line"><span class="comment">//.,ivvuuX088GN008ZOGOZGGGZ8E8Z8GOM@Ei.FB5ri:iiri;iiii:i7uur:iii:::YG@BEv:..iUPOu7SEkPEMr  7:. ..,:i::.  .,,.:rvri,              ... . ......,.,,::::::iii:;LU7J8BY:,::iiiiiirii:i:iiiii:i:iiiiiii:iiiii:iii:rF5.                    ..,...,.:,:,:::::::.......::rrr:.    .vPBM8qXF5L7::,::::::::::::::::::i;77rii:::ii7rrii:i:iirii:,.,,i;r::.      ..... ............... . ... .       :LNGGE0XPSkSXFkFkFS2121U5U1U2uUu2uujuuujjYjYjLJLJLJLjJuJuuuuUu2u2uuuuuUu2u1U12121U2u2uUjUuuuUuUu2U2U2u2U121U1U12511252F5F1515</span></span><br><span class="line"><span class="comment">//rLPZMMMO8EZEGEGEGEGEGEZEGEGZ8GMB@v :BML:::iiiiiiiii:rYuLur:iiii::,:LOB@81i,,r2X7u0PkqEMi  7i.   .,:..     ,...ir7i:         . ... ... ....,,:,::::i:i:iii::rUJv2@Ov:::iiiiiiirriiiiiiiiiiiiiiii:iiiii:iiiii:ij0v                  ....,,,,,:::::::::,.....,,i;7;:.    .rPMBG0kkUYri,:::::::::::::::::::::::ir77;i:ii777iiiiiiii:,...:i77r:,.....,,:::.... . . . ....... ... . .      :JXOZZPqkXSXSXSkFS55252525U5U1uUuuJuuujuJuJjJJYJLYLYLJLJJujUuUU2u2UUuuuuuUu2U2212521u2u2uuuUuUuUu2u2U1U2U1U125U12515252F155F1F1</span></span><br><span class="line"><span class="comment">//B@@@BMOOOM8MOMOMMMO8GOOMOOZ8G@Bq, 7@0;:::iiiiiiiii:7uuJuuL:iiiiiii:,iFM@B@kr:rLLvPkPkPZMr  ri.   ...        ,.  .r;:,      . ............::::::::::iiiiiii::iJ2Y7EBE7i:::iii:irriiiiiiiiiiii:iii:iiiiiii:iii:ivXS:              .....,,:,:::::::::,......::rrr:.    .7kMMONXF5Y7::,:,::i:::::::::::::::::::::r77r;irrriiir;ri:.. ,ir7YLL7riii;ir;rrrrrii::,,..   . ... . . .       iYNG8N0XPSXSXkkFkF51FU1U5U222u1uUuuuujujujuYjYjYYLYLLLYLLYJYuuUu1u2u2uUjujuj2uUu12F21U1U1uUuuu2uUuuu2u2U2u2U1U1U5U52F15551F155S1S</span></span><br><span class="line"><span class="comment">//SSNqEGOOMMBMBMOqS2GB@BBMM88O@M7  1@2::iiiiiiiiiii:ruuL7rrj7:iiiii:i::,7ZM8@Bk7777uqX0SPEMr  :,               .:.  ru7:,   ......,,:,:,::::::::i:iiiiiiiiiiii::vUu7jM@57i::iiiiii7ri:iiiiiiiiiiiii:iiiiiiiiiii:i7UqJ           ....,.,,,,:::::::,,.....,,ii7;:.    .rXM@O0Xk2Jri::,::::::i:i:::::::::::::::::::ir7rriiirr77r:,..:ir7vYYY77;riii::::::iirr777rr::,.         .     .:uPOGEPPXPkXSXSPSS5F25252121U1U2u2uUuujUjujuYJYjLYLLLYvLvLLYYjjUu2U1U2u2uuuuuuuUU2U11F15u2U2u2uUuUuUuUUUU2u1u1U5U525251F252F2S1F5S5</span></span><br><span class="line"><span class="comment">//77ri:::::::,. .iLFZOZZ0ZZ8B@S, .0@L::iiiiiiiiiii::Y2ri:::iur:i:iiiii::.:2MGEBBFvr7kkqNkP0B7                    .:, :X0v:.   ,:,::::::::i:i:iiiiiiiiiiiiiiiiiii:iu1YLk@81Li:::iiiir7r:iiiiiii:iiiii:iiiii:iiiii::7L1q,       .....,,,,:,::::i::.,.....::rrr:.     rFMMM0XF5Y7::,:::::::::i;ii:i:::::::::i::::::::i7rrir7L77:,.:;7777v7rii::::,,.. . ..,,::;rvvvvvri::..        .iuZ8OEEXqXPkPkXSk5S1F152525U2U2u2U2uUuUuuuujuYJYJLLvLvLvLvYLYLjJuuUU2U1U2uUjuuujUuUU2U1252121u1u2uUuUu2u2U222U122U12F21252F1F5S151F5F</span></span><br><span class="line"><span class="comment">//Jr7iiii::,,:LN@B@OOEGZGGOB@7..,Z@L::iiiiiiiiiiii:i2i::i:i:rLi:iiii:::i:,,rGMqqBM5rLPS0NFXNBr    .     .          .:. r88J:.  ,i:::::::i:iiiiiiiiiiiiiiiiiiiiiii:ivFuLYMMP1ui::iii:i7L;i:iiiii:iiiiiiiiiiiiiiiii:i7LYN7    ....,.,.:,:::::::::......,ir7ri.     iF8BO0XX1uri::,:::::::::::iiii:iii:i:::::iiiiiii::i77Lvv7r:::r7777rrii:i::::::,... ....::::i;77vvYLYvvri:,.  .i20MOG0NPqXPSPkPFkFF1F151525U2U2u2u2u2uUjuYuJjYYLLvLvLvLvLvLvLLJYuJuu2U2U1UUuuuuuujuuUU2251FU5U1U2u2u2uUuUu2u2U2U221U11F251F2F151F1FFS5</span></span><br><span class="line"><span class="comment">//7iiri;i::7FMBB88Z8GGG8GM@O:..,Z@Y::iii:iiiii:i:i:v7::iii:i:rri:i:i:i,,:i:.,2BOF0M8vukP0qkkPMv   :,     ... . . .   ,:..LOMv:.  iii:i:i:i:iiiiiiiiiiiiiiiiii;iiii::rF2jvSB8FPJi::iiii;Yvi:iiiiiiiiiiiiiii:iiiiiii::7LvSS,  ...,.,,:::::::::,,.....::r7r:.     i2MMMNP55J7i:,:,::::::::::::::i::,::::iiiiiiiirr7r7rr7Lv7;;ii;777r7r;ii:i:i:i::::::,,.:,::iirr7r7777LLYLJYJLvrr72FqSkFS5SFkFkSXSS552F152521u1U2uUu2uujuJuJjYJLYLLvLvLvvvLvvvLLYLJJjjuu2u1U1u2uujUjUjuu2U2211F25U1u2uUu2U2UUU1U1U121U52525251F151F1F1S5S</span></span><br><span class="line"><span class="comment">//rir;i::7NZZ8OZGZGZ8Z88B@S.,,:Z@L::iii:iiiiiii:i:i7i:i:i:i:i:i:i:::i:i:..i:,.iE@PkEOFqSPkqPPEBS. .7:   ............. .:, ,JB0r.  :iiii:i:iiiiiiiiiiiiii;iiiiiii;iii:i2FULuOMSXPui::iii:vJ7:iiiii:iii:iiiiiii:iiiii:ivv7uZr ..,.:,::::::i:,......,:rvri.     :1O@OZkk2J7i:,,::::::::::::::::::iii:....::ii;irr77v77rrrri;ir7v77rri;iiiiii:i:iii:i:::::iirrv7LvLLLLLLjYujUU215U2uuLJLuu11kSXkXFk5F5F15152121U2UUjuuujuJJYJLJLLvLvLvL7vvvvvvLvLvYLJYuuUu2u2u1uUuUuUuuuuU221252525U2U2U2u2u2U1U2U2U1211515151F1F155S5F1S5</span></span><br><span class="line"><span class="comment">//;i;;:i5O5FG8EGZ8GGZ8G@BL.:,:q@v,:i:iiiii:iir:i:ii;:::i:i:i:::::::::::i:. ,:,..LBGN0O8EPu7PEX1BX:  7;  ...,,,.,.,.,.,.,::,.:PBq:. .i;:iiiiiiiiiiii;iiiii;iii;iii;i;i::JS1LLSBNFqNYi:iii:rJYi::iiiiiii:iii:iiiii:i:i:ivL7LPL ..:,:::::::,......,:r7vi,     i2OBM0XF5J7::.,,::::::::::::::::::::i;7ri:,...::iirrrr7rriiirr77v77r7iri;i;i;iiiiiiiii;ir7vvLvLLJLjJUuUu2u1U5155SSPXqSXFkFPXPXqSXFS5F1F1525U2U2uUuUjuJuYjYJLJLLLLvLvLvvvL7LvLvLvLLLLJLujujUu2U1uUuUuujuuuu2u1U5212125U1u2u2u1U2U1U2U12521252F151F1S5F1F5k5F</span></span><br><span class="line"><span class="comment">//rii:7EPJXOOZ8EGGGZ88@Br.:::2BL,:iii:iii:iir:i:i:i:::i:::i:i:i::::::::,:i:  ... .08NNEPqN;;qui2Uv7  iv...,,:::,:,:,::::::::,,7G@u: .:;iiiiiiiii;iiiii;i;i;iii;iri;iiii:vF5uYuOGSSZqY::i;ii727::iiiii:i:iii:iiiiiiiii:ivv7vku..,:::::::.......:iv7r,     iuEM8011Uj7i:,,:,::::::::::::::::::::::i;vLL7rii:::i:i:iiiiir77v7v777777rrir;ririii;iririririr;rr7777LvYYjYuJuJUuuu12Sk00GEZPqXXFk5S1F1F1F152522U1uUuujuYuJjYYLLvLvvvv7v7vvLvLvvvLvLLYLYJjjuu2u2uUu2u2uujUjUuUU2U1U12521U1U2U2u2u2U2U225U125151F151F1S5F5k5F5</span></span><br><span class="line"><span class="comment">//i::uZ12ZOOZGZGZGG88@@i.:::LGY,:i:i:iii:i:r:::i:i:i:i:i:::::::i:i::::...,ii       LGM8qJJJ:iui:ri7j. :J:..::::::::::::i:i:i::,:uB87..:iiiiiiiiiiiiii;i;iiiii;i;iii;iiii:r1FujYNOP5qZqv::ii:iuji:iii:i:iiiiiiiii:iii:::rvv7755..::::,,.....,:r77r:.   .75GZ05UJuL7i:,,,::::::::::::::::::::i:i:i:iivLJv7;i:i:iiiiii;;77vvv7v7v7v77rrrr;rrr;r;ririi,,....,:irr77vvLvLvLvLvLvLLLvJJ5kNqNkXFF5F5S5F155F21U1U1uuuuJuJuJJLLvLvv7v7v7v7vvvvLvLvLvLvYLYLJYjJuuUUUU2uUuuuuuuuUu2u125251121U2u1u2u121U125U525252F2F1F5F5SFSFk5S</span></span><br><span class="line"><span class="comment">//:,FE2POG8ZGZ8ZGGOO@M:.:::LE1::i:i:i:i:i:ri::::i:i:i:i:::::::::::i.:i.    :i       iPXJL7r;:ii:i:i72: .Lr,,::::i:i:::i:i:i:i::::rEBF:,:iiiiii;iiiiiiiii;i;iri;iiiiiii;ii:i2kuuLFO01kqGX7:iii:v1v:::iiiiiiiii:i:i:iii:::7vv77UX:,::.......:i77r:.   ,7POMN5JjYJ7i:,,:,::::::::::::::::::iiii;ii:i:::irrr;ii:iiii;irr7vLvL7Lvv7v7v77r7r7r7r7rrr7rrii::.,.::ii7r7vvvLvLvLLLvLvLvvvvvJuSSPFF1F151F551F2521u2uUuujjYJLYLLvLvv7v7v7v7v7vvvvLvLvLLLLYLYYjJujuuUuUu2uUuujUjUuuu22115151521u2U1u1U12125152515152F155S5F5k5kFS5</span></span><br><span class="line"><span class="comment">//,2N5EOEGEZZ8E8Z88@M:.:::v0X::iii:i:i:i:ir::i:i:i:::::i:i:i:::::,,i :i     :i     . :vr:iii:i:iii::iU7  7v::::::i:i:iii:iii:iii::i2MOr,:iiiiiiii;iiiri;iri;iri;i;iriii;ii:ijX2uLuG8FSSEZFr:ii:rUui::iii:iii:i:i:i:;i::::vv777uq,  ....,:ir7;:.   .vSO801uYJL7i:.,,::::::::::::::::::i:ii::,.,.:,:,,,::::iiiiii;iri77LvLvLvvvLvLvv77r7r7r7777777777rii:i:iirrv7LvLLLLLvJLLLLLLLLvL7LvuuFFS1F1F15152521U2uujujjLYLLvLvL7v7v7v7v7vvv7LvvvLvLvLLLLYLYYYjuuuu2u2uUuuuUuujUu2U125112525212121U1U1U1U12125152F1FFS5F5SFSFS5S</span></span><br><span class="line"><span class="comment">//qFkG8EZEZE8ZGZ8O@Bi.:::7XNr:i:iii:i:i:iri:::i:i:i:i:::i:::::::,..,: L:     :r:  ..,.:L7:iiiiiiiii:::uj, rYi:::i:i:i:i:i:iiiii:i:::YqBU::iiii;i;i;iriiiri;iri;i;i;iiiiiiii::LkUUYjNO5kSX0Zu;:iiiYS7::i:iiiii:iii:iirii::iL7v77UP.  ..:i77r:.   .r50Gk1YjLY7i:,.,,::::::::::::::i:i:i::.. ..:::::,::::::ii;iririrr7r77YLYvYLLLYLL7v777777777v7vvvvv7rii:iirr77LvLLYLYLYLJJuYjJjLJLYvvvJu1SPkk5F2F2511UUuUjuJYLYvvvLvv7v7vvv7v7v7vvvvvvLvLvLvLvLLYLYYJJujujUuUuUuUuuuujUu2u1U5252525211121U225212521252F1F1S5FFSFS5S5kF</span></span><br><span class="line"><span class="comment">//FX88EZEZEGZGZ8GBB;.:::7Sqv,i:i:i:i:i::rr:i:i:i:i:ii:::::::::::..  ,. 5:     :7i  .,:,:Yv:iiiii:iii:i:LUi.7Ur:i:iii:iiiiiiiiiiiiii::L1M0i:iiii;i;iriririri;ii:i:i:iir;7r7rriiLX22YLkOSSFXXZqJiiii7Sji:::iiiii:iiiii:r::::rL7v77UN. ,ir7i:.   .r5Z0XUjYjL7i:,,.,,:,:,:::,::::::ii:,,    .,::::::::,:,::iiririr;rr7r77vvJLYLYLJLJLL7v7v7v7v7v7L7vvL77iiiiirr77vvLLYvYLYLJJuJujUjUuuj2U1u55kXqkk5S1F21UUjuJuJJLL7vvv7v777v777v7v7v7v7LvLvLvLvLLLvYLYLjYJYujUjUuUjuuujuuujUu2u2251F15152525U5U125251F251F155F1FFkFSFSFSFk</span></span><br><span class="line"><span class="comment">//0EZ0Z0GEGEGZGGMBv.:::;5X1::iiii:i:i:::v:::i:i:::::i::::::::::....  . :E:     :Lv  ,::::YL:iiiiiiiii:::757,iUL:::iiiiiiiiiiiiiiiiii::vjZML::i;i;i;i;iri;ii:::irLLJLLv7r7;ri;::7k22jL5MXFFkS0EP7iiirF17:::i:i:i:i:i:ii7:i::7Y7v77Uqiirr:.   ,rSZZX2JjJJ7i:,,::::::::::::::::::,.      ,:i:i::::.. ..,,:i;irrrr7r7r77vvLLJLjYJYJYJLJLYLYLLvLvLvLvL77iii;irr7rv7LLYLYLYLJLYYjLuYujuuuu2U52F5S5F5F1122uujuJJLLvLvv7v7v7v7v7v7v7v7vvv7LvLvLvLLLvYvYLJLJYJLuYujujUjUjuuuuuuUuUU1U1U51F1F15252521252F25151F2F5S5SFS5S5S5S5SF</span></span><br><span class="line"><span class="comment">//ZE0EEGEGEGZ8GMBU.:::i1SEi::iiiii:i:i:7r::i:i:i:i:::i::::::::......    J8,     :uu. :::::LY:iiiiiii:i:::iUJ,:j5i::iiiiiiiiiiiiii;iiii:vYXMF::i;i7rii;ii:::rYkPXuLrrii7i:iiiii::7S2ujLuMqSFXSkqZ1r:ir25ui::i:i:i:iii::r7:i:ivL7vvvuGi,.   .75ZEPuuYjLvi:.,,::i;7r7rri;ii:i::,,   .,iirrrrrii::......,::i;rr7r7r7777v7LvJLJLJLLLLLYLYLYvLLLvLvL7v77iiiiirr77v7vvLLYLJYJYjLJLYLYLYLJYJJuu2U1U52121U2uUjjLJvLvL7v7v777v77777v77vv7v7vvLvLvLvLLYvLLLLJLJLJYujuJujUuujUjUuuu2u2U125252F252525U125152F1F155F1F5S5F5SFkFS5S5S</span></span><br><span class="line"><span class="comment">//EqZ0GEGE8EGZOBq.::::U2G7::iii:i:iii::Y;:i:i:i:i::::ii::::::........ . .qE.  . .i2Y. ::i::LJ:iiiii:i:i::::YF:,7k7::iiiiii;iiiiiii;i;ii:vY2Mq::iri7;i::i7U00XY7ii:iiiivviiiiiii::7SUUJYuMqS5kFXXEqjiiru21r::i:iiiii:i::77:::rLv7vv7uk   :7SNEk1LJYJ7i,,,,,:,::ii77YLYvv77rr;rr7rvvLvYvL7r;iii::,,,::iirrrr777r77v7v7LvLLLvLvLvvvLvLvLvLvLvLvv77rririrrrr7777vvYLJLJYjYjYjYJLJLYLYLYLJLju2u2U511UUuujuLLvLvv7v777v7v777v7v7v7v7v7LvvvLvLvLLLLLLYLYLYLJYjYuYuJuuuuujUjUuUu2U1U5252F2F1525151FU1152F1F252S1S5SFS5S5SFkFk5</span></span><br><span class="line"><span class="comment">//0EEZ0ZEZE8ZGBM,::::JU0k:,iii:iiiii::ru:::i:i:::::::ii:::,:.......... : iZk  ...:i1L: ::i::Lj:ii;i;ii:i:::,rX7,:S1i:ii;iii;i;iii;i;i;ii:vjJO8i:ii:;;7UE0kvr:::ii;i;iiiJriiii;ii::7SuujYJMq55kFkSq0X7i;JUFL::::iii:i:i::v7:::7LLvLvv5S:7FZNXuYLJL7::.,.:,:::,:,::ii7vJJuJujujuYjJuYLv7iiiiiiii:::::iirr7r7777v7v7vvLvLvLLYLJLJLYLYLYLLLYvLLv77rri;i7r7777vvLLYLJYJYjJJYuYjYuYjYJLJYYLYLJJuu2u2uUuuYJLLvLvv777v77777v7v7v7v7v7v7v7vvLvLLLvYvYvYLYLJYjLJYJJjJuJjJuuUjuuUuUu2u225252F1F251515151F25251F5S1F5S5SFSFS5kFkFk</span></span><br><span class="line"><span class="comment">//EqE0GEGZ8ZZM@:.:::715Oi.:iiiiiiii:::2L::i:i:i:i:i:i:ii::,...... ......:.JEF ..,.:7ULi.:ii::jJ::iii;ii:::::,:S2:,JqL:iiiiiiiiriri;iririi:vJLZOi,:rY8GSv;:::ii;i;iii;iiruiii;i;ii::vSjuJLYMNSFSFkFXqZurrJu1Ur,:ii:i:i:i:iJr:::vLLvLvvFMXPFuLLLLri,..,,:,:::::,:,:,::::;i77v777vvYvr::::iii;i;iiiiii;77v77777v7vvv7LvLvLLjJuuUjUJuJjLJLYLYvL77r7rrr77LvLvLLJLjLYYjYjJuYuJuYjYuYuYJYJYYLYLYYuJuuuYuLLvL7v77777777777v7v7v7v7LvLvLvLvLvLvLvLvLvYLLLYLJYjLuYuJjYuJuuuuujuuUu2uUU1U5252F151F1F1515151F155F5S1S5SFk5SFkFSSSF</span></span><br><span class="line"><span class="comment">//000EEGZGEG8@L.::,r2j81.::i:::i:i:::iSr:i:i:i:i:i:i:::;::,............:::iUO1.:::::JJLr.::i::UY::ii::r;::::::,LXv,ikPi:iiiririii;i;i;i;ii:LLvXOLuE0Yvi::ii;i;iriiiri;iivj:iiiiiii::Y5JjJLjMqSFkFSSXkEkLrYjU1L:::i:i:i:i:7Ji:::JLLvYv7qMvvvYL7:,...,,:,:,:,:::::::::::,::::::irr:..::iiii;ir;rrrrrrv77r77v7v7vvLvLLYLLLYLJYuJuuuuujuJJLLLLLYvLvv7vvLLLLJLJYJLjYJJjYjYuYjJjJuJjYjJuLjLJLLLJLjYYYYLYvv7v77777777777v777v7v7vvv7LvLvLvLvLvLLYLYLJLYLYLJYJJjJuYuYujujuuuuUuUu2u2u1U52F2F2F1F252F2F1F2F1S1F1SFS5SFkFkFkFkFk</span></span><br><span class="line"><span class="comment">//ENZ0ZEGZGE@E.:i::uuFM:::i::,:::::,,r0:::i:i:iii::::::i;,:.........::::i::L1ML.::::i17Jr.:ii:iFv,iii .i7ii::::.i12::LEji:ii;iriririririii::7jFB@Fr:::vriiiiii;iri;i;ii:iuv:iiiiiii:iuFuuLvuMXFFkFkFkSqqU7LJu2Ui::i:i:i:::uY:::iuLYLLv7GXrvri....,,,:,::::::::::::::::::::::ri: .:iirir;r;rr7r77777iii77L7vvLvLvLLYLYLYLYLYLJYuYjYjYjYYLYLYLYLJLYLJLYLJLJLjYJJuYuJuJujuYuJuJuYuYuJuYJLJLYLLLYvL7Lvv777777777777777v777v7v7v7Lvv7LvLvLvLvLvYLLLYLYLJLJYjYJYjJujuuuuuuuuUu2U1U2U5252F5F1S155F5F1F1F1S1S1SFkFS5SFSFSFXSXF</span></span><br><span class="line"><span class="comment">//Z00ZEE0ZEBB:.i::L2Y@L,:ii:::,,,,.,.jF::iii:i::::::,,,ir:.,.....,,::iii:i:;jFMi,iii:7FiU7.:ii:rSr:ii,  :77i::::,,rFv:iFXviii;i;iri;irii:::7UMG1P8::iiiYriiii;iriii;iiii:rkr:iiiiiii:;5Fjjv75BSFFkFkSPkPqkLLYuU1r::i:i:i::r17:::7uLLLL7JBL.....,,,,:,:,:::::::::::::::::::i;:..ir7r7r7r7r7r7rv7vv7:ii77vvLvLLYLLLYLYLYLJLJLYYjYJLJLJLYvLvL7v7vvLLYLJLJYJYjYuYuYuJuJuYuJuJuJujuJuJuJJYJLYLYvYvL7v7777rv77777777777v7v7v7v7v7vvLvLvLvLLLLLLLLLLYLYLjYjJJJjJjJujujUuuuuu2u2UUu2U5U52F1F5F1F5S1F1F5F1F1S1SFk5S5kFkFkFSFkSk</span></span><br><span class="line"><span class="comment">//8qZ0EEGEO@j.i::rFL0O::iii:i::,:..,,5j:::i::::,:,,.,.::ri,:..,,::::iiiii:::LLZN,:iii:2Y:57,iii:7ki:ii.   :r7i::::,:Lur:7S17riiiriririi:;LPEkvYv7NBi:iiij;iiiiii;iiiiiiii:uF::iiiiiii:72FjJi7qB15kOM@B@@@MZULLuuFv::i:i:i:iY2r:::LuLLLL75M. ..,,,,,,:,:,::::::::::::::::iii::i77v77r7r7r77v7Lv7ii;r;77vvLvLLYvLLJLYLJLJYYYJLjLJLjLJLJvLvv7777777LvYLjYjJJYJYjJuJuJuJujujuJuuuJuJuJjYYLYLYLLvv7v7777777777777v777v777v7v7v7v7vvLvLvLLLvYLYLYLLLJLJLJYuJJYjJuJuuujUuuu2uUuUu2U2U1252S1S1S1F5F5S1F1F1S1SFS5SFSFk5kFkSkSkF</span></span><br><span class="line"><span class="comment">//q00EE80ZBM,:i:i5uuBv,iiiiiii::,,.:,Ev:.i:,,:,,.,.,..,:i7,:,,,::i:iii:iii::iuLBY,:ii:i0i:k7:iii:YF::;:     r7::::::.iYji:vu77riiiii::iuN85v::ijL7ZM::iirUiiiii;iiiiiiiii:iPL::iiiii:::J2FuL,7OOZBFL: .iJGB@MULju5Yi:::i:::vuUi::iuuLYLY7ZE  ,.,,:,::::::::::::::::::::::i:r7v7v7vr7777v7LLLvviiiirL777vvvvYvYLYLJLJYJLjLjJJLJYJLJYYLL7v7v777v7vvLLYYYYJYuJujuJujujujuuUJuJujuJuYjYYLYvLvvvv7v777777r777r77v7v7777777v7v7vvvvLvLvLLLvLvYLYLJLJLYLjYjYjYjJuJuJuJuuuuUuUu2UUu2U121251F1F1S5S5F5F155S5F5SFkFSFSFk5kFkSXFk</span></span><br><span class="line"><span class="comment">//EqEN8EZ8@r:ii:u5LZB,riiiiirii::,:,:Z7:.i,.:,:,:,,.,.:,:ri,:,::i:i:iii:iii::vjU@::iii:vN,;q7:iii:1j::r.     i7::::::,,iuviiL7777i::ruEE2r::i:iruvvOG::i:72:iiiiiiiiiiiii::7qi::iiiii::i225ur,jBZ. .       :0BOjYY2u;,::i::iuuj::,rujLJLYvB2 .,,,,:,::::::::::::::::::::ii77v7v7v7v7LvYLYLJLL7777rrrJ7rrvvYLYLYLJLJYJYJYJYuLJYjLJLYvvvv7v7vvv7LvLLYYuJjJuJuJujujuuujuuuJujuJuJjYjLYLLLL7L7v7v77777777r7777v777v7v7v7v7v7vvLvLvLvLvLLLvLLYLYLYLYLJLJJjJjJujuJuuuuUuUu2u2u2U2u5u1U5251F5F5F1S5S5F5S1SFSFSFSFkFkFkSkSkSkS</span></span><br><span class="line"><span class="comment">//000GEZE@0::i:7Fuu@7iviiriiiiii:::::Zi:.i,:::::::::,,,::rr::i:iiiiiiiiiiiii:;jLGE,:iii:XY.7qr:;iiikr:i:      ,rii:::::,,rJ7i77;:rvUNqJr::iiiii:7u7vBk,:i:Jj:iiiiiiiiiiiii:i5U:i:iiiii::7U2Fj::E0..::         U@qJY22r,::i::vUUv:::vuYLYLLY@7 .,,::::::::::::::::::::::;7LvLvLvvvLLjjUJuLJLJvLvv77ii;JY77vvYLJLJLYLjYjJJJjYJYJLJLLvL7vvv7v7vvLvYLJYjYuYuYujuJuJuuUjUjUjujuuuJuJJLYLLvvvv77777777r7r7777v7v7v777v7v7vvv7LvLvLvLvLvLvLvYLYLYLJLJYjYjYuJjJuJuJuuUjUuUuUuUu2U1u1U22125151F5S5F1S5S5S5F1S5SFS5kFkFkSkSkSkSX</span></span><br><span class="line"><span class="comment">//Eq8GGNOB7:iii21L@@:Lv:iiii;i;iiii,v0i::ii:iiiii:i::::::i7iiiiiiiiiiiiiiiiii:LYj@v:iii:70i,LSi:;ii7k::i.       ,ii::::::.:7Yi:ivG@B2vi:i:iiiiiiivY7L@L,i:i5v:i:iiiiiiiii:i:vqr:iiiiiii:iJuS57.iMj.:i           PMSYu2v:::i:rujui:::YjYLYLvU@: .:::::::::::::::::::::i7vJLJvLLYLJu2U2uuYJLLLYLYv777r772uv7LLYLYLYLJJJYjYuJJYYLLvLvLvLvLvLvLvYLJYjJjYuYuJuJuJujUjujujuuUjujuYJYYLLLLvv7vr777r777r7r777777777777v7v7v7L7vvvvLvLvYLLvLLLLYLYLYYJLjLuYjJjYjjujujujujUuUuUU2U2u1U1U12F15151S5S5S5S1S5S5SFkFSFkFSFkSXFkSXSXS</span></span><br><span class="line"><span class="comment">//qZZG0ZBG,iiiLSYSBu,Srii;i;iiiri;i:uEii:iiiiiiiiiiiiiii:i7r:iiiiiiiiiiiiiiiii;uvMB::iii:Su::2Uii;iiju,i:         .iii::::...iY2kPq7.:rLL7ii:i:i:iLLr5Bi,i:rPi:i:iiiiiii:i:::kF::i:i:iii:7uUX2:.YM:,:.           :OGJu2L:::::uJuL::::uuYLYLLk@. .::::::::::::::::::::7LuYjLYYjjUUF12JJLYLYLYLJLLvLvLvvLuu77LvYLYLJYjJJJjLJYJLYLLvLLYLJLYLJLjLuJuJuJuJujujujujUuuuuuujujujuJjYYLLvL7v77r777r777r777r7777v7v7v7v7v7v7vvvvLvLvLvLvLvLLYLYLYLYLJLJYjLjYuJjjuJuJujUuUuUu2u2u2u2U1U2U5251F1F1S5SFS5F5F5S5S5kFSFkSkSSFkSXkkSX</span></span><br><span class="line"><span class="comment">//ZEGZZG@r:iiiSujB@:75ririr;riri;ii:1qi:;iriii;iii;i;i;ii:v7iiiiiiiiii;iii;iiiiLjY@Y:i;iirZi::kvii;ir1r:i           ,ii::,. :O@@2i,ivr:.:rYLvri:::rLv;8O::i,LX::iiiii:::iii::78r,:r;i:i:::uYPXv.:0S.:. .:::.,,,.   SMjuUL::::7UY2r:::iuuJLYLv0@, ,::::::::::::::::::rLujjYjJ2U55S2uYjLjLYLYLYvYLYLJLJvu7jv77LLYLJLJYJYuYuYJLYLYvLLYLJLJYJYuYjJuJujuJuuuuuuujujuuuuUJUjuJjYYLLLL7v7777r77777r7r7777777r7rv7v777v7v7v7L7vvLvLvLLLvLvYLYLYLYLYYJYJYJYuYujuJujuuuuUuuu2u2U2u2U125U1251F1F1F5FFk5S5S5S5SFkFS5SSkSkFkFkSkkXS</span></span><br><span class="line"><span class="comment">//ZZZGN@8::i:u1JX@Z.U5iiiririr;ri;i:5Niii;i;iii;iiiii;i;iiiYiii;iii;i;i;i;i;i;i7JLMM:iiri:5U,:iXiiiriLU::,            .:,.:O@@J..7v7:rvv:,.:ivLJv7ivvrrBu,:::qu::i:::ii;ii::.:Fqirii:i:i::vuJO2:.7Mi ;U7::.....,    7Muj1L:::iujju::::iUjYYYLvO@: .::::::::::::::::i7juUJuu5FkSk2UYYLjLYLYLYLYLYLYLYLLjLr17LvLvLLJLJJjYuJjJJYYLLLJLjJuJuJuJuJuJuJuJuJujujUuujUuuuUuujuJJLYLLvL7v777777r777r7r777777v7v777v7v7v7v7v7vvL7LvLvLvLvLLLLYvLLYLJLjYjYjLjJuJujujuuUuUuuuUUUU1u1U2U12125U51F5F1FFSFS5k5SFSFSFSFkFkFkSkFXFkSXSk</span></span><br><span class="line"><span class="comment">//O0GZ8BY,;i7FUj@BL:kuiirrr;riririi:XPr:;iri;iri;iiiri;iiiiY7i;iiiiiiiriii;iriiiJLkMu:;i;:70i::vFiii;iUr::              .Z@B1. .,.:7Jrii7v7:..,:r7LuSFu5Biii::M;.,:iri::,,::i;5MY,::i:iii:;uLqGr,,X2;Or.,:iii....    iBUu1v,::ujj27::::i1JJLJvvM@7..:::::::::::::::iLu1U2UFSqSSuuLJYYYYLYLYvJLJLJLjYYvUJi1YLLLYLJLJLjYjJuJuJuYuYuJuJuuujujUjujUuuuuuuuUuUuUuUuUuuuujuJJLYvLvv7v77r777r7r77777777777777v7v7v7v7v7v7v7LvLvLvLvLvLvYvYLJLJLYLjLJYJYjJuJuJujujUuUuUuUUUu2u2U1U521U52125255S5k5S5SFS5kFk5SFkFkFkFkFkSkkkkXk</span></span><br><span class="line"><span class="comment">//ZEGGMM:iiijSLZB@:rPJirrr;ririr;riiS0riiririri;iririririi:Lvii;iriririririri;ii7J20kr:;;;:kL:::UL:rii71::.            UB@L..:::::,,:7vvi:iv7r,......:ruPJ,,..r8:i7r:::irvYUuuLEF::i:i:i:::jLUMU:,iBOi.:,. .:ii,..    i@uuUr,:72L1ui:i::75JYLJvLOM5: ::::::::::i:::rY1152SSNkkujLYYJLJLYLJLYYJLJYJYJLJ2Y:FYLLYLYLjLjJuJuJUuuuujuuuj2uuuujuuuuujuuUuUuUuuuuuUuUuUjuJuYYLLLLvv7777777777777777r77v7vr77v7v7v7v7v7v7L7LvLvLvLvLvLvLLYLYLYLJLJYJYjYuJuJuJuuujujuuUu2U1u2u2U221U121U52F152S5F5SFkFkFSFSFkFSSkFXFXSkFXSXSXSX</span></span><br><span class="line"><span class="comment">//80B8@1:iirSj2B@O:LqLirrrrrr;r;rii:XP7iriririririririii;iirUiiiriri;ir;rir;ririrY2Pu2:iriivN:::i1riiiiuv:,          u@BF    .::::::,.:ivvr:irv7i. .::, .L::;rrOBYJLuu51FUUuji,UBr::i:i:i::7ULOZi.,8k :,      ,;:.     7@Yuui,iUjJF7::i::v1JjLYvuOE07..:::::::::::i7u1SFPX0XFuJLYLJYjLJLJLJYJLJLJLjJjYSiiFjLJLuYuJjYuJuuuuuuuuUuUuUuUuUuuu2uUuUuUuUu2uuuUu2uUuuJuJJLJvLvL7v7v7v7777777v77777777777v77777v7v7v7v7L7vvLvLvLvLvLLLvLLYLYLJLJYJYjYuYujuJuuuuuuUuUu2u2U1u1U2U1252521251F1F1S1k5SFS5S5kFkFkFSFXSkSXkXkkSXkkk</span></span><br><span class="line"><span class="comment">//ZZMBBi:;ij2Y0@BS:2kLirrrrrrrrr;ri:SE7iiririr;ririririririr1ri;irir;ririr;r;ri;iYJZrXriiriiP7:::YYiiiiru::        vB@P         i7r:::,,.:rL7i:::rvk2uuXO@S1Fku5BEL221UUjUuL:,.7B5,::i:ii::rjvP@7,.LM:.        .i,      S@LUL:,juY21:::i::L1YJLJ7UM08k:.,:::::::::iL2kXE0EPSjjLJLuYJLYLJLJLJYJYjYuJuJ12,vSYuJuJujuJUJuuUjUuUuuuuu2uUuUuuuUu2uUj2uUu2u2u2uUU2uuJuJYLLvLvv7v7v7v7v7v7v7v7v7777777v777v7v7v7v7v7LvLvLvLvLvLvLvLLYLYLYLYLYLJLJJJYjJuYujuuUjujUu2uUu2u2u2U1U2U12525251F1F5S5FFSFSFSSSFkFkSkSkFXSXSkSkSkSXSP</span></span><br><span class="line"><span class="comment">//GNBB0:iir1Uj@O@v:5Xvir7rrrrrrrrrr:kqLi;;rrr;riririr;r;ri;i27iirir;rir;r;r;ririi7Y0vL5:;ir:UU::::1rii;:u7:      :@BO.        ,:, ,:i::::,..,:::ivUU0B@B@BML22ULMB5vUuUjUur,,:::GMi,::i:i:::uLSMF.,:@u ..       .,.      BOLUr,r1Yj5L::ii::YSJJYJ7SELGOL,.::::::::ruPNG0kU2jjYjJ2uuYJLYLYYJJuJjJjjjj2Si,XuujujujujuuUuUuUuUuUuUuUuUuUuUuUuUuUuUu2u2u2u2UUuujuJuJJLLvLvvvv7vvv7v7LvLvLvL7v7777777v7v777v7v7vvvvvvLvLvLvLvLvLLLLYLYLJLYLjLJYJYuYuJujujUuUuUuUuUuUu2U1u2U2u1U511251F251F1S1SFSFkSk5kFSSSFXSXFkkXSXSXkXkPk</span></span><br><span class="line"><span class="comment">//GZB@L:iiLSLZBMBrikkLirr7r7rrrr;r;i1EYrir;7rr;r;rrrrrrririiYUiririririr;rir;r;rirLZUiPririirP::::7u:iiirU:.   .M@B:        :Uv.    .,:i:iir,.U@BMq1LvvuXMB5j5uJF@BJYUjUYi,iii::U@Y,:iii:i::vjuOZ:.,N@iu7::,.    .       :BXJu::uuL21i:i::::ukYYLYvXL:YOOJ,.,::::iLqZOSvirYuLjj512JjLuLJLuYjjuJujUu5Sr.2FuJUjujujujUuUu2u2u2uUu2u2u1U2uUu2U1UUu2U2U2u2u2uUuUjuYJLLvL7v7v7v7vvLvLLYvYvLvLvL7v7v7v7v7v7v7v7vvv7v7LvLvLvLvLvLLYLYLLvJLYLJYJYjYjYujujujuJuuUu2UUu2u2U2U2u1U1U525151F2F2F5SFk5SFkSXSkSkSkFkFkSkFXSXSXkXkPkP</span></span><br><span class="line"><span class="comment">//8E@B;:ri2uuM8BMirSXvi;7rrrrrrrrrriu0U7irr77;rrrrr;r;rrr;riL5ii;r7;r;r;rrr;r;r;;iLqP.Fuii;iiF7:i::uriiiiur   uB@i        .iu:          .  iMB@B@B@B@BMNSUEE5Fku1B@MLJUjri7;i::,vM8:::i:i:i,7LJZO7..uBG:.::::.            8B5jL:vUJLSY::i:i:i2XYJLYLGv ,LMBJ:.::ivXZNY: .;uuuu5FFuuJuuUjujujuuUUU2X1i JXUuUjUjuuujuuuu2u2u2uUu2uUuUu1u2u2u2u2u1uUU2u2UUu2uUjuJjLLLL7v7v7v7LvLLYLYLYLJLLvLvv7vvv7v7v7v7v7v7v7LvL7LvLvLvLLLvYLLLLLYLJLJLjYJJuYuYuJujujUuuu2uUuUu2U1u2u1U125251F252F1F5S5F5kFSFSSkFkFXFXSXkXSXSXkPSXkPkPk</span></span><br><span class="line"><span class="comment">//G8BE:;i71JX@q@E;rkSLi7r7r7r7r7r7;i7GULiriv7rrrrr;rrrrrrrrirkr;i77rrrrrir;riririivPq,rXiii;i2L::i,vYiii:77.i@BL         .::              u@B@B@B@B@B@B@BBBOujuX52L@kLu27i::::::;EMv.::::i::ijv8EF..v@Ni ,:::,            .@EFu7:ujYuPr::i:i::2PJJYJYOv ..rSq1;:r1Sji.  .vU1u1SqF2JuJUuUuUu11F5XkS7..uq2u2uUuUuUuUuUu2u2u2U2u2u2uUu2U1u1u1u1u2U2u2u2UUuuuUjuJJLYLYvv7v7vvLvLvYLJLJLJLYLYvYLL7v7v7v7vvv7v7vvvvLvvvLvLvLLLLYLLvYLYLYLJLJLJYJYjJujujujujUu2uUu2u2u2U1U1U121251525251F5S1F5kFk5kSSFkSkFkSkSkSkSkSXSXkXkXkP</span></span><br><span class="line"><span class="comment">//O8@j:iiL1YMO0Bki7FkLir7r7r7r7r7r7i7G5Jr;rrvr7rrrrrr;rrrrrirSLirrLirrrrr;r;r;r;ri75G:iXv:iii72:::::2iii:i5EML.         .:.             ;B@B@@@B@B@MMZGE88Oj,  ,vG: @u2;,,:::::,iNZk::::::::iLLO0q..rBSE,.::i,             O@PSu;7UYJ2X:::iii,:u0uJLYjM7.,,.:ruJjYi     ,rUU15NPP2ujuu55F1kkkS1Li. :Xq2u2uUu2uUuUuUuUuUu2u2u2u1U1U2u2u1U1U5u2u2u2uUjUuUjuJjYJLJLLvLvL7vvvvLvLLYLYLYLYYJLYvLvLvL7v7v7v7v7LvLvLvLvLvLvLvLLLLYvYLYLJLJLjLJYjJjYuJujujuuUuUu2u2u2u1U2U2u1212515151F1S1F5S1S5SSkFkFkFXSkSXSXSXkPSXkPkXkXXPk</span></span><br><span class="line"><span class="comment">//8BBi:;;1u1BEZ@2r7SFji7r7r7r7r7r7r;i8Furii7vrrrrrrrrrrrrrr;ikjiirY7irrrrrrrrr;riir2Gi,ujiiiir1i::::Lv:ir7F5,            .             MB@@@B@B@@0N8EZ0GG@X      qB,2O:.,::::::,:01Zi::::i:::JvMkO:.:BuEU..:::             7BEPkYrLuYJ5F:::iii::v0UJYYuBv.::...;77ri,.  .iJ5FP0G0SU52SkZZqYi.    iuEk1U222u2U2u2uUu2U2u2u2U122U2u2u2U1u1U1U2U1u2uUuuuuJuLJLJLJLYvLvLvLvYvLvLLYLYLYLJLLLYLLLLvLvLvvvv7L7v7LvLvLvLvLLLvYLLLYLYLJLJLJYJLuJjYuJuYuJujuuuuUuUu2u2u2u1U12521112515252F1S5S5kFSFkSkSkSXFXSkkkSXSXkPSPSXkPkXSP</span></span><br><span class="line"><span class="comment">//OB8:iivUjEBXOB5iv5kJ;r7r7r7r7r7r7;i5NjLirrYrrrrrrr7r7rrrr;i2Firiu7r;r;rrr;rir;rirJ8i:rkiiiii5i:::,iurrr:Lv.                    .:,;q@B@@@B@B@SL7NZZ0Z0GkY     .L@BSO..:::::::,:P5qJ.::i:i::LLMP87.,OSLMi ,::.     .      :GqEqkL7YuYjSU:::iii::701JYJuB7    ,:, .:7vY7r7U5XPGEEXS1S25Ji      rFEq152121U1u1U2u2u2u1uUu2U1U5U2U1U2U1U2U5U1U2U2uUuuYjYJLYLYvLLYvLLYLYLYvLvLvLvLLYvYLYLLvLvLvLvv7Lvvvv7v7LvLvvvLvLvYLLLLLJLLLJLJLJYJLjJuYuYujujuJuuUu2uUu2U2U2u1U1U525151F1F2F5F5S5S5FFSFkFXFkFkSkkXSXFXSkSXkXkXSPXPXXk</span></span><br><span class="line"><span class="comment">//O@U:iiL1LM8q8@UrvFFuirr7r7r7r7r7rr:uGujri7L7;7rrr7rrrrrrrri2Xri;2Lirrrrr;r;r;riiijOr:i1r:iiiur,::::ui:ii7u.                  .,:::M@BBB@B@@Xv77NGG0ENZZ: 2F:.:7YP@@kr.:::::::,:X5U5.:i:::::vvMk8j..Ok75B7.,:     ..      U01PEqSLLLuYuku:::i::::;NXjLLu@i   .,..   ..:rJ2SuY7rii::,,.     :10GX5251515212121U2U1u1U1u1U1U52525U2U5U121U1U2U2uUjjYYLYvLvLvLvLvLLYLLLJLYLLLLvLLLLLvLvLvLvLLLvLvLvvvv7vvLvvvLvLvLLLLLvLLYLYLYLJLYLJYjYJJuJuJujujuuujUu2uUu1U2U1U12121252F1F2F1F1F1S5F5kFSFkSkFkSkSkSXkXkXSXSXkPkPkPkPXP</span></span><br><span class="line"><span class="comment">//M@j:iiuu5B0XOB2rLFkur;rr7r7r7r7r7rrrOuu7;rJ7rr7rrr7rrr7rr;iJZriiFjiirrrrrrr;ririiLOr::2L:ii:Jv;ii::LYiri;j,                      O@MMM@B@8L7vvN8Z0EP0qEkqM@qL77712@7L::::::::,:SOvq:::::i::vLOX01 ,Ok7L0Mi.:.   ...     .@Pu2kENFYYLjYjSu,::i:i:::SE2LYuB;  .........  :YSNPq1UYYvLLYLu2P08qX1F21251F21252521212521U1U225251525252521U1U1uUuUjuYYLLvvvv777v7vvLvYLJLJLjLJLYLYvLvLvLvLvLvLvLvvvL7vvvvLvvvLLLvLvLvLLYvYLYLYLYLYLJYjYuYuJujujuuujuuUu2u2u2u1u1u1U1U5252F151F1F5FFF5F5S5kFXFXSXFXFkSXSXkPkPSXkPSPkPkPkqX</span></span><br><span class="line"><span class="comment">//M@7:irUJqBqNO@U77S5Frrr7r7r7r7r7r7;iqqYui;LYrrr7rrr7rrr7rriYGv:i11ir;rrrrr;ririiiL87::7U:i::vJi777rYU::::2:                    :B@MMM@B@MurLLPMEq0q0qN0@OOMNY;i7YYOii7.::::::::FOuSi,::i:::vvB5P5 ,M1LvYMJ.:    .,.     O@U1U2SZNSYYLuJuSu:::i:i::,jZkLLu@j  ..........:vqGOEXuFXqSPqZZ8NqSS5F252525551F1521112511U525U1U5211F15252122U2u2uUjuLYvLvv7v77777v7vvLLYLJLjLJLJYJLLvLvLvLvLvLvv7vvvvLvvvLvLvLvLvLvLvLvLLYLJLJLJYJYJYJYjYjJjjujujujUuUu2uUu2U2u1U2U52125251F2F2F5F5SFSFS5kFkSkFXFXSkkXSXSXSPSPkPkXkPXPkqkP</span></span><br><span class="line"><span class="comment">//@Br:i75JOOqPOB1rv1557;7r777r7r7r7r7iu8YuviLjrr7r7rrrrrrr7;iL87ii2Siirrr;r;ririr:ivOr::;Ui:i:LL::i:::U:::iui                   :E@OMM@BEY@ZNNG0MO0XqPqX0M88@NSi:rvr87iu:::::::,iXY;Si,:::i::7LB5Sq :OUvJL5E:,    i,     v@q5u1UUFEq5LYYuYuS2:::i:i::,;NGuYJBS  .........,vk8ZX7ir5kS1SkqXXF55S5F5F152F2F5F25252F15U1U1152525151F1F2521U1uUuUjjYJvLvv77r77777777LvLvYLJYjYuJuLJYJLYvLvLvLvvvL7vvLvL7vvLvLvLvLvLvLvYvLLLLYYJLJLjYuYjYjJujujuJUjuu2uUuUu2u2U1u1U1U525151F1F5F1SFS5F5S5SSkFkFkFXSXFPkXSXSPkPSXSPkPkqXqkPk</span></span><br><span class="line"><span class="comment">//BMiiiLuUBGqqG@U7751Sv;r7r7r7r7r7r7r;iM1jji72;rrrrrr7rrrrrrivZY:ijNiiiriririri;iiiY8r:ii1;:::7j::::,,J7:::u:                  :7EMOO@BM  8@ZZ0qkMBOqqPqNGGOG5v:.i7FGui5:::::::,iZ7.1v,::::::vv@jPk iMJYLJvq5:.  :r.    .@ZNFUu1uU5ZN5vLJjYuFF:,:i:i::,:jOXJLMG  .........rXG85r.:LXFF5XkPkk1FFS1F5F25155kFS1515252F1F15U111UF2F1F1511U122uUuuYYLL7v7777r77777777vvLLJLJYjJuJuYuYjYJLLLLvLvvvvvLvLvLvvvvLLLLvLvLLYLYLYLYLYLJLjLJYjjuJjjujuJujUjUu2u2u1U1u2U22521211515151F1S5F5SFSFkFkFXSkSXSXSPSPSPkPkPkPkPXPXPXqXqXq</span></span><br><span class="line"><span class="comment">//@8::;Yu1@N0XGB17721Fjirr7r7r7r7r7r7ri1OL27r1r;rr7r7rrrrrrri7Zj::U07ir;r;ririri;:iLOi::iu7:i:vJ::,::,vL:::Ji                 ::vMO8MBM    B@Z8GNUGB@MMMOSuLj7::;S@O1i:jr,:::::,r8v rL:::::::7uBvqS 7OYvJYjL0Y,.:2.     @MXXPUUu2uu1Zq27LJuJj2kr,:i:i:::,iSZ5vZM,  .......;2OEU:..rUPFSSqkPSS5SFk1S5F5F255k5S5F1F55151SSS1125152F5F5F11U1uUuuYJLLvv7777r7r77777777LvLLYLjYuJuuuJuJuJjYJLYLLvLvLvLvLvLvLvLvLvLLLvYLYLJLYLJLJYjYuYJYuJjjuJujUuUu2u2U2u2u2u1U1U1251115251F2F1F5S5SFSFSFSSkSXFXSXSPSXkPXXXPkPkPkqkPPqXPPqP</span></span><br><span class="line"><span class="comment">//BZ:iiuYqMqqNN@5v71US2ri7r7r7r7r7r7r7i7MUYurFrrr7r7r7rrrrrrivN1::jG7iir;riririiiiiuZi:i:J7:::7j:: :::iU:::ui                .::JYGM@@. ..  B@ELv27YM@B@uJuP0UjSuZ1i,,.LL:::::::rOi.iu:::::::vX@iOu LGvYLYLJjqi:O:     NBPkqXSj2U1uu2GNU7YJuJjuXv:,::i:i::.rF0jPBi   ... .i2E0v:  ,v5XkPPqPPFFFkSS5k5F5515FS5F1F5F1F2F2SSSSX252F151F151521uujjLLvL77r777r7r7r7777vvvvLLYLjYuuuuuuUjuJuYjYYLYLLLLvLvLvLvLLLvYvYLLLYLYLYLYLJLJJJYuYuJuJujuuuuUuUuUu2u1u1U2u1U5U521251F151S5F5S5S5kFX5kFkFkSSSXSXXPSPkPkPSPXPkqXqXPXNPNX0</span></span><br><span class="line"><span class="comment">//@P::ruJOMPEqNBNLLU22Frrrrr7r7r7rrr7rr:PELuLSLi7r7rrr7rrrriiv02::UZL:;;ri;iii;ii:72G:ii:7L:::7J::  i::ui::u:                :.i.LMM@: ,,    L   uJrii7:uG@@BJvirL..:::72,::::::JN:.rJ::::::irBErOY N5vLYLjLYjF0Y     rBNkqkNkUj2U2uj2GqYrJJuYujS1v:::::i::,:7XFFBY   ....:uEFr.  .:JkqkPPNPPFSFXSkFS5F5F1FFkFS1F1F5515211X28k12F151S5S11u2juLJvL7vr7r7r7r7r777777v7LvLLYLjJujUuUuUuUuuJuYjLYLLLYvLvLvLvLvLLLLYLYLJLJYJLJYJYjYjJuJjjUJuuUjUj2u2uUU1u1U1U1U1U525151F1F1S2F5S5S5k5SFSSXFkSkSXSXkPkPkPSqXPkPXPXPXqXqXNPNN</span></span><br><span class="line"><span class="comment">//Bk.iruLBG0q0qB0Jj2u15Yirr7rrrrrrr7r7rirBuLJGJi;7rrr7r7rrrriLq5::U8Liiri;iiiiii:i7qP::i:7L:::rj::  :::Ui::1:                . : 2857 .:.      .kFv7rvLGB@PLL:..7r,i:::7U:::::,:kX.,;u::::::iJBjrBi,OuvJYj1uLjJS:,.   BMSXkPX01uuUu2uj28PvrujuY2u1qSr:,::i:::,:v5XOF   . .:2qU:. . .iUk0P0q0kS5kkPkPFS5F555F5kFS5F1S1F1S1SSviOG5251S5S1F21uuJjLLvv77r77777r7r777777v7LvLLYLJYuuUuUu2u2uUuuJuYJYJLJLLLYvYLYLLLJLYLJLJLJYjYjYjYjYuJuJuuuuuuUu2u2u2u2u2U1U5U5U5252F1F151S1S5SFSFS5SSkFkFkSkkkkXSPSPSPkXkPkqkqXqXqXqPNq0qZ</span></span><br><span class="line"><span class="comment">//@J,:7juMZqEq0OOLUuUUFuiirrrr7rrr7r7r7;iFOvLOS:rrrrrrrrrrri;Y0U::FZjiiiriii;ii::i7E5:ii:7J:::7Yi:  ,::L;,:u.                 , .51.: .,.       SZ1XBB@Sr   r,,iu:ii:::r1,::i::iZv,,7L:::::,rq@rYG.YZvLYjLUFuLjUqi,  E@SPSPXPqquuj2uUuJUOXrrUJJJ2uuF0ji,::i:i::.:75MO,  . :uk7, ... .;5qNq0qqFFFPXPkXSF5F1F1S5XFS1F1515151SF:.NO5151F551F22juLYLL7v77r7777777r7r7777v7LvLLYLJJuJUuUu2u2u2u2uujuYjYJLYLYLYLYLLLJLLLJLJLJYJYuYjJuJuJuuuuuuUu2u2u2u2u1u121U1252525252F5F1F1S1SFSFkFkFkSkFXFkSPSPkPkPSPkPkPXqXqXqPqPNq0qZ0</span></span><br><span class="line"><span class="comment">//BL,ivu2@q0NZN8OuJUuUUFri;7r7r7r7rrrrrri;OS7GZ:irrrrrrrrr;;iuqU:i5GYi:riiiiiiii:v7O7:ii:7Y:::7L:,   i:Lr,ij                    .2:              X8EYi     ii:,Jrii. ::72::i::,7Ei,:7v,:::,:v@1;kk.8uvLJu7iFFJLY2P: r@qXSXSPXPXFYujUuUuJUOFi7UjuLUUuuqXL:::::i:::,,7X@7   :JY:...... ,7k0Eq0PPFkkPXqXXFS1S5F5SFXSS5F251F2FSXL..E812S1S5F25uujuLYvv777777777777r777777v7v7LLYLjJujuuUu1U2U1UUuUuuJuJjLJLJLJLYLJLYLjLYYjYjYuJuYuYuJuuuuujUuUuUu2u2U2U125U5252F1F1F5F1F5S5S5SFkFkSkSXFkSkSXSXkPkPkPXPXqXPPqPqXNPqq0qZNE0Z</span></span><br><span class="line"><span class="comment">//@Y,:LLXBEPEqEEMUJu2u25Y:r;rrrrrrrr7rrrr:uMv1@7iirrrrr;r;ri7u0J:iS0Jiiiiii:riiir7uMi:i::rj:::vv:.   ::77,vv                    ,r            :7u;,       .7:,7v;:.  .:75::::::U5,::u;::i:,i0Brr8iLqvvJJUi.7P5YLYuSr@ZSkPSXSPXEXuLUjUuujYUMu:v2JuLjU2Y5PS7i:::i:i::.,iFu: .ii.. ....  :LNZZNNkkSPXPXPkXFF1S5F5SSXkX1F1F552Sk1i.,Mq11F1F2F22uUJJLLvv7v77r7r77777777v7v7v7LvYLLLJYjjuu2u52525U1u2uujuuuJuYJYJLJLYLJLJYJYjYuYuJjJuJuuuuUuUuUuUu2u2u2u1U1U52125152S251F5k5kFSFk5kFkFX5kSXSXkPSXkqkPkPXqPNPqPNPNP0qEqEqEEE0</span></span><br><span class="line"><span class="comment">//Bu,iLYq@Eq0E0ZOkLUu2u51rirrr;rrrrrrr;rri:ZqLBkri;rrr;rrrii72NY,rk0L;:i:::v7i:rv7F0:iii:7L:,:L7:.   ,:77,vr           .        :.         ..:::       .  ri:7v;:. ...:ju::::::qr::iui::::,L@uiuXiNYvLYUL:::vq2YYvL@BSFXSPkkSP085YJujujuJY2Mv:L2juLJj5uj5q27:::rr7rr::.:7vri.   .....  :uEZEqNkXkqXqXNXXFS1S1SFSSXSkFF151FFP1r..JM151F5521U2uuYYvvvv777v77777v777v7v7v7v7LvLLYLJYjjuuUU1151F1121u2uUuujuJJYJYJLJLJYJYjYjYuJjjuJujuuuuUuUuUu2U1u2U125U51F152F151F5S1SFS5SFSFk5kFkSXSXSPSXkXkXSXXPkPXqPNPqP0P0NE0ENZ0E0Z</span></span><br><span class="line"><span class="comment">//@U,:jvGBOPE0Z0O0JJuuU2SLiirrr;rrrrrr7rriiiB2G5Uri;r;rrr;;:J2Z7,70kL:::rYXY:::7v7OL:ii::7ji::J;:    .:77:j.            .       ,                   ...  ir:LYi.......:UL::::,v2:::7J::::.rOqirPY1u7LLJui,:::v02LY7rOOXFXSPSXkPE8uLJuJuJuYLFOr:J2jjJJY22ujkP5vrr7LYLLvv;:,ir7i.   ...  .;1GZ8NqkPPqXPPqXk5SFF1S1kSPSPSS5F5XP5::.:MX15551F25U2JjLYvLvv7v77777777777v7v7v7v7vvLvLLJYujUu2U1U5151525U2U2uujuuuJuJJYjLjYuJjYuYuJuJuuuuuuuu2u2u2u1u1U1212125251F2F5F1F5FFS5SFkFkFkFkSXSkSPkPSPSXSXkqXqXNPNPNP0PEqEqZ0E0Z0Z0</span></span><br><span class="line"><span class="comment">//BS,iJLE@MEPE0EGMjJjUuU15ii;r;r;rrrrr77iri:YOXkj1iiiririr:iu2Er,L0SvvLkqXr:::;Y7YOi:iii:v7:i7ui.    .:v;iL          .                       .   .....  :7iYr, .......:Pi:::::2r:::ui:::,:P@v;UEku7LLYjL::::::LE5LYi:8MXFkSkSPXXGZYYJujujuLYk8i:j1juYuLjU5uu5P5J7vvYLjjF1Y;::rvLi.      .7kOZGXqq0NNXqXNkkFS5S5S5kkXkPSXX0NFi::,,8XF5S1515U1uUJJLLvv7v7v77777v7v7v7v7v7vvvvLvLLLLYLuJUj2u1255F155F15U1u2uUuujuJjJjJjYjJuYujuJuuuuUu2uUu2u2u2U2u5u1U1251F252F255F1S5S5k5kFk5SFkSXFXSXkXkPkPkXkPkPXqXqXNPNPEqENENE0EEZ0E</span></span><br><span class="line"><span class="comment">//@X,:Jv8B@Z0NE0GOXLuuuu2FY:;;rrr;r;rirL7iri:FBZj22iiiririir2U0::uO00X1Lr::::iJ7rqk,iii::v7.,i1v,     :7iri                             . . . . ..... .i7r7,. ....,.. vS:::::uv:::rJ:::,:5SiUuBEJ7LLYLu;::i:i,:LGFLL::EBNFkSkSPkPG0LYJuJuJuYYqN::j5JjJjYjJ12UJ5SSuYvLLYL2FPUYri:7LL:     .YNGqXkZG8PqX0PqXXFkFkFSFXXqqZZZSv:,::.iPX1S5S1F55UUuuJJLLvvvv777v7v7v777v7v777L7v7LvLLYLJJujuu2U12F1F5S1F55U1U1uUuujuJujujuJjJuuuJuuuuUu2U2u2u1u2U1U121U12F152F252F1F5FFS5kFSFkFk5SSkFXSPSXkXSPXXkPXqXqXqPNPNq0NZNE0Z0Z0ENZN</span></span><br><span class="line"><span class="comment">//B8,:YY8@BMqE0GEOZJYuuuu517:;;ririr;rirY7i;::M@LuFu:ii;ii:vJ1qv1GMP57:::::::Yv77M7:iiii:ji,,77:,:   .:Liv.                            . . ... ... . .;7i,  ........  2v,:::Ju::::Yr::,:5N. LMSv7LLYLJur:::i::::LO0LL:.kBG5kSkkPSP8P7JJjJjJuYJ0X::Y5jjYjYJLuU5uJjSXkuL7LvJUqSuuYr::vSu:.  :1NX1P08EEN0qqqqPPkPkPXPqZZGXUr:.:::.:1XFS5k5S15112UjuYJLLvv7v7v7v7v7v7v7v7v7vvL7LvLvLLYLJLujUuUU12F5S5S5S155FU1U2u2uUuUuujujuJujuuUuUuUu2u2u2u1U1212121252F1F1F151S5S5FFk5SFSFXSkSXSkkXkXkPkPXXXPXqXqXqPNP0q0qE0ENZNZ0EEENE</span></span><br><span class="line"><span class="comment">//@Oi:JLMMBB8qZEGZM2LJuj2U5Ui:;iriririri7urii:rB1vU5u:i:::i2q8OUkkGvL:::::::YJJ7PNi:i:i::ji,:L7   ,   i7vr                          .   . . ..... ..:i:.. .......... :S::::LU::i:rv,:,:F5.,iruJ7vvLvYLur::i:i:i,:L@OLL:.YMMSSFXXqXqOk7JYuJuJuLjqF:,v5uuYuJuYJY255JJUqqXUj77vkPjY1UYi:jEu7rrvk15X0uuSOOOGOOO8OGG0ZPkuLr:,,,:,,.i2NFS5k5S5S1F15uUuuLJLLvLvL7v7v7v7v7v7v7LvvvLvLvLLLvYLJYuJuu2U12F5FFSFSFS5F15U5u2uUuUuujujujuuuuUU2u1u121U1U1252525252F2F255F5F1S5kFFSkFkSkFXFkSkSPkXkXXXkPkPXqXNXqXNPNqEqE0Eq0qENEqEqEq</span></span><br><span class="line"><span class="comment">//B@i:LYOB8@MEqEEGMZvJJuj1u5Yii;iriririiivur:i,uBYLU5Y::;LXONMJ:7qqvLi:iiiijJL7LM7:i:i:::j:,ij:    . .:LL,                           . . . ......:::,. ............  1r:::LU::i,,L::,r5v,iri.:XYvLLLLYJL:::i:i::,:L@B2v:.rE@NS5kSqkNOF7jYuJjJjLuk5i,r52UJJYuJJLYjFF2LLuq00kUv2Nu7Ju2YiiXv:r7;iir7rivu522UUuUYY7rii:,.,,:,:.,:jqNSk5k5FFF5S5F21UuJjYJLLvLvv7vvvvL7vvvvvvLvLvLvvvLvLvYLJYjYuu2U1251SFS5k5S5S5S2525U2U2uUuUuUuuu2u2u2U225U5U115152F25251F1F2SFk5FFkFkSkFSFkSkSXSXSPkXkPkPXPkqXqXNPNPNP0qEqEqE0ZqE0EqEN0q0</span></span><br><span class="line"><span class="comment">//@Bv,YLOBOM@800GE8M2vujuu1US7:i;i;iri;ii:Lur:i,NMLLu5uY5uS1JNiiYGFvJ::i::LLv7r0k,::i:i:rv,.7v,      ,iUr                           . . ... ....,.. ............... LY:,:Yu:ii. v:::Lui,i::,:.LPvvLvYvjY::i:i:i:i,:1@BNL: :u@MX5SSqkqO1vjYjJuJjLU51r,:Y22juJjJuYYLJUS5uvvYSPEXGB1YJvYJLru, :v77ri:i::,,...,.,.,.,.,.,.,.::v2GGESkFS5S5S5S5S15U2uujuYLLLvLvL7v7vvv7vvLvvvLvLvLvLvLvYvYLjLuJuu2u11F5SFS5k5S5SFk1F1521U1U1uUu2u2u2u1U1U525212F15152F1F1F551S5S5F5kFSFkFkFkSXSXkXkPSPkqkqkPXPXqPqXNPNq0q0q0qEqENE0ENEqENZN</span></span><br><span class="line"><span class="comment">//M@Y.vJ8@8OB@GE0GZMGvLujuU1uF7:iii;i;i;iiiuur::,8Zj1NE5::jYUN:vUMLYL::::LLv7rJM:::i::::77.:Yi       ,7u.                      .   . ............................. ;u:,:uL:i,  7::;jr:,::::::,.N27vYLYYUi::i:i:i::,:0@OB2: .iNBMSSSqk0OUvjYjJuJjLUU1v:.:rFSuJuLJLjLv7Yj1uuv77YuSqENNkF12jq,  .iuYrir77;i:,.......,,::i7jFZZ80NXPkk5S5S5S5S5S1521uuJjLYLLvLvv7vvv7LvLvLvLvLvLvLvLvLLYLYLJYuJuu2u1251SFSFSFSFSFS5F1F15U1u1U1u2U2U1U12515252F55251525251F1SFSFS5SFS5kSkSXFkSXSXkXSXkPXPkqXqPPXqPNP0P0q0q0q0NEq0qZN0NZNENE</span></span><br><span class="line"><span class="comment">//M@k.vLOBMGO@MEEEGGB5vJuJu22uFr:iii;iriiiiiuu7::r@O2uuurr2vqFrLq0vYv,,iJLv77rO7,,:...,,v:.77.       :ui                      .   . ... ........................  :Y:.rU7::   7:iv7:::i:::::::.iOvvLLLJJ7,::i:i:i::.:BMN@Gi ..rNBGqSqkZOJvjJuYuJuYuJ5J:.:u7LUuuYjLJLYvv7LLuJY77r77juFkqXE8O:. .i:     r1NF5uUuuJuuSXZE8EEPqSkkPkPkPkkFSFSFS1F15U2uuJuLYvLvLvLvL7L7vvLvLvLvLvLvLvLLLLYLJLJLjJUuUu1251SFSFSFkSkFkFSFF551122U2U1U1U225255S155F155S151F5S5S5FFS1SSkSkFkSkkXSXkPkXkXkqkqPqPqXNXNqqP0P0N0NEN000qENENE0ENE0E0</span></span><br><span class="line"><span class="comment">//8@8:rLZ@GOGBBOE0EGOBvLJuJU1UuFr::iiiiii;iiijuY7riMPvYuuUYJOJ7LO27u;.iuujLvikJ .::ir7ivv,:jr:       rv.                     . . ..............................  i7::jJi.   .7r77i:ii:.  .i:::,.SN7LvYLjL::::i:i:i::.iBNUB@u....iSOO0NkO8LvjYuJuYjYjJ1Y:vr,:;LJjYJYJLJLLv7rrrv7Lv7rrr77vLuuNX5uuvr:,   iUMM@@@B@MMOO88NEqNXXSXXPkPPqXPkXSkFS1F15UUuujjYJLYLLvLvvvLvLvLvLvLvLLLvLvYLYLYLJLJLjjuuUu1UF1F5kFkSXSXSkSXFk5S1F11U1U12121252S5SFSFSFkFFFFFF5S5SFkFkSSSkSkSkkXSXkPXPkPXPXNPNPqq0X0q0qEqEqENEN0q0N0NZNE0ZNENENZ</span></span><br><span class="line"><span class="comment">//MB@:r7EBM88G@MO0Z08B07YJuYu1uU5r::iiii;ii:iLkFL,.:MqLLuJL2M772Z7LL:iJLv7vru8uYk0OM@BBOv:5Ui       .L:   . .               . . . ......................... .   r7i7u;.    :Lv7i:::.      :::::.iZJvLLYYui::i:i:i:i::.LBSuNBM7. ..:L0OM0@0vLJYuYuYJYYL1PL,::::i7YYJLJLLvLvv7ri::ir77vrr:::iirrrrrrv7LLv;7vu2kN88OGO8OOM8MOMOOG8EZEEN0PqkPkXFk5S2521uUJuYJLLLLvLvLvLvLvLvLvLvLvLvLLYvYLJLJLjYjJuuUu1U55SFXFXSXSXSXkXFSFSFF1F15U51F251F1F5SFSFkFkFkSkFkSk5kFSFXSkFXSkSXXPXqXqPqXqXqPNPNq0PEqENEq0qE0E0ENENE0Z0Z0EEEEZ0GE</span></span><br><span class="line"><span class="comment">//OMBvivq@OOGO8@M80ZEOB17JJuY11uuFv::iiiiii7rirujY:.:MqLJJvOX778u7vL7L77rv7Y8MOBB@B@B@@87Z@@G5vi.   :7   ... .     . . . . . . . .........................    :Lvvvi    .i7vi:..           ::::,.5uvLLLYuv:::i:i:i:i::.qB5u5E@OL,....iYXG@0F15uUuuu2uFZZr,:i:::::;7LvLvL7v7v77ri::::i77L7v;i::,:::::::::::,:,:,::iir7LvJYuuFXEE88OOMOOGG00qPSk5S55U2uujuYJLYvLvLvLvLvLvYLLvLLYvLvYLYLYLJLYYjYuYujUu1U51k5XFkSPkPSPSPSkSk5S5F5F25152F5F5SFSFXFXkkFXSXSXSkFkFXkPSPXXkPkPXNXqPqq0q0q0qEqENEqEqZ0Z0Z0E0E0Z0G0ZEG0ZEZEGZGEG</span></span><br><span class="line"><span class="comment">//MBB2i7XBM8O8OO@OO0ZEMBLvJJjLF1Ju5Li:iiirrii::7Ujji.:OELvUMJrSG77v7v7LJF11O@B@B@@@B@B@rjB@@@BqJLi:.7,  ....... . .   .   . . ....... ........... ..... .   :vu7i.  ..,,:,.                .i:::.iSijLYvJji:i:i:i:i:i::,BMU2F1GBB2;..   ,:7Luu1U2JLjXqPY2r::i:i:::::rr7777v7777rrii:::::i;7LJLL7r::::::::::::::::.,.,...      . .,:i7j15XkNqNPPSk15UUuujuLJLYLYLLvYvLvLvYLYLYLYLYLYLYLYLJYJLjYjJuuUu2U55S5kFXkXSXXPkqSPFXSkFk5F1S1F155F5k5XFPkPXPSPkXkPkXkXSXkPPqXNXPX0X0q0N0NEN0NEqZ0Z0Z0E0EEZEZEZEGEZEGEG0GE8Z8E8ZGZ</span></span><br><span class="line"><span class="comment">//OBE0r71@OOOO88M@OOEZE@OvvuYJYX2JuFui:iii:i:i::YqJUi.,ZZ780rLMu7LLjuSXP51M@B@@@EPPO8M7rO@7  .:..  ii    .......   .     . . ... . ..... ... ... . . . ...:7Lr.    ...                      :i::.,Pi:uLYvur::i:i:i:i:i:.:@E21F15PBBMSLi:..   ..,:i;UP1LJu5r::iiiii:::::ii;iririiir;r:::::::::irvvjLL7r:::::::i:::::i::::,.           .:ii77LJ22kFS5521uuuuYJLJLLLLvLvLvLLLLLLLLYLJLYLYLJLJLJJjJuJuj2u1u55SFkSXSqXqkqPqXXkXSXSSFSFS5S5S5kFkSPkPkPkPXqkqXqXqXqPqPNP0P0qNq0qEqZNE0ZNE0EEZ0ZEZEGEGEGZGEGE8EGE8Z8Z8ZGG8ZOZO</span></span><br><span class="line"><span class="comment">//@M1OjrjBM8O8MM@B@MONZE@E7vjJJJ0UYj127:::iiiii::X8LUr..FBE770XrLJu5qkPFSB@B@NUv77S8MUiEME    ,J   :.     ..... .     . . . . . . . ....... . ... ....,.::,.                                 :::: YX.rULLYj:::i:i:i:i:i:.v@k25S1F2SqOMBMOZ0SXFP5kSq5YvjJuuFr:::iiii:i:::i:i:iii:i:iirr;:::::i:::::i;7vLvvrr:::::::i:::i:::,...... ....::i;77LLJJ2U52522uUjuYjLYLYLYLYLLvYLLLYLYLJLJLJLJLjYjYjYJYuJuuuu1U11FFXSXkPXqkqXNPPkPkXkkSkFSFkFSSkFXSXXPkNP0P0qNqNqNqNN0qE00NE0ENZ0E0EEGEZ0GEGEZEZZ8EGE8Z8ZGE8ZGZ8GOGOGOG8Z8GOG</span></span><br><span class="line"><span class="comment">//BMvOF77@BO8OM@0.u@MO0ZG@k7LjJLuGuYLU5J:::iiiii::2MjuL, UOL1q7u2jYPkX50BM.7Bu7LuZOMX7kMP.:r  Y@2  :   .   ..::.   . . . . . . . . ... . . . ... . .                                         ,:::.iOi.7uvLj7:i:i:i:i:i:::.F@111S5F5S1SFXX00MO217,,:UujLjYuu57:,,i;:::i:i:iii:i:i:i:i:i;rri:,,:iiii:::::iir7vvv7ri::::::i::.........,,:::i;r77YJuU5112122uUjuYJYjLYLYLYLYLYLYLYLJLJLJYJYjYJJuYuJJYuJuuUu2UF5F5kSXkqXqXqXqXqPqXPkPXXSXFXFkFkFXkPXNPNq0q0qEq00ZNENZNZNZ0ZEZEE0ZEGEGEGEGEGG8EGG8E8ZOZ8G8GOGOGOG8GOGO8O8OGO</span></span><br><span class="line"><span class="comment">//@G7XMv7O@@MOBZ.  1@M80Z8@57LJYL2O2LLu217:::ii:i:,LM5uJ: rBOvUuvrXPX5EBv  :@MG0OO8PLFO0NSZ@@2UX@7    . .   ..vi  . . . ... . . . . . . . . . . .   .                                         :::.:k2:,LuvJJi:i:i:i:i:i:i:.G@U51S5S5F5S5S5F5OUJv:::r1k2vJYuu5Li,.:;:::::iii:iiiiiii:i:::ir7i:.,:iii:i:::::::iirrvvL7rii:::i:,.....,,::::rirrvvYJUU51F1521UUuujjJJYjLJLYLYLYLYLYLJLJLJYuYjYuJJYjYuJujUuUU2u51SFkkXkqXqXqXqP0PqPqkPkXkPFkSkSXkXkqXqP0qEqE0E0ENENZ0E0E0G0ZEZZGE8E8E8Z8ZGEGZ8ZOZ8G8G8Z8G88O8O8O8OGO8O8O8O8</span></span><br><span class="line"><span class="comment">//BE7vOFvS7@BBBS .  N@MG0ZO@U7LJLL1MkLLuuFY;:::i:i:,i8ZuJr :OO7rrUPk2EB2 . .@@EG0OGu5Eq0q8MB@Br7F@     .     .rk.  . . . . . . . ... . . . . . .   .                                          ,i:,.2SU.:JJvur::i:i:i:i:i:i,:B@u11F5F5F5kFS5FPGJJ::::7qOjvjJuu5Ji. :ri:,::iii:iii:i:i:i:i:iir77,..::iii:i:i:i::::::irrvvvri::,:::::,::::ii77v7LLju22F1F5F25U2uUuuJuYJLJLJLJLJLYLJYJJJJjJjJjJjYjJjJujujujUu12F1SFkSPkqXqXqXqP0PNXNPqkPkPSXkXSXkPXNX0q0qZNE0ENZ0G0GZZEGEGE8ZGZGE8Z8Z8Z8GOG8GOG8G8GOG8GOGO8O8OGO8O8O8OOOGO</span></span><br><span class="line"><span class="comment">//@u: i0jS  OB@5..,iiS@MG0GO@u7LYLL5@PLLju12L:::i:i:::kMSYv..UMJuXF2GBB .., LBBXqkZMOPqXN8@B@B:::BMi. . . .   :u,   . . . . . . . . . . . . . . .                                             .::,.L2P;.ijYLY:::i:i:i:i:i::.i@Mu51S1S5F5F5S5k8kLi:i::LMGLLjJuJ1ur. ,ri:.,,::iiiii:i:i:i:i:i:i;L7:  ,iii:iii:i:i:i:i::::ir7vri,,,::i:i:::iir7LLJYUu12F1S1F55U1u2uuJjJJLJLJYJLYLJYJLjYjYJYuYuYuJujjjujUuuuUu1252SFXkXXqPqqNqNPEN0qNPqPPXPkPXXSPXqP0qNNENZ0Z0ZEZEZEZE8Z8GGZ8Z8Z8Z8Z8G8Z8GOGOGOG8GO8OGO8O8OGO8O8O8OOO8OGO8</span></span><br><span class="line"><span class="comment">//Bi   U5SL  7BB .,7ri5@BZEZM@u7vJLLFBkLLuju127:,::i::.7MOjLi:JOZSSMB@E  ,,  0BOSX2EB@MMO0U21; iN@@j  ....    .i.. . . . . . . . .                                                             :::.7v0X,.rJYJ7:i:i:i:iii:i::.rB8uF5FFS5S1FFF5N8Ur:::::J@qvLuYuJ11v. .ri,...::iiiii:iii:i:i:i:::rJj:  :ii:::i:::i:i:iii::,,,:r77ri:,::iiii;irrLJuu2u51S5k5F15U2U2uUjjYuJJLjLJYJLJLJLjJjJuYjJuJuJujujujuuUu2u52F5SFkkPXPXqP0q0N0qEN0NEPNPNXqXqPqPNP0NENE0Z0ZEZEGZ8E8Z8ZGZGG8Z8Z8ZGZ8G8GOGOGO8OGO8O8OGO8O8O8OGOGOOO8OOOOO</span></span><br><span class="line"><span class="comment">//v    .PFk   .B7 ,i7r:r@@GEZO@27LYvLSGFuvjJuu5ur::::::.:5BE17.:08@B@B@i .,   G@MkqYYZ@BEU2YvrBB@M:  .. ... . ... . . . . . . . . .                                                            .:,:riuBr.:7YLvi:i:i:i:iiiii::.LB0u5155F5SFS5F5Mkv::::,:U@1vLJYuY21Y:  ii.....,::iii:i:i:i:i:i::::702, .:;:,:i::,:::::::::,,...:i7vv;::::ii;r77LYUu11F5S5SFS5F15U1U2uUJuJjJJJjYJYjYuJuJuJuJuYujujujujUuUuUu1U5255SFkSPXPPNPNq0qE0EqEqNq0q0qqXqPqPqP00E0EEZEGZGZ8ZGEGG8ZGZ8Z8Z8G8GOGOGO8O8OGOGOGOGOGO8O8OGOGO8O8OOO8O8MO</span></span><br><span class="line"><span class="comment">//      vPX.    L .,,:. :@BGEZO@k77JLLSk25LJYjj22ur:,:::,.iq81LuvjN@B@B@.      F@B:;7;7iiir5B@BM,   .......... . . . . . .   .   .                                                              :::7:j8S,::LLYr::iiiii:iii:i::.1BPu51F1F5S5S510OLi:i::,:5@2LLjJuJu1U:  :i. ....,,::i:i:i:iii:i:::::uZj  .ii,.i::...........,...,,:i7vvri::irr7vYLuUF5SFkFSSSFS1121U2uujuJuJjJuJuJuJjYuJujuJuuuJujUjuuUuUu2u1U5155F5kkXXqP0P0q0NEN0NENEqEP0NNPNPqqNqZqZ0ZEZEGE8EGZ8ZGZ8Z8GOG8ZOGOZ8GOGOGOGOGOGO8OGO8O8OGO8O8O8O8M8OOOOO</span></span><br><span class="line"><span class="comment">//       F0r    7: ,::::,iMBMEZG@E77YvLS5jXJYYuYuu1j7:::::,.iPMESL7LEB@B@L      r: .vr: .u@B@q,   . .............   . . .   .                                                                   :,;r:7Sjr:::YLL:::i:i:i:i:i:i::.XBku51S5S5FFS1SMSi::i::,:F@5LLjJjYuUFr  ,i,.......,,::::::iii:i::::.ikO;  :ii.:i:.  . ,,:,:,:,,,:,:,:iLuji:irrvvJJ22F5kSkSkSkFS552522u2uuuujuJuYuJuYuJujujuJUjujuuUuUuUu2uUU2252F1SSXkPXqP0q0qENEqENENENEqEN0qNq0q0q0NZ0Z0ZEZEGZGE8ZGGGZ8Z8G8GOGOGOGO8OGO8O8O8OGO8OGO8O8O8OOO8OOM8OOO8</span></span><br><span class="line"><span class="comment">//       rqF     u..:::::riYB@ZGZ@MLrLLLSFvS1YLjJjJ2UU7i,,,:iv28MOFL7UO@B@BJ      .@G778B@B2.    ............. .:i.    . . .                                                                    .:vi,r57v:::iYL7:i:iii:i:i:iii::,E@kU51S1S5S5FUO87,::i::,ikBSYLJYJYuuSv.  ,. . . ........,,::i:::i:,,,7Ok, .ir:.:i:,.,,::i::::::::::::::vk27i;rvLuj22FFkFXFXSkFkSS1511u2u2uUjuJuJuJjJuJuuuuuuuuujUuUu2u2U2U2U1UF2F5FFXkXXqqNN0qE0E0ZEE0ZNE0ZN0qEN0qE0ENZ0ZE8EGZ8Z8G8Z8ZOG8GGG8G8G88OGOGOGO8O8OGOGO8OGO8O8O8OOO8OOOOMOM</span></span><br><span class="line"><span class="comment">//        2Zi    :7 ::::ir7::Z@MZEBBFrvvL1P7uPuvJLJLuu2uL;ii;ii:ruOP17::5EM@@Y      @B@@Br    ............:::.. .iv:.                                                                            r7:::5iLr:::rJvi:i:iii:i:i:i:i:,:8B5u55S1S1F15X@Ji:i:i::,iSBkjvYLJYjj5U:       .....   . ..,,ii::i:,,.:5Ov  :;i,.ii::::::::::::::::::::::Jqk7rrvLuu12S5kFkFXSXFkFk1F11U1u2uUuUjUuuuujujuJuuUuUuuuUuUuUu2u1U2U5251S5SFkkPXNP0qENENE0ZEZ0Z0Z0Z0E0ZNE0E0E0Z0ZZ8ZGG8ZOG8Z8G8Z8GOGO8OGO8O8OGOGO8O8OGO8OGO8O8MOO8OOMOMOOOO8</span></span><br><span class="line"><span class="comment">//        :Z1     r: ::::7vr:,L@BO0MB877vLjNvrFPYLLjYuJU25jr:,...:7S8Sr. .:rLEXr,.:S@@1:   ....,.,.......:. ,,..  .ri,.                                                           .,            .L:::iJ:;J::::7Yr::iiiiiiiii:iii:,:MB5uF1F1S5F11M0r:::::::,iFMPuvYYJYjj557       ... . . ......:ii,i:,,,.7Zk. .7i:.:ii:::::::::::::::i:::::i28SvrLYuUF5kFkSkSXSXFXFSFS5F11U1U2u2u2uUuUuuu2uUuUuUuUuUu2U1U1U1U125251F5SSXkqPqq0q00E0ENZEZEZ0Z0Z0Z0Z0ZNZEE0ZEGEGZ8ZGZ8G8Z8Z888G8GOGOGO8O8O8O8O8O8O8O8OOM8O8MOO8O8OOO8OOM</span></span><br><span class="line"><span class="comment">//         LG:     7..:::iL7;:,:GB@0ZB@577vLE5i70kjvYYjLJYuuUv;:::. i20Fui,,i;77vLX@M.  ....,.,.,.,.......,   ...   :i:..                                                          .i,         :7i:::Lv:iL;::::7Yi::iii:iii:iii:i:,:OB5u51F1F1FU8ML::::::::.i5MG1LLLjYjYu5u.          . ........,:i,:::,,.iF8i .vvi:::i:::::::i:::::i:::i::::7081vLJU2FFXFXFXSPSPkXFkSS5S1F2525U1U2u2uUuUU2UUuUu2uUu1u2U2u1U2U525U55FFkFXkPXqP0qENZ0EEZNG0Z0Z0Z0Z0ZEENZEG0GEZZGZ8Z8G8G8ZO8OG8GO8OGOGO8O8O8O8OGO8O8O8OOO8O8M8M8MOM8OOMO</span></span><br><span class="line"><span class="comment">//          FX     .r .:::rLrr:,.vB@GZO@OYrvvFZL:jNkLvLJLJYjJ2uu7i,...ijuF1Ji::rrii:,. ....,.,.,.,.........,......   .,:,.                                                          .vY7:,..,i77:::,r2:i:7L::i:ivL:iii:i:i:iii:i:i:,:MB1u51F2F21F@2r,i:i::::.iF@85LvLJYJLuUkr        . ......,.,,,:i::::::,:L8j  rY;:::i:::::::::::i:i:i:i:iiii28EJLY21SFXkkkPSPkXSPSXkX5SFS5F5F2F25U1U2U2U2U1U2U1U2U1U1U1U1U121252F5kFSSXkqPNq0q00G0Z0ZEGEGEZEZ0Z0E0ZEZEG0GEGZ8Z8ZOZ8GOZ8GOGOGO8OGO8O8OGO8OOOGO8MOO8OOM8MOMOO8MOM8MOM</span></span><br><span class="line"><span class="comment">//          ,8L     ,: .::i7vr:,:.:q@MEEBBEv77J0Ni:uM1v7LLJLjYuJUuj7i,..ivLLU1u7r;riri. ....,.....,..,,.......... .     ..                                                            i7uJL77i:::::v1iiii:ui::i:iv7:i:i:iiiii:i:i:i:,:M@5u1251522MqL::i::::::.:2@OXuL7YLJJuuku:     ... ....,.::::::i:::i::,:7EX, :J7:::i:::::::::::::i:i:i:iiiiLEO1YJ11SSPSPkXkXSPXXXPSPSkSk5k5F1F15152F2525U1U2212121252521U1251F1F5S5kFkkPXqq0NE0E0EEZEGEZEG0ZEZEZEZEZEZE8EZZGZ8GOZ8Z8GO8OGO8O8O8OGO8O8OGO8O8OOO8OOM8OOO8OOMOMOMOMO</span></span><br><span class="line"><span class="comment">//           7B.     :, ,::ir7:..::,v@@O0OBBPYrv5Ou,Y@E5L7vYLYLYLJjuuj7i.,ivr;rjU2JjYj7;::........,:::,............. .     .                                                           .:;rv7vvLv7YPii:i::7L:ii::ivi:i:i:i:i:i:i:i:::,iMB2u11515uZOj7::;:::::, ,YOMqUY7LLJYuu5Fj,    ,.....,,::::i:i:i:i:i::::rk0r .LJ:::i:::::::i:::i:i:i:i:iirivSOPuu55kSXkPkXkPkPkXkPkPXPSXkXFk5SFS5S1F1F152F2F1525U5252525151F251F5SFSFPkPPNP00EEZ0ZEZEGZGEGZZEGEG0GEGEGZ8E8G8Z8ZOGOGO8OGO8OGOGOGO8O8O8OOOOO8OOO8M8O8OOM8O8MOOOOOM</span></span><br><span class="line"><span class="comment">//            JP      :. .::iii,.,ii7:FB@0BELOE7rLqq7SBqEkUvvvYLYLJLYYujj7i:rv7:::7vju25S11jYvv7Lvr::.,.,.,.......... .                                                                  .::::i::.Lvi:iii:iYi:;:::r7i:iii:i:i:i:iiiii:,:MB5j1U52UF@jji:r7::::,. .rqMG12LvvYLJJu1Sv,   :::,::::::i:i:iii:i:i::::i2EY .7Ui::::::::i:i:::i:i:i:iiiirr7uZ0FuFFXSPkPkqkPkXkqkPXPkXXPkXSXkXSSSkFkFSFS5F5F5S5F151515152F5F5FFSFkFkSXkPPqq0NEEZ0GEZZGEGE8Z8ZGZGZGE8ZGZ8ZOG8GOZOGOGOGOGO8O8O8OGO8OOOOO8OOM8OOM8OOM8O8OOOOOOMOMO</span></span><br><span class="line"><span class="comment">//             Jj      i. .::ii:..:;v7.iG@B@::O@NYrjkZMZUSEE1Y7vvYLYLYLJYujJ77vuL7::,:irrvvLvv77i:...,.,.......... . . .   .                                                   .             ... :1i:iiiii:v7:ir:::7riii:i:iii:iiiii:i:,:OB1j211U2OkLj::Jv,:::..  :UOMkkUYvLLjJju52v,  .:i:i:i:i:iii:i:i:i:i:i::iuPU,.;F;::i:i:i:i:i:i:::i:i:ii;;rr7JP0X25FXkPkqkPkqkPXqXPkqkqXqXqkPkXSPSkSkSkFXFS5S5SFSFS5S5S5S1SFS5SFkFXFkSXXqX0NEqEEZ0ZEGZGE8ZGZGZGE8EGZ8Z8Z8Z8ZOG8GO8O8OGO8OGO8O8O8OOOOO8O8MOO8OOO8OOM8M8OOMOOOMOM</span></span><br><span class="line"><span class="comment">//              2v      i.  ::ii:.,:;LL:,v@BG.iLMB0L7LXZM2u5E0NUL7LvLvYLYLLLjLL7j2Suvi:  .:,,.......,.,......,:...... . .                                                      ..                LJ:iiiii::iL::rr:i:7i:iiii:i:i:i:i:i:i:,:OBUj121uGNLuv,:1v,:::..  :YPBEXS2LvvYLuJu2U7,  .:irii:iiiii:i:i:i:i:i::iuS1:.iSr::i:i:i:i:i:::i:i:i:iirr7rvjkqP2FFXXPkPkPkPXPXPXqXqXqXPXqkqkqkPXqSPkPSXFkkSSkFkFk5S5kFSFk5S5kFSFkSXkPPqXNqENG0ZEGE8Z8ZGZ8Z8EGEGE8Z8Z8G8G8GOGOGO8O8O8OGOOO8OOOGOOO8M8OOOOMOO8MOMOOOMOMOMOOOMO</span></span><br><span class="line"><span class="comment">//               kv      ;,  ,:ii:..:i7j7::SBu:i:ukZ027vF8k1u1SE0PUL777LvLLLvLLLvvvu1Suvi:,. . . ..........:::........ .   .             .           .:i71v,                                    ,Siiiiiiii::7r:ivi::i7:i:i:i:i:i:i:i:i:::,:MBuu1U1k87j2r.rk7::::.. .iLuOMNSXuLvYLJYuj1uv:   :;iiii:i:i:i:iii:i:i::ruU1:,:F7::i:i:i:i:i:i:i:i:i:iirr77vUSPq5kSPXPXqPqXPkPXPXqXqXqPqPNPNPNPqPNPPXPkPXPkXkXSXFXFXFk5kSSSkFkFkSkSXkXXNP00ENE0G0GZ8ZGEGZGZ8ZGZOZ8Z8ZOG8GOGOGO8OGOGO8OGOOOGO8O8O8OOOOOOMOOOMOOOMOMOOOMOOOMOM</span></span><br><span class="line"><span class="comment">//                SJ      i:  .:ir:...:;vL7:LZrri:7rLSE5L7USqF1u5kE0q5uL7r77vvLvLvL7vvJUFFFuuv7rriiiiirrrrri,..........       .                   .:UujL2BE.                                    2Liiiiiii:i:rr::v7::iir:i:i:i:i:i:i:i:i:i::v@OJu1u18u7jui.vSv,:::,...iJLXMOkPS5LvvJLjJu21v:   ,i;ii:i:i:i:iiiii:i::7jJ1:.:5v::i:i:i:i:i:i:i:i:iiiirrv7j5SkqFSSXkqkqPNXNPqPNPNPqPNPqq0P0PNPqP0P0PNPqXqXNXqXPXPkPSXSkSXFXkkFXFXSXkqXqP0q0NZ0ZZZEGE8G8G8G8Z8Z8Z8G8Z8Z8G8Z8GO8O8OGO8OGO8OGO8O8O8OOMOO8OOOOO8MOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//                 Sq.     :r   .iv7...,:r7vrrrrrr:7rirJkGuLY2FX5Fu5SNEZqPUuLv7vr7rv7v7vvvvLYuu21FSXkk1jr:............ . .                      .iJ17:,.                       . .             iSiiiiiii:iiii7::iYi::iii:i:i:i:i:i:i:i:i:::7U@5uU2UMFvJuj:.JSL::::,,..iuvYPBZXSPUYvLLjJju1UYi. .,::iiiii:iii:i:iii::vYJk:.:Fv::i:i:i:i:i:i:i:i:ii;i77vvUSSkPkkSqXNXPPqPqPNPNPNPqPqPNqNP0qNP0P0q0PNqNqNPNPqPNPqPPXPkPkPkXkPSXkXXPXqPqPEqENG0ZEZZ8ZGZ8Z8G8Z8Z8Z8G8G8G8GO8OGOGO8O8OGOGO8O8OOO8MOO8M8M8O8MOMOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//                  uO;     ,v.   :7Yi,...,:ir77777ir7riiMMkPUuj2U51521USXEEGEGqPkFj51F55152521U1uY7ri:,............. . .   .                 .:77i                             . ..           S7:iiiiiiiii::r;:ivL:::i:i:i:i:i:i:i:i:i:i::iL8BYUUUq8vSuuY::uFJ:,,,.,..:JJvYEMOSPk1LvvYLJYUU1Jr:..::i:iii:i:iiiii:i:iYLUP:,:S7::iiiii:i:i:i:iiiiiirr77vLF5FSqSPkqPqXNPqPqPNXNPNXqqNP0q0P0q0qNP0q0qEN0qNq0qNq0q0qqqNXqPPXPXPXqXqXNXqXNqE0ZNZ08E8Z8ZGG8ZOG8GOGOGOGO88GOGOGO8O8O8O8OOO8O8M8O8OOOOOOO8M8M8OOOOOOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//                   LBN.    .Yi   .iYLr:,...::ii777ir7r:vB12GXS15U22F15U1uUu12FFE@Ei;7v7v7vr7;i:::i:,............ ... . .                   ::i,    .....                       . ...        v2:iiiiiiiiiii:;r::7Lr:iii:i:i:i:i:i:i:i:i:i::vFB2j1uSMJLPLUL::U12i,.,,,,,,vuL7uqMGPkP5j7LLYLjJ1Uu7i,::i:iiiiiiiii:iii:rYLkk,::kr::i:i:i:i:iiiii:iiiirr77vuS5SkqkXXPPqPqPqXqXNqNPqP0P0q0P0PNq0q0P0qEqEqEN0qEN0NEqENEq0q0qNPqPqXNXqPqPNP0N0NZNZEZEGZ8GGZ8Z8G8G8ZOGOGO888O8O8OGO8O8O8O8OGO8MOOOOOMOOOMOO8M8MOMOOOOOMOMOMOM</span></span><br><span class="line"><span class="comment">//                    7MMv     rL.   .rLJ7r:::::;r777:r77:XMu1N215FFS1SSPXXSXFk5FJUG0: .::::::::i::,................. . . .   .          .:::,.     ....                          . .        :Piiii:iii:i:i:::7::iYvi:i:::i:i:i:i:i:i:i:i:::vj@5uU2uB17FSvuL:iuU1L:...,,,,ruuvvY0MMqXk5LLvLLJLuu2uLii:::i:iiiiiiiii:i:7YYN1,:iSi::iiiii:iiiiiiiiiiiirr77L5SFkXPFPXqXNXNqqXqqNPNPNqqPNq0PNNEq0q0q0NENENENEN0q0qEN0N0NEN0N0q0P0P0PNq0qEq0qZNZ0Z0GZGZ8EGGOGOGOGOG8ZOGOGO8O8O8O8OGO8O8O8O8OOO8OOMOMOM8MOO8OOMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//.                    LOEPr    ,Li.   .iJjY77rri7rv7i:i77iMqjS0U1251555251S5kSXF1uuX@5:.::i:i:i,,...,.............. . . . . .   .   .:ivE1:   . ..,....                           .   .    .N7iiiiiiiii:i:i::ri:iLYr::i::ii:i:i:i:i:i:i:i::ruBkj1ujZMrYEuvuL:ruJUu7:..:::,iJ2LL7YkMMZXkUuLLvYLJYuu2Jvi::::iiiiiiiiiii:LLJZv.:rqi::iiiiiiiiiiiiiiii;irr77UFF5kPPkPXPXNPqPqq0qNqNqNN0qNqNP0N0N0NEN0qEN0NENENZ0E0E0ZNENENENE0ENEq0q0q0qEN00E0E080GZ8Z8ZOZOZOG8ZOGOGOGOGOGOGOGO8O8O8O8OGO8O8OOOOOOO8MOOOM8MOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//:..                   iZ00Ni    :7i.   .i7JJjLLvLvLri:irrvMUuX0u51F251F152225U125UuuMMj..:i:i::,,................ . . . . . . .    .,.rv  .........                               .       1Y:iiiiiiiiiiii:i:r;::LLLi:i:,iii:iii:i:::i:i:i,iU@1uU1u5BYr5ZYvuYr7uLuuu7i,,::::72uJv7vSEMOGSFujLLLYLJYuuUJvii:::iiiiiiii:;JvUZi,:JX:::iiiiiiiiiiiiiiiirrrr7u51FFXXXkqXqPqP0PNP0qNqNqNq0q0q0NEq0N0NEqE0ENE0Eq0NZNZNE0ENE0E0ENE0Zq0qE0ENE0E0ENZ0ZZGEGEGZOZOGOGO8O8OGO8OGO8OGOGO8O8OGO8OOO8OOOOOOOOM8OOMOMOMOOOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//.....                  .5E1ZP7    ,r;i.   .:i;irr7vYYuv7r7qOJ2Xq251F151515151525U2u2ukBMr..:::::,,.............. . . . . . . . .         ... . .       .                                 L1i:iiiiiii:i:i:i:i:r::vjv7:i:,:i:i:i:i:::::i:i:,:PB2u2U2YBN77EELvjL7vYYJYUULi:::::;uUuLLvLjPGMOES1JJvYLLLjYuuUJv;i:::iiiiiii7JvkP:::F5:iiiiiiiiiiiiii;i;irr77uU51SSPkPkqPqX0q0PNq0qNP0q0P0qEN0qNq0N0qEqENE0E0ENZNZNENZ0ZEE0Z0Z0Z0ZEZ0Z0ZNZ0Z0Z0ZEGEZE8ZGG8ZOG8ZOGO8O8O8OGO8O8O8O8OGO8O8O8MOM8M8M8M8MOOOMOMOMOOOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//:.,......       .   ...  rE51PZJ:    .:iiii     ..,,:7LJj7uBPj1PPU51F1F5F155F15U1F1u1uu8@8r .,:::,,.............. . . . . . . .           .   .     .::..                               7kiiiiiii:i:i:i:i:i::ri,7jLvi:i.:ii:i:ii::::::::::vZ@JUU5ujX@v7vOqJvjYYLJLjLjU1Yr:::::vuUYYvvvLjXZMMOk1YLvLLJLJYuuUJJ7rii:iii:;vYv8U::iEj:ii;iri;iiiii;iiir;rr7J1u11kFPSXXqP0qNP0P0q0q0P0P0qEqEN0q0q0N0q0NE0E0E0ENENZ0Z0ZEEEZ0Z0ZEG0ZEZ0Z0Z0GEZ0ZEZZZZGZ8Z8EOG8ZOZOG8GO8OGOGOGO8OGO8O8O8O8O8MOMOMOMOO8O8M8OOMOMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//..::....,,.... ..,,,,,..  .205uP0Sr.     .rMOv.      ..:irrEB1u1qku11k251F2525225021U2uJN@B8i. ,,:,:........ ....,.. . . . . . . . .             ..,:i,.                               iXr:iiiii:i:i:i:i:i:::;i:i2LYr:i.,;:i:iir:::::::::UY@GYuUU1uuBNrvJMXuvJYJLJLJLuu22uvi::,iL1uuLLLLvLYSEMBB0SYLvLvYLjYuj2uJv7;;ii:7LvuMr::7G7:iiri;i;i;i;i;irir;rrjuUu11kkXSPXqqqP0P0q0q0NNP0q0q0N0q0q0qEN0NENENZNENZ0ZEE0Z0Z0ZEZ0ZEG0GEZ0ZEGEG0ZEZEZEGZGE8ZGZGGOGOGOGO8O8OGOGOGOGO8OOO8OGO8O8O8MOOOMOMOO8O8MOMOMOMOM8MOMOMOMMM</span></span><br><span class="line"><span class="comment">//  ,::::,:,:::::::::,:,:...  ikE2u1X1Yi.     0B@BqL:.    ....qG2U1PFU1kXU51F2F215ZF2U5U2ujN8@@Zr ..:,,.,.......... .,... . .     .     . .         ...                                 iX7:iiiiiii:i:i:i:i:i:::r:iuuvYii..ii:i:r;::::::,i5juBSj2Juu2YqBL7v1MF2vLYJLuYjYuYju1UL;:,:iJUUJjLYLLvvvUkOB@OEUY7v7LLYLJJuuuYLrrivv70E:i:50r:;irir;rir;ririr;ri7YuuUU5FXSkkPXNqNqNq0qNq0PEqENENENEN0NZNE00NENZNE0E0E0Z0Z0Z0Z0Z0Z0Z0GEG0GEZEGZG0GEGEGEGE8ZGZ8GOZOGO8O8OGO8O8O8OGO8O8OOOGO8OOOOO8MOMOO8O8OOM8M8MOMOMOMOMOMOMMMO</span></span><br><span class="line"><span class="comment">//   ,::::::::::::::::,:,:,,..  ikZPUUJYLLr:   ,B@B@B@Gui.    .OF2ukZ1u5kSU5152kkkN5U52522jJ0Z8@BO7. .,,.,..........   . ... . . . .       . .                                         :q7:iiiiiiiiiii:i:i:::i::ii:uULL7i: iii::7i.::::,:F2LS@kGOMPuYuY@87vvXOF5LLLjLjYjYjYjJu21j7:::rY2uuYJYJYLLvvLuP8BMMN5Y77vLYLJYuJuJLvLvjMJiiiZ57iiirrrrrrriririr;rruJujUU5Fk1XXqPNqNqNq0q0P0NEqEqEqEN0qENEqZNENEqE0E0Z0Z0Z0G0ZEZ0G0Z0ZEG0GEGEZEGZGEGEGZ8ZGZ8Z8Z8GOZOZ8GOG88OGO8OGO8O8OGO8O8O8O8O8OOOOMOOOMOM8OOMOMOMOOOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//:.::::::i::::::::::::::,:,,..   :u8EPULr77Jvr.:N@B@B@B@B8ui  iZuUuMG2u5XF1FSP5uFXU52521U1juEGGq0@Bu:  ..,...... ... ... . . . . . . . . .   . .                             .     . :kv:iiiiiiiii:i:i:i:::i:::ii:v5LLLi: :r:::Y:,:::,:F5jvMO11kPMMPLL2@u7vvZO5kJLLuJuJuYuJjYuj11Uvr::7jjuJuJjYJLYLL7vvJ5EOMMEFu777vLJLJYJYL7ON7::LGLvi;ir;rrr;r;rrrrrivYJYuu2UkF5FXkqPNP0q0q0N0N0q0NEq0NEN0qEq0NE0EqEqE0ENZ0EEZEE0EEZEGEG0GEG0G0GEZEGZ8EGE8GGEGZOG8ZOGOGOGOG88OGOGO8O8O8O8O8O8OGOOO8O8OOM8OOOOO8MOOOMOMOOOMOMOMOMMMM</span></span><br><span class="line"><span class="comment">//;iii:i:i:i::::::::::::,:,:.,...    rkOG02vi::rr7qBB@@@B@B@B@G2BNU1G@PF1PNX52LJkXU511U522u1Ju00OqU0B@0v.  ............. . . . . . . .   .     . . . .   .                 .       . :Pv:iiiiiii:i:i:i:i:i:i:i::i;:7U1vJi: ,ii:rJ,.::.,15uLYBOXk1S10BM17N@vvvLOG1XUYLJYuJuYuYjYuJuu5Uu7r;LLuYuJjYjYjYjJJvv7vvUSOMMZkJv7vvLLJL71ML7:rZ2LLrrir;r;rrrrrrr;rvJLYLuuU1SUSFPXNq0P0q0q0qEq0q0NEN0qEq0NE0ENENENE0ZNZ0Z0Z0Z0Z0ZEZEG0ZEGEGZZEZEZEGZGZGZ8G8ZGGOG8GO8OGOZOZO8O8O8O8O8O8O8OOO8O8O8OOOOO8OOOOO8M8OOMOMOMOMOMOMOMOMMM</span></span><br><span class="line"><span class="comment">//;:iii:i:i:i:i::::::::::,:,,.,..      .r58O8FLi,.  ,irLkq8OBB@B@FJLu1SF1jJvvLFXkU5152125U2U2Y2ZqOEUFkM@@N7.  ........... . . . . . . . . . .   .     . . . . . .       . . . .   . iPv:iiiiiii:i:i:i:i:i::::::::r:r15vLr: .;::vu..:..uSUuLF@MBOZS52FZ@G1M87LvYOEUS1uvJJuYJYuYujjJujuu1uuLYYuJuYujuYju225UuJLv77vYXEBMZ1Y777L7YB2vriX0vLjLLvL7v77;r;r;rrYLLLYLuuF112kSPXNqNqEN0qEN0qEq0q0qENZNZqE0E0ENE0ZNE0Z0Z0Z0Z0ZEEEZEGEGEGEZEGEZE8ZGZ8EGEGZ8Z8G8Z8G8G8ZO8OGO8O8OGO8O8O8O8OOOOOOO8OOMOMOM8MOMOMOMOOOMOMOMOMOMOMOMM</span></span><br><span class="line"><span class="comment">//::iiiiii:i:i::::::::::::,:...... .      .iJqGOZSY7:.         ..::rr77v7LY1XX11212F152F25U2u2YSZXME2S5SPMB@EJ:    ....... . ..... . . . . . . . . . .   .   . . .   . . . . .   ..rk7:iiiiiii:i:i:i:i:i:i:::::::r:iYXLYr: .iii1L .,.LS2juvE@@M@B@OP1FFZMM@Nr7rvEPuF2uvLLJLJYuJuJujuJujuuuuuJuJujujuJjJU2SSS15uuLL777ukOMMPU77rOPvvi7MJvLJLJYJLJLL77rrivLJLYLJYuF1u25SSqPNPEN0qEqEN0q0N0N000NE0ENENE0E0E0Z0Z0E0ZEZ0Z0ZNZEGEZ0ZEGEGE8ZGZ8Z8ZGZ8Z8Z8ZOZ8Z8GOZ888G88OGO8O8O8O8O8O8MOO8O8OOO8OOO8MOMOM8MOMOMOOOMOMOMMMOMOM</span></span><br><span class="line"><span class="comment">//i:iiiii:i:i:i:i::::::::,:,,.............. ..:;Luq0ZEEq5juLLvLLuu2u22F2PkS5Pk2U515U125U5U1U1UuLNEkOZ1kFk5SPMB@Mqr:   . ......... . . . . . ... . .   . . . . . . . . . . .   ....vkr:ii;iiii:i:i:i::::::::::::::ii:YXFv7: .i:7Fr ..7k2uUjuZL7XZBB@@MSF5Sk8@MNXUFBEFPXkuujuYYLJJjYjYjYJYjJuYujujujujujjYjJ25XkXFS15uL777YUNOMEu0OrY7rZP7YLYLJLYLYLJLYvvLLLLLYLJjkuuu15SSPXE0E0Eq00ENE0EN0qENEqENE0Z0E0E0Z0Z0ZEEEE0Z0ZEZ0GEGEG0GZGEZEGEGEGE8ZGZ8G8G8G8ZOG8ZO8OGOGO888OGO8O8OGO8OOO8O8OOM8O8MOMOMOMOOOMOMOMOMOMOMOMOMMMM</span></span><br><span class="line"><span class="comment">//iiiiiiiiiiii:i::::::::::::.... ...,:,::::i:::::::::rr8BM8@@@B@B@@Eu08u0PjuUEFUU52521U1U1U121UuJ8XSO8FkFkSkFSkZM@@BXY:.     ..... . . . . . ...   ...   . . . . . . . . . . . ..u5i:iiiii:i:i:i:i:i:i:::i:i:::::ii:vqkv7: :i:LS: .;S1uUuuuOF:.:7UXMB@OPFkFkq88OZOMMMBMMMMOOZPjL7LvJjUU1uuYYYuJjYuuuJujuYjYuj25kSXk8GFLvvv7vYkE@B5L7iFGvvYYJLYLYLYLYLJLLvLvYvLL55uYuu55SkqqZq0qE0E0EqENE0EqZNENZ0E0ZNENZ0ENZ0E0Z0G0G0Z0G0GEZEG0GEZEGZ8Z8ZGZ8EGGOG8Z8Z8Z8GOZO8OGOGOGOGOGOGO8O8OGOOOOOOOOOOOOO8OOMOMOMOMOMOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//r:riii;iiii:i::::::::::::,,.......::i:ii;i;i;iririii::0Bir8B@MMM@GLU8LZ8FYu58uUU1U5U12221U1U2uJ5O5k8OFSSXSkFkFkFPEMB@BOPLi.       . . . . . ..... ..... . ..... ... . . . ...,Suiiiiiiiii:iii:i:::::::i::::::::ir:L5Evv: :::1u. :1SuuuUuS1Lq1:,.::7UMBMkXkXSkSSFF1k5F2521u2PMZXFkkFLLL1SXFUvLYjJujujujuYuYJYJj15S2NMO1uLLvvr7720MEJjMvLLYLYLYLJLLLJLYLYvLvLvJSuYLYuU51XXZqENEqENENENENENENENE0E0ENZNENE0ZEZ0Z0Z0Z0ZEZEZ0Z0GEZEZEGE8E8Z8ZGZ8Z8Z8Z8G8GOZOG8ZOGO888O8OGO8O8OOOGO8O8OOMOOOOOMOO8MOOOMOMOOOMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//riiriii;ii:i::::::::::::::,,...,.::ii;irrr;rr7rrrr;rri:0N::YO@BMO@2Y0Y0@B5LuqEu2u5U121U1U2U2U2uJE05SGOFSFXSXSXFkFkFSSPG@B@BB0u7i..         . . ..,  .....  . . . . . . . .. iEL:iiiiiiii:iii:ir::::i:i:i:::::::i;:7UGu7: i:rFL  LXUuuUuuXu.iFZvi::,,.rZ@ZPXPkN0q2Lrv7LvLvLvvLkO@M8PSjL7vJXEGkuLLvYLYvLLLLYvYvLvYu5U2PMGk55JjJjLLJNO@BuLJLLvYLYLJLLYLLYLLvLvv1XLuvYYUuFFN00q0qEqEqZNE0ENEqENE0E0ZNE0E0Z0E0Z0EEZEGEZ0ZEE0ZEZEZ0ZEGEGZ8ZGE8ZGZ8Z8ZGG8G8GOGOGOGOGOGO8O8O8O8O8O8O8O8O8MOO8M8OOMOMOM8MOMOMOMOMOMOMOMMMOMMM</span></span><br><span class="line"><span class="comment">//7iiiii;ii:::::::::::::i::::,:,::::ii;irrrrrr7r7r7r7r7r;iPJiiruM@@BGvqj0B@OjYUGFu2u12121u2U2u2uULF8XFFEOkSSkkXkXFkSXFk5Fq0SNZMB@B@BOS2vi::..       ..........      .   ...  jO7:i;iiiiii:i:i:i:7i::::i::::::::::ir:7JB27..::vXi.ikUuuUuUuN7.::7XFLii:i,,7MBNkPkZOON17vLYLjLJLLvLJkGMMOP1LvrvuqZOEPFSFk2521252111UUUXPXPM0PPPFS5FUUJuSXSFu222uuYYvYvLLYvYLLLvLZYLLvvYY21XENP0PZqENZNZ0EN0qZNE0E0ENENENE0Z0Z0Z0ZEEEZ0Z0E0GEG0ZEGEZEGZ8ZGEGZ8GGZOZGZ8ZOZOGOG8GO8O8OGOGOGO8OGOGOGOGOOM8MOOOOOOOMOMOMOOOMOMOMOMOMOMOMMMOMM</span></span><br><span class="line"><span class="comment">//rii::iiiii::::::,::::i:::::::::iiiir;rr7r7r7r7r7r7r7777rr5LrrrrjG@B252NBOB0JLP0uu2u1u2u1U1UUuUujJOP0kFqOXkFkFkSkFkSkSk5SEPFXFkP0kPqOMBMBOOqP5u7ri:,,...,.,.              ;Z8i:iiiiiiii:i:i:i::iv:::::::::::::::ri:7JBqi,,i:5U:,25UuuuUuUX7.::::v2SLr:i:,,5BOkPSXNMM0JvvYYjLJLJLv7Luq8BMOkuv7rvY1SNNE8MOMGZqNPqkk51uUJJvLvv7vvLvvvv777vvLLjJuu125uUYJLLLLLL7GSvYY7vvUU1ENSqP00E00N00EqEN0NENENE0ZNZ0ZNE0ZNZ0ZNZ0EEZ0E0GEGEGEG0GZGEGEGEGZGZ8Z8Z8GGG8G8Z8ZO88GO8OGO8O8OGO8O8OGO8O8OOO8O8OOO8MOMOMOMOMOMOMOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//r:i::::ii::::,:,:,::::i:iiiiiiri7r7r77777r77777r777777v777UL77vr7LGkU5OB@B@PLJOFjuUu2U1U2u2uUuUJjNEkZqSkOPSFkSXSkFXSXSS1N0kSP15XZX5251FFXXNNZZ8GOGOOMMqJSXk7uuvrriiii:rJGOj:iiiiiiiii:i:i:i:i::7r::::::::::::::7i:vLBZi,::rSj.7FUuUuUuuuqr,:::::iru2jriii,7OBXXkkSEOMkY7YLJLJYjLYLL7YU0M@BOSJ77rv7v77LFSX1FU2jjvL777v7LvLLYLLLYLYLLvLLYLYLLvLvLLuu2U1UuLL7POvvjv7vUujqZ5Xkq0Eq0qEqENENE0Z0Z0E0ZNENZNEEZNZ0EEE0EEE0GEZ0ZEZ0Z0Z0GEGEZZGZGZ8Z8G8GOZGZGGOZ888Z8GOGO8OGOG88OGOGO8O8OOM8MOMOMOMOOOOOMOMOMOMOMOMOMOMOMOMMMO</span></span><br><span class="line"><span class="comment">//riii:::iii:::::::::::iiii;;rr7r7777777777v7v7v7v7v7v7v7v7v7v7vvv7vLPuNB@BMXM1LSGJUu2u2U2uUuUuUuuv0ZkSENkkOqSFXSkFkSkFkFS5GPkkk21100kU515552525211F25kMBSirY11q0OOOOMOO8qvi:iiiiiiiiiii:i:i:i:::iL:::::::::::::i7::vJMOi:::7Pi:U5uujuuUu2P7.::::::::rv2jvii,:k@ZXkXFkPM8SvvLYYjYJLjLLvLvJ1ZM@B81L7vvYLLLUFqPqXqkPSSujvvvYLYLYLYLYLJLJLJLYLYLYLLvLvv7LLju12kBJ7LLYLjYLPG2F5NEEqNqZNENE0ENE0E0E0E0ZNZNZEE0Z0EEZ0Z0G0Z0Z0GEZEGEZEZZGEGZ8E8EGZGZ8G8G8Z8Z8Z8Z8G8GOG8GO8O8OGO8OGOOO8OOO8MOM8O8OOMOMOMOMOMOMOMOMOMOMMMOMOMOM</span></span><br><span class="line"><span class="comment">//7iriiii:;iiii:i:::i:ii;ir;rr77v7v7v7v7v7v7v7v7v7vvvvv7v7v7v7LvLvLvv5SEFZ@BZYNJYZkY2u2uUuUu2uUuUjLPGSXSEqkSG0FFkSXSkFkSSF5P8kPXF55US0NU5151511U521U2uUY5MMr.:i:i:::i:i:::iiiiiiiiiiiiiii:i:i:::::vv::::::::::::v;::L5XUi:::uF:7FJujujUjuuP7,:i::::::::i7Yuvr::7@MXkPSXk0ZG2LvYLJYjYjYJLLvLvj1GB@B0Jv7LvLvLY1FPPPXXP0XFjYvLLYLYLYLJLYLYLJLYLYLYLYLLvYvL7vvLuFuULLLJvvq8uU10E0kqP0N0qENZ0ZqE0E00NZNE0E0Z0ZNZ0Z0E0ZEZEZEZEZEGZZ0GEZEZEGZ8Z8ZGZ8Z8Z8Z8GOGOGOGOGOGOGOGOGO8OGO8O8OGO8OOO8MOO8O8MOMOMOMOMOMOMOMOMOMOMOMOMMMM</span></span><br><span class="line"><span class="comment">//7rrrrr;;;rrriri;ir;r;7r777777v7v7v7v7L7v7vvvvv7L7LvLvvvvvLvLvLvLvL72XOv7JOB@PXv5Euu2uUuUuUuuuUjuLZNXXPSENkSZES5XSkSkFk5S5FEZFPS525U5qG222121U5u2U2u2uujJq@X::ii;iri;i;i;i;iiiiiiiiii:i:i:i:i:::::J7:,:::::::,77:::YO:Ji::i1ui1uuJuuuu2uUSL.::::::::::::ii7vvr::EBGkXSPSXqEX1LLLYYjYjYjLJLYvvvuFOB@OFvv7LLLvLY25PPPq88ZFUvLvYLYLYLJLJLYLJLYLYLYLYLLLLLLvLvv7YUk2u7LEZLuSGqXSPX0qEqE0ZNENENE0E0E0E0Z0ZEENENE0Z0Z0Z0ZEZEGEZEZEGEGZGE8ZZEGE8EGEGZGE8Z8GGG8G8GOGOGOZO8O8O8OOM8O8OGO8OOOOOOOOMOOOMOMOMOMOMOMOMOMOMOMOMMMOM</span></span><br><span class="line"><span class="comment">//vr7r7r7r7r777r7r7r777777v7v7v7vvv7vvvvLvL7LvLvLvLvLvLvYvLLLLLLLLJLvJPqLLL7jM@B17E5juUuUuUuUuUuuLuGNSqXXF0NkSEZk5k5SSSFkFS1XGqFX212FU2FO5uU2U1U2UUu2uUuUjLJMMr,iir;riririii;iiiiiiii:i:i:i:i::::::iY7i,:::::,7vi:::q1.ur::iFvYUuJujuju22JSu:,:::::::::::::::iri:.LBMkXSXkXSqkF2ULYLJYJYjLJYYLLvLLUXMB@0U777LvLvLLUFXkNZOZPjLvLLYLYLYLJLJLJLYLLLYLYLYLLvLLLvLvvvu1XOPLFNN511kkqPNN0qZ0ENZ0ENE0EE00E0E0G0Z0Z0ZEG0Z0Z0GEZ0GEGZGE8EGEGEGE8EGE8Z8E8Z8G8Z8Z8G8G8G8ZOGOGOGOGO8O8O8O8O8OOO8OOOOMOMOMOMOOOOOMOMOMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//777v777v777v7v7v7v7v7vvLvLvLvvvv7vvLvLvLvLLLLLvLLLLLLLLYLYLYLJLjLJvukkvJjuLv2@MYuNJuuuuUuujujujYU8kXkPSXF00kF0Zk1S5kFS5S551NGkkkU5252U18kuu2u2uUu2uuuUjUJvu@@Y,iir;riri;i;iiiiiiiiii:i:i:i:i::::::;L77i:,:iY7i::,LF,.u;:,71YjuJuJuJuj5uuUS:,::::::::::::::::::::.:P@NkSPSXSX5Uu1ujLJYJYJYjYJYJLLvvL10@BBPj7vvLvLvLL21XXEGOXUvLLYvYLYLYLYLJLYLJLYLYvYLYLYvLLLvL77JNXN1UJ22FFkXqXEPE0E0ENENE0E0E0ENZ0E0E0ZNZ0Z0G0EEZ0ZEZEGEGEGEGE8EZEGE8EGEGZGZ8Z8ZGZOZ8Z8ZO8OGO8O8O8O8O8O8OGO8MOMOM8M8OOMOOOMOMOMOMOMOMOMOMOMOMOMOMMM</span></span><br><span class="line"><span class="comment">//vrvvv7v7v7vvv7v7vvLvLvLvLvLLLvLvLvLvLvLvLvYvLLLLYLLvYLJLYLYLJLJLJYLuPuYLuuujYL0qYX1YuuuuuuujuJjLq0PXXSXXPS0EX5E8k1S5F5S1S211GESk1u121UUuOkuu2uUuUuuuuuuJYJ@qPBS,:iriri;iiiiiiii:i:i:i:i:i::::::::::rLr77vvvi::::uU:.,vr::75JuJujuJuJuU2YuF;.::::::::::i:i::::::::..7@OXFXSXFXkULuU1jJLYYjYJYJYjYJvLvLL58@BBSJ7vvLvLvvL21PPGZPuLvJLJLYLYLYLYLLLYLYLYLYLLLLLLLYvLvvju2FJuu12S5XXNP0PE0Z0Z0Z0ENE0EqENZ0E0Z0E0Z0ZEG0ZEZ0Z0ZEZEGZGE8EGZZEGEGZGZ8EGZ8Z8G8G8G8ZOGOGOGO8O8O8OGO8O8OOO8MOMOMOM8MOMOMOMOMOMOMOMOMOMOMOMOMMMOMM</span></span><br><span class="line"><span class="comment">//v77LvL7LvLvLvLvLvLvLLLvLLLvLLLvLLLLLLLLJLYvYLYLYLJLJLYLYLjYJYJLjYJvUXJLjYuuUuuJqu2SjJujujujujjYL0NkXkPkPkXF0Ek1N8k2S5F5F1F25SMXkF2U122UuuMSJu2uuuuuujuJj7OM51BBq::i;i;iiiiiiii:iii:i:i:i:::i::::::::iL7i:::::i71v,.:.v7::JUuJuJujuJuJ2UujFL.,::::::::::::::::i:i:::.:8BNFXSXFPX5LLY2UuJJLJYJYJYJYjYYLL7vLSO@BM5Y777LvL7LLu1q0GPUvLLYLYvLLYLYLYLYLYLYLLvYLLvYvLvL7Uv7uq2uj11SFXPqqNN00ENZNZNENZNE0Z0E0Z0E0ENGNGEGEG0ZEGEGEZEGZGE8ZZE8EGEGEGZGZGGGZGZ8G8GOG88OGOGO8OGO8OGO8O8OOOOO8O8OOM8M8MOMOMOMOMOMOMOMOMOMOMOMMMOM</span></span><br><span class="line"><span class="comment">//Y7LvLvLvLvLvLLLLLvLLYLYLLLYvLLYLYLJLJL7YjLJLJLYYjLJYJYJLjYJYjLjYuYJUFLjYuJuuuUuUPJPjjjujuJujujJj8XXkPkqXXFPkEEk508S252F1515u1NMSkUU21u2ujuM1juuuUjuJuJu72BX15M@BG::i;i;iiiiii:i:i:i:i:i:i::::::::::::,r7LvLvJJv:.,:,,7v,:U2JujjJujuJju2LjUF:,:::::::::::::::::i:iii::.uBO5kSkkPPSLvvJJUjujjLJYjLjYjYJLYvL7vLXO@BO2Y777LvL7LLu5q0NUYvLYujJvLLYvYLJLYLYLYvYLYLLvYvvu277LqXuJ22FFkkqqNqZ0ENZNZ0ENZ0ZNE0ZEZ0Z0Z0EEZEZ0ZEGZZZGEGEGEZZGEGEGEGZGEGEGZ8Z8G8GOG8ZOZOGOGO8OGO8O8O8O8O8MOMOOOMOM8OOMOMOMOMOMOMOMOMOMOMOMOMOMOMM</span></span><br><span class="line"><span class="comment">//LvLLLYvLLLvYvYLLLJLLLYLJLYLYLJLYLYLYLJvrLuYJYJYJLJLJYJJuJuJjYuJuJJYX1JJuuujUu2uUF5UFLuJuJujuJuvXGXkPkPSS1F5SkZ0S5EG125152515u5G81Su2u2u2uJ5MJjjuuuJuYjv7@O1S1MMGBMi:iiiiiiiiii:iii:i::::::::::::::::::,,,::i::.,::::.rv:i5ujYujjYuJuYu1jJuSv.::::::::::i:::i:i:iiii;::.i8@kSFkSXXXJLvYLjYuJujuYjYjLJYjLJLYvL7vLkM@@MSj777Lvv7vvj1PPSJvvuU1ujLLvLvLLYLLLYLLLLvLvL7u5Lvv7FN2J22SSPkqq000NZ0Z0Z0ZEZ0E0Z0ENE0ZEZ0ZEZEZ0ZEGEZZGEGE8E8Z8EGEGEGEGEGZ8EGZGZOGOGOGOG8GO8O8O8O8OOM8M8OOMOO8O8OOM8O8MOMOMOMOMOMOMOMOMOMOMOMMMOM</span></span><br><span class="line"><span class="comment">//J7YLYLYLYLjLYLJLJLJLJLJLJLJLJYJLJLJLjYu7rJuYuYJYjYJLjYuJuJuJuJuJjjUqFLuJuuUuuu2u2S1FuJuYuJuJuJLPGSPkXFS1S5S1SSOqSFG0UU51F25U2uSM0F1JUu2uUjY0GLjJuJuYJ77OB1S5FMBEMBMi:iiiiii:iii:i:i:::i:i::::::::::::::::,::::::::::,:v:i2UJuYjJuYuYuY5jYJ1S:.::::::::::::i:iiiiiiiiii:.,u@OXFkSXPquYvJLJLjLuYuJuJuLjLjYJYJLJvv77vS8@BBq1v7777v7vvu5NP577vU25uuLLvLLYLLLYvYLYvLvvYkvvvL7UESY11FSXXNNEqE0E0Z0Z0ENE0E0ZNZ0ZEE0Z0Z0ZEGEZEG0GEG0ZZ8EZEGZGZGE8E8ZGE8G8ZOGOG8G8GO8OGOGOGO8O8OOOOO8O8O8O8OOMOM8MOMOMOMOMOMOMOMOMOMOMOMOMMMM</span></span><br><span class="line"><span class="comment">//YLYjJJLJLJLJYjYJLYYjLJYjYJLuLJJJYuYJYuJULrYUYjYjJuYuYuYjJuYjJuJju2uZjjJujUuUjUU1u5SXjYJuJuJuYJLGPXkX1F5SFF5F25XOXSSOS2U121U1UUJPMP1uJUuUjuYJOFLjJjLLrLM@5kFk1B@@MYvGi:iiiiii:i:i:i:i:i:i::::::::::::::::::::::::::::,:7:i5juJjJuJjJuYJu1LjLqJ.,::::::i:iiiiiiiiiii:ii7vjJ7JMB05XSXkN5JvYYjLJYJYjLJYJLJYjLjYJLJLYLv77vukOBBMZ55YL77r77JSESvrvvjUF51YYvLvLvYLLLLvL7YSLvLLLvJNXY22SFPX0qNNEEE0EEZ0G0Z0E0ZNE0ZNEEZEG0ZEZZZEGEZZZZGZGEZE8ZGZGE8ZOZGZ8Z8ZGZOZOZO88GO8OGO8O8O8OOO8O8O8MOO8M8OOMOOOMOOOMOMOMOMOMOMOMOMMMOMOM</span></span><br><span class="line"><span class="comment">//jvuYjJjYJYjLjJjYjJuYuLuYjYuYjLjYjYjJJYuJUL;L2jjJjJjJuJujujujuYju2YSkuJuuuuuuuu2u2uXN1LjYuYjYjvjGNSF1S5S5S5S5FUFqOFFP8U2U1U122uuJZMSuuuUuUJuvk8LLL77JE@M5kSX5FB@1i::20:iiiiiiiii:i:i:i::::::::::::::::::::::::::::::::,7:i1uYJJJYjJuYjLuFuLJjZr.:::::::i:iiiii:iirv25X1u7r:. YBMFSSkkqSuLLLJYjYjLjYjYJYJLjLJYJYJLJLYLLv77LY5X88O8ONq5UL772q5v7vLLuu512YLvLvLvLLLvLvPLLvYvLvLX0jU2FFPq0P0NZ0E0G0Z0E0E0Z0Z0ZEZEZEZ0Z0Z0GEG0ZZGZZZ8EGEZZGG8E8ZOGGZGZ8Z8G8Z8GOGOGO8OGOGO8OGO8M8OOO8O8OOM8M8OOOOM8MOMOMOMOMOMOMOMOMOMMMOMM</span></span><br><span class="line"><span class="comment">//JYjuYuYuYjYuJjJjJuJjJjJuJujuJuJuYuYjJuYujUYivF11uuJuJujuuuuUu52UYFu5uuuUuUuUu2u2u21OFLLjYjJuYvuMkF1kFF5S5F5F15U1GG5S0NJ2U2u2U2uuuMOFYuuuuuJJLMurvkMBOP5kSXSkq@;:iriiqJ:i:i:i:i:::i:i:i::::::::::::::::::::::::::::::::iii1ujYuYjJjJJjSLS1LLY1O:,:i:iii:i:::i7u5XS2Y7:....::, :O@XSFXSPX5vLLjYjYJYjLJYjYJYjLJLJYJLJYjYJLYvL777vvLYUSN08ZEkX0MkY7v7v7Lu515JL7LvLvLvvSu7LLLvLvvFZuU2SS0Pqq0NZ0EEGNZNE0ENE0Z0E0Z0GEZ0ZEZ0ZEZ0G0ZE8Z8E8EGZGE8ZZE8Z8Z8Z8G8ZOG8Z8888OGOGO8O8O8O8OOM8O8OOOOM8M8M8OOOOMOMOOOMOMOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//uLujuJuJjjuJuJuJuJuJuJujuJujuYuJuJuJuYujuj2ur:7Y11k5F551S5k5UvLjPjY5uuUu2u1uUU2U1UUEELYYuYJLjv2Mk1F5S5S5S151515uFOq5PZ1u2U2u2U2JYUMGuLuJuYuvrUOXBMGFSFPSXSkFMX:irrri7Pi:i:i:i:i:i:::i::::::::::::::::::::::::::::::::,iiiuUYjYjYJYuLuSYYqLYLYkE,,::::::ivjXPPuv:,..      .:::..u@GSFkSPPSYLLJYJLjLjYJLjYjYjLJYJYJLjLYLYLJLYLYLLvL7v77vYj21FX8qPF5uJv77YuF5FjL7vvL7kuvvLLYvLvv1ZUUUSqPk0q0NZEE0G0ZEE0E0Z0Z0E0ZEZ0G0Z0Z0ZEZ0GZGZGZ8ZGE8EGE8EGE8G8ZOZ8ZOGOGOGOGOGO8OGO8O8O8OOOOO8MOO8OOMOO8OOMOOOMOMOMOMOMOMOMOMOMMMOMO</span></span><br><span class="line"><span class="comment">//jJjuJuuuJuJuJujuJuJuJuJujujUuujujujUJuJuJujU1L:,.ii7vYLYv7;:.r2G1vYFuUuUu2U2U2u121uq8uLjYJYjuLu@S55S5S151F1515U1jP8S5G5uUUu2uUuUjY5B0LLJLL7v5M@OXSSkSPSXSXSSMu:;ir;ri5L::i:i:i:i:::::::::::::::::::::::::::::::::::::::r:uuJJjYjLjYJuELLFPvYLY0E,,:iruFNkur:.            . ,:i:.iM@PFkSXXXuLvJYjLJYJLJLjYJYJLJLJLJYJYJLJYjLJLYLYLYLYLLvv7777rvYU1S10XYr77LukkkuLrr527LvLvYvYLvUG2u2ZFXPNqE0ZNZ0Z0E0ZEZ0ENZ0Z0GEZ0GEZEZEZEGEGEZ0GEZEGE8Z8ZGEGZOZGZOZOZ8Z8GO88GO8M8O8O8O8O8O8OOOOMOOOMOMOMOOOOOMOMOOOMOMOMOMOMOMOMOMMM</span></span><br><span class="line"><span class="comment">//UYuuuuuuUjuuUuuuujUjuuUjUjuuUuuuujujujuJUjuuuUSu7,....,.,...7XXFuLu52uUu2u2U1U121u1SZ5LYjJjL2vuB0US1F1F2F15112522j8N5NNJuu2uujUjUJY5@k77vuGB@ES5XkXkXSXSXkkPB;iiiirrivUii:i:i::::::::::::::::::::::::::::::::::::::::,:i:v2LJYJYjYuvuGJvJE1vJLY0qiJ55Li.                .....:i:..F@OFSFXkq5YvYLJYjYJYJYJYjYjLJYJYJLJYYLJLJLJLJLJLJLLvLvLvjJU25UjYJJXEPv77v7vuXPXYqu7vLvLvLLYvvuOU2N5FPP0NE0Z0EEZ0Z0E0ZNZ0ZEZEZEZEZEZEGEGEZEZEZEGEGEGEGZ8Z8Z8ZGZ8G8GGGOZOGOGO8OOO8O8O8MOM8OOMOMOOOOOMOMOO8O8M8MOMOMOMOMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//uuuUuUuUuUj2uUuUuuuUuUjujUuUU1uUuUjUjuuuuujuuUu1SkL7::,:::;Uk5J5jJJku2u1u1U1U12121UkSkvJYjLjuLYMZ25F5F1515212521Uu1O5qNuuuuUuUjuuuLv2M1XM@O05XkXkPkXSXSXSX5OMii;iii;i7J;ii:i:i::::::::::::::::::::::::::::::::::::::::.iiiuuLYLJYJYYvM1vv2GjvJLYkMr...             . . . .....:i::.rM@kkSXkqSuvYLJLjLjYjYjYjYJYJLjLJLJLJYJLJYLvYvYLYLuu15kSPFS1uJjYJLjXOkLr7777LuFNqJL777vvLvJvvuO0quFkqP0NGNENZ0G0ZEZ0GEZ0Z0GEGEZ0G0GEG0GEZZZEGZGE8ZZE8EGE8ZGZ8ZGGOZGZ8Z8GO88GOOO8O8OGO8MOO8MOOOMOO8MOO8MOMOMOMOMOOOMOMOMOMOMMMOMMM</span></span><br><span class="line"><span class="comment">//2JUuUuUuUuUuUu2uUuUuUu2uUuUu222uUuUuUuUjuuuuuuuu22kSk5125FP51uU2uLuF2uUU121U1212121P2XJLjLJJ2LY8OuF1F2F212521U122uj00kGYuuUuuJuJuLLruM@OESSkPkXSPkPkXSXSPSSMX:iiiiiirrY;iii:i:i:i:::::::::::::::::::::::::::::::::::::::r:YJYLYLJLJLLPGLYvkZLLJLL75:.,:           . . . . ....,ii::.,5@GkFXkqP1LLLjLjYjLJYjYjYjYJYJYJLJLYLYLYLJYuu11kFk15uuJjLJYuJuJJLLLq8E1L77r7r7LFP02Lr77vvLvvJMEj2SSPXEN00E0Z0E0E0E0E0ZEGEZEZEZEGEGEZEGZGEG0GEGEGE8ZGEGZ8ZOGGZ8Z8Z8G8G8GO8O8O8O8O8O8O8OGOOO8M8OOMOM8OOO8MOMOOOMOMOMOMOMOMOMOMOMM</span></span><br><span class="line"><span class="comment">//uuu2u1U2u2U1U1u1UUuUu1uUU2u2u2U1uUu2uUuuuUuUuUuUuUuUU21521U2uUuFuYLF11U215U5252525FqYqYJYJYjUYv8O1U51525U5252121U2J18XEJJuujvLvv77rk@8SSSXSXXPkXkXSXkkSXSkk@Y:iiiiirirvriiii::::::::::::::::::::::::,:.,.....,,:::::::,:riruLLLYLJLJvS2FLYvZZvvJj7iS7.,:.        . . . . . ....:ii:i:.rMMP5XSXPXJLvJLjYjYJYjYJYJLJYYLYLJLJjuU12125U2uuYJYjJjJjYjJuJJLjLL7YFBBOkFJLrr;7Lk0E5J777LLLYOSu1SSq0EqE0E0ZEZ0ZEZEE0ZEG0ZEZEZEG0GEGEZEGEGEGEZEGZGE8ZGZGZGG8Z8G8G8Z8Z8GO8O8OOO8O8O8OOOOO8OOOOMOMOOOOOO8OOOOMOMOOOMOMOMMMMMMMOM</span></span><br><span class="line"><span class="comment">//2u1u2u1U2U2u2U2U1u2u2u2U2U2u1U1U1uUu2uUuUuUuUuUuUjUu2u2uUU2U2U252LY1XU5u525212F2S50ujkYLjvYJ2L7ZM22252521U5U222u2uuL0ZZYujYvX8OEG0OBESXkPkPXXkPkXkPSXSXSkF0B;:iiiiiir;Lr;iiii:i:i::::::::::::::::....         ..,::::,:,i;:LJvYvYLYLLkrYSLY7O8vvjui,YJ:.:.      . . . . . . ....:ii:i:.:kMOFXSXXN2LvJYJYjYJYJYJLJLYYuj2U1U5u2uuJuJuJuJuYjJuYuJJJJLjYJYJYJv77UZBOGNZk2v7irvF0EFJ7vvvYOFu1FSZP0NENEEZ0Z0Z0EEZEGEZEGEZ0G080Z0Z0G0GEGEZZGEGE8ZGZGZGGGZ8Z8ZOZ8GOGOGOOO8O8O8M8O8O8O8OOOOMOM8MOMOM8O8MOOOMOMOMOMOMOMOMOMOMM</span></span><br><span class="line"><span class="comment">//UU2221u1U1U221U2U2U1u2U2u2U2u12122uUu2uUu2u2u2uUu2u2u2u2U1u2u1uF2JLLkS1U2P151F2FS8ui5XLJYvvu2J70B1u5252125U2U2U2UUjujBGYLJ7OB8qZZB@NFXXXkPXPSPkPSXSXSXkXFSMZ:ri;iiiii77r;riiii:i::::::::::::::,,..               ..::::::v:7YLvLLLLYLSY.0uLL7MOv7YLi,rjv::,      .   . . . ......:ii::;j,rM@XSSkkNkUvLLYYJLJYJJujuu221u2uUjuJujuJujuJuJuJuYJJuLjYJJJYjYJLJLL77LN8G5S0OZ0Fjrr72PZ5J77YM5u2k0PPENENZ0Z0ZEG0Z0E0GEZEG0G0G0GEZ0GEZ0GEZEGEGZGE8EGZGZ8G8ZGGOGGZOGOGO8OGO8O8O8O8OOOOOOOOO8O8OOM8OOMOMOOOMOMOMOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//1u125U5U12125U1U5U5U521U1U1U1U121U1u2U1u1U1u2u1U1U2u2u1U1u2U1UU5FLU:LPF1YjNXXkqN8u,iNSLYu7vYSuvuM22U52121u2UUu2uUu2jL0BvL78BqFPPOBNFXkPXPXqkPkXSPkXkXkXFX5@uiiriiiiii;ririiii:i:::i::::::::::..                    .:::,,rr:YvLvLvLLLJ8.rNLvL7OBLrvr:::7jri,.   . . . . . ........:,:vki:,:2@OX5kSXXFLLLjYuuUuUuUuuuUJujujuJuJuJuJjJjYuJjYJYJLJYYLjYJYJYJLJLLv7rLXOE2LuS0G8NSLvv1X05LY8uuFEkXqZqENENZ0EEG0ZEGEZ0G0ZEZEZ0G0GEGEGEGEZZ8ZGZGZGE8E8ZOZ8GOG8G8G8G8ZOG88O8O8OOO8O8OOO8OOOOMOMOO8O8OOMOMOMOOOMOMOMOMOMOMMMO</span></span><br><span class="line"><span class="comment">//1225U12125U12525U1U5U2U521U1212511U1U121u2u2u1U1U2u2U2u2U5U5U52F5jur:PkS2;:2XNk2i..L05Luu7iu1S7vEPu1u5u1U1U2uUu2uuuuLuOLr0BNFPPOB0FPXqXqkPkPkPkPSXSPkXkX50Bririr;riiiiiiiiiiii:i::i;::::::::,.                       :::.iv:;JvLvLvLvLZi 20vvv7NB2iri::::vLvi:         . . .....  .;1q;::i:,i0BOSS1SSX52uuJUuUuuuUjujuJuJuJuJuJuJjJuJjYuYuYjLJJjYJLJLJLYLYLYvLvL77758MSYvju5S0qN2UukXk0Mj1PFSqqGqE0GEGEZ0Z0ZEZ0GEZEGEG0Z0ZZG0G0GZ8ZGEGEGEGZ8EGZGZOGGG8G8ZOZOG8G8G8GOGOOO8O8M8OOM8MOMOOOMOM8MOOOMOOOMOOOMOMOMOMOMMMOM</span></span><br><span class="line"><span class="comment">//Fu52525U1252125U5U525212525U2U115152121U1U2U1u1U1U1U121212125251Puuv.7ZSX5i.,::.,.:FBLYJU7:Y1kJ71G2u222u2uUu2uujuuuYLrSSP@05PPOMqFXXPXqkXXPkXkXkXSXSXSXFS8Oirrriririiiiiiii:i::::::.::::::::.                        .:::.Li:vL7vvLvL7SF rEU7vvruBZ;::::i:i;vv7:.                :JS5:,:i:i::.7G@GS1SFk11uujujuJuuujujuJuJuJuJuYjYuLjLjYjLjLJLJYYLYLJLJLYLYLYLLvYvLr7jGMEuYYjJUUSXqSkXNZGPqjFSqEGNE0E0Z0ZEZEG0GEZ0GEGEZEZ0ZEG0G0GEGE8E8E8ZGZ8EGZ8Z8E8Z8ZOGOG8G8GOGOGOGOOMOO8O8OOM8M8O8O8M8O8OOMOOOOOMOMOMOMOMOMOMMMO</span></span><br><span class="line"><span class="comment">//221525152F15211521251525U521U52F5F1F25U122U1U521U52121U521251515S5JU:.2ESXXY,....,uB8LLju7,LuXuv78PjjujujuYuJuJuJL7LYF0@B0FPNOMqFXkPXXXPkPSXkXkPkXSXSXkkF@ui;r;riiii:i:i:i:iiii:::::::::::::.                        .::,,iL,iLL7LvLvvLZv:.Surr7;7EBY:,::i:i:irvvv;:,.       ,:7j11u:,::::::::.,r8BMPF5S5FUUJjJuJjjuYuJuJjYuYuJjYjLJYjYJYJYJLJYYLJLJLJLJLJLYLLvLLYLLv7rYkMGSLJJUuuuUuuuFqMMGXXFPZGNE0E0ZEZ0ZEZ0ZEGEGEZ0GEZEG0G0ZEGEGEGZ8E8E8ZGE8Z8G8E8ZOGOGOGOGOGOGOGO8OGOOO8OOOOMOMOOOMOMOMOO8MOMOMOMOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//FU515151F15252F25152F2521112521251F152521U5U5U1U5U52121152511252Skuu7.:XZFPqNuLvJq8OX7YLjr:iU2kv7JM2jJjjuuuYLvL7LuqGBOMB05PqOMPFPkPkPXqXXkPkPkXkkSkkkSXFqM7:ii;i77LLuuujujuuujUYJLvri::,::::.                         :::,:j;,rLv7vvv77PE ::1uiirii7NPv:::i:i:::ii777r77v7vvjYjLJuv.,:::i:::::::,.rSBBMqX1k5FuuJJYJJjYuJuJjJuYJYjYJYJLjYJLYYJYJLJLYLYLJLYLYLYLYLYLYvLvL777FOMkJLuuUuSSJ7vL5XGEEqEZEEZNZ0ZEZEE0ZEGEGEGEZEZEZEGEGEGE8EGZ8EGE8EGEGZ8ZGZGGOZ8ZOG8Z8GOGOGOGOGOOO8O8OOMOMOOOMOM8MOOOOOMOMOMOMOMOMOMOMOMOMM</span></span><br><span class="line"><span class="comment">//12251F1F5S5S25151515252F151511U52F1F25252525U121251F15152F255F5S1X1uj:.iqZSkXEE8EXFMJvvL7r::7USUL7U@MMMMOMOM8MMBMBO8NZME1PqOMqSPkqkPkqSPkPkXSXkXSPkXkXSXZEivYuUF2UYLri::,,.....::;rYJu7i,:::.                          :::.7Y::vL77v7v7YNi:::Jui::::,72XJi,::::i:i:i:iiii;;rir7uL:.:::,.,::i:i:i::..,7X@B@GEkPSFUUjJLJLJYuYjYuYjYJLJLJLJYJYJLJLJYYLJLYLYLYLYLYLYLYLLLYvLvvr7JEOPLLYuukEqYLvJj1kN0G0GEG0Z0GEZEZEGEG0GEZEGEZEGEZEZEGZGE8EGE8EGEGEGZGZOGGG8Z8Z88OZ88OGOGO8O8OOO8O8OOM8OOMOMOOOMOOOOOOOMOOOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//FUF151F1F1k1F2F151F1F1F2525151F251F5F5FU51115251F252F25252F151F5S5PUUv,.ik8SS5S1F5EZ7rL77i:::J5X2v7F@0kkk1kNMB@GqkNqEMZ1PqOMqFPkXkPXPk1XPSXkXkXSXkXSXSXSBX7LLrr:.                 ..,:vjj;::.                          ,::,,2i::Lvv7v7v7PU,:i:7u7::::::iuSkJr:::::::::::iir7JjLi,,:,.     .,::i:i::::...iJNOBBBMOENSFujLJLjLJLjYJYJLJLJYYLYLYLYLJLLLJLYLYLLLLLYLYvYvLLYvLLL777kB@E1LjjUPOSJLuu5FXk00ZEGEE0Z0Z0ZEG0ZEGEGEZEGEZEGEGEGEGEGZGZ8EGZGZ8Z8G8G8Z8Z8GOGOG8GOGOGO8OOO8O8O8O8O8OOO8OOMOMOOOOOMOOOMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//511F5F1S1S5k5S1F5S151F1F1F5F25251F1F5F5525252F25251F15251F1F1S5S5FSqjUr,.:U8PPXEZOBS:rLv;i::,ruXXYv75@EFk8MBEPFSk00EM81XqOMPFPXqkPkPkX2qkXkXkXkkSXSkSXFNM:,::::, . .               .....iLjLi.                         .::,.vL::iL777v77vGi:ii:ivLi::i::,:;uq0L777r7r77vvYvv;:,,...          .,::i:i::::.. .:i7USZ8MMMGEXS11U2uujuYjJJLJLYYYLJYJLYLJLJLJLLLLLYLLvLvLLLLLvLLSq0UjXBB@XuYj1O01JuU5FPXNqEEGEZEZEZ0Z0Z0Z0GEZEG0GEGZZEGEGZGEGZ8E8ZGZ8E8GOGOG8G8Z8GOZOG88OGO8O8O8OOO8OOM8MOM8MOMOOOMOMOMOMOMOMOMOMOMOMOMMM</span></span><br><span class="line"><span class="comment">//k1F55551F5S5S5S1F5F5S1S5S1F5F5F1F1S1F5S1F155F15151F5F1F1F1S1F1F5FFFSquui:,,7BB8qPXMr,iL;i:i::,rjOUvv7LMB@O0SSSXkq0EOM5kqMMPFXkPXXkPkq2XkPSPSXkXkPkkSXSk8q,i:ii:                       . . ,;jLi.                        :::.:ui::rL7v7v771F,:iiiiiv7i:::i::,:L5r::ii7rri:::.... .     . . .     ..::::i::::,,.. ..,,ir7LjjUu21SFkSPkXSkSkSk15U2u2juJjJYLYLLvLLLvLvLvYvLLLS8j:     ,Y8OG5uJEOku2u5FPPNqE0GEZEZEGEG0ZEZ0ZEZEGEG0ZE8Z8E8ZGZGE8ZGZ8G8G8GOZ8G8ZOG88OZ88OGO8O8O8O8O8O8O8O8OOOOMOMOMOMOOOMOMOMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//F55F1F1S1F5kFkFS1F1F5F1F5S551S1F5F1SFS5S1F151F1S5F1S1F5F1F5S1S5F5S5SXZFui,,.:1GGPZ0,,i7i:i:i::.;EEYLv7iF@GSXXPkqNZZMFkPMOXFPXPkPkPk0kUkqSXkkSXSkSkSPSkk@7:iiii.                          .  .:rri:.                     ::,:,Ur:::rL7v7777N7,iiii::rv7i::i:i::iSJ..:::,,.... . . . . . . . .         ..,,:::::::::,,.........,,::::iirrvvYYuu55PPNNNPNqEqNqqSk11uUuUjjYFG5.          :vZOPYSONU5u5FPPNNZ0ZEZEZEZ0GEZEZ0GEZ0ZEGEGEZE8ZGZGZGZ8Z8Z8ZGZ8GGZ8ZOG8GOGOG88OGO8O8O8O8O8O8OOM8MOMOMOMOOOMOMOMOOOOOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//S2F5S5S5S5SFkSkFk5F1S5S1S1F1F1F5F1S1kFS5F5S5S1S5S5S5F1F5S5S5FFS5kFXXqqNP1i,,,.i5OBZ..:r::::::,,u0uqYLLL:iE@8NkqNE0MPFPMOPSXkXSXkXk0N720SXSXSXSXSkSXFkFZO::ii;:. .                         . . ..,:i::.                  ,:::,vv:i::;vvv7vruq::iirrriirv7i:::i:::1k: ... . ... . . . . .   .                   . . . . . . .                         ..::ii;rYj5FXkXSkkE1:       .       :XBk1G02S1FSPP0NE0ZZG0ZEGEZEGEGEGEGEZ0GZ8EGZGZ8ZGZGZ8Z8Z8Z8G8G8Z8Z8GOG8G8GOG8GOGO8O8OOOGO8OOOGO8MOMOMOMOMOMOMOMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//511F5F1S1S5k5XSk5F1SFS1F1F5F1S1F5F5F5S5SFS5SFS5S5S5F1F5S5S5SFSSSSPF2LLLqO07,.,..:u0quJY:,:,::;vO5vUZuLLJ;,;G@BZZEMZ5XMOXFPSPXqXPXGGirZXXkXkXSXSPXPF15kB5.ii;i,   . .                         . .....,:::..               :::,7Y::i::i7vv7vr5u:::,iirrrir77i::i:::uq:  .. ..... . . . .       .   .                                                               ..,:r:    . . . .        :XOPEG2XFS5PP0NZ0EEGEGEZEZEZEZEG0GEG0GE8Z8Z8E8E8E8GGG8ZGZGZ8Z8ZOGOG8GOZ8GOGOGO8OGOOOGO8OOOOMOOOMOMOMOMOMOMOMOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//S2S5S5S5S5F5SFXFX5SFFFS5S5S5S1F5S5S5S5kFkFk5SFS1k5SFSFF5kFSFkSPXFuL7Lu5k8GMP7.....,ruFP55uY7vruqj,i18FL7jLi.i5@B@MqP@MqSPkPkPXNGMS:;OXXSXkSSPSXXP1uUXq@i:iiii.                                    ......,.,.. . . .      .::,iu:i:::::r77rriS7::   .,:;rrr77r:::::uZi   ... . . . . .   .                                                                         .i:     . . . . . .       iq8OZUSSF5XXNNEEZEG0Z0ZEZEG0Z0GEGEZEGZGZGEGEGEGZGZ8Z8ZOZGZOZGZOG8GOG8GOG8GOGO8O8O8O8O8OOOOOGM8OOMOMOMOMOMOMOOOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//F55S1S5S5S5S1SFXSk5k5SFS5S5S5S5S5F5SFkFSFkFSSS5S5S5SFSFk5SFkXq1jLLLU5qSPNXkOM8Li.... ..::iir75qu:,,iLGZ1vLYL:..iuNO@BBOO8MOBMMOF:.jBPXkXkX5FXPSkUjvSFBE:i;i;:.   .                                   ..... . . .          ,i,rY::iri:::iiriii1;:       ,:;i;LY;::::UZ: . . . . .   . . .                                           ........                   .:i7;.       . .   . . .       .7kMM8M8O8GZZ0E0G0G0ZEZEZEZEGEGEGEG08ZGEGZGE8Z8Z8Z8Z8Z8Z8G8G8ZOG8ZOGOZOGOGOGOGO8O8O8MOO8O8O8OOOOMOMOMOMOMOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//k1S5S5k5S5FFSFSSkkXFS5SFSFSFSFkFS5S5SFk5kFkFkFSFS5FFSFS5kSPkkJLLJJFSPFSS0SXSPEMOGquvvrrr7L1PZ5v::::,:rFZ02JvYLi.  ,:rLjU5UuLr,  rEOkPkkSXkk2qS5jJvukPB7:ii;i:.. .       .                             .                    ::Lv::iSi::i::ii::;5:.         :7v;YYi,:iFN.   . . . . . .   .                                           .     .               ..:;7;:...,.    . . .   .     . ... ,585u0ZSu5E080E0GEZ0Z0GEGEZ0ZEGEG0ZEGZGEGE8ZGZGZ8E8Z8Z8GGG8ZGZ8GOGO8OGOG8GO8OG88O8O8O8MOMOOOM8MOMOMOMOMMMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//kFFSFSFS5kFSFS5kFXSkFSFS5k5F5SFk5k5SFkFSFSSkSkSk5S5S5SFkFPkULLLu1XkkFkSSqPSXSXXPZ@Xqq0MZN0S27i,:::::,,:v1qXkuuLL7i..         :Y8O0kXSkSPSPS5F2YjLL1PMO,iiii;:...       . .                                                  :Ui:::qL,i:i:i:i::75,  . . .  ,,,ii71v,:7Pu  . . .       .     .                                                       . . ,:ii;::       .,,   . . . . . . ......UM2:.r0UrvSUPqZEE0GEZ0ZEGEZ0GZGEGEGZGZGE8ZGZ8E8ZGEGE8ZOGGZ8G8G8G8Z8G8GO8OGOGO8O8OGOGO8O8O8OOMOO8MOMOMOMOMOMOMOMMMOMOMOM</span></span><br><span class="line"><span class="comment">//qFXFSFkFSFk5kFkFkFXkXFk5FFkFk5k5SFk5SFkSXSkSkFkSS5S5kSkXq2JvJJFkPSSFkSkF0XkSkSXSZMLvuYquvrr:::::::,,.  .i72FPPEPN2uL7ii:i7ukOOOqPkXSXSXkqkSu5LJLYJXX@v:i;iii:..                                             .  .:           v7::::P5::i:iiiii::v1.      .:.  .:iiuu,:Y0:  .   . .     .                                                           ....rrr:      .....  .:.  . . .   . ..,,.iZkiir7rk2LPXqN0qGEE0ZEZEZEZ0GE8EGEGEGEGZGZGEGZ8EGZOZGE8Z8E8G8GOGOZOG8GOG88O888O8O8O8O8M8O8O8O8OOO8MOMOMOMOMOMOMOMMMMMOMO</span></span><br><span class="line"><span class="comment">//SkkkSSFSFk5SFkSS5kSXSPFkFk5SFSFSFk5SFkFkSkSXSXSkkXSSSXXkJLLu1XkkFkFXSXSSP0SXkXkkNM,,::77.::::iii::,.     ::7YuJ1q@B@B@B@B@MOqqSXkkSXkPkPF5J2uYYJv2SMM::iii:i:..                                                 :r,        77i:i,7U7u::i:i:i:i::L2     ::. .   :i:JF:iF1   .   . .                                                               ....7:  ::. . ........ .:   . . . ....:,.:55i,r ,7X5kuqFkk0PZEEEZEZEGEGEGEG0GEZ0GEGZ8EGZGZZZGG8EGG8Z8E8Z8GGGOG8Z8GOG8ZO8OGO8O8OGO8M8O8OOOOM8MOMOMOMOMOMMMOMMMOMMMOM</span></span><br><span class="line"><span class="comment">//ZSPkPSXSSFkFkSXFSFSFXSPSkFSFkFS5kFSFSFkSkFXSkkkFXSXFqP5LYJ5SXSkFkFkSXSXFPqkSXkXSqMi.::77::iiiii::,    ,  .:,iLuL7vkMMPkXXSkSXSXSkSXSXkP52uYuJYJLYFqBJ,iiiiii:..                                                  .r7i.  .iYr::::rS7:uu::i:i:i:i::72.  ::. ...   ,i:LU:jX.     . . .                                                               . :i    ::  ........,...,   .   ....:..iY7::. LXkuj1jY1FNNEN8EZEGEGEZEZEGEG0ZEGEGZGZ8ZGEGZGZ8Z8Z8ZGGGZ8G8G8GOZ8ZOGOZOGOGO8OGOOO8OOO8O8OOOOO8OOMOOOMOMOMMMOMOMOMOMM</span></span><br><span class="line"><span class="comment">//MGkPkXSkSkFkFXSXFXFkFkkXSkSX5kFkSkSkFXSkSXSXSkFkkXSEquLJukkPSkSXSXSXFXSXk0FXkXkPS@Y,, :j::ii,,.        ::.,:::ijuJrL0@OPFkFXSXSkFXkPSS2uu7v1YJLYJkO@::iiii:i:.       .   .   .         .                           ,7F1jL7:::iiu5r:ii21i:i:i:i:i::rU,:,  . ...   :i:LL7k:  . .   .   .                                                              ::     ::. ..........,:. .   ...,,.,vJri :LkFuju7LLJkEkqXEEZqGEZEGZZEG0GEGEGEGEGEGZ8EGEGZ8E8Z8ZGEGZGZ8Z8ZOG8ZOG8G8G8GOGO8OGO8O8O8M8O8M8O8M8OOM8MOMOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//:OOkPkXSPSkFSSXSPkXSkSXkXSXFkFXFXSkSSSkSkSXSXSXSXkGXYLUFPSXSkSkSkSXkXSXFXqPSXkXkkOG,. .Y7::::   ..,.,.. ,ii:i:::rj1vrL8BBZqkPkXSXkPSFuU1v;PYjJjv1k@u,:iii:i:,       .   .   . . . .   .                              ,7vYLLLuuu7:::iiiUF7:iii:i:i::iuL    . . .   :::UY1:   . .   . . .                                                           ,,i:.     :,..........,,:   . ..,,,.:77i7i715JurijYiUSF5X5qPGZG0GEZEGEZEZEGZGEGEZE8ZGZGZ8Z8Z8Z8Z8ZGZ8Z8G8Z8Z8G8G8G8G8GOGOGO8O8O8O8OOOOOOOOOOOOMOMOMOMOMOMOMOMMMMMO</span></span><br><span class="line"><span class="comment">// :@OqqSXXPkXSkSkSXkXSXSkSPSXSkSk5XSkSkFXSXSPkXSkqO5YJFkPkkSkSkSXSXSkFXSkSEkXkXSPk0Br.  rLi,.:: ..:::::::,::i:i:i::ruuv:iYEZOGGEZqE0X5X1r;quYLjLYSOB::iii:i:,   .   . . . ... . . ... . . .       .                     .::iii:::,::iii:LXuiiiiii:i:::7L:   . . .   ::L21   .   . .     . .                                                       ,,.,:.. .   ::,.........,.  ..,.,,..r2Fjj551YLLrJri:u5551SXPqGZNZ08Z8ZZEZEZZGEGEZZ8E8EGZGEGZ8EGZ8EGZGZ8Z8Z8Z8GOZOGOG8GOGOGOGOGO8O8O8OOO8OOO8OOMOMOMOOOMOMOMOMOMMMMM</span></span><br><span class="line"><span class="comment">//  UBBMGXkSPkXkkSkSPXXkkSkSPkPSXSkFkFkFkSkFkSPSk0OuJ2PXXFkFkSXFkFkFkFXSXkkqNSXSXkPXBP:. .jri:,ii,::::iiiii:::i:i:i:::;L1J7:::rLu2SFkjLi:vPJYYuLLuPBF.iii:i:,     . . . . . ............... . .   .                        ......   ::i:i:rSqvriiii:i:i:;L7.    .    .:LE:              . . .                                         .   . .   ....  .i, . .   .,::::::,.  ....,,,..i5EESFjJv77L7vrr,72uuU55X50O5kXN0GEGE8EGEZEGEGZGE8Z8EZZ8EGE8EGZGZGG8E8G8ZGZOZOG8GOG8ZOGO8O8O8MOOOOOO8O8M8MOOOOOO8MOMOMOMOMOMMMMMM</span></span><br><span class="line"><span class="comment">//   EZkZOE0XXkqSPSXSXkPXkFPkXSPkXkkSXSXFkSXSXFkGZJu5PSkFXSXSkSXFkSPFkSkFXFPNPkPSPkXP@7,..iUi:::ii:::iiiiiiiii:iiiiiii:::rjPXFr:.....::7SkLYYuYJv5O@::iiii:,     .   . ... ................... ... .     .                           .:iii:iJGXJrriiii:i::rLi.     . ,JP,    .           . .                                               . . . .   :iO2: ...     . . . ....,....,rj5S1uuLJJJLL77;rr;jjvuU2UqkOk21kX00Z0GEG0GZGZG0GZ8EGEGE8ZGEGZGZ8E8Z8G8Z8Z8G8ZOZ8GOZ8G88OGOGOG88O8O8OOOOO8OOMOMOOOMOOOOOMOMOMOMOMMM</span></span><br><span class="line"><span class="comment">//    @OUu22PPNXPkPkXSXkPXPSXkPXPXPSXSXSkSXSXFX80J1kXSXSXSkFkSkSkSXSkSkSPSXkEXXkPkPkPEBi,::7U:iiiiiiiiiiiiiiiiiiiiiiiiiii:::ijMBOS51XqOSYLjYuJJvuX@J,iiii:,     . . . . . ........................... . . .     .   .             .    .::ii:i1EZuL7777rriii7Yv:   .,i7     ::              .   .                                                   ::0MBOY.  ................,:7u0NXJi.rLY7ri7vLLvrjJjYLY5Y21MqLL15XX00EEGZ8EGEGEG0GZGE8ZZZ8ZGE8Z8Z8E8GGZ8G8Z8EOGOZOZ8G8GO8OGOGOGO8OOMGM8M8OOOOMOMOMOM8MOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//,   i@BOqSjJJFPqPqXPSPkPkPXXSPkPkXXPkXSXkkFPOXjSXXSXFkFkFXSXFkSXSkFkSXSkFkqNSPSPkPXP8Bi,::vUi::iiiiiiiiiiiiiiii;i;i;iii;ii:::vE@MZPqPXLLYjYJLY2BM::iii:: .     . . . . ....................,........ . .     .   .               .     ,:iii:iLGON5ULYvLLYvLJF52r,     .:L:                    . .                                               ,.LqUEMGOui,. ........,,ivJPP5S7ir: ;jLLi:i..LvvJ77jYY2LXkOErrYu5SPqE0GEZE80GEGZZEGEGZ8Z8EGZGZ8EGEGEGEGG8ZOZ8EOGOZ8Z8Z8G8GO8O8O8OOO8M8MOO8O8OOMOM8MOOOMOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//,.   J@OOOMZPuYL5k0PPkPkqkXSXkXkPXPkPkXFk5ZGFukkkSXSXSXSkFXSXFXSkSXFkSXSXSqNXkPXPXqXqGB7.,:757::iiiiiiiiiiiiiiii;iriririr;r;i::70MOSkXXLLYjYYJ0B7,iii::.. . . . . . .   . . ................,,:,..,.... .       .   .     .               ,:;:iXvvkqGqNS5u2uuuUF8MB05L7ri                           .                                           . .SUrGJY8G0P2UYvvJL15UXMqUUXivr:r7.;rrvvLi  rL:. ,.1uuFkSMP::r7juFSPPE0ZEGEGEGEZEGEZEGZGE8ZGEGZ8ZGZ8ZGG8ZGG8G8Z8Z8G8GOG8GOGO888O8O8O8OOO8O8M8M8MOMOMOOOMOOOMOMOMOMO</span></span><br><span class="line"><span class="comment">//...   0@GOZOOMZFvYuqkPSXkPSPkXkXkPkXSXkkSOE22XkXFkFXSXSkFXSXSXSPSkSkSXkXSXSEkXkqkqkqXNZ@ki.,iJL;:::::::::::::iiiiiiiiii;i;ir;ri::70@EkXXLLLJv1Bq,iii::.. . . . . . . . . . . . ..............,,:::.,.,.. . . .   .     .                     .uL:iiirLUkPGOM0E0GEPu7:.                                                                     , :iijiYG7Y0.,OkUPXMMLSU15LS117rY:r:.r::7i,:Lvv:.LLi: i:.UP2P0Bu..:i7vuuFSqqE0GEGEZZGEGEZZGEGE8E8ZGZGEGGGEGEGZ8ZGZOG8ZOGOZ8Z8ZOGOGOGO8OOO8M8O8OOO8MOOOM8OOMOOOMOMOMOMOMOM</span></span><br><span class="line"><span class="comment">//. ,.   M@GGZ8GOMBNvJqXqXPkPSPkXkPkPkXSSPMXuFXSXSkSkSkFXFXFXSkSXFXSkSkSXSPkkPESPXPXPXqPNqMM2:..ivYrrr77vvvvLvLvvvLvv7v77r7rriririi::vMMNXXLLvY8@:::i::.. . .     .   . .   . . . . ............,  .....,.. .   . . . . .   .             . .  :r ..,,,.,.,......                                                                          :iYuuFkXSFjL0X ,qFLvLOUJ;7L:rYi:::,::.i7:::i,iYvi;:JLi.:i:775EOMi  ,:ii7vjuSSqNE0ZEGZGEZEZEGEGZ8EGZGEGZ8ZGZ8ZGZ8Z8ZGZ8Z8GOGOGOG8ZOGO8OGOOOOO8O8O8O8MOMOOOOOOOMOMOMOMOMOMOMO</span></span><br><span class="line"><span class="comment">//...,.   B@G8ZGZGBq7v5qq0qqXPXPkPkPSXSkZM1UFXFXFkSXSXFkSkSXSkSkSkkXSkSXSXkPFP0qkPkqXPXNX0q8MMSL7JUkPNkS15252F151F151FU522u2uuYY7vrri::2BMXXLv2@L.:ii:.. . . . . . . . . . . . .   . . ..... . ...   ....,,,.. . . . . .     ...     . .   .  .J.                                                                  .                     rvj7LUk5jLPLvv5r:iLS2rrPv .r:iv::i:iiiv:ri:rr:iiiLJJYvjv:;riU:vB0.  ..::ii7LjUSSNNZEZE8EGEZEGEGEGEGEGZ8EGEGGGZ8Z8Z8Z8Z8G8ZOG8Z8G8GOGOGO8O8O8OGO8M8MOOGOOM8M8M8MOM8M8MOOOMOMOM</span></span><br><span class="line"><span class="comment">//. ....  .B@GZEGBOvLLJX1kGEEPPXPSPkXSXO8u5SkSkFXSkSXFXSXFXFXSkSXSXSXSXkkSPSXF0qXSqXPXqkqPNqEZMMMZq211F5S12uuYJYJJujujuuujujUuUU2uUYL7;:iq@0SYBM.:i::.. . . . . .   .   .     . . .     . . . . ... ... . ..:,..    . .     .  ..             Li .. . .                 .                                                             ..vJrrUuvr. :.i::ir, rPFriFj,v:iU,:r7:i7:,i:ri::iri:iirii71U02LLFGL   ....::i;7vuUXXNNZ0ZZGEZEGEGE8EGEGZGE8EGZGZGZGZ8Z8ZGE8G8Z8ZOZOGOG8G8GO8O8O8O8O8M8MOO8MOOOO8M8OOM8MOOOMOMOMO</span></span><br><span class="line"><span class="comment">//.......  :@BEZB@YvLjL51iLX0G00PqkPFPMEjFkXSkFXSkSXFkFXSkFXSXSXSXSXSkkPkPSXSXSEkXkqXPXqPqq0q0qZ0EB@OPXPSPPNPqS5UuYLLYYjYujuYjjjjuuuu2jY;:LB08Bi.:::.... . . . . . .       .       .   . .   . . . . ... . . .,:....         .               iL  ... . . . .   . . .                                                                  i2r:LXNL  .7r.::v7:.i::1kir0: :J:ir,,i;;,iir:i:ri:r7:::7752FSUkM5:   . ....::ir7L25PPE0ZEGEZEGEGEGEGEZZZEGEGZGEGZ8ZGZ8Z8ZGZ8G8ZOG8ZOZOG88OGO8M8O8O8OOM8OOMOM8OOMOOOMOMOM8MOMOMOM</span></span><br><span class="line"><span class="comment">//. ......  vBMM@U7LuYJL0i :7uP0GNNkEMkuXSXSkSkFXSkSkFkSXSkSkSXFkSXSXkXSPSPkPkXq0SqkPXNXNqNq0q0qqP@MFSPPqP0XNEMMMMOEN52LLvYYuJuJujjJuYujUL;rMBF :::,. . . . . . . . .         .     . .       .   . . ..... . . .,:,,..                     .u, ..... ... . . .   .                       .                                         .:uii2J7F5:iL  7rr7:.i::r:FFiv1ir:.:iri:r,::7,.i7i::i:7r7rFXkFN8Pi      . ....::i7LjF5PP00ZEGEZEGEGE8EGEGZ8Z8EGE8E8Z8ZGZ8Z8ZGZ8Z8Z8GGZO8O88GOGOGO8O8O8OOMOOOOOO8MOMOOOMOMOMOMOOOMO</span></span><br><span class="line"><span class="comment">//.........  1B@jvLjYuYJ28   ,:7jFUEMk2kSXFkSXSXFXFXSkSkSXSkSXSXSXSXFPSXSPkPSPXP0qkqXqXNPNqNNEq0kOBP2XSXSXkPSkSkFXX0Z888PFYLvJYujuJuJuJuJujv7@Y ::,..... . .           .   .                 . .     . . . . ... ....:,:..                  r7 ... . . . . . . .   .                       .                                        :k7rXi.rUSr.,7r7vi.. ;::r: vu:Y; i,.::.i::i7vi,;::iri7YvrLuNMM1i       . . ...,:i7vJuFFkP8ZGEGZGEGEG08EGEGEGE8EGEGEGZGZ8GGZGZOGOZ8G8ZOG8G8GO8O8OOO8O8M8OOOOO8OOM8MOMOMOMOMOOOMOMOM</span></span><br><span class="line"><span class="comment">//. .......   Bu7LJYuYjYLqq     . uOS1XFkSXSXSkSXSXFXSXSXSXSXFkkkFkSXSXSXSPkPkPS00PXqXNP0PNP0qEqqMBqFSPSPSXSXSkkXSkFS5kX8OZkkYvLjYuYuJuJuJuYLL@v.,,.. . . . . . . .                               .     . . ...........,::::,.             .2...... . . . . .   . .                                                                 iU7N7:7:j1:.v, .i:::uu:,;,,.:vvLr  . .i..:7rr7r:ii7iYuv7uX0Eu,        . .   ..::irvLuu15ZZGZGEGEGEZEGEGEZEGE8EGEGEGZGEGE8Z8E8E8ZOZ8Z8ZOGO8OGO8OGOOO8OOO8OOO8O8MOO8MOOOM8M8MOMOMOMO</span></span><br><span class="line"><span class="comment">//........   k5LLJJuYuYjLJMv     jOk1kFXSXSkSXSXSXFkFXSkFXFkSXSXSXkkSXkXkXSPkPXqkE0PXNPNPNPNq0qNE@EO5kSPSXSXSXSkSXkXSXFk5PqXkMNJ7LLjYuYjJjYjLL2@;  . . .   .   . .                                   .   . . . . .........,:iri:.          v7 .....  . . . .         .                       .                                    :iSJUZ,iuu17 r:v;:ii.77..ri:: .i r7 ,7;7::iri:i7v7:Lv7LLJqOX7.       . .   . ..,,::rrvLYUNE0NOZZE8EGZGZ8EGEZEGEGZ8ZGE8E8EGZ8Z8E8ZOG8GOGOGOGOG88O8OGO8O8O8OOOOOOO8OOMOMOMOMOMOMOMOMOO</span></span><br><span class="line"><span class="comment">//. ......  0GjYjYuJuYuYjL1M;:,:BBP5S1SFkSkSkFkFkFXSXFkSkkXSXSXSXSXkPkXSXSXkPkqkPX8PqXNqNq0q0qEkMMZMSFXkXSXkPSkSkkXkPSXkXSX0XLEBGjvLuJjYJYuJJYLkB.  . . .                                               . . . . . . .........,:rvri.      .2, ......... . . . . .                               .                            :.;2LX1q7Zuiiv7k: ,:: .v:rr. ::rv.,.  .,iv7r;ri:iivU2XPkFXP8SF7:         . .   . ...,::iirr7JNqqqqNGZGEGZGZGEZZGEGZGZGEGZGEGEGZGZ8Z8ZGZ8Z8GOGGG8ZOGO8OGOGOGOGMOMOOOM8OOMOOOMOO8M8OOOOMOMO</span></span><br><span class="line"><span class="comment">//......   EMFuuYjYjYjJjYjvXB@M@BMOOEEXPSSFkFkSXFXSXSkSXSXkXkXSXSXSPSXSPkXkPXXkPXXNGXqPNq0q0qEPqB8qBSSkXSXSkSXSXSPPqqNqNPqPPZZvjM@0J7JYuJjYjYjLLGF   . . . . .   .           .                           . .     . . ... ........irJvi.   iL ..... . ... . . .   .                                                        .ri1Uuu1u5USMvrr7U1,::..:;Jr..7:,iii.:iii..Yi ..,i:vuXXk2F5F2Mu,         .     . . ....::::i:iLqU1kkk0E8ZGZ8E8Z8ZGEZEGEGZGZ8ZGZ8Z8ZGZGZGZOG8G8Z8GOG8G8G8GO8O8O8O8O8M8O8MGO8OOOOOOOOOOMOMOMOM</span></span><br><span class="line"><span class="comment">//. ...   EMqSFuuJjYuJjYuYY7OMkFF5XkZGO8OGGqNkkFkSkSXkXkXSXSXkkkXSXSPkPSPkXkPkPXqXP0ZXqP0qNN0qqN@qN@k5XSXSkFkkXSNS1uUuujUuUuU5ZLvkBM57YJJYjJjJjYu@:       .                  ..                             . . .     . . ..........iL5ui.1:........ .. . . . .                                                        .;iYjjYuU2u2YYvLirru1. :.iL,i:..,i,ri,,iLJLLvLvi:rii:rj0U7:77rLk;        .   . .   . ..,,:::::::vPjLUPFFNZGZZGZGZGZ8EGEGEGEZE8EGZGEGE8EGZGZ8G8Z8EOZOZOGOZ8ZOGO8O8O8O8O8O8MOOOOOOOOOOOMOM8OOMOMO</span></span><br><span class="line"><span class="comment">//....   EMqkPSFuuJjYjYjYjLLL@q2uuYYJuu5FPqZZ8ZZNNXPkXSXSXkPSXkPkPkXSPkPSXXPkqkqXqPqZ0XNq0qEqEXMBPP@kSSXFXSXSXSNSJvLLLLLLLLLvvUELv2GMX7YYuYuJuYjLOE            .                                                 . . . . . . .........,rjZu......... . . . .                                                         .,vY77uv7i,7Li;iriirJ27  :ri,,;,,:, 7ri:iijvv7r77vJLULLSFuLi77Lu1:      . .       . ....,,:,:::.,Lkv5uJu51FEMGOGGZGEGEGEGEZEGEGEGZ8E8Z8E8ZGZ8ZGGOGOG8GOG888G88OGO8OOO8O8OOM8OOO8M8MOMOOOMOMOOOMOM</span></span><br><span class="line"><span class="comment">//. .   ZMPSXSXSS2uJjJuYjJjLvUMuYYJLuJuJuJuJuuFFqPE0ZN0XPkXSXSXkPkPSPkPkPXPkPXPXqXqXEG0P0q0NEqqBBXNBP5kSXSkSXkqSJvjYjLjYjYjJjLvkSvv50Oq7YYuJjYuJJj@:  . .                                                   . .           . . .........  LL ..... ..  . . .       .                                                 rJ7:iLv:... :Lr77i77uu: . ,::.i:.r7::i:.i::vuv7irr7LvrvYGjL721S17.      . . .   . ....,.:::::::..vUrrr7uYU2POqE0GZ8ZGEGEGEGZGZGEGZGEGZ8EGE8ZGZGG8G8G8Z8GOGOGOG8GOGO8OOO8O8OOOOOOOOMOOOO8MOOOMOMOMO</span></span><br><span class="line"><span class="comment">//.   .GMPkkSkSXkS2uYJJJYjYjLvNOLYLYYJYJLJYjLJLjYuu21XkNNEq0PqXXSkkPkXkPkqkPkPPqXNXqXEZNq0q0qNq@G0X@X5SXSXFXkqSYvJYjYJYjJuJjYJL2kYvjSk8q7jJuYuJjYJE1   .   . . .                                             . .       . .   . . ....... u:......... ... . .   .                                                 .vvi:rLYr      :L777:;uY, :::::77::,L,:::ri:i:7UYr;777: i;SJvUuLv:.     . . .   ......,,,,:::,:::..LF:rvi7v75EZU1FPPEZ8G8EGEGZGEGZGZGZGEGZGEGZGZOZ8G8ZOZOGOG8GOGOGOGOGO8OGO8O8O8MOM8OOOOO8O8MOOOMOMOM</span></span><br><span class="line"><span class="comment">//.  .OMqkkkXFkSXSk2UJJJjJuYjLYMEjUJJYYLYLJLJYujujuuUu22FSXPNq000qqXqkPkXXqXqPPPqXNqqXGEqq0qEP8B0qPBZ1SSXSXSPSjvJYjYjJuYuYjJJYYYqJLYS5MBFLJJuJjJuY5N    .                                                       .             . . ..... ,u, ..... ..  . .   . .                                                 r77irvv7vi,i:.:i.rvr77Li.,::,ii:.: rv,::.;i.:v::v1Yivv7:r7u17r:       ... . . ......,.:,:::::,:,, .LN5Xk7iU7u0u7JuSkNqE0ZEGEGZGEGZZEGE8ZGE8ZGZ8Z8ZGZ8Z8ZOZOG8G8ZOGO8O8O8OOO8O8O8MOOOO8O8MOO8M8MOOOOOMO</span></span><br><span class="line"><span class="comment">//  .OOPSXSkkXSPSXSk12JjJuJuYJv1BNFX5F15U2uUJuYuJuuUu2U1U52SFkSPPqqEqEqNXPXPXqXqPNPNqNPG00NEqqOBqZSB8F5XFXSkPSvJYjYuYjJuJjYuYJvuPYvF5OB78uLjYuYuJJ2O                                                             .             . . .... :1........ ... . .               .                                     iviir:,.,rLi,ii:r,:77rv7. ir, ::: i::.:v7ii::7i.i:Jkj. r;:qXv:    ......... ......,,:,:,:::::,,.. :UO27rrLjF8Fr:7vuUSX00ZEZEGEGZGEGEZZGE8ZGE8ZGEGE8Z8Z8G8ZOG8G8G88OGOGOGO8O8OOOGO8O8OOO8MOO8O8O8OOMOMOM</span></span><br><span class="line"><span class="comment">// .MOqSkkXSXSXFkSXSk2UJJJuYuYLv0BkSPXqPNXqXPkkFS11U22125155F5SSPkqkqX0N0N0XqXqXNPNP0qNN800q0q@EqqE@M2kSkSkkq2LLuJuYJLJYjYuYJLLkk7USqB7 PNLJjJuYuLSB                                                          .             .   . . ... :U........... . . .       .                                          .Y7ir:,.:, r7v:riirii777v; .i..,::.,7:.:i.i:.iii:,i::2j.i;.UMJ::,. ..............,.,,:::,:,:::.. ,;1MMPkuiYuuPL:.i;7vu1SXNNZE8EGE8EZEGZZZGZGZ8ZGZGZ8ZGZ8GOZOZ8Z8Z8GOG8GOGO8O8OGO8OOM8O8M8O8O8O8M8O8OOO8O8</span></span><br><span class="line"><span class="comment">//:ZOqkkSXSkSXSkSXSXkk5UJjYuYuYLvM8FFkkXkXkPXNXNq0PNXPSXSkFSFXkXSPXqXqkPXPPNP0PNPNPNq0qNN8N0PGBNkOMMMF5kFkSXX1vjJjYuUjLJLJLYLJSNL1FFBE .YMLuJuYjYYXM                                                           .               . . . ...:u........ . . .   . . . . .                   .                     7v7i.:. .  .LvYvvvL7r..rLL7..,r:r,.i;ii:ir: i ,7i::..:0uvJNXi.. :,..............:,:::::::,:,,..:J0kL;7Y71uuqZi..,:ir7LU2Xk0NEEZZGEGEGEGZGZGE8Z8Z8EGZ8E8Z8GOZOZOG8G8G88OGO8O8O8O8OOOOO8MOMOOOM8MOOOOOMOOOO</span></span><br><span class="line"><span class="comment">//M0PkXkXSXSXkXSXSkSXSXF2JjYuYJLLJ@NFSXkXSPkXkXXqkqPNP0P0PqXqkqkqXqXqPqPNPqPNq0PNq0NEN0N0NONqOM2EBZE@1kFkSkSquYYJYuJUU1U2JuuFSkuk1j8@:..uMLYuJuYjYMj                                                            . .       . .   . . ... :Y........... . . . . . .                                           v7vr..... ii:.::ii::. .:.irv. : :,ri:::.7,.:i,.i..:,:v52F5NG:  ...:.........,.,,:,::::::::,...rF05Fvr:7i,::Z5,  ..::irvLu1XXEEZEZE8ZGZGEGZZEGE8ZGEGZ8G8Z8Z8ZOZ8G8GOZ8GOGOGOGOGO8O8O8O8O8O8O8M8M8M8OOMOOOO8</span></span><br><span class="line"><span class="comment">//PXkXSPkXkkSXkXSXSkFkkPF1YJJjJjLv5@SSSXSXkXSXSXkXXPXPXPPqXNqqXNPNXqPNPNPNPqPqq0q0qENEq0N00Oq@NSBOq8Bk5SSkFXPuLjJjYjLYLUuUju2uYuL75@L.,.qGLuYuYuYPO.                                                            .  .           .   .....:J.......... . . .   .   .                     .                   rvLr.. :: r:.  :..  , .i. ..v.::.:7. :L . .:r7i7u7ULSGq15U1GJ  .,. .:.,.,.,,,,,,:::::::::,, .75NkvYvrvrii,LGL.  ...,::;rLLU1XPE0ZE8ZGEGZGZGEGZGE8ZGE8ZGZGZ8Z8GOGOGOG8G8G8GOGO8OGO8OOOOO8O8OOOOMOOOOOO8MOMOO</span></span><br><span class="line"><span class="comment">//PFXkkSXSPSXSXSkSkSXSXkPF1JjJjYjLv0M5kFkSkSPSXSPkPXqXqkqPPXNPNPqPNXNPNq0PNq0q0P0q0NEN0NENNNMBFM8PE0@XSFXSXXqLLYjJjJjYJLYLJLJLYLvL@M.,.iBuYLuYjJ0O:                                                                  .      .   . . ... ,v........... . .   . . .     .     .           .                 rJLr: ,r:. i. ::,.. :.:,. .,.vi:..:..,i .:iuPjLiiuuJEj:7uYuP0  .,,:. .:,,,:,:::::::::::::,. rSSuUr7Yi:Ji:iFqr.    ....::;rLY2FPq0EGG8Z8EGZ8E8GGZGZGZ8ZGZ8G8Z8Z8GOZOG8Z8G8G8G8GO8OGO8O8O8O8O8OOO8OOO8O8OOM8MO</span></span><br><span class="line"><span class="comment">//kSkPSXSXSXSXSXSXSXSkSkkPS5YjYuYJvLMZ5kSkSkFXFPkPkPkPkqkPXqPNPNXqXqP0PqPqPNP0qEq0N0q0qE0ENqOM8ZFZEEBE5kSkSPkJLuYJYjYuJjYjJjYJLL7qBi .rM5LYjJUkMX,                                       .       .                             . . . ....v............ . .   .                                           :YJL, ,...,.:,:.:..,i: ,:.,:..v7.::::i, :j1Uv  ,vu77Fu: ir:iZr ,:::::  ::::::::::::,:,:,:. :P8Jv17:r77:.:7OF:     . ..,,::;7LJ5FqqE08EGZGE8Z8ZGEGGGZGEGZGE8ZOZOZ8Z8G8G8G8GOZ88O8O8O8OGO8O8O8OOOOM8O8MOOOOOM8O</span></span><br><span class="line"><span class="comment">//PFXkXSXkXkkSXSXSXSXFXFXSPkFJjJuJJ75BX5k5kFkFXFXSXkXkPXPkqXqXqXqPqPNqNP0PNqNq0qEN0N0N000N0q@B01qNZN@E5FkSXkXLYJJYjJJYuYJJJJUuuj2OOivF81u1SPG8qi              .                         .                                     .   ......,7, ........... ... . . .       .               .                ujjJvY:.:. :.. .::  ,: . ::,,.,L,:.:,,.727,:  72j:7Zr,::ui.vP..:::::::..::,:::,:,,,,.... .Y0P0r7i:ii,J;Lq57,.    . .....,::r7YuSSqPGGGZOZGZGZ8Z8E8ZGEGZ8Z8ZGZ8GOG8Z8ZOG8GOG8G8GO8O8O8OOO8O8O8OOO8O8OOO8MOO8M8</span></span><br><span class="line"><span class="comment">//kkkPkkkPSXkkkXSkkkSXSkFkSqkSJYYjJJ7EM00E0E00qNXPSXkXkXSXkPXPXqXqXNPNP0PNqNqNq0qEq0qE0EqEPGBGUkkEEZBO2kFXkPkJLjJjYjYJJjJJYjYjJjPBJXZ0SPN0Fur,                                                                                     ......v:........... . ... .   . .         .                          72u7,,i. i..i .,,:.:::,::,::.,,,vv.,..:JYi:. .7FJi75:i.ir.,rX1:..:,:,:,:.,i. . . . ...,:;uZZ7FJ7riirrE0XLi.      . . . ..,,:i7vuUk5N8GE8ZGZGEGZZEGEGZ8ZGE8ZGEGZOG8Z8Z8GOG8GOG8GOGOGO8O8O8OOO8OOO8O8OOMOO8M8MOM</span></span><br><span class="line"><span class="comment">//PFPSXkXkXkPkXSXSXFkkkFkSXSXXkuJYuYLvMON08GO8OOMOM8OZ8ZEP0PqkPkPkPXqXPPPPNPNPEq0N0NEqE0ZN0MB2FFq0G0@O5FXFXkkLYYuYjYuYuYJYuJuLLL@G.,::i:.                     .                                                                .:.  .....7i.......... ... . . . . .   .       .         .               2J5:..  .,,:,.  i  :,.,,:,..::..ivi. :5;..:,::Uv:rX. :,iirjkM,ii,.... ..,rL:iir7LY15Xkkk5ZMN25r,vSEkur,         .   . . ..,:i;vLuJkO8E8E8ZGZGEGEGZGZGGGZGZGZGE8Z8GOZOGOG8GOGOZ88OGOGO8O8O8O8O8O8MOMOO8M8O8MOMO</span></span><br><span class="line"><span class="comment">//kkSXSPkkkXkXSkSkkXSXFXSkFXSXXPuYYjYvJ@S12S1S5XSPXqqEEGE88OZ8ZGEEN0qNqqPqPNPNXNqEqENE000NOB2FFkPEEGMBFkFkkqFYLuYjYjYjYuYjJuJJvXBr.:::::..                   .                           .                                     .    .....7i........... . . . . . . .           .                       :1u2r..,r::.:.,ii ::::..:::,:.,i: ;U,:2:..:i:.i5v:LJ,iirLri.281iir:.:ivjPPO8MM@OOEXqZ0qFuvuEONuZ0Xu:.         .   . .   . ,,::rrv7UOONZEGZ8E8E8Z8ZGZ8Z8GGE8E8ZGEGG8G8Z8G8ZOG8GOGOG88OGO8OGOGOOOOO8M8MOOOMOO8MOO</span></span><br><span class="line"><span class="comment">//PFPSXSPSXkXkkkXSkSXSXSkSXSkSPXqUYLjY7k@5SFXSkSkFk5SFSFkSPkqPEqZNGEGEG0G0Z0EqEq0q0NNP0qN8@5F5SSPq8O2ON5SSkXXLJYuYuYjYuJuJuYJLL@G.:ii::                       . .                                                                  ......r7.............. . . . . . . . .         .   . .              i2YS  :i .,.:.:, ....i ::, ,i.,,...vJv .:..;r:7Ur7u7:;.L: :uMN2EqF0EXEk8k7FFSE5NPNX2j2PE1UjOB@Su:              .   . . . ..::iiriuMOPEEGZGE8Z8ZGZ8E8EOE8Z8GGZ8EGGOZ8G8ZOG8GOZOGO8OZOGOGO8O8OOOOOOMOO8O8OOM8OOO8</span></span><br><span class="line"><span class="comment">//XkSXkXkXkXSXSXkXSkFXSkSXSXFXFXkq2YLjLv8M2kSkFXSXFkSXSXSXkXSXFXkqXqqEqENZ0Z0Z0ZZGEZZGN0G@k5FkkXF08O:OZSFkSqSYLjYuYuYjJjJjJuLv2@r,:i::                       .                                                       .       .     . . ..iv........... ....... . . . . . .         .                ,7iUFJFii,.,:,., :::.,:,,,::..i, ::ri  ur :,.:i, uJriu:r;:7::7vMXXX25kiv1rir5ui7rr:i5juSSui7vuZF:        . . . .       . ....,::::,YMGk0qZ0GE8ZGZ8Z8Z8ZGZ8E8E8ZGZ8ZGZ8ZGG888GOG8GOZOGOZOGO8O8OOOOO8OOOOMOOOM8M8OOM</span></span><br><span class="line"><span class="comment">//qFPSXSPkXkkkXkkSXFXSkFXSXSkSXFXXN5YLjvLB82S5k5SFkFXFXSkSXkXXXSXXXXPXPX0qEqEq0q0NE0Z0ZE@q2FkkXU5NMZ.qMFkFXXXLJYuYjYuYjYjJuYY7BM.:i::.              .         .   .       .                                                   . . . .....:L,............... . . . . . .     .   .   .   .         .u25qF1uqL:, .. ,..::.,,:...  . ,..:,,: .7Lj, r: i7jJirU7:;,i::7LO5Lvvri:1; :ki::rFO1ukYLLLvLLY;.       . .   . .   . . ....,,::::,.v80kPP0NZEGZGZOZGZGZ8EGEGZGEGZGZ8Z8Z8GOG8GOZ8GOZ8GOGO8OGOGOOO8O8O8O8O8M8M8MOM8MO</span></span><br><span class="line"><span class="comment">//XkkXSPSPSPSXkXkXSkkXSXSkFkSXSXSXk05YLj7UBN5kFS1S1S5S1F5S5F5SFkSkSPkXkPkPXNPEq0N00EN0P@G25XSq1u50BS S@XFXSqSYLjYjYJJjYuYjJJvj@v,iii:.   .         .         .     .     .                                                     .   ......:vi.,............ . . . . . . . .       .   . . .       72ujuii:::..:,;,i7. . .,ri7:i7r;;.:i:.  .7r.ur., ii.uj7iu :r7:i::UB27ir:rj:,r;i7XYSu7:.               .     . . .     . ....,,:::,. 1BXFXkqX0NZZ8E8E8G8ZGZ8ZGEGE8E8Z8E8Z8Z8Z8G8Z8GOZ8G8GOGOGOGO8O8O8O8OOMOO8M8O8M8O8M</span></span><br><span class="line"><span class="comment">//qSPSXSXkkkPSXSkSXSkkXFkSXSXFXFXSXSNFjLjrq@OOOOO8OGOGGEG0E00qNPNPPkqSPkPkPkXkqPNP0qEPBM11XSPFJJF0@7 j@XkFXkPLJLuYjJjYjYjYJYvq@::ii:.              .          .                           .                                       . .....:7r..,.............. ... . ...   . .     .   . ..      i2YuY  ::,. :,r: :  ii7v7r7rri7ivrr777riL7Li,.U7,ii :jY::Y7:  vLiiNZY;iiJi.;YuUjSr:                 . . . . . . . . ......,,:,:::,..PBBS55XXPPE0ZEGE8ZGG8ZGZGZGE8ZGG8Z8ZGZ8ZOG8ZOG8G8G8GO8OGO8O8OGOGO8O8O8O8M8O8OOOOMO</span></span><br><span class="line"><span class="comment">//XXkPkXkPSPkXkkSkSXSXSXSXSkFXSXFXSXSN1JYLrMBOOMMMOMOMOMMMOMMMOMOMOO8O8OGOGO8OEGZZEZqMBS2kSNXjLU1GMi LB05SSPXJvjYjJJYuYjYjYYv@5.:i::               .                                                                           . . ... ..:iv,.,..,................ . . . .   . .   ..  . .     :kLuL: .:.,.,ii:,..,LLv7riiri,i::ii,:::::riiJJ7;ur: 7,iur,7u  :7..vGNri.ur:7XUEu:       ..... . . . . . . . . . . . ....:,:::,:,:,..EMkqM1FSPXqqE0ZEGZ8ZGG8G8E8Z8ZGZ8E8G8Z8ZOG8Z8G8G8GOGOGOG8GO8O8OGOOOOOOO8M8O8OOM8O8M</span></span><br><span class="line"><span class="comment">//qSPkPSXkXkXSPSXSXFkSXkXSkSXSkFkFXSkkquYYvv@GkXqXNXqq0q0q0NENE0ZEG0GZ8ZZE80GEZ0Z0ZqGBq2kSqPuvuj58E,,i@8XSXkqjYJjYuYuYuYjYjvYBj.:,:.  .            ....       .           .                                                       . .....,i7i.,.,.................. . ... . .       ... . .    YjLY, .,:...,:r. :Lj7ri:ir::ii:rirr7ivirrri7ii,.:Sr. .i5LriLL.i:i7:EXrr7rvuuJF:   .,.,.. ................... . ......:,:,:,:,:,:...X@Bk1EOUFFPkqPE0ZE8Z8E8GGGGZ8Z8ZGZ8Z8E8Z8G8G8GOGOGGG8ZO8O8O8OGOGO8O8O8O8OOO8OOMOOOMO</span></span><br><span class="line"><span class="comment">//XXkPSPSXkXkXSXkXSXFXFkSkSkSkSXSkSkSXkkLJY71@qNNEq0N0q0q0PNPqXqPPXqkPkPkqXPPqPNXNXNBOUSSPP5vJJu1BU.::OBFkFXX2LJYjYuYjJjJJLLY@GBqr.                ..                                                                                . ..,:rr..,.,.................. ... . .     .   ... ...  .kvu7,:.,i.;,:.i ,vLv;:i:7ii7;ri:r::::.::. iY. , .vL :i.7JrYiJY::7:70Ei7ui7L15  .:::::::::.....................,.,.:,:::,:,:,,...,i2i:k@0FGZ2kSXkqq00GZGZ8G8ZOZ8ZGZ8Z8E8ZGE8ZOZ8Z8GOG8G8ZOZOGOGOGO8O8O8O8O8O8M8OOO8OOMOO</span></span><br><span class="line"><span class="comment">//PFPkXSXSPkPkXSXkXSXkkFXFkSXSkSkFXFkSPkUYj7vB8PPSXFSFXFkSkSkSXSXkXXPkqkqPqPNq0NEqqOB1FSPPkvYYuJ5Ov.:,0Bk5kSN1LLuYjJuYuYjYY7kBqFNMq,                                                                                          . . . ..  ..::7:..,,................... ... . . . .     ..  ..  :Fj2i i.,:i:..i, vYrii77ii:.. . :: .;. :i.:vL::.7:iULi  :U7r7:Lr;r.iEvr77UuqF .ii,.......::...............,,,,:,:::::::::,,..,i7LJL:.. i@EFON2kSXXqq0NGZGZ8Z8Z8Z8ZGEGZ8Z8Z8Z8Z8Z8G8Z8GOZOG8Z8GOZOGO8O8O8O8O8O8O8M8OOOOMO</span></span><br><span class="line"><span class="comment">//PkXPkXkPkPSkSXkXSXSkFXFXSkFXFkSXFXSkSq5JL7N@M0kXFXSPFPSPkPXqkPXPXPPPPqPNqNP0qEqq0@XFFXXqLLYjJukM::::2@kSFXXSLJYJYuYJJjYjLvOBkZ27JOq.                         .                                                               .   . .  .,::ii..,:................ ... ..    . .   .   .  ..  .FjFr .,i;:.:7:.rvrvrri, ,...,.r,.:i...:.i::Ji::,: v; ::iv1LL7iJ5:.ikLv7r1FP.,:.   ..... ,:......,.,.,.,,,,:,:::::::,:,,..:7Luvr::,:,,  :@PkMX2SkPPNN00GZ8ZOZ8Z8Z8E8ZGZ8Z8Z8ZOZOG8G8GOGOZ8G8G8Z8GO8O8OGOGO8OOO8OOM8OOO8M</span></span><br><span class="line"><span class="comment">//qFPkPkXSPSXkXkXkkSXFXFXSkSXSXSXFXFXSkkkLvJ@XOB0FXSXkkSXkPkPXPkPXqXqXqPNPNq0P0qNX@O2FkkNjLYJYujZP,:i:LBZFkSqkJLuYjJuYuYjLYv@2:JEXjr2NL                                     .                                       . .       .   . ..  ..::ir:.,,,.,................ . ... . . . .    ....    LSuS:..:i: ,:.:u7J, .,..i::i:r.,i,.,::. .i.Yr  :,i2r,:rr i1uJL:vu:.UU7JSjSr i  ......,...:,,.,,:,:,:,:::,:,:::::::,,..:rYj7i:,,,..      L@1XMS2SSqPNNZ0GE8ZOZGZOZ8ZGZ8ZGG8G8G8GOG8G888GGG8G88OG8GO8O8O8OOO8O8M8OOOOO8OO</span></span><br><span class="line"><span class="comment">//XkkXkXkPSXSXSXSXSXSkSXFkSkSkSkFXSkSXFXS17BMJ7MBXFkSkkXXXkPkPXPXPXqXqXqPNPNPNP0XOBF5kS01LLJLjju0i ii:i@OX5kkPJLYJYJYuJJYjvU@uuuvJuqvvXu.                      .     . .                                               . .     . . . . ...,i:r:..:.,................ ....... . . . . . ...     iEUS1::,;.:i: ;uL. :: .:, i:  ir..::,,:.::.rL.i,,rS.,v  i r11Jur7F711i::UZ,.i.,.,...,,..,::,:,:::,:::::::::::::,,...rYu7i,:,,..       . .OOUNOF1SSqPNqE0GZ8G8Z8GGZGG8ZGZ8Z8ZOGOGOGOZOGOZ8G8Z8GOGOGO8OGO8O8O8OOOOOOO8MGM</span></span><br><span class="line"><span class="comment">//NSPkPkXkPSXkXSXSkSkSkSXSkFkSXSkSkSXSkFX1GB8Y7v@MFSXXPSPSPXPXPkPXqXNXNPqP0P0qNPNBEUSkNSJvuYJJj18  ii:iMBPk5XP1vjYuYuJuJuLLS@uLiLr:;0u71F                       .           .                                       .   .     . . .  .....,:iir,.,.,,.................. ..... . . .    .. .  ,F15FNN7,:,.i: .7u, :i:vi .::. i:i.:,.i::i:.:.LJ  :5v7i::7;viiYUFjrivPU:7Y5Z.,i..,,:,:,:,..i::::,:::::::::::,:,:...iYFLi,,,,.      .   ... JBS2EO51XSPX0qZE8E8EGG8G8Z8GGGGZOG8Z8GOGO8OGOZ8ZOG8ZO8OZOGO8O8O8O8O8OOOOOOM8O8</span></span><br><span class="line"><span class="comment">//XXkqXPkXSPkXkXSXkXkkkkFkSXFXSXSXSkFXFS10BEG1Yvj@EkqNXPkXSXkPkqXqXqXqXqq0q0N0qqMB2SSXXUvJYjYjYXq  :ii,PBEXSFP5LLJJuJjYjJLvNBuruiir7vXU722 . :rrYv7j7Lv7r7::,                                                      . . ...   . .   ........::i;i.:.:.,.......................... . . .     iYq5qqY,i.,.:rr::,rJ:iJ7Yv7rY77;, , .i.,7,.i:.: ,Lrr27::,:vi,;ri .2F1LvuUjOYrqv r,,,:,:,:::..:r.,,:,:,:,:::,:,:,. :7X17:,,,             ..,. :BF5UG815kSqP0NE08E8Z8G8ZGZ8GGZ8Z8GOZ8G8G888GOG8ZOZ8GOG8GOGO8O8O8O8OOO8O8O8OOO</span></span><br><span class="line"><span class="comment">//qSPkPkXkPSXSXkXkPSXFXSkSkSkSXSXFXSXFk1kB0kMujY75@qqqZq0PqXPXPXqPNPqPqPNq0P0NqN@P5FPPFvYJuYjJjku  .;i,Y@EqkkSPYLYjYjYjJJLYE@J2vrLiii,N5LSYuS21jYv7rr;rr7rvLu77, .                                                  ... ...     .   ..... .:i:ii:,,,,,............................. .     i1SjNYi,:ir..r... :vYLL77iiiiiL7Jjv7:...:, .r. :::i5Ui, r:iv,:iir:i,ikN5kuivE2L5i:i.,,:,:,,.. .7, . . ..,.......,i2PUi,..         .   . ..:,. YMS1F28G15kkqq00EE8Z8ZGZ8GOG8Z8Z8Z8GOG8G8GOG8Z8ZOGOG8GOGOGO8OGO8OGO8MOOOOOO8O8</span></span><br><span class="line"><span class="comment">//XkXPXXkXkXkXSPkPkXSkSXkXFXFXFkSkSkSk55BOUZGJJuY7X@PNqEN0NNXPXPXPXqPNPNqNqEP0XMM1FkXPYLYjYuYuJZr   :i:7B8PPkkq2LJYJYuYjLLYOB2uYi777;70q2J55UUj2SSSNEX22JY77r7LJvj..       ..,i,:ri:;::: ..                          ..    . .   .  .......::::ri:..,,.................. ...  .. . . .   r5YJqi :i.:::::.7YLYL7v;:i::v7vr7r;;7LriYi,ij7:7YJJ::7Ui.rr..:. ::i:.7i:US02LJqSUFrr: ... ..,:rLurriii::,...::7LFXS7:...      . . .     ..:,. JBP5S5F28Z15kXPPENZ08ZGG8G8Z8ZOZGZGZOG8GOGOGO8OZOGGG8ZOGOGOGOGO8O8O8O8M8OOOOO8M</span></span><br><span class="line"><span class="comment">//NkPkqkPkXkXSXSXkXSXSkSXSkSkFXFXSkFk55MBU58GLuuuL7G@SXqE0ZEEq0PqXqPNqNqNqEN0q0Bq1XX0ULYuYJYuJuO:   .ii,OOqSXFNFLLJJjYjYYLUG@L777:L7:YqLk1uUuL522jJ7..ii:L5u12ULYYXY...  iiY1Yv;i:::::::iii::::  .                    ..   ..   . . ........:::iri, :,,...................... ..... .  .jU7j5::r:.ir..:,YuJLYri:v::LL7r7::i:i::7vuL:riivr:r  ::ruLLr.iPvjuuLL:.::.iSLJ258ZZ0GP7,:;LUqX8MBMBB@B8M@B@MMGP52r:....   .   . .     ....:.. kBq1F5S5Fu8E15XXqP00ZZGZOZOZ8ZOZOZOZOZOG8ZOG8GO8OZOGOGOG8ZOGO8O8O8O8O8O8M8OOMOOO</span></span><br><span class="line"><span class="comment">//XPXPkqkPSPkPSXSXSkSkSXSkSXSXSkSkSk518B155BqYJUuuLvM@5Fkq0EEENEqNXqqqq0q0q0qqOB1kSqkYLJJjYuYjuZ.    :i:5@FXSXXqJLLjYJYuLJ2OMrvLirLL,rNr:Lu5Yjii    :vvJvvv2Sv:u2YJN1:.111uv7rrrrvvvv77L7riri7r7rv.                    .   . . .     .. .. .:i::i7: ,:,,...,.............. ..  ..... . iuvYX::.,:::.,Lj2JvY7ivvi.rLv7r::77;:ri:r..LJ:.,, .:i:.i7227LrJY5u7LuS5717:.jv,,,r7uOBBBBO@B@@@OOZL:uMBEO8Sj7:,.. . .   . . . . .     ...,:,..GBP5k5S5F11UO05FkkNq00ZE8ZOZ8Z8GOZ8Z8G8GOGOGO8OGOZOZ8GOZ8ZO88G8GO8OGO8O8O8M8O8O8O</span></span><br><span class="line"><span class="comment">//qSPkPkPkPkXSXkPSXSXSXSXSkSXSkFXSXFFE@5F5kBqYuuuJjLvB@qFFPPENENEqEP0qNqEq0q0q@PFkPqUvjYjYuYjY5X      i:;@q5kSXq5vYYjYjYYYFGB5v:;7rr:uGvjkjr: :i. ijq2YiJ5vi:  :7uUYF5FUJYuuuuUj1UYU2vL77u7uU7YvvvuUj,                  .     ... . ... ....,::::7v..::.,...................,. .. .   ruvv5LL:.;,,iJFuJLLLvviiv:7uYiL;Ji:iiir:i:, ,j7 i:iri::7F7. :ii:rrr1Ji:;SSFY:7v.ivri77r7JFOU1kJi20U:7kB17,.     . . . ..... . . . . ....,,:. ,BBk5S5SFF1F11UOX55XXNqENZZGGOZ8GOZ8Z8Z8G8GOZ8GOGOGOG8GOZOG8ZOGOG8GO8O8OGO8O8O8O8O8</span></span><br><span class="line"><span class="comment">//XPXPkPkXkXkXkXSXSkSXSXSXkXSkSkFXFFP@SFFkX@Fuu2uuuuvj@MOX5XXNqZ0ENEN0qEq0q0POMFFXqkvYYuYjYJYJXS      ,i,8OSSkSPXjLJYjYuLu1OMJ77LYFj.:EY.:i.ivr.:jNL;7ujrv,,::7i :LSuuJUU2uYL77YYLLv;7r7777vi;YvLJvLYFF:                     . ... . . ......::::iLr .::,,...................,  ..   .vJ7PU:Lrv:i2uULJ7j7JrrLr.iuLLvrLr;vr.;;:ir .:;1.,::7ir2ur: ;rr7Lrr7v75vrivLXkjL,ii:2:. i.j0r:, .E8LjFv.    . . ............... . . ...,:,:. i@MS5kFk5S1S5F522OX5SXXNqENGE8GOZ8G8GGG8G8Z8ZOG8GOG888Z8G8GOZOGOG8GOGO8O8O8O8OOO8OOO</span></span><br><span class="line"><span class="comment">//qkPkPkPkPkPkPkPSkSXSXSXSXSkSXSkSFX@X5FkF8BFu2uUuuju7FB8BE1kkqqNqEN0NEN0NEN0B82XPNuLLjYuJjYJLGj       :,7@kXSkSN1LLjJjJLukZ@Uuri,i.iuqi:ii,:v7:LXL:iFr ...:..:.:.:,uk5u7:v7Lr:LYLLiJi7i;r.  .rvJL22uYY2u:                .   . ... . .......,i:::rUi ,::,..................... ... .7uvUY70P2515uJLLYL7Yvuv7::uLL7v77r:7v:;iri:: :iL1:,vi,JLi: .iLi77iiLr77uPv 7Y1FPvr:7:.,v,:kPk7i.J@MXi    . ................. . . ....,,:,:. 7@ZSSk5k5S5S5F5F121MFFFXkNqZ0GZ8Z8G8G8ZOGOG8Z8GOGO8O8OGOZOZOZOZ88OZ8ZOGOGO8OOOOOOOOO8</span></span><br><span class="line"><span class="comment">//PPXPXPkPkPkXkPkXkXkPSkSXSXSXSkFFSBN5FkSkMB52U2u2uuuJ7ZB0BMFXkPPNX0P0qEN0NNN@Skk0FLYjYjYuYjYJZ7       .,.MOFXSkXqYLYuJuL2SG@kF2:i;7PuUX:ivri: vk7rvF:.:::vi:7L:.::i.:7J77:rrriLJ7rjvrii:7i. i.,:L2r:JSuYS7                . ....... . .......:::::L2: :,:,........................  vYL5r,i711UjJJjJuYYJv77Lv7u7LLLiLvrii77ri.::.i;L17i,i2Urr. .r77i7vr77JL7u1vr7Yuk02: iur;ri;0PX7:8Br     ....................... ....:::,:..7@MFSkFk5S5S5F5F151USO5SFXXNN0EGE8GOZ8GOG8G8GOGOGOGOGO8OG8G8ZOZOG88OG8GOGO8O8O8O8MOO8M</span></span><br><span class="line"><span class="comment">//PkPXPkPXXkPkXSXSXkXSXSXSkkXSkFSFM05FkkPk@ESu2UUuUuUJjvBM5M@kXXPXqXqPENE0EXMMSSqPuLjJuYJYJYjJG:        ,:qBFSkFXPFvJYjJYuk0@u7vSqPqv,jU::,.7rY5vrvu,;r 7r,,.,..:i:i, .71vrvr:rru77i:7iiv:;iiL: ,YFi ,iL1LP7              .  .........  ......,:::::uU, :::,,.,.......,.......,.....ijLLj,: irvuuYuJLY5F1JUvjUuLLvL7;ir:7rr7i, ,i.;iuU7.,i1v;i..:rvr;r7rL7LuLv5Pv:ruFFPu;i.iui..rPOM8P. .,::, ..........,.............,::,:::..Y0MM5kSkFkFF5S1S15152UXO5FkXPNNEE8ZOZGZ8G8GOZ8G8G8G888ZOGOG8ZGG8GOZOGOZOGOGOGO8OOOOM8O8</span></span><br><span class="line"><span class="comment">//PPXPXPkPkPkPSXkXkXSXSXFkSkSkFSFOE55kSXFZ@qF1U1UUuUuuJju@8UO@qkkqkNPNqNqZN0MZ5XXSvYYjYuYjJJLuZ.        ,7rM05SXSPXuvJYJL2SZBU2uuvJXX77krrr;.752iru7ii:i:..iii..ii,..r:i7Yvr:7:i7j7riii7r:rLv77.:FFr:i iuFYku.              ...................::::::SJ,.:::.,.......,,,.....,....  :27u5rrvi:iSuuuuLYr.iSj5u7LuLu77Lv7i;Ji:.i. ;j::u5:..72rr7.:,,iLvrvL:Li7YujXuiiJ2S18J.rLi.v;:uXBq  :::.,:,.......,.,.,.,.,.,.,,:,:::::,: :21uMESFk5kFS5S5F1F1F25U2qG1SSPX00ZEGEOGOZ8GOGOZ8GOGOG8G8GOGOGOG8GOZOZ8G8GO8OGO8O8O8O8M8O</span></span><br><span class="line"><span class="comment">//qkqPPkPkPkPkPkXSXSXkkkXkkSkSk58ES5kSkSPMMFk2522U2uUjUJuX@N1E@8kkNPNq0qEN0E@SSX0uLYuJjJuYuJjUO        .iLrX@1kFXkqFYLjYY2Xq@v::7XuuL7L57i::iUj;iL: r:.:.:v::;7ir,ii7i.. rSvr:i:iLrr::7r;rL7iii ,ku:: rr.7SuG7,  .i.::  .  .............. ......i:::::qJ:,:,,.,.......,.,.....,.,...7uvU7i7.vr.22Ju2u.  uYi ..r2Jvu7vrJr7;rii.77r;iJ5v  :iuYi77i:,.ii7LrUuYJrL1Svivrr5Luq.:::i;ir720..r..   .:,.,,,,,,:,,,,,:,:,:::,:::::,, iE5:7BNFkFk5k5S5S15551515U2NZ2SkPP0qZ0GZ8G8GOG8Z8G8G8G8GO8OGOG8G8Z8GOG8ZO8OGOGO8O8O8OOO8O8</span></span><br><span class="line"><span class="comment">//PPXqXPXPXXXXSXkXSXkXSPSXSXSk5ZES5XSXSqX@EF5F2521U2uUuUu5Z@k5X@MNXNqNq0q0POMkFqXjLjYuYJYjJJL5E        .7Yr0MG5XSXkNULYJL5k0Bv:;ku,i. :NL,:,iUi:ij::.:i:.i ,r:,::7:::iii:.iLYi7i,rL7i7::r;::r::.i5. ,7: .:j2Uqj77juLJJrL7,,.   . . .... ........:i::::iqY::::,.,.,.....,......,,.,..rU7217.Lir7XF2u25:.PYi.,7 :PJJLJY7Lvv77YrL;Yv7Lu1L,rr ;qiiii7.,vvv:rY77Lj15Frv7rLFUkNurJ:r72Yrju 7.  .., ,i:.,,:,:,:,:,:,:,:,:,,,,.,..,jNu,,P@5SSkFS5S5F5F1F1F2525u20Z1SSqPE0ZEGZ8G8GOZOG8GOG8G88OGOGOG8G8Z8GOG8GOZOGOGOGOGOGO8OOO</span></span><br><span class="line"><span class="comment">//NXqkqkPkPkXkXkPSPSXSXSkSXSS5ZESSkSkkPk8BXFS51U5U1u1uUu1FkB@522BMZqNX0P0qqM81PXPYYYuYuYjYuYJFG        :J7JX:O0SkSXXqYYLL1Xk@u71k7:,7:71,,:,Yji,vr. ,rii:.:i, ::...:i .:,:i:vL2r;rivu:;iriiiiiirk:.rv:.rLi:1uJUu2JL77r777LU7.     . ....  .   ...::::::;0Li::,,.,.....,.,......,:,..Ju75v iLi:r7u1577::qYi,::,:rkujLvvLLLLL7rLii2LUU5,:r::ivkrivJ7vu7iiLYrrYkUP7irikkY2vXqr .vPi,Y@7 v  .,::, ,i:.,,:,:,:,,.......,.,,::;71Lir i@NSFXFk5S5S5S5F1F25U1U1u1Z02SkPPNqZ08Z8ZGZ8ZOGOGOGO8OGO88GOG8GOZ8G8Z8ZOG8GO8OGO8O8O8OO</span></span><br><span class="line"><span class="comment">//XPPNXqkqkPXPXPkXkPkXkkkXSk5ZEkFkSXSPXXMM5kSS152122U2UUUPkPB0Uu1BMZN0q0qNPB0SSqXJLJYuYJJuYjLkP        7J750 7BXSXFXXkLYv1XXM2iSU7:ri:uFii,,Lr7irr.:::.ii,:.,::iiiii  iri:.i:,ivJYi:7Y7i::;iirvJi::,.::,i: :5uYJ;7:ij27r77;vu1.          . ...   .,:::::;qL:..,,,,.,...,.,.....,::. rq75uivv:rr,;P2JJ27FS: r.r: 75ujLYLvv7vJJurvjU11::ii.::,21juirv;rv7vju11ukjLJJ71ru5u1ZL:.vLruSkX 7i.,:,:::..ii.,,,..  .,:i;LJYLLYLYUi7; ii;@OSkkFXSkFF5FF51F1521U1U1u1Z05kkqq0NZE8ZOGOGOG8ZOGO8OGO8OG8Z8GOGOZOGOG888GOZOGO8O8OGO8O</span></span><br><span class="line"><span class="comment">//qXPXqkqkPXPXXkPSXkPSXSXkSFZEkFXSkSPXqP@PkSk5F2521U1u2uSqP5BM5uUkMMZ0Zq0qZBN5XXqYYJjYjJuYuYJS5       .LLrNS  ZOXSkkXPkLL2q5@u75:.::i:5:::.,J:rir7,i:ii:i.::,ir:.,.,:.;:,.:ir, :r:L7vYuJ77YLvLu, 7;::.:;r.:rrv:...r,ii:LL7uL7LXJ      ,,.;r:7r,:r .,..:::iqJ:.,.,,,.,.,...:.....::, :Ou1S:ivrvi:1P1151X1SLvurii  2UJJLJrU7LvLJuUUFj, i::;ir:rkFJ7vr,2uvru12uk1iLSUuvJYJ1SX0:.:JrL:UMu.v:.,:,:::..:;.  ,:rjkkEk8F7JuiYJiiLi.::i@MkSXSkFkFk5F5F5F152FU525U2u1E05Xkqq00ZEGGOZ8G8GOG8GO8OGO8OZOG8GOZ8GOG8GOGOZ8G88OGO8OGO8</span></span><br><span class="line"><span class="comment">//qqXPXqkPXPXqXXkXkPSXSXSSSGEkFkSXSXkPkOMXkPSk152125U1uFXqPSO@S1jkqMOGEZNNZBFkkqXjvJJjYjYuYjJqJ       iu7r05. ,BNkFXSXqF7uXFMXYF;rriLkr:ii7i7r;::7,ii,:::iii,i:,.::r::::  :. ::i::.,:..ii7::i:L7:,:rrvuUL7UuLuuY1j77Ui :  vL2JLqu: :Yvu5uUu51Xq00PPP7vi...i0ui:,.,,,.,.,,.,,.,...:,.:Mk2XLrur,7viJFSSkvY1uk5ir:.v5JujJYuYuJuj2uPU,.77r7;,iii:ivkvJ7riYL7j5UqFYNZX251U12S1F0r.ur.vk1Yk1:7:..,,,,. :vir10MB@Bvr1Y.:Sr:i,77urikq@8SSXSPSXFFFF5S5F151525U121U1u1E01XXqqE0GZ8G8G8ZO88Z8GO8OGOG8GOG8Z8Z8ZOZ8G8GOGOGO8OGO8O8O</span></span><br><span class="line"><span class="comment">//NXqXNXqXqkqkPXXkPkPSXSkS80kSXkXSXSPXNBZSqXX5S1F1521U1S0XPFMBP5U10qMOZEGqMMFkPPNYLYjJjYjYuYjXu       vY7;Gu.. v@XXSkkXq5Yk5MEju:,iuS;,iri:.77ri:rvi.:i.i:i:.,,:::::i,:,::i;:.::i:: ..:::  .:.,juJv:;,.:i ... .:::;:uJ7rJr, rSXYZN5kkkP52uSjUv7uNPOM@BO17r.:F7::,.,,,.,.:..:,.....,,.uPj817,;v1i:v;;iii21uvrr7i7quuYuuJJJY51k5Ui..vi ::,7L:,r.iJP22uLjjJ2v1Y.::LPSkPZPk1F5X01:irrrujjZqLLL:   .:uGZ5U1i5MG@jri7Lu7i2kqOZFkOBBPSSkSkSXSkFS5S5S5F152511U1U521u50E1XkNqE08Z8ZOGOGOZOGO8O8O8OGOG8Z8Z8Z8GOG8ZOGOZ8GO8OGMGO8</span></span><br><span class="line"><span class="comment">//NqXqPqXqkqXPkqkPXPSPSkkOqkSkSXFXkXXqZBkqXqSk5F5511U2SqXqXFMBkXu2PZPMOE0EMM5PkqPuLuYuYuJuJuJqL      ,uLrrEu.,. SMSXSXSXkXFkZOv5J52Yrrir,:i:rvr7:rr,.::,i,,r:::i::ir:.iri:,:.::::..iir: ...ir7vvir7i.:.. .,7i.:i.:v:..irSXuv ,q0uXqZNur7irr::r::Yvr7F8M@BOLi:::i,..,.,.,,:,:...,.... iOUXZ.:J2rii:ij:.:PkFjJLLij1uYujuj1Sq1u;i  ,L;:irr7:v 77ir,iPFv2J7Lv1Sv., : 70LijXqSkkZGO2i:7:iUL55JGOUvuSFPXvjUuY8BBOP5jLLiiiiYqZGkOB85kSXSXSXFXFS5F5F1F1F25U5U1U12122u10ZFPkNNEE8ZGG8ZOZO8OGO8O8OG8GOZ8G8Z8G8ZOZOG8GOG8GO8O8O8O</span></span><br><span class="line"><span class="comment">//0XNPNXqXqkPXqXPkPXPSSPOPSSXSXSXSPPNkBEPPPSkFk5F5F255PXqXXS@GXqSukE0qM8EqMMSkPkEuLYjYuJjYuYuXv      ij77;Zu .:..O8SXSkFXSk5PMU1j7iir:7vr:77i777i:v:,:ii::i::i::ii,,.:: ,i::,..:7:,:...:::iYJ,:...i7vJ7i,.7;.ir ir..,.711.iuur.j0EEL::.iLr::rrLvJ7iJvrvXMM@MJ.;ur,..,,,.,::::.,.,.....SquO5;Ji:u;rj7:iY:LF2FXXSU1uUu2uFku::,.riivvirv::r::v:,77..rSFUuuJLu50S,7Y. qv ,2L2q57LJU:ru.ik:v7YUF52u5r7;LEXqkL;:...........     vBESXSXSXSkFk5k5S5S1F1F252521U2U521U1EZFkPNNE0GZ8GOGOGOGOGOGO88GOZ8G8ZOZGZ8ZOG8GO88G8GO8OGO8</span></span><br><span class="line"><span class="comment">//qqqNPqXqkqXqkqXPXPSkqOPSSXkkSXFXXNkGMqXqXXSkFSFS5S1XXqkqSNB0X0k21E0N0MZ0MM1XkqNFvjYuYuYjYujN7      JL7rr0F  :: iB05XFXFXSSS@uu27ij7r7i:iii.,77i:i7ii:::r,:ii:;:::i;iiii::ir7L7v7rvv:.,:Lri..i,;,. .7vLjr:i  :rir ,uPuS7. :vEYYY:..irivri7:irii:vr.:uiiYOBBBOi:uv:,.,,,.,:::i:,.,... rB15Bj:i7i:Uu::7.iJr,:Lr.YF2u2Fk2;:i:iLi;r;,:rL7.:irvi:7r::i:u5UjUU5FZi 77..UO::;LvZv ::..:v:Ji,,:Yi.7r77Jj0ESr:.  ..,.,,:,:...      1BkkXSkSkFk5SFS1S55152121U525U1U221u1PGSXXNqZEGZGGOZO8O88GO8O88GOZOE8G8G8ZOZOG8Z8G8GOGO8OGO</span></span><br><span class="line"><span class="comment">//NXNPNXqPPXqkqkPkPFk0OkkSXSXkkSXSNXqMOkqXXkXkPSkFkFSkqXqkkN@EqNE11PG00EM0MM5SXXESYLjYjYjYjYuqr      Ykr7rN5  .:: v@PFkkXSXFSBPvFYv7i:i:::;:::;77i:iv::.:iii7iri:iv:,:rrLL7Lv:rr:ri:iv7:7i.:i,  ri.:v .r:.vLYLLrr:.UX7YFuYu51Yiuu:i,:iv77iii2L;vvvY7LuvLrvkBMBM::ju:,.,,,.,:i::,,,,...rFMuNOr,LvLr.77iUui::,7:.jP15Fu7;,iv,rL,.7i77ivi:i17.7Y,;rr7:rNUUU52FNv,v:  kO1  7qkXJr.:UvL7777irv,.vvrvuZU:   ..,.,.,,:,:,,..      .@qXSXSXSk5k5F5F15152511U1U521U121U2u2XGXXPN0EEGZO88GOGOGOGOGOGOZOG8Z8Z8ZGGOZOG8ZOGOGO8OGO8</span></span><br><span class="line"><span class="comment">//PqqNXqXqXqXPXPkXSqEESkkXkXkXSXSqPN0BPPXPkXSPkXkXFSSqXPXPFMMOk00P2PEENNZMOM5XkPqNYYYjYjJuJjJ0i      :Evir2F   ,:, NBkFXSXSX1OOuuujLr7Lr:i:i,.:v77ri:vr:ii::,ir;ir.:ivv7ivi:7;:i:i:;:7LULi,.:i .:.:i.,i:,::.:ri:i1157LqLrLL:..:rru8L:i::r7vu:i:7vvi7u5vv2riSBBB@i.rji,.,.,.,:. ,,,,,..,78Oj8OJv7v7ru:ru:vu::7;iujYXF,,:iirv7v,:viv:,rr,vv:,ii:.;,7J,7Pu1U1XP  v.iZNMv :0PO1  7uiii:7:;Ur.iLi2YL8r  :::::::...,,:,:,,..      BEFPkkSkFkFF5F1F151FU12121U521u2U521U1FZPXPE0ZE8G8G88O8O8OGOGOGOG8ZOG8ZGGOZ8G8Z8ZOGO88GO8O</span></span><br><span class="line"><span class="comment">//0X0PNPqXqPqkqXPk0EqSXkXkXkXkXSXXNXMGXXXkXkXSXkPSXSXkqXqkqBNONPEqXF00Z00GMBkSPkPq2LjYuYuJuYu0r       22;iLS    ,:..@8FFkSkF50Br777rLLuvLLvri;i:77Lr:r7,i:iiir:,:::vJr7r:r7:i:i7rr777;r:ivr.,i::i:i:iii :,:i:i..r2YriF: . 7i:r7 ,rivGUi:riri;i:rv:rjrr7ivLu7vMMBEi,rkr..,.,,,.,,,,,,,..:ikGu88Siviv;;1i,LiiuU;i21i5Ui:7jYii:i::iYi.,j7:rr.ir:;Livr,::FS25XFrLYuFZXNr..vqE0,,Urr,vir7,7:.i:iiXu5r .:..    ,:..,:,:,:,,.. .  7@SkSXSkFkSS5F15151F25U1U5U2u1U2U12525222ZqPPENZE8GO8O8OGO8O8OGO8OZ8ZGZ8GOZOZ8GOGOG8GO8O8OG</span></span><br><span class="line"><span class="comment">//NqP0XqXPXPkPk0NZqXSPkPSXkPSXSPX0PZMqkPkXSXkXkPSXSXkqkqkkGMFM0NNZPPPZ0EN0G@XkkPX0kLLjYuYjJuJEr       :Eri7N.    ,,.L@ESSkFX5PB2JL7L777Yr7LLi:i:,7vvri7r.:ri:::i;vLv77r7:ii::r7L7ri,;:,: vY..ii..ii;.:i::ii:   2Xui:LF.ii::7rv..r,:,:kqv:ir:v7r7riLJr;:Uv22uiJMOB@OBBBu:...,,:,,,,,,,. .:2BXuOEN0Xjvi::jv;jir77iSr:L0v::rr:vv7:rirY;77:ii.iLi:ri.,:i:vPNq1SkPk5XFNq:7uuGZJ jv::i: :i:7Jv:rULJSj. ,.   ....::.:,:,:,:,,.,. .@OSFkkXFk5k5F1F1F552525U121U1U22221UF211U2GNPPENZE8ZO88GO8OOOGOGOGOG8ZOZ8Z8ZGG8GOZ8G8GO888O</span></span><br><span class="line"><span class="comment">//0XNXNPqXqPEEGNNXPSXkPXPkPkPkPXNPNM8kPSXSXSXSPkPSXSPXPXPkB0X88PENZq00E0EqEBE1PXqPEjYYuJuYuJuq7        UU:r5:     ,.:SBZSSXFX2BNJJYvv77LY;i7Lvrii::iv7Lv;ii,:i7vL7virri7rr:iJvvi7ir::ir:.vur..i:,,. :7,i7:,:;r5jj7:rk7:.iiiLi::ir:Jvi:v8S:7:ii,:LvY:77L7vvirrJOMOM@B@B@Nr...,,:,:,,.. :uOPFF0OOUFkqELi2;77:vLirrqUvuLJJuJrri.:U7.rr7;:;:L:iiJri:i7;rruGU:,r1qqEPZEvrZEkLi :,7r,7:rvi:vv.i;LYJuY. .:,..:,:.,::,:,:,,,,..  :@BXkXSkFkFS5S5F1F2F25152121U1U221u2U52F252UUEEPXE0GG8GOGO8OGO8OG8G8Z8Z8ZGZOZOGOG8Z8GOGOGOZOG</span></span><br><span class="line"><span class="comment">//PPPqP00ZEG00XqkqXqkPXPkPSXSPkPN0EMPXkXkXSPSPkPkPkPkqPPSGMNXOE0NE0Z0ZNZ00NBZFSPkPqSLYJjJjJjJ0v        iXrijr      ..vLBZkSXSFEBYuv77Y7vL7:irv7iivr:::r7L7i77Lvv7r7ri777ri7L7r7i;i:v:ir. iYL,:i,.i7v;..,..:rrUJYii,j2:.iY;,i .r77:::,:,,uZ::r:ru7i:LL.:i:7L2kE50MMPZNGPZB5,..,,:,:...rEXY2XNXXuSUUuSP8S7iLL7:iL7vGjvL7ivUS5F7;. riiji77rvLii:i,:ri.:7Er,::ivvLrJY7.ii ,urv.,v:j7:vU:,:.77XkGqZ8; .,i,,,:,..:,,......   :5@OPkPXPFkFSFk5S1F251F25U5212122U2U2u2u5152112u0EqqEEZGGGOGO8O8OG8Z8G8Z8G8Z8Z8G8ZOGOG8GOZ8888O</span></span><br><span class="line"><span class="comment">//Eq8Z8EGNNXPkqPPXqXPXXkPkPkXkPq0qMEkkkSPkXkXSXXXkPXPXPXPM8P0GGq00ENE0ZNZ00OO5PkPXqqjLjJuYuJjPJ         5Ji7i       .iY7@ESSX5kBFJuvY7jL7vi,;7L7::riiiiivLjLL7v77rv7777ir7v77rr;r7r:v:.  .YL;,i.:: ...7v:...7L7r7:jk7i,.,.::r,i:r,v77:r;:5Pii7i:r;vri7kSNZOXP5NYL2LuSS0ZOBMr. ,.:,,.rZUvqqq512Y55LXuY5q8GX:,7rL:LUFuUvvvJr77557ju.7i::ri, ;7..ir:7v:Jki:iiv7. 7:,,:Ui v7:r::7iu::i.,SSqZEUP5XXM0r .:...  .:   ....,,:7EBMqqkPkqkqkk5S5S1F551F1525U5U5U1U1U1U2uUU51F2222uNEqPE0GZ8GOGOGOGO8OGOZ8Z8E8Z8ZOZ8ZOGOZ8G8GOGO8</span></span><br><span class="line"><span class="comment">//ZG0EqNXqPqPqXqPqXqXPkqXqkXSPP0q88PkXkXkPkPSPSPXPXPXqXPNMP0qOZ0qZNZ0Z0Z0ZqOMXkqXqP0SLLuYuJjLN5         ;Pi7r        .L7r@ZkSk1OM1YJLJuL7jvi7vvLrir7:7ri:;rvvLvYLL77vvvL7L77;77r:rii;  :,rvjr::::,:vi:7,.r.i1LrLivS::rr::v  ii:7,ii:iiri.vNXXqU5u0kSP0NPkLkPuYUu715kP0NENZB@X: .,,.:kXLEi1PPkk15J1uUvXJ2kNqL.Ljr::FGk1uJv2L77Yk2uUkF75u:;j7irLUFL5NPkF:iL:iiii,j,:2i,:ii:::77L:,ivjG0XFku12Pvj2S0SU7:::irYLLUS1XE8BMMM@MkqXPXPkPkPXk1F1F5F1F1F11252525U1U1U1U1U12F1S12UuuqZ0qEEGG8GOGOGOGO88G8G8Z8Z8G8E8Z8G8EOGOGOGOZO</span></span><br><span class="line"><span class="comment">//PSqPNP0P0PqPNPNPPXPXPkPXPSPPE0EO0FPkPkPSPkPkXkPkqXqkPkOG0q0EGNE0Z0Z0ENEEEZ@XXkPXqqEJLLuJuYJkG         ,1Yi7         :uir@GSFSk@XjLvv5LLj1jLLLvJ77YLi::ii:7Yr7vLvLLY7irYvv7r;;;rv, .:. ;7LJ: .:i:.r,.:i:i;juvrivkr.:..ir, ivrrr7:i7L:ri:vUFF5XSqS2XFk5L07JSLv2FPZPSXPSkZXEG@Mj.  .rG1qZ2NXkPSUJSuJYX11uJJZ2iYvii7:iX00XqX21S7i7Y7vLYuUJkkuuXjLi7Fur5v::vri7urJiiL7:i.7iir:i;L,.7qEk5JJu1v7LUuXXGOBMBZZO@B@BM0qXOO@ENX0MXSXXqkPkPXqqqF55F1F25152F25U1U1U1u1U1U1UUUS1S1122uPZZqEE8G8GOGOGOGO8OZ8ZGZOZ8GGZGG8ZOG8ZOZOG8G</span></span><br><span class="line"><span class="comment">//FkXqP0PNP0PqPqXqPPPqXqkPkPXENEG8SXSXSXkXXPSXkPkPkqkPkEOE0ENG0EqZ0E0Z0ZEZqEB0kqXqXqqPvJYjJuL5O         .rk;r,         7J:iBOSS58M52JYU1YujL:rLYLYLLv7irrrLuvri:.:LLr::iYLrr77rr:rri..::iLY7:iri,i,::7iL: :1Yrir57i::r;::i;Yi,,i;:7r:rLur:.vFXXPPqjSS5Sj2Ui71ZEZ5N5Fukk15SXqqMMOr  YMN880qkP5q2FU5kuSuv5JXSG8jivLr;7;rU2YPSPkZ2UuF2777ivjiirrJvU2;.rk7,,Yv,r::r,iU:Li.rr77i:ir,J0PXULjY0SYqUk2rFu7jFj1ku7BM87uYvUGBZFX5B0kXPkqkPXPkNNESF2F25251F15252121U1U1U2U2u22F5S55uUukZZqEEGZOGO8O8O8OGOG8Z8Z8Z8G8ZGZ8G8Z8Z8G8GO</span></span><br><span class="line"><span class="comment">//S1PXNXNqNq0PqPqXqPqXPXPXPXE0Z0OXkSXkXSXkXSXkPkqXPXPXN8OqENEZGqE0Z0E0G0ZNEPBOSXNPqPN0FvJLjYJJM,        ,.Sv7:         .uv::BOkFkBNYUYUFFL7r7vvYU1u77iv7irjLL;:.7uY::i:iuvv7vr77i7rr::LriLui ,7:::iirr,.::rjYiiuj..:r::rv:r7,rJr7i7i:Li ,rkFP27UuUES1u1UL;uPZP0XXqFEuJXSjFXFPNOO@ZvrM8ME50E5Xk1S12Ujr:i7L2uSG1ii7:L77:ji:.7vrvv200q512uSSuk5qX1v;..vk:iLii:.ri:,rr::i;7rr:ivL::PPuuUXPLur:i:i:7v::5v,75r7GMGuv1S10BOkk5EMkXkqkqXPkkFXqZqXU12F2525252121U2U2U1U1u2u2Uk5k11u2UkZ8NEE8G8GOGOGO8OZ8G8Z8ZGE8G8Z8Z8GOZ8GOGOG</span></span><br><span class="line"><span class="comment">//U2FPXqPqP0q0XqPNXqXqXPXPX00Zq8qXkPkPkPXPkPkPkPXqkPPN0O0E00qGNZ0ENE0Z0Z0E008@5PP0PqqE05vJYjYY8u        ..rkir          iU7::BOk1GM1U5u522uFXSU1UUvL77:;i:YjLi.vuLriiriivjvLr7rr7rrv:rYYur:::7,:rr:,: :i.,:7jiiSrii:iL;:i7.:::::.,i7:L77jJkXk7;Li:FEqSUq1SEkk0XPF022SSJUS5UFqS1OM@MLS@GB5Z0qq252j1LSuvi7Y,.uPG7rL7jJ:iYv7vu7:7iL7;SXFGZq0ZqSJr:i7::XL::rii:r:Lri7:ii,i7v,:7Y:iESkNjJur.r7:rLrkrir1;:iu7Yv8OOu52JX@0MZk5kBNSqXPXPXXFF1FFPN0S5252F15152521U2U1U1u1u2uU2kFk11uUUSE8NEE8ZOGOGO8O88G8G8G8Z8E8ZOG8Z8Z8G8Z8ZO</span></span><br><span class="line"><span class="comment">//jJ5FXkqq0qqP0PNXqPqPPXqXENZ0GZPSXkqXPkPXPkXkqXPXNP0qOGZ0EqEZZNENZEZEZEZ0ZN0BE5Nq0XqPNE5vYYjYXP      . .,,FLr,         .Lu;.,BOSFBG155YYj11S25U1L77i;r7rrvu1LvJJ7Yi::i;irJvv7v;7i7iv77u7 ::i7,.::::i:;,:vi;Fi72..:iv7i:7v:;2:777L7::;L..rqSE5. ,J8FXNEk0PX5kkF1XPYLG1J2S2SSJ7vP@OMO@BOMGXEqZ5SFFuYU1uuvFJ7iNGSvviJv7LLvULr:rUv.7u7.Lv7rLL::7.:Lr,1P7,:7:,Liii:7:.vviii7;rrr,vOEq:.7i:ruYvU72rru7iiLL7ii7OOOLiL5MB0qBXk1M8XkqXqXPkX5S5FU5SEqkuUU5UF252122U1U1U2u2U2uuuXkP52u2UF0O0EZ8ZOGO8OGOG8G8Z8Z8ZGE8G8ZGZ8Z8G8G88</span></span><br><span class="line"><span class="comment">//vLu5FkXNPqX0q0XNqNXNXqXNNZ00GqSPXPkPXqkPkPXqkqXqX0qG8GNEq0080E0E0E0E0Z0E0EXMMSX0q0PNXEESvLLjjO:    . ..:.71r:          ijv: :@G5P@SYj2jLJ2J5122vrrr77vir7;rLYuLJ7::rri.iJLvL77777772j7::..:,.ri:.rvY:,iv:.J7i1::7i.:r:.i:7i:i,:u:7vii:JZuL7.rNPqL:,r:2NSFPUXJu5515J1FkSXJ2r7JEBOZBM8MBB5FZq0qXu5YXuYY15Uur:Nq7:vurvSrLur;uJiiJ7rr;L. Li,,i7i7ri5Pi iv::r:iir7r7uiJvivv,L7i:SM1.iL7:rLr:L7,:uk7iLjL77rrjMGOvj2GMMEP8OSSNBkPXqXqXPkk5S1F251kP0XFu121U52521U1u1U2U1U2uUuXXX21uU250ONZZ8Z8GO8OG8ZOZ8Z8ZOZGZ8G8G8GOZOZ8GO</span></span><br><span class="line"><span class="comment">//77Jj15XXqPNPNqNPNPqXqP00Z00ZESPkqkPkPkqkqkqXPXNPNqZ880EqZNZZE0Z0EEGEZ0ZEEqPP@PSX0P0qNq0EqLLYJXS   . . .,,,Svi.         .vjr: :@Z58Ou5UuYuvuu1u1ui:LjLrr:i:rrr7jL77r:::iYYvL7L7r7vu1Y. ,,,::.77::7: .:rii:.iJvu:,r.:77i:rL;::Yvvr,irivv7OFuvrOk7r.:2:iEPFPkLkkFu7P52EFuv72L7LSMMN8B80EZ@BPXEXq12S1Y5YFPUjuL;uZ:vFYiJLU::iJYrr2Yi2Gi:v5Yirriviiiu0r:Lr;iYr:vvi:v1irvir:i2uv:7X8:,Uj285rLjUi.uLu;L7rJY7L7ZOMZZvSB88MXqME1kMEkPXPXPSXSSFk5S1F211NE0F1uUU1U121U1U2u2UUUUuuuXEN25uuU5EONGZ8GOZOGOG8Z8ZGG8ZOZGEGZ8Z8EOG8G8G</span></span><br><span class="line"><span class="comment">//rrvuu15kXPXNX0qNPqqqX0qE0EE8XPkPXqXPXqkqkqXqXNPNPEZOEENEN0EG0ZEZ0Z0E0EEEqPNB@B5XXNq0PNPNEEuLLu8i   ....,,.71i,         .iYvi. :@qFM0U151u2LUu520YrJ7:i7Y77v7iYJJ7v7r777uLYY7ruu1J7:. iirr:rJri,.:i:i:vi:.,irYSr:.:.:i:ii.:iY;:.r:v:iY::jPNP00X:.7LiiL8SXkqPuUquFPjJYLLi7Y7L2ZBqqM@8MG8G@BMEqN0X2uS52SJ7SJLJ1ZLL7rLvrLiu0PGP001qJvX2N2qqNFuU::SPr:7i;LLiiuv:ivU;:Yj7:i2r77J:1Z508SZkP50SPPui7:rU;7kvi75MOOjkXOOXGMqSGMS1MGXPNXPXPSXFS5SFS5511u2SZEP22u222U1U1u1U1UUU2uUjk8ZU12uU5EO0GZ8ZOZ8GOG8G8Z8GGZ8GOZ8E8Z8Z8ZOZO</span></span><br><span class="line"><span class="comment">//ii7vju5FXXqPNP0q0PqPNqZ0Z0GPPXqXPXPkqXqXqPPPNXNX00OZZ00qENGEZEE0E0Z0Z0EPqO@MOBE5qq0qEq0Pq0E2Lv5O.  ....,:,:17:.         :;Jr:  L@PqMF2XF525U212U0Lv7v7Lrii;:7uuL7vv7uivJJLLYuYu: .: ::i:::r.,..iL,:77L:,i.:.r2:.iv7i:..:250u.:7vv7:ruv7,ir7rXk7Lji5r;0Nk5SkUqjSU1j17vJivSuYF@ZPE@02E8MBOBM@B8SX25kuY1vuu1jL05YuujrrXqqSPSrvrrrr77r:.UOr:rukNqGL:u7ivr:v7i7rLiiJ7iYvrvjrL,.jZqXJ21vvuU2NSZZEqurirjr::FM8OuvXOOq0qBEXXME10MkqXqXqSXFkFS5k5F1F1522USq8EP2ujUU1u222U2U2UUuuj1GOU112u5GO08E8GOGOGOG8Z8G8Z8GOG8Z8ZGZ8GOGOG</span></span><br><span class="line"><span class="comment">//::;7vJu5FkXqPNPNq0PNNE0GNGqPXqPqPqXqXqPqPqPqPNq0q88ZNENZ0ZGZ0ZEZ0Z0GN0X8B@O8GBBXkqqNN0q0X0qGkj7Ek  ....,::.vu:.         .i7Lr.  O@N88uvFkS21251u5kiLrvvr7LJL71uuujvuLLujLLj2i::,::ii:ivi:i,:ii.:rvLi...7L7ri.rkGEXXXrii15U5UiLr:ir:iiuirv7v1FkONrv7.:P0PXPuPUk5XuP11Jq5FSuLMMqNBZZuOBBM@BMM@B@OEqFUFuFL5YUNZJiYvru0XY27rivii2iiSri;uGGU:,JN8L7Fkk05SY77iuLiLjur;7uiJr;r:YMEXukUvvuFEX0jPU22XEX5G17vqMOM05OO8qEqNMOSXNBFXMNPqPqXPkSSSFS5S1F1F5515UU2P0O0kUUj2u2u2u2u2u2u2JUEM5115uF8ZNZZ8GOZOGOG8E8Z8EGG8G8ZGGGGOE8GO</span></span><br><span class="line"><span class="comment">//::ir7vjuF5XkqqNPNPNNE0GNZ0qPqPqXqXqPqXNXNXqPNP00ZO80ZNEEZ0GEZEZEZ0ZNq0BBMGO8OZ@OkkNqEqEPqP0qZN1vO7  ..,,:,,:5;:         .:ivL:   B@qBU;LF1S5F5PFuPuLL7ivUrri;7LuUu5uuv7jJjL.,iv7::iri:vii::7ir::7. .:rXu1FuiY1i.iL2uuLXUUJSj.:::Li;ruYv::POkUYY7Y7,.v0NP5Sq55F55S2kkuP0FS5OB0kBOqM@MOPOOMMNqZ8@BBGEkSFk1EE5JZSY70Fvi7L7iYFL7uiLUriSO2F0SZZu:r7r:727vXEXUr:vv7irJ5:ru::FZ8FqFYL2vFOF5UPLJuJuYJ5SZSvqMOOFXBMGEZN0POMXFP8O1M0PPqXqkPSSFSFkFk1F1F551121U2108O0X2UjuuUu2U2u2uUjuqBS1FSuP8E0GZOG8ZOGOZ8Z8E8ZGG8Z8GGZ8G8Z8Z</span></span><br><span class="line"><span class="comment">//,:iirvvJuF5XkNP0PEN0EGEZ00XqPqPNXqPqPqPNPNP0q0NZGMEE0EEZ0Z0ZEZ0ZEEqEO@MOGOGO88O@qkPNq0qEqqPNPEEXuM: .,.:,:,.vJ::     .   ,:rL7.  rB@ZMvju2S5U5UP1u0vrrrYirii7r;v:r;,.:,v15Y::i:,.::r.i:.L7ri:i.7::ri:L1ujvLS52:i, rvv2uuJJ5S:,77,r5u:r:v;20ZSJvvL72OZNXXXkX1N1uqk0N2jGq0NZBGkOMqPqXNXP8BP@NNq0NGM@MOEPS027LjrUOZN1vuUvvr717iijLrv:PZYNGNYr77i5v:7iivi2uGOEu:7LrLirvL700PPjvqX7JEkSkuuuFSu7FUY1rrX0OMGF0MMMP0EZN00@NkkNMXEOX0PNPqkk5XSk5k5F5S5F152525U2j2SEOM0XU2uuuuu2u2uUjuFMq25F5M0EEGE8Z88OZOZ8Z8ZGE8Z8ZGZGE8ZOZ8</span></span><br><span class="line"><span class="comment">//:.::;rvvuU5SXXqPNqENZEZZ0XNPNPNP0XqXqP0q0q0N0qGEMZZEEEZ0ZEEEZ0Z00P8@@O8GO8O8OG8M@SPq0q0q0qNPqPE00EM  .:,:::.iUi:.     .  .::7L;   N@MMq725P777LrP2SSi77v7rjLi7:.;r,:77:iJ5Y,::i:7i::iLrri:rr,,7v;:;ir1UL77LJ22q00U: 75ujUJuk2rv7Li.::7r:ru2U0OG1jFGPqPXSqkqXEF8XkZE08EE5XMOXGBEXN0GNNkEBMBO8MOMOMM@B@OXULr2LJEkv;vZkSqEFFjk12k1kN1GkUE2:i:JjJuuiLYJjU77riu0kvrJi7uZEOPXS2P2Jv28P01NuGujuU527jLi:PMM0MBE:7BZNGGENEMEFXkZGqOPPNPNPqSSFk5SFSFF1F152F252525uuu1SGOMEP55uUuujUj2ujUOZ515ZZPZEGZ8Z8Z8ZOEGE8ZGZGZGEGZ8ZGGGG</span></span><br><span class="line"><span class="comment">//,.:::;rvLuu5SXXqq00ZEZEEPNqNPNP0PNq0P0q0PEq0NZ0O8Z0Z0Z0G0Z0Z0ZNNEBBMEOGOGO88ZOZOBMSqq0P0qENNX0qNqEBN .,:::,:.L7::      .  ,:iLv,   @@OBG1qS1L7:rLGYqXr;v:v7ii7vL:rrrr:ir.J:.irir7i.iL7:.ii7Y:r:.:LrirFjL77LjJu7JuJ0JYFuU7uLUN7.rrivJ:7u1jrr.L1u15ZSPXPPZEGGE8ZNENEPEPFYYMMkZBZXZZG0OOMMBBBOMM@B@B@B@B@@@BEXEMYY77u;:r2JUUvuUJq5L:PNFvqj:uJ772UrLuurL7v2iLrLM0ZGZGENk5PXqSS17vZqPPXS0YuPuvFjLYLL@BOBBEv:i:MMEN8E0qMNSkXkOq8NqP0PqXXFkFkSS1S5S5F1F552F1521U1uuj1XOOMEqFS25uUuujuJZOkuE8NqZEGG8GGZ8ZGE8E8Z8Z8Z8ZGZGZ8Z8</span></span><br><span class="line"><span class="comment">//,.::::;rvLuUSSPP00ZEZZEPNqNqNPNP0q0q0P0N0NENEEOOG0E0Z0EEZ0GEEPEO@MOGOGOGOGO8OGOZM@0S0q0q0qENqP0PqqEBu .,:::,,:J::.     .  .:i;Y7   r@BMB0LrrvJUJL2PLEL:rvLLv:iUrivrri::.uUi7i:rrLi777;virii:i:rrJ::ir25vYYr:  :::vijuU2uUuJr2F5r:7i:LJ:ijr:i2r,iXPXX0GZPPJ5uLJi7S51Ji71OBXNMGP8OBMBOM8O8ZZ8NPSk11uUj11X0MB@@BSkuuY77UuiJvrur7Yu:YGZj7P8v;ru7LJ:i5vuiuFL7JLirEGZqNXEqSXP5XS5vN0qXXX2k2vF5YUYuuq@GOBZ7::r;iu@qEE8N08OuqXkXMZGX0XEEqkSSSFk5SFk5S5F5525151515U1uUjuJ2k8MMZqFSSk1522jNOkFOX00ZZ8Z8Z8Z8Z8G8ZGEGZ8ZGZ8Z8GOG</span></span><br><span class="line"><span class="comment">//,.,:::irrLLUUFSqPZ0EZZq0P0q0qEN0q0NEqENE0EqZ0ZO80E0Z0ZEZEZE0qOBBGGG8GOZOG8GOG8GO0@BPXNq0qEq0NNqqPNP8B; ,::::,:rr,:      .  ,:i7Ji   q@GBOvvJUvrLr7NXL8rvi.iLv77ir:rL77:rPu;i.:ir .rL.:7::v:::,:r,:vi;5kr :Ji,r,.:..i.YSuYU2LLUSkY:iJ::7uiriU7L:k8qP8N57iLL::;vY2i::L71MBPqOM8@BBMMOZqXjY7i::,,.,.........::vSBBMSNXj2Jr2LLv75u:.YOE275ZL7vk2rL1J:vJrLriU:uJUj7u0q0kX0OPN5SXNq01PNu1qS2uL5u1GM@MMXr::irrriiBMq0ZZq8OLSqSk0M8Nq0qEqqFkSkSSFk5SF55F1F25252F1521U1uujJYUSGOMG0SSFSFk1XOEGqkENZZ8E8G8Z8ZOZGE8Z8Z8ZGZOE8ZO</span></span><br><span class="line"><span class="comment">//:.,,::iir7vYu1kkNqEZZ0EqEqENENENEq0qENENENZZZ8O0Z0E0GEZ0ZNN0BBME8ZOG8GOZ8G8GOG8G8Z@MkP0qNq0qENEPNqNPMB,.:::::,:7:::     .  .::i7J:   B@G@Mui7vuvLviN1LEri;J7i:ivrrY::::7X:7iLi:7:i, :,:r:rr:,:r:::::.YF  ,. ;;i7.:7 :uFuuUYuuuu20J.r5uviLUE1r7XPUqO5irUYu11rjS5uJjkuuOBPNM@B@B@OPJ7i:,,.,:::::i:i:i:i:i::::,,:rU8MB0815YjLLjLrrvZ012jL85r7L:Lv,iuY52LL1uFJSuirP0ZLJUuuZZGG80ZPqSFFuJJLq2POBB@OFi::iir;rrr:F@EqGZ0NBL1qqkF8@NqqNEZXSFXSXFS5SFS1S151F1F2F2525212122uuLJLu1NGMOGPX5S1SEBZSX00ZZ8E8E8Z8ZGZ8E8ZGZ8G8Z8Z8Z</span></span><br><span class="line"><span class="comment">//,.,,,::iir7LY21Xk0EZq0N0N000NENEN0NE0ENE0EEZGMEZ0E0ZEZEZq0O@OGZ8ZOZOZ8G8ZOG8Z8Z8ZG8@EkP0P0q0q0NEq0q0X@8..:::,::ri::.     .  .::ivv.  ;BM8@XLr7::v;:v0LLZriYi,vj7ri,rrriUkrv7,:7i.rYukSXXUUrru7:::::ii5177r:7;75jvUirUNu52J71jvJ2LqEv:vJ77r77uLEU7Eui7vvLJ5Y7uuiLJUrvOBqEM@B@MX7:.,,::i:i:iii:iiiiiii:iiiiiii::,,,i7XZBOqqu5S75kkqPF1Lu8FLu7JUL:L2kL717YFiYu:;kGEq1Lr.7G522LL0qkquP1k2FE@@@BZL:,:i;i;ir;riii@OE0O00BkvNXPFXMOX0qZZqSXSXSXSkSSFS5F5S1525251F2121U125UUjjLLvLYSN88MZ0SSqMNXP0NGEGE8Z8GGEGZ8ZGE8Z8ZGE8ZO</span></span><br><span class="line"><span class="comment">//,.:,:,::iir7Yj5FPqEPEqEqENENENENEqEqENZ0E0GEOEZ0G0Z0G0Eq8B@GGZGZOZ8Z8G8G8GOZ8G8G8ZZM@XqP0q0N0qEq0PNXPP@U ,::::::r:::      . .,::r77   kBOO@qYr12:iu7JEYUPv7i17:irv::L;7USi::r;vLS5YJ7:..r77L25XX0XXSX225SFXkPXSSNNNqkU1u2JYLY727u15S77uruLivr7Gvv2Ev7555YLvFXr7uY75MBqGB@MX7:.,:i:i:iiiii:i:i:iiiii:iii:iiiiiii:::,,:iuSOOMXSYYu0S5UUUOLiL7iuvruP7rU2uX7UU5JkL2EEOJ:J8S7:;7r8qqq0kqZ@B@BGYi,::iiiiii;i;i;i,N@00ZOqBPrXqXX5GM0qNNGqkkPXXFXSkFSFS5F5F15152521U1U1U2212121ujYv77vJ2X088G8BGqP0NZZGEGEGZ8EGZ8Z8EGE8Z8ZOG</span></span><br><span class="line"><span class="comment">//,.,:,:,::ii77Ju5FPXNq0qENEqENZ0E0E0E0Z0ZEGZGEGEZ0G0Z0NNMBOEGZ8ZGE8Z8ZGGGGOZ8Z8ZOG8ZZ@@FPPNqNq0q0q0qqPqZ@i ,:::,::;,:,     .. .:::r7;   BBOMMJJ7i:i:.:JqjUN:r7r:7jYivY;,uP;:iSPY7r7.,.,iLuYLjjSSj:JF51UuUj21F55UFj7Lk11uFvLu1YJ7JjuUNGFi;v:iL70P11uSN7rLur5jL;ruu7SMMNMBMYi.,::ii:iiiiiiiiiii:i:iii:i:i:i:i:iiiiiii:i::,::7JPG8ZkMMXP1X0L7L757YkY1LJ27v:72vLXriuGPFr7OSj7iFrrNMZOM@B@MNLi.,,::iiiiiiiiiiiii,v@8NEOEGMrSXPSSFMENq0ZZSkkXkkSkSSFS5S5F1F1525152111U1U121251521uuYYv777vu2P0OOOG8GGZGE8E8ZGZGZ8EGZGZ8G8ZG</span></span><br><span class="line"><span class="comment">//:.:,,,::::ir7vjUSSqX0NEqZ0Z0Z0Z0E0Z0Z0GEGEZZGEZ0ZEEqEGBMGEGZ8E8E8ZGEGZ8E8E8EGZ8G8EGEGBMFPqNqNP0qNN0q0XqM@,.::::,:;:,:.     .  ::::r7i  :@MOBMvLuPjk5jUPkvXJ.i,LL::v;r::SqvSUrii,;ir,vFNFLi2ku7r .rriv1kYU55L5LLvjL1k5Yku5LJuFLSXuL2L5EUiru177NqJ2uLJENYLLjLuv7uLkMOZ@BY,.:i:iiiii:i:iii:i:i:i:i:iiiii:i:i:i:i:i:i:i:i:i::,,,irJ20OMOq8OFUrUv7U2vrvvruvL5J7YLJvkOk1FuMGUrU2100MMGq2vi:.,:::i:iiiiiii:i:iii:::BOEqMZZBLYNPPkS0Mq0qG0XFPPXFXSXFkFkFF1F5F2511251121U1U2U2U1U52F25U2uYvL7vvLj1FN0ZZ8Z8ZGZGEGEGZ8ZGZGZ8Z8E</span></span><br><span class="line"><span class="comment">//,,,:,:,:::irrvLu2SkqP00Z0GEE0ZEGEGEZEZ0GZ8EGEZ0E0EqGM@MEE8ZGZGZGE8EGE8E8ZGZ8E8ZGZGZZNOBGSqqNq0q0PEP0qNPPBO .,:::,:;:::     .. .::::rr:  u@OGB@Z05EXF2SuXXP0q2r:ri7rLF; uEr.rv:rLv:iJquiL217L::77Jv::ivFX5ULr7uJSJuFS1XYU5YjJvY7vLS22u8L.Y2ivruGSu1uLjk0P2rr2XvrSBO8@k:.::iiiii:iii:i:i:i:i:i:i:i:iii:i:i:i:i:i:iii:iiiii:i::::,:::ivuXqN2X0PZkYkqY52kSLkuYqUYNvkBMMOOB8X0Gk1Y7::..,,:::i:i:i:i:i:i:i:i:i:i:,1@NN0M0@Y7XNPXFS88q00GSXXqXXkkSkFSFS5S1F1F2F1F152121212222U2U125155qXkuuLYLjjU2SkqPZ0ZEGZGZGZ8EGZ8ZGZ8Z8</span></span><br><span class="line"><span class="comment">//:.:,:,,,::iirrvLU1kkqqENEEZ0GEGEZ0Z0ZEGE8EZEZ0Z0ENMBM0B8EZGEGEGEZEGEZEGEG0ZZGEGZ8ZGZGNMBEkNqqNNq0P0P0qNP0BU ,::::,r:,::     .  ,:,:irr.  O@ZGBO5ju5ujSL7kNFPG2UULi.::,JP0iiir:ijviYE2r75j::i,ir:;,7rLrivqkSLY2JUY7PFF5v5u2Y7X7:,iLFPSPZLJrvi7v0GkU1UkLL2G5vir70B8M@v.:iiiiiiiiiii:i:i:i:i:i:i:::::i:i:i:i:i:i:i:i:i:i:i:i:i:i:i::::,,,::;7vY2v1qq20GX1GGkS02qNFUS51uJvvri::,,.:,::::i:i:i:i:i:::i:i:i:i::::.rBONEOEMSrkqNSkFXOZPZZPSqPqkkkkSkFS5k1F5F1F15152525U12521U1U1u1U1251kP00P52Juj21Xk0qE0GZGZGEZEGZ8E8EGEGZ</span></span><br><span class="line"><span class="comment">//:,,:,:,::::iir7LY12kX0NE0E0ZEZEG0GEZ0ZZZEGZGEZ00G@BZqZZM0ZEGEGEGZGEGEZEGEGEGEZEGZZZ8ZG0@BPSPq0qNqNP0q0qNX8Bi ::::,:7,::.     , .,:::ir;. .BBZOBESPLuY1UJvu0XSkUukk7Lru5vqJ:rY77i.10j7uNYi7r7Ju7vv::viL;:iFXFuruULv5PUu11LjLu2FL:vL:r5EN7iuYv;:7EGZS2SX2uUZSL2@MOBOi,:iiiii:i:i:i:i:i:::i:i:i:::::i:i:i:::i:::i:i:i:i:i:i:i:i:i:i:i:i::::::,,,::::::::i:i:i:i::::::,,,,,::::::i:i:i:i:i:::::i:::i:i:::::::::,,MMEPOGBGruq0PSk1ZOqN8kXq0qPSXSXkk5SFS5S1F1525151125U1U5U1u1U2U2U5U5U11kXZEEXS251kX0qENGZZZGEGZZZ8E8EGE8</span></span><br><span class="line"><span class="comment">//:,:,:,:,::::ii77Lu11XXNNEEGEG0GEZEG0GEGEGEG0ZNZM@8E0G0EOMNG0Z0GNZ0Z0Z0Z0Z0G0ZEGEGEGEG0ZN@BXkqPNP0PNP0Pqq0k@@..:::::ii,::     .. .::,:iri  vBMEOB8uLLuFUUE2FNXPXrLLSSNP7:XLr;,.vvSZuv7qv7Y.7v,:ri;ii;vi7:7:20Fu1vvJ5qS2Jv5uu5LvjY5ui,5ZEirJi7u1u;FPZOEXPSuJ18BGMBF,,:iiiii:iii:i:i:i:i:::::i:::i:i:i:::i:i:i:::::::i:i:i:i:i:i:i:i:i:i:i:i:::::::::::::::::::::::::::i:::i:i:i:i:i:::i:::i:i:::i:i:i:i::::::,.5@EE0MOBrLX0PXSSFMZEGPF0N0XPkXSXSSFkFS5F151515152125212522U2U2uUu1u521251XXZZG00XqX0qZ0Z08ZGEZZ8Z8E8ZGG</span></span><br><span class="line"><span class="comment">//::::,:,:,::::i;7vYuFFPqE0Z0ZEZEZEGEGEGE8ZG0ENMBMNZEZ0Z0ZOOqZ0ZNE0E0Z0Z0E0ZNZNZ0G0ZEGEGEEE@MkXqqqPNq0PNPqq0X@Z..:::::7:,:,     ,. :::::i;i  ZB80MBY7i:riLYiij8Z5ZFYYu50EjFPr77L:vENYLXuvL:uJ:i7LvY;7jii:Lj77ukqJ7UYJSkSUUJuj27Y11YSLiPMSvYvLSriiJjrrLPG0PuY0MG@Bv.::iiiiiii:i:i:i:::::::::::::::::::::::::::::::i:::i:i:::i:i:i:i:i:i:i:i:i:i:i:i:i:::iii:iii:i:i:::i:i:::i:::i:::i:i:::i:i:::i:i:i::::::::::.;BO0NOMB7rkXESXFSPMN8XXqEP0kXSXSkFSFSFk1F1F25152521U125U5U2U2uUuUU5FPkk5F5FFXXZE8ZZ0E0E0ZEGZGEGEGEGZ8Z8</span></span><br><span class="line"><span class="comment">//:,:::::,:,::::irvLuUFkPPENZ0GEGEGEGE8EGEG008BMGNZ0GEZ0E0ZOZqZ0ZNZ0ENENE0ZNZ0Z0Z0EEEEZEG00Z@GkkqPqq0PNPqXNPqP@L ,::::r7::i.    ., .:::::iii  @@O0BBP15jYvivF7:FZ50ru27Lvv2qjri77XqLvFv:YJ;7::5r;LjvLvrujYr7r.28XuYjvv0u17YUFL152UuuY,uM5;rr2vJYj1uj7rjiJP8OM8@P:.::iiiii:i:i:::i:i::::::::::::::::::::::,i:::::::::::i:::::i:i:i:i:::i:i:i:i:::i:i:i:iiiiiiiii:::i:::i:i:i:i:::i:i:i:::::::::i::,::i:::::::::,.MOZPOO@L7uXN05XF5EOG0SEN0NqkXkXFkSSFS5S5S1F2F2F1FU525U1U2U2u22SkNN0PPSSFXSXXPkPPE0GEGZZEGZZZ8EGZGEGZ8Z</span></span><br><span class="line"><span class="comment">//::::::,::::::iirrvL22kXNqE0EEGEGEGZGZ8EE0GMBZ00ZNZ0ENE0Eq8OENE0ZqE0ZNZNZNZNE0ENZ0E0EEZ0GEEG@EkkqXNXNXNX0XqPPO@:.:::::Ji::i.    ,..,:::::iii  @B8EBBF2uvrv7r::7NE5ZE7,r:.7MJ:7r7Euv7ELi.7jYrJ7:v7:Lrvu77LY7uYiJSGu1uvuZXU1u7j1Lv1uji,OF:rU5vv5XuuS2JS7rUqMOB@Y.,iiiiiii:i:i:i:i::::::::::::::::::::::::::,i:::::::::::::::::i:::i:::::i:i:::i:i:i:i:i:iii:i:iii:i:::i:i:::i:i:::::::::::i:i:i:,...,:i::::::::,.2@NENM@S;YS0EkFk5S8OPPNEq0PXkPSXFkFkFS5F5F1F2521211125u1u11kP0NqSS11U1U2u12F5FSXXNP0NZE8EGZGEGEGZGZGE8</span></span><br><span class="line"><span class="comment">//i,::::::::::::iir7LY21Xk0NZ0ZEZE8E8EGEZEBBOq0000Z0ENZ0E00NOGNN00E00N0N0N0N00E0E0E0Z0E0E0ZN0O@0kkNPqPNXqXqPNPq@@.,:iii72::::     :..:::::iii: :@OG0BBS1jr77rLv:7FGqq07iu7uE;rL7FEXrYqi :Yuv5iijj::Jrri:YYi:vvYLrUqOXu5v5Z5Y2u5J2JuLj0M7Lj577YU2vYuvvv2XMOM@Zi,:iiiiiii:i:i:i:::::::::::::::::::::::::::::::::::::::::::::::::i:i:::::i:i:i:i:::i:::::i:i:i:i:i:i:::i:::::::::::::::::::::ii:,. . ..,::::::::::.rBG00G@Pr7SXGPFSk1PMEXEN0qqSPkXSkSkSkFS5S5F1F152521U1u15PP0XX11U2uujUjUuUu2U51SkPPEqE0G0ZEZEGZ8EGEGE8Z</span></span><br><span class="line"><span class="comment">//:::::::::::::::ii77Yj15XP0NEEGEGZ8ZZ0ZO@OEqE0Z0Z0ENZ0E0EN0NM0Nq0qEqEqEN0NEN0q0q0qENENZ0E0ENqM@kSkNPqXqXqXNXNXPBN ::iiiUY,:::    ,:.::::::iii: L@OGNBBUJ2vjL77rYrLMPkEXi:5GuLiiSX2kL0;7Y7:i27iLrv7YLY77L::uLUr:7jr7j88FY5EZXFJJFUqPGkj5FurUurYui777uEGMO@Ov.::iiiiiii:i:i:i:i:::::::::::::::i:::::::::::::::::::::::::::::::::::i:::::::i:i:::::i:::::i:i:::i:i:i:::::::::::::::::::::i:i:,.. . . ..,:::::::::.,OOZN0B8rvjkq81SFSjO8P00qZPXkPkXSkFXFSFF5F1F1515U2U1FPXP5S21uUu2u2u2uUU1U12FFkSXkNPNqZEZEGEGZGE8ZGZGEG</span></span><br><span class="line"><span class="comment">//i::::::::::::::irr7LjUFSqP0qZEGEGEE0OBM0NNZ0E0E0ENEqENZ0ZqN0MqEqEq0qEq0q0qENEq0q000qENENZ0ZNqM@FSkPPqXqXqXqXqkE@L ::ii7Pi,::,   .:,,:::,:::ii. S@GG0MBUvXU7YJLvrU5U8qNkr0ririrZuJULPL7uuu7LLiJrrPLiiJrJY7J7riJXuY,vY7FqXPPEq008E0ENr7Yv7Lr1X1jPGF1EOMBBu:.:iiii:i:i:i:i:i::::::::::::,,.,,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:::i:iii:::::::::::::::::::i::,... . . . . ,:i::::::,.1@0Eq@Or7YFX8X5SkuuBENq0N0kXSXkPSkFk5S5S1521u1UFSPXP55u2uUuUu1U2U5uUU2U115U1251SFPX0qZEZEZEGZGE8Z8Z8Z</span></span><br><span class="line"><span class="comment">//i:i::::::::::::iirrvLU2kSqq0NE0ZEOOBM8P00E0ENZ0ZN0q0NE0Zq0NNGOq0q0q0q0q0q0N0q0NEq0qENEqZNENZNqMBSSkqPqXNXNXNPPkMB:.:iii55::::. . ,i.::::,:::ii. O@ZG0BB0Sju17i7v5SrLXNEMSr7ruYXq2Fr15iF777ruYkY77r7uu7Y7vL7;7YrvuuuYvr:7:r7Yjv:YvYPNu7YX005kkU2PGMOBBk:.:i:i:i:i:i:i:::::i:::::::i::,.   ..,.::::::::::::::i:::::::::::::::::::::::::::::::::::::::::::::i:i:i:i:i::::::::::::::::::.... . . . . . . ,:::::::: YB8N0MBrv72SZ0F1k5v5@00qENqkPSXkXFkFk5525155PqEqP15u121U121212511j2U125uJLLvJjU2SSqPE0ZEGEZEGEGE8ZGZ8</span></span><br><span class="line"><span class="comment">//i:i:i:::::::::::ii77LY21kSPPN0OOMMM0qq0NENE0ZN0N0N0N0NENEqEq088PNq0PNq0q0P0q0q0NEq0qENEqENE0ENqB@5SkPXqXqXqPPXqS@B.,iiirO7::::. . i:,:::::::::i..B@G80MB2vSUrv7iFk:.LG8NEPY:r,LGkk2L82i,Y:rY7u7ivr775YvJ771juL5Lii2u7rr7J25u7:vU77kO8MG777vYvLPGOMBPr.::iii:iii:i:i:i:::::::::::i::.        ....:,::::::::::i:i:::::::::::::::::::::::::::::::::::::::::i:::i:::i::::::::::::::::,... .     ..... . . ,:::::::.:@OZqMBL7LLXkOFFUqJ70@qENEPXSPSkSk1F5SSXXN0GNP12U5152121251F15uJ7YU552777vvYYUu1FXX0NE0ZEGEGEZEGEZE8E</span></span><br><span class="line"><span class="comment">//i:ii:::i::::::::ii;77YJ21XN8OMOOENP0qZqE0E0ENE0EN0NEq0NEq0qEqEGZXNqNP0P0PNP0PNq0qEN0q0qE0ENZ000O@B5FSqkXXqkPkPXPX@X.:iiiu8:::::. ..7:::::::::::: :B@ZGNMBM5u1XF7YESNPJLqGOG5J;iZN55LNji7L;uJiLuLU5Sj7u57rkuvL7LvrY7JiiYuuurijLvPENX17LPEY1Jj5OOBMqr,,i:iiiii:i:i:::::::::::::::i:,             ....,,:,::::::i:::::::::::::::::::::::::::::::::::::::::::i:::i:i:i::::::::::::,... .       . . .   . . :::::::. q@0EZ@L7vv2XG0F2UX77MMP000kXkXSXkqP0qEEOEqF1U125212F2FFS51uY77vU1F5j77vvvYYjj22FSqPN0Z0Z0G0ZEGEGZGEG</span></span><br><span class="line"><span class="comment">//r:iii:i:::::::::iirrvv25qNGEEqNqNq00Eq0N0N0q0N0qEN0qNP0PEqEP0PZ8NX0PNP0P0P0PNqNq0qNP0N0N0N0qENZZMBB55kXkqXqXPXqXPq@v.:;irGj,:::,. .:7,::::::::::: rBMZ8NOBMk00ES2PSuiiLiu0O88PYLPkqL107r1kUvuJ77Si7JurLYv7rij77rvvvFkvU7L71Jv10827Uvjjjv20ZGMMBP7,::iiiiiiiiiii:i:i:::::::::::::.               . . ....,,:,::i:i:::::::::::::::::::::::::::::::::::::::i:::::i:::iii::::::.... .     .     . . . . .   ::::::: ;@G0GBu7Yvu5EGS2YXUrYBOPE0NkqXNqEN0NOZES1251F1F155kFF2UYYv77LuFFSuv7vvvvLLYYUu15kX0P0qZEG0ZEZEGE8E8E</span></span><br><span class="line"><span class="comment">//riiiii:i:i:::::iiii77JjU2SFkkNqEqEN0q0qEN0N0q0N0q0qNP0PNq0P0qNP8GqPNXNPNPqPqXNX0P0PNq0qEq0qEN0P8OMB@SFFPXqXqXNPqPX8@:,iiiJOi::::,...7r:::::::::::: YBMZGNZBZuj72LXELiuJvv75ZEOEuvE1uvFqEjr:7Urr1J7jL7Xu2vJYuj1PENOZEkEPZqXv7ZGjFJJv7uriJFO8MOXr:,::iiiiiiiii:i:i::::::::::::::,                  .   . ....,.,:::i:::::::::::::::::::::::::::::::::::::::i:::::i:i:iii:,....             .   . ... . .  .:::::,. O@0E@u7LLvFSMSkvUXL;5BZqEq00Z00PZOOqS251S5S5F5S5SUuLLvv7vL1FF5Su77v7LvLvLLju2UFFqPNNZ0GEGEZEG0GEGEG</span></span><br><span class="line"><span class="comment">//ririiiiii:i:::::i:ii7rvYu2SkXP0P0qEN0NEq0q0q0q0q0q0q0q0PNqqqNPNXOEPXqXqXqPqXNPNPqPNPNqNqEqEq0N0EMMM@@X55PkPkPXPXqkkBB,:iiiE1:::::...:L:::,::::::::: 5BOZ80EB@52UPFOqU2;:j;,:UqZZ0NEF5YFXY7v1SJuuuPF;JLi;uF0GO0SZ1LquS1vYu00EPvLj27ir1qGOMOO1r,::iiiiiiiii:i:::i::::::::::::::.                    .       ........:,:,:,::::::::::::::::::::::::::::::::i:::::::i::::,.                   .   . .   . .  .:::::, i@GZ@5rYLvjk8G5U7qu7rNMEqENEqNqOGE555kFS5kFXSFUuLLLYLLvLuS555FLv7v7LvvvLLJYuu15SkqqE0G0ZEZ0GEZE8Z8E</span></span><br><span class="line"><span class="comment">//ri;riiiiii:i:::i:ii;;7vJj21SXNq0q0qEq0N0q0q0P0qNP0q0PqqNPNqNPNqqPOqPXqXqPPPPXNXNXqX0q0PNq0N0qEP0OMOMM@01FPkPXqXPkPXP@q.:ii7M;:::::...77::::::::::::, PBOZ8ZEOB0EqqS0E0FXZquXJL2ZZE0Z0ELvM5i152riLui71jS8ZGk11Nv5PuuUJ1XEXEGONuY7r22E8O8MEUi::iiiiiiiii:i:i:i:i:i::::::::::::                       . .       ........,.,,:,:,:::::::::::::::::::::::::::::::::,,,,..   .         ...         . . . . . .  ,:::::. q@0@57LYvL1EMS5vjPv778OEN0qqZM0k5kFXFkFPFFuuLYLYYJLLL25k1552v77LvL7LvLvYLjjuu5FPqNNE0ZEGEGEGEGEGE8</span></span><br><span class="line"><span class="comment">//7irrri;iiii:::i:iiiirrvLuu11kkNPNq0qNqNP0PNP0P0qNqNPqPNPqPqXqXqPq08XPXPXNPqPqPqXNXqPqP0PNqEqEN0q8MMOOO@Z25XkPXqkPXPkNBJ.iiikq::::::,.,Ji:::,::::::::. ZBOZGEEG@PLvL1k5SXPN5kZNJ:YN8GZZ0Y5kvLLLYJ577XMG8Ek5NuYkFLjYqNNZNFk157v8kuN8OZOGqLi,::iiiiiii:iii:i:i:::i:::::::::::,                           .         . . ......,.,.,,:,:,:,:,:::::::::::::::::..,,..         .        ..           . ... . . . .,::::: :BMBkrYLYvUS@qSY7k2v7vMG0qqGMXSFXSXSkkX2uLYLjLjLYvYuF551S5j77vvvLvLvLvLLYYuu22Skqq0NZEG0GZGEZZGEGZ</span></span><br><span class="line"><span class="comment">//r;rr;ri;ii:iii:i:iii;rrLLuUF5XkNPNP0q0q0P0PNPNPqPNqNPqXqXqXqXqXNXX08kPXPkPkqkqPPPNXqPNP0PNP0qEN0qMMMOZG@M51XkPkPXPXPkGB;,ii7Ov,:::::..iu:i::,::::::::..MBOEGZEq@ZPXXX0PX2PZuUPNu7LukEOZOPO2rrUuLu0G8XEF1NPkSu1YuSZ0GkkFj55L2JEG8Z88G17:::ii;iiiiiiiiii:i:::::::i:::::::::.                             .               . . ........,.,.,,,,,,:,,,,,,.,.... .         . . .       .         . . . ... . . . .:::::, LB@X7vYLvLSOO517uXLv7JB00OMkkSPkPkkkXuJYuJuJJLLvu5k552k5LrvvLvLvLvLvLvLLjJuu55PkqqE0ZEZ0GZG0GEGZ8</span></span><br><span class="line"><span class="comment">//7i7rriri;iiii:i:i:ii;r77LYU2SFXXPPNq0XNPNPNXqqqqqXqPqXqXqPNPqPqPqXPZZSqkPXPXqkPkqkqkqXqPqq0P0q0qE8MOOZZZ@BSUkkPkPXPkPSB@::ri5Z:::::::..L7:i:::::::::::..BB8ZGZ0SBBkF0SkkESEOuYNO8UrijX8G8Z8kFkN08NEPqPquq5FkSF20ZqNuNJ2FkEGZ80E8Mqui::iiiiiiiiiiiii:i:i:::::i,,::::::::,.   . .                                               . . . ............... .                                         ....... . . . ::::::. UBGrLLYvvuZBk5L7kUvvr5MOBXPXPkPSXSPuJjujuYuLLYFSF155kuv7LvLvLvLvLvLvLvYLju22FkqP0qE0GEZ0GEGEGZGE</span></span><br><span class="line"><span class="comment">//7rrrrrrri;iiiiiiiiiiirrvvJJ1UFSXXNPqXqXqXNXNXqXqPqPqXqXqXqPqXPXqXqXPZ0SPSXXqXqkPXPkPPNXqP0Xqq0q0PGMMO8Z8EBBNUFkqkqXqkqS@E,:rrOL,::::::.:ui:i::,:::::::,..@B8GGZZSMBqSkSNkXFGGkXSNMFvL7vk08GOG80EqPPPSu01FkqqF1GGX5kPNNNZ0EqG8O02ri:i:iiiiiiiiiii:i:i:i:i:::::i.,::::::,        .                   .     .                                 . .                           .         .          .. ... . . .  .:,:::,. OM7vJLLvYS@Pku7Y0LLvrq@0PXqPqXPkqSujuJuJYLu1X5F1F5kJ77LvLvLvLvLvvvLvLvYYUU51kkNPENZEZEZEZ0GEGEG</span></span><br><span class="line"><span class="comment">//vr7rrrr;r;iiiiiiiiiiiirrvvJu12XSqXqkqPqXqXqPqXNPPXPPqXNXPXPkPkqXPXPkNGNFXkXkPXPkqkPXqkPXPXNX0qNPqEMMMZ8Z8EMBOU5kPkqkqXXX@U.irYO::::::::.rL:ii::::::::::, :@B8Z8ZGSGBZ50XN00qMPjXNGMSjL5LuukNZZZN0PqUqFkXSFXUXZqqENZNEqqqGOO0Ur::ii;;;i;i;iiiiii:i:i:i:::::::::i,:::::.          .                         .                                                               .         .         ... . . . . .  ,:::::, vBvYLYLLvUMOFFv7PX7L77ZOPNPqkPXPXFjujjYJY2SX1F5SFkYvvLvLvLvLvLvvvLvLvLLJjU2FFPP0qE0ZEZEGEZEZE8Z</span></span><br><span class="line"><span class="comment">//7rr7rrrr;ririiiiiii;ir;77LLuu51kkXXqXqkqXqXNXqXqXqPqkqXqXPXqXqkqXPkPS0GPFXkXkPkPXPkXkqkqXPXNP0q0P0OMO8Z8E8EOBB15SPSPkPkkN@7,irE2,::::::,.ur:i::::::::i::, :@@8ZGG8kPBMFPXZXNEOSXPEGOkNF2SuJL2NNGNZqENZFNEkPGEEqqXqXNEOOZSY;:::iiir;riiiiiiiiii:i:i:i:::::::::::i::::.        ..                      .                                                                 .   .                   ..  ... . . . .:::::, uBLvJYYLLLZBFSu7JOjvL7v8OXqPqXqPPuujjYjuSSS1S1SSFvvvLvLvLvLvLvLvvvLvLLYLuu12SSPX0NZEZEG0ZEZ0GZG</span></span><br><span class="line"><span class="comment">//vr7r7r7rr;r;riiiiiiiiirr77LJuU5FkkXXqXqXqkPXqXqXqkqXqXqkPXPkPkPSPSqkPFEZXSXSXSPSPkPkPkqXqPqPqXqqNPOMMZ8GGZ8EZM@X25XkPXqSSO@::iJOi::::::,,:2:ii:,::::::i::, :@B8G8G8XXM@SkP00GZFuqNZOOJJ55j1kFjZ888MMO8O8M8GNZEZZMOOEkY7i::iiiirir;r;riiiiii:i:i:i::::::::::::::::::.          .                           .                                                             .                     . .   ... ...   :::::,.u@LLLJYjvv2@NSUvrNE7vLrYM8XNPqXNFUujJuUXkk5S5kSU7vvLvLvLvLvLvLvLvLvLLLLJJuu15SSNqEEZEZEG0ZZGZGE</span></span><br><span class="line"><span class="comment">//7r77r7rr;r;r;riiiiiii;irr7vJJ2255kFXkPkPkPXPkPkqXNXPXqXqXPXqkqSXkXkPXXSZEXSXkPkPSPkXkPSXXPXPXqPNqqEBOGZGG8Z8EZO@811XSPkPkXBB,iiG1:::::::,.7Y:i::,::::::i::, :@B8Z8EOqSE@GqqZZ0FFXGE8Zk1PZEXkkOOOEGOMGO8MMBB@BMEXJvii::iiirir;rir;rir;iiiii:i:i:i::::::::::::::::::.  .                                 . .                                                   .           . .               .     .  .. . . .  .::::: 2BLvYLJLLvuOB1kL7vMJvLLrUMZXNP0XFuuJu1kkk5S5kSj7vvLvLvLvLvLvLvLvLvLvLLYLjJUu5FqPNq0NZ0Z0Z0GEGZ8</span></span><br><span class="line"><span class="comment">//vrv7777rrrr;r;riiiii;irr77vvjj22F5XkPkPkXXPXXkPXPXPXPXXkPkXXPkPkPkXkXkPSGNSSkSkSkkXSXSqSPkqXqXqX0XEMMZ8ZGZGZGEZZ@BF2kkXkXkXBN,iLMi:::::::.,j7:ii:,::::::i::, :@B8ZGZO0SS@BMOMOMMMOM8MOMOMMMMMOMOMMMM@BBMMqSJ7ii:::ii;ir;rrr;riririririiiiiiii:i::::::::::::::::::.    .                                 . .                                                   .           . .             . .   ... ... . . . .::::,.5BvLLJYjLLvqBPFU7vXE7YLLrkB0PNPX1UjU1PkkSSFXSY7vLLLLvLvLvLvLvLvLvLvLvLLLLJj55S5XkqqNqE0E0ZEGEGZ</span></span><br><span class="line"><span class="comment">//v7777777rrrr;r;riri;i;irr77vLju22S5kSXSPSXkPkPXqkPkPkXkXkPkPkPkXSPSXSXSXF8qSSkSXSXSXFPSPSPXPXqXqXqNMMGZ8GGZ8ZGZE0BBqUFSXSPSq@u,;85::::::::.iuiii::,::::::i::,.:@BOZ8E80kFMBMGBB@B@MBM@B@B@B@B@MOGZX1YLri:::::iiii;iririr;ririri;i;i;irii:i:i::::::::::::::::::::                                         . .                                                   .             .                 . ..  . . . .  .::::,.qMLvYYJLJvLuB8S1L7YOu7YLvr0MNPNXS25FXkkFS5Xkj7vvLvLvLvLvLvLvLvLvLvLvLvLvYu5u2u11SFPkNqNq00ENGEG</span></span><br><span class="line"><span class="comment">//Lrv7v77rrr7rrrr;riii;irirr77LYuu51kSkFXkkkXkXkXSXSPkPXPSPkPkXkXSXkXkXkXSkk8XSSkSkSkSkSXkXSPXPkqXqPqOBZ8EGEGZGEGZZNMB8UFSXSPFZBr,UMr::::::::.vL:ii::,::::::i:::.:@B8GGZOEX10B8Y2FXSkFS152UJLv7r;i:::::::iiirir;r;r;ririri;ir;riririii;i;ii:i:i:i::::::::::::,:,:.  . .                                   .                                                                 ..  .           .     . ..  . ... . .::::,.qBvLYJLJYYvjN@FkYv7NNvLYLv7OMqXXFkkPkXFkFkXu7LvYvLLLvLvLLLvLvLvLvLvLvvvuuuLjJuu12F5SFPXNPNNE000</span></span><br><span class="line"><span class="comment">//v77v7v7777rrrrrriri;i;ir;7r77YYuuF5SFXSPkXkPkXSPkPkPkPkXSPkPSPkPkPSXSXSkSkX8kSFkSkSkFkkXkPkXkqPqXNXOBGZ8ZGZ8ZGEZZGqGBBF15XkX5MB::Mji::::::,,.uriii::,::::::i::,.:@BOG8E8Eq5XMF..:::::::::::::i:ii;iririrrr;rrrrr;r;riri;i;iririiiiiiiiii:i:i::::::::::::::::::.    . .                                 .                                                                   .   .                   .   . . .  .::::, GMJvJLJYJLLL5B8127vJMvvLJv7vB8PkqXqXXSXSXP27vLYvLvYvLLLvLvLvLvLvLvLvvvUjLvLLJYuuuu22F5SFkSPX0q0</span></span><br><span class="line"><span class="comment">//L7v7v777777r7rr;r;ri;i;irrrrvLJj22F5SFXkXkPkXSXkPXXkPkPkXkXSXSXkXSXSXFkSkFkXGkSFkSkFXkXSXkXkXkqkPXP0@ZGZ8E8G8EZEGEGEEM@q25XkXF@0:UOii::::::,.:2iiii:,,::::::i:::.:@BOZ8EOZqSPBBr:irir;r;r;r;ririrrr;r;rir;rir;ririri;i;iriiiiiriii;::iiii:i::::::::::::,:,:::.                                          .   .                                                               .   .     .       . . . ... . . . .::::..MBjLvYYJLYLLU0@S2v7vOP7LLYv7u@EPPqXqSPkXXF7LvLLYvLLYLLvLvLvLvLvLvLvvv5JvvLvLLYLjJuJUu2251FFkkqq</span></span><br><span class="line"><span class="comment">//LvvL7v7v77r7rrrr;ririririrr77vvJu2UFFkFkSXFXSXkXSPSXSPkXSXkPkXkPkXSXSkSXFSFFX8kSFXFkSXSXSPkXkPXqXqPqBMZ8Z8G8ZZEG0GEZ0E8@O52XSkS@u:ML::::::::,.rj:iii:::::::::;i:,.:@BOG8G8GNkXG@2::rrr;r;r;r;rirrr;rrr;riririr;r;ri;i;iriiiiiii;iiii:iiiii::::::::::::::,:,:.  .                                         .                                       .                   .       .         . . . . . . ..... . .  .:::,..BG5vLLJLJLYv15BZFYv75OvvYLLv75@qqXPXPSPPXvvvLvLLLLLvLvYvLvLvLvLvLvvL5YvvvvLvLvLvYLYYuJUu2u11S5P</span></span><br><span class="line"><span class="comment">//J7Lvv7v7777r7r7rrrr;r;ri;;rr77LLuu1255SSkFXFXSXSXSXkPkXkPkPSXkXkXkkFXSkSSSkFkX8FFFXSkSXFXSkkPkPkXXNkMOGGGZGZGEZEZ0Z0Z00N@BXUSSFq@;FSii:::::::,,Yv:;ii,::::::::ri::.,MBO8GZOGEXXP@Oi:iirrrir;ririr;r;riririr;r;riri;iri;i;iiii:iiiiiii:iii::::::::::::::,:,:.                                            .   .                                 .                       . . . . . . . .     .   . . . ... . . . .::::.:BESuvLLJYYvL1SP@SFv7L@u7vYLLv7qBXqXPXPPNLvvLvYLYLYvLLLvYvLvLvLvLvvvFL77LvLvvvLvLvLvLLYLJYuu2U15</span></span><br><span class="line"><span class="comment">//LvLLvvvv7v7777r7rrrr;rrr;rrrrv7LLuu11S5kSkkkFkSkFkSXSXkXSkSXSXSXkkSkFkSkSk5S5SPGFF5kFSFXFXSXkXkPkPPP8B0GEGZOZGNZ0Z0Z0Z00qMB8UFS5G87Ori::::::::.:ur:iii,::::::::;i::.,OB88GZ8G0kPFM@Y,iirir;ririririririrrrir;ri;iriiiiiiiiii:i:i:iiiii:,:i::::::::::::,:,:.  .                                           . .                                                             . . . . .         . . . . . . ... .  .:::,.iBXXSuvLvYLv7FS1MO5F7rZOLL7vvL77G8XPkPkqJvvLLYvYvYvLLYvLvLvLLLvLvvvSJ77LvvvLvvvLvvvLvLvLvYLjJUu1</span></span><br><span class="line"><span class="comment">//jvYvLvv7v7v77r7r7rr;r;ri;irrrrvvYJuu51F5kFkSkSkFkSXSkSXkPSXSXSkFkSXSkSkSX5S5kFFPG555SSkFkkkSXkXkPkqXEBG0GE8ZGEE0ZEZ0Z0Z0ZXGBB515SM5Fuii::::::::.iUii;i:,::::::::ii:,.,OM88GGGGZXqSq@E::i;iriririririri;r7rriri;i;iiiiiiiiiiii:i:i:i:iii,:::::::::::,:,:,:..                                     .         . .                                     .                 .     . . .       . . . . . . . .. .. . . .::::.rONSkXk1uLLvjFX2kBX5FrSBkS5JL77iuOqXqkq277LLYvYvLvYLLLLLYvLvLvLvL75uvvvvLvLvL7vvL7v7L7vvvvLvJLuu</span></span><br><span class="line"><span class="comment">//LLLYvL7v7v7v7777r7;rrr;rirrrr77vvJJuU51S5k5kFSFkFkFkFXSXSXSXkXSkkkkXSkSXFXFSFS5FPG555kSS5kFkFXSPSqXPq@8ZEGZGZG0EEZ0EEZ0E0Zq0M@012kGNkiii::::::,:.vuiiri:,::ii::::i;::..GBZ8OZO8EkqSF8B7,:iir;riririririrrrriiiiii;iiiiiiiiii:i:i:i:i:i:i::::::::::,:,:,:..                                               . .                                                         . .   . . . .   .     . . . .  .,.... .  .:::,..PEqXF1XkX5FFPFSUGM5FU0B5XXqSSuLX8PqPqPN5v7YLLvLLLvLvLvLvLLLvLvL7U1v7LvLvLvvvLvvvLvvvv7v7vvLLYLu</span></span><br><span class="line"><span class="comment">//jvJLLvL7L7v7777r7rrrrrr;ririrr77LLjjU215F5k5SFSFkFSFkFXFXSXSkSkSXSXFXSkFXSk5SFS1FPZFF5S5kFSSkSXkXkqPPMMEGE8GGGZqZEZNZNZ0GNENqE@MFuPMMrii:::::::,,.uLiiri:,::ii::::ir::..ZBEEOZOMZXqPFkBS::iiriri;i;iri;;rrrr;i;iiiiiiii:i:i:iii:i::::::::::::::::::,:,:,.                                                 . .                                     .                 . .   .     .   . . .   . . .  .,. ..     :::,,. ,MPq8G5FSXSXFkF1k@8EO@k51SFS1SMMPNPqXqX0UvvLLLLLLLLLLLvLLLvLvL7YFL7LvLvvvLvLvv7vvv7v7v7v7LvLLYY</span></span><br><span class="line"><span class="comment">//JLYYLLvv7L7v777777rrrrrrir;rrrrv7LLuu2UF2FFk5k5k5S5kFkFkFSSXSkFkSkSXSXSXFkSkFk5S5FXZFF5SFkFXFkSXkPXqSOBE0GZOZ80ENZNENE0ENZ0ZqNqBBNuPBS:;::::::::,,,27iir::,::;i::::ir::..0@008ZMM8kqPXUOM7,:i;iri;i;i;i;irrrrriiiiiiii:i:i:i:i:i::::::::::::::::,:,:,:,.   .                                               . .                                     . . .             . .   . . .         . .   .   ..  .      .,,:,::,X@Oq8@ZF1SFSFFq@PFPZZMP55FukMMPqPqPPPXX0u7vLLYLYvLLLLLLLvLLL7v5u7LvLvLvLvLvLvLvvvL7vvvvvvvvLLY</span></span><br><span class="line"><span class="comment">//uLJLYLLvL7v7v7v7777rr;7rr;rrrrrrv7YYuu1255S5FFk5S5S5SFkFSFkFkFXFXSXSXSXSkSkFS5F5555kZ5F5SFSFSFkSXSPXXE@0G0GG8ZGNEqZNE0E0EqE0E00P8BOu8Brii::::::::,.:1;iir:,,:ir:::::iri:,.P@0q8ZOBOkPPPjSMF:::iiri;i;i;iiirir;;iiiiiiiiii:i:i:i::::::::::::::::::,:,:,. . .                                               . . .                                     . . .           . . . .   . . .               .    .,.,,:rYj5FqkFULU0u:rMBO1SFkO@7::i:iu@Bq28B8X0qNPqXqkqXPuv7LLYLLLYLLLLLLvLvv257LvLvLvLvLvLvLvv7v7vvv7vvv7LvLL</span></span><br><span class="line"><span class="comment">//ujJjYJLLvvvv777v77r7r7rrrrrr;7r77vvYYUu12S5FFS5S5SFk5FFS5kFkSXSXSkSkSXSkFXFkSkFS5F1FkEF51S5kFkFXFXkNkqBOEGZOZGEZ0EN000NE0ENE0ENEXEBB5@Xii:::::::::,.r2iiir:,,:ir:::::iri,,.FBZXZEOBMXqPq1uEMr,:ii;iii;i;i;iiiririiiiiiii:i:i:i::::::::::::::::::::,:,,.. . .                                       .   .  .. .   .                                   .   . .     ...     . . . .              ..,:irr7rrrrii:i:i:::i:rii:Lkr.vO@8OMN;iri:::,:5B@BZP0qNPNPqkPkPXXuL7LLYLLLLLLvLvLv7JSvvvLvLvLvLvLvLvLvLvLvvvLvv7vvv7L</span></span><br><span class="line"><span class="comment">//2YuYJLYLLvLvv7v7777r7rrrrrr;rrrrv7LvjjuU52F5k1SFS5S5S5S5S5SSSFk5kSkSSFkSkFkFkFSFS1F1Fk05F5FFkFkSkFXkqFBOEEG8GEGNEqEq0NEN0qEqENEN0qNO@O@r;i:::::,:::,.vjiri;:,,ir;:::::iri:, 2BGk0Z8BBPXP05j1BF:,iiiiiiiiiiiiii;i::iiiii:i:i::::::::::::::::::::::,:,,.. .                                           .   . . . . . .     .   ...                   . .   . ........  . .               ..,:iir7riri:::,,........     ..:;7i70J.:vP5Liri:.. .   .vM@BE0PNPNXqXPkPXX5JvLvLLYvLLLLLvvJkLvvLvLvLvLvLvLvL7LvLvLvv7vvvvv7vv</span></span><br><span class="line"><span class="comment">//UuuuYjLYvLvvvv7v7v77r7r7rr;rrrr77v7LLju2U52F1F5S5S5S1S5F5F5FFk5kFkSkSXSXFXSXSXSk1F5525SE555S5S5kFkSqkXOBNZEMEGZE00q0q0qEqEq0N0NE0EqqNBB0:;::::::::::.,Jviii;:,:iri::::::ri:, YB8XN08BBPXPESuLGOr.::iiiiiiiiiiiii:iii:iii:i:i:i::::::::::::::,:::.,,:.. . . .                                             . ... .       .    .:...  .                 . . . .....     .         ..::iirrrii::...........,...,.,...,.. ...:rr7Zj:ii;ii.......,..   r8@MGqNPqPPXPSXkX2jvLLYLLLLvLvvLqY7vLLLvLvLvLvLvLvL7L7vvvvv7v7v7v7v</span></span><br><span class="line"><span class="comment">//5u2juJJLYvLvL7v7v7777r7rrrrrrrrr7rvvYYuu2251F1S5S5F1515151F1SFSFSFS5kSkFkSkSXSkSk5S5F11FZF51F5kFkFXkqS0BZ0GOO0GNEqNq0N0qNNNqEq0NEq0NNXBBv:i::::,:::,:.:u7iiii,,:rri::::::i;:: 7BMPq0GM@NXPNk1L5MF,::iiiiiiiiiiiiiii:i:i:i::::::::::::::::::,:,:::.... . .                                             . . ....... . .   . . ..  .   . .   .           . . . . .         ..,:iiriii:::.......,...,.,.,...,.,.,.,irirr:.....:iLOL::,....,.,.,.,...   iO@BNNPqXqkPkXkk5uLvvLvLLLvL7XuvvLvLvLvLvLvLvLvLvvvL7LvL7L7v7vvv7</span></span><br><span class="line"><span class="comment">//2UUUujYYLYLL7v7v7v7777r7rrrrrrrrr77vvYLuu2251F1FFF151F1S1F1F151F5F5kSkFkFkSSSkFS5kFS1F11SES55F5F5S5PkPk@8ZZM8ZEEqNPNPNP0q0q0P0NEqENEq0P@Mii:::::::::::.;uri;ii.:ir;i,:::::i;::.iMMPPqGM@EXkNXSLYEMr,:iiiiiiiii:iii:i:i:i::::::::::::::::::::,:,:::.... . .                                             . . ....... . . .     .     .             .     ...         ..::ii;:i::.........,.,.,.,.,.,.,.,.,.,.,.:7:...,r7.......78r  ...,.,.,.,.,.,..   iO@MEPqXXkPSXkXFuvvvYvYvL7kF7vLvLvLvLvLvLvLvLvvvvvL7Lvvvv7v7v7v</span></span><br><span class="line"><span class="comment">//kU2uUjuYYLLLLvLvv7v77r777rrrrr7r7r77vvJJUu1252F1F1S5F15251F1F2F2F5S5kFkFkSkFXSXFXFS5S5F255GkSFSFF5XSPkkOMEGOM0GN0PqqNqNP0q0PNqNq0q00EN0E@J:::,:,:::::::.7Jiiri:.:;7i:,:::::ir::.:8BqPXEM@Zkk0PSjL2BS:,:iiii:iiiii:i:i:i:i:i::::::::::::,:,:,:,:,,,, ... .     .                                            .......  . . . .   . .   .   . .           .       .,:iiii::,......,.....,.,.,.,.,.,.,.,.,.,.,.,.:r. .... ij...... JOr.....,.,.,.,,,.,.,..  rBBMPqPXSPkXSP52YLvLLL7FEvvLvLvLvLvLvLvLvLvvvL7L7vvv7v7v7vvv7</span></span><br><span class="line"><span class="comment">//F512uujuYYLYvLvvvv7v7777r7r7rrr7r7r77LvJjUU2151S1S5F551525UF1125251S1SFkFkSkFkFkSkFS5k1F21FZkSSk5SFXkqFZM8EMOZE0qNP0PqPqqNP0q0q0NENENENNB@ii::,:::::,:,,,Yviiri:,irri:,:::::ir::.:NB0qk0O@GXkNqkuLLGO7.::iiiii:i:iii:i::::::::::::::::,:::,:,,,:,,..   . . .               .                             ... ..... . . . . . . . . . . . .             ..,:i:i:::,.......,.....,.,.,.,.,.,.,.,.,.,.,.,.,.,..iJ.  ... :Er.,.,.. 1O7...,.,,,,,.,.,.,,,..   L@@EqkXkkFXSXFFjLvvrU8Y7LLLLLvLLLvLvLvLvvvL7LvL7Lvv7vvL7v7v</span></span><br><span class="line"><span class="comment">//X5S21UUuuYJLYLLvv7v7v7777r7r7;rr7r7777LLjjUU1251F5S1F1515252525U125US1S5kFkFSFkFkSkSkFS5F12FZXkkXFkSXXXPB8E8M0ZN0qqPNPqPNPqPNq0P0P0NENEqEB1:i::,:::,:::,,:U7iiri,:7rri:,::::::r::..S@0qFP8@OXSqPP2J75Mq:,:i:i:i:i:i:i:i::::::::::::::::,:,:,:,:,,.... . . .                   .                          .... ..... . . . . . . . . . . . .       ..::iii::,,.....,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.:EJ:,...:LO:..,.,...S87,..,,,.,.,,,.,,,.,.,.. .U@B0kXkkSkSXkSuLrLB27LvLvLvLvLvLvLvLvLvLvLvLvvvLvvvL7L7v7</span></span><br><span class="line"><span class="comment">//kkSF11uUuuJJLYLLvv7v7v77r7r7rrr7rrr77vvLLuu2212F2F1F1F1F252F25U521U2251F5S5SFXFkFXFkSSFS5F21FZPXSPkXkPkSOMEOMZ0ZN0PPXqPNPqPNXNqqPNq0P0N0qBB;ii::,:::::::,,iuriir:,i7rri:,::::::i::..J@0qSXZ@MX5PXq2uvLE@v.,::iii:i:i::::::::::::::::::,:,:,:,:,,.......... . . .               .                         ....  ....... . . . . . . . .       ..::ii:::.......,.,.,.,.,.,.,.,...,.,.,.,.,.,.,.,.,.,.,.,,,,,...vE5v7rvjGj..,.,.,...PZ7:..,,,,,.,,,.,,,.,.,..  .PBMPPSXFkFkSSuJMXrLvLvLvLvLvLvLvLvLvLvLvLvLvvvLvv7v7L7v</span></span><br><span class="line"><span class="comment">//qFXFF11uUjuJJLYvLvv7v7777r7r7rrr7r7r77vvYYuu1251F1F551F2FU525U1U1U1U2U5155SFkFXFSSPSkSk5S25115ZqkkPkPXPFGMGGBEE0EPPPPXNPqXqPqXNPNP0q0qEqNq@1ii:::,:::::,:,,ruiii;::77;r::,::::::i::,.7@GPkk0@Bq5XPq1uLvUBZi.::i:i:i:i:i::::::::::::::::::,:,:,:,,.... ..  .                   .           .     .         ....  ....,.... . . . .       ..::i::::.......,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,...71kFkNq7..,.,,,,,...PE7:..,.,,,,:,,,:,,,,,,,,.  :0@OPkkSSFk51BBr7vLLLLLLLLLvLvLvLvLvLvLvvvLvL7LvLvvvv7</span></span><br><span class="line"><span class="comment">//XXkXFF25UuuuJJLLvLvL7v7v77r7r7rrrrr7r77LvJjuu1U52F152F25U121U121U1U1U2U2U52FFkFSFkSqkkSk5S2FU22Z0kSPkPSkkBZ8MG0ZNNkNXqXqXqXqPNXqq0P0PNPEq0O@ii::::::::::::.:vLiiii:r7r;r::,::::::i::,.iBOqkkk@BN5XXPFuJLv0B1..:i:i:i:i::::::::::::::::::,:,:,,,,.... ...   . . .              ..   .               . .     ....  ....... . . .     ..::i::::...,...,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,.,,,.,...::;ii,..,,,.,,,,,...P07:..,,,,,,,,,,,,,,:,:,:,.  iMBZFk5S1UG@2UjLvLvLLYvLvLvLvLvLvLvLvLvLvLvvvv7v7v7v</span></span><br><span class="line"><span class="comment">//NkqSXSF15U2juJJLYLLvvvv7v77r7r7r7rrr7777LLujuU1212F1F2121U1212221U1U1U1u1U2155kFkFkSqXkFX5F2121u0EPFPkXSkOM0MZE0EPPkPXqXqkqXqXqXNPNP0P0PNq0B5:i::,:::,:,:::,:Y7:iiiivrrr;::,::::::;i::.:OMqkXSB@Z5kSqS5YY7uOMr.,:::::::::::::::::::::,:,:,:,,,,.,.... . .....   . .            .. .  .    .         . .   . ....  ,......     ..,:i:i::.,...,.,.,.,.,...,.,.,.,.,.,.,.,.,.,.,.,.,,,,,.,.,.,,,,,.,.,.,,,,,.,.,.... ....,,,.,.,,,,,...kZ7:..,,,,,,:,:,:,:,,,:,:,,.  vM@Pk5UP@S15SUY7vvLvLvLvLvLvLvLvLvLvLvLvLvvvLvL7v7</span></span><br><span class="line"><span class="comment">//qPPqkXFk11UUuuYjLYLLvv7v7777r7rrrrr7777v7LLuJuu2U5152F21U5U12122U1u2U2U1U1U2U51SFkSk5PPXFkFF1521uPGqFPkX5EMZOONZNqkqXqXqXPXqXqXPPNXNP0Pqq0XMMiii::,:::::::,,,iYriiii7vrr;r::,::::::ii::.,NM0kXFOB81SkNkFJJLL5@q:.:::::::::::::::::,:::,:,:,:,,,,...... . ......  .              ...  ..  . .     .     .     ...   .      .,::ii::,....,.,.,.,.,.,.,.,.,.,.,,,.,.,.,.,.,.,,,.,.,.,,,.,.,.,,,.,,,.,.,,,.,.,.,.,.,.,.,.,.,,,,,,,,,,:.. FGv:..:,:,:,:,:,:,:,:,:,:::,. .u@MkX@qU1SFk2ULvvLvLvLvLvv7Lvv7L7LvJLL7v7vvvvvvv</span></span><br><span class="line"><span class="comment">//0P0PqkkFk21uUuuLYLYvLvv777777r7rrrrr7r77vvLLuuUu1211F2F212121u221U1U1U2U2U2u2U11FFkFkFXPX5kFS1521uFZGFkSkSMGOOE0ZkPXPkPkPkPXPXqXqPqXqPNPNPNN@Yiii::,:::,:::,,,rLr:i:rL7rrr;:::::::::ii::,.5BEkX5ZBOFSkPXSjJLLLZB1..,:::::::::::::::::,:,:,:,:,,........ . ... ... .     . .      ...  ...   . . .     . . . . ,..      .:ii::,,...,.,.,.,.,.,.,.,.,.,.,.,.,.,,,.,.,.,.,.,.,.,.,,,.,,,.,.,.,.,.,,,.,,,.,,,,,,,.,,:.,,,,:,,,,,,,,,:,,...5Ov:..:,:,:::,:,:,:::::,:,:,:. .1B@ZU5F5SFSFFJv7v7LvLLuu22XPNPqXPSPXqFJ777vvv7</span></span><br><span class="line"><span class="comment">//0qPqXPSXFS55U2uuYJLLvL7v7v7v77r7r7r7r7r77vvLYujUu5252521U1U5U2u1U1u1U2U2U1u2u1uUu5FXSkFXPqFkSS1525U5NOkSF58M8M0G0PkXkqXPXXkqXPkNkqPqXqXNPNqqMO:ri:,:,:,:,:,,...r7iiiiLL7;r;i:::::::::ii::,.JBZSX5NBMFFSPXXuuLJvuOBv..:::::::::::::,:,:::,:,:,,.......... . ... ...   .   .       ....  ...   . . .   .   . .      .::iii:,...,.,.,.,.,.,.,.,.,.,.,.,.,.,,,.,.,.,.,.,.,.,,,.,,,.,,,,,,,.,,,,,,,,,,:.,,,,:,:,,,:,,,:,:,:,:,,,:,,,,,,,,.. uMv:..:,:,:::::::::::,:::::::,. :5BGSFS1FFPq0PPSPPZ00XX1j7ri:,.....:LPG1v7v7v</span></span><br><span class="line"><span class="comment">//EX0PqPqkPSk15U2juYJLLvLvv7v7v77r7rrrrr7r77vLYYuu2u1U51111U22521U1u2u2u2u2U2u2u1uUU12kSXSkPEFkFS1125U2kOEk2PMOOZ0ZSkkPkPXXkPXPkPkqXqXqPNqqPNPZB7ir::::,:,,,::ri:,::i:iru77rr;i::,::::::i:i:, vB8SP5XB@SFFkXX2jLJLL1@Or .,:::::::::::::,:::,,,:,,........ . . ...  ..               ....  . ... . . .   .       .,::i::,,.,.,,,.,.,.,.,.,.,,,.,.,.,.,.,.,.,,,.,.,.,,,,,,,,,.,,,.,.,.,.,.,,:,,.,,,,,,,,,,:,,,:,:,,,:,:,:,:,:,,,:.,.,.,.:,..JML:.,:,:::::::::::::::::,:,,,.  :8BMMBBMMBZP5u7i::.        .....   .:5GNL77</span></span><br><span class="line"><span class="comment">//NNq0qqXPkXSS55U2uuJJLYvLvv7v7v77r7rrr7r77v7LLjJUu2u1U12121U1u2U1u1u1U1u2U2U2u1u2U2u2uFFkSkkGXkFk2225U2UGOqUMO8EZE0SXSPkPkPkPXPkPXPXPXqPqPqqqP@k:ri::,:,iY55F11157::i:;Lu77rr;i,....,,:::::::.rBMkXFkM@X5FXXq5uYJYYLPBG: .:::::::::::,:,:,:,,,,.,.......... . ...  .. .     . . .   ....  . .   . . .      .,:iii::.,.,,,,,,,,,.,,,,,,,.,,,.,.,.,.,.,,,.,,,.,.,,,.,,,,,,,.,,,.,,,,,,:,:,:,,,,,,,:,:,:,:,:,,,:,:,:,:,:,:,:,:,,.ir7rv7:.:,, YML:,,:::::::,:,:,,,:,::iirr7vL7;r1uvri,.       . ......,.,.,,,,,...  ,v00U</span></span><br><span class="line"><span class="comment">//ZP0qNPNXPkPFS21U2uuLJLLvL7v7v7777r7r7r7r77v7LLuuuU1U5U12125U1U5U2u1U2u2U2U2u2u2u2u2uUu25XSSkG0kFX12UF22uXO80B0Z0ZP0kkSXSXSXkXkPXPXPkNXNPqXqPq8@i;ri,,ikZSYL7777uG1:::i7uYrrr;:. .,:.. ..::::: :G@qFFF8@q5FXXqS2JJYJvYq@P: .,:::::::::,:,:,:,,.,.......... . . ...   . . . .   . .   ...   . . .       .,:ii::,,,,,,,,,,,,,,,,.,,,,,.,,,.,,,,,.,.,.,,,,,.,,,,,.,,:.,,,.,,:.,,,.,,:,,,:,,,,,,,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,,.77i,::iJ7.,,, LBL:,.,,,,::::ii7rvvYLL7v7ri:::.        ......,.,.,.,,,.,,:.,,,.,.,...  iF</span></span><br><span class="line"><span class="comment">//Nqq0q0XqPPkPFS12uUjuYYLYvL7v777v7777rrrrr77vvYYuu2U1U121U5U2u222U1U2u1u2u1u2u2u1U2U1uUu22FSXSZ8P5k11u515u2PBBMNEE0X0XkFXkXSXSXkPkPSPkPkPXqXNXqBu:ri:vO5vr77v7v77YB5,,:iYL7ri,r5OM@@@8k7: ..,..  ;ON5F5E@0FFkkqS1JJYjYLYGBP: .,,:,:::,:,:,:,:,,.,.......... ... . .   .   .     .     ......,..     ,:;ii::.,,,,,,,,:,,,:,:,,,,.,.,.,,,,,.,.,,,.,,,.,,,,:,:,,,,,,,:,,,,,,,,,,,:,:,,,:,:,,,:,:,,,:,:,:,:,:,:,:,:,:,:::::::::.vv..,,,.,u7.:,. LM27ii77L7LLL7r;;::,,.. . . ........,.,,,,,,,,,,,,,,,,,,:,,.,,,.,,,,,..</span></span><br><span class="line"><span class="comment">//EqEq0P0PNPqXXSk25uUuuLJLLvL7v7v7777r7r7r7r7vvvJYUu52121U2U2U2u1u2U2U2uUu2uUU2U2UUu2u1U2u2u21kFE805PF5u115UuuOBOEEqPXqXX1SSXSXSkSXkPkPkPXPXqXNSMM:iiUMv77v7v7vvv77j@v..:;7iirE@@MO8MB@B@BEv:.:rYuLF@MkFFN@EFFXSPkSuJYjLjvj0@X: ..:,:,:,:,:,:::,,.,........ . . . . . . . .   . . . . . ....     .:irii:,.:,:,:,:,:,:,,,:,:,,,,,,,:,,,,,,,,,:,,,,,:,:,:,,,,,,,,,:,:,:,:,:,,,,,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::::::::,:.:Nv:,,:::,7S;irr7;uuLr;ii::.... ........,.,.,.,.,.,,,.,,,,,,,,,,,,,,:,,.,,,,,,:,,.,.,,,,..</span></span><br><span class="line"><span class="comment">//N0NEN0q0q0PqkPFS15UUjjYJLYvL7v7v7777r7r7r777vLLujUu52F1521U2u1U1u1uUuUUUu2uUUUU2uUu2U2u1U2Uuu52XO8kPSSuUU1uuLSMBGEEOOBO01FSkFXkXSPXqXqXqXqXqXqq@7,LBv77v7vvv7vvv7rYBL,.:72Z@BGP0q0qG8OGMO@BMB@MOEqPGkXkSP@855XSPXkUuYjLjLLLGBN:  ,,:,:,:,:,::,.,................ . . . . . . . . . .        ,ir7i:,,,:,:,:,:,:,:,:,:,:,,,,,:,:,,,:,,,,,:,:,:,:,,,:,:,:,:,,,:,:,,,:,:,:,:,:,:,:,:,:,:,:,:,:::,:,:,:,:,:,:::::::,:,,,,,:,:::vMFu7rr7rri;::::..   ........,...,.,.,.,.,.,,,.,.,,,,,.,,,.,,,,,,:,,.,,,,,,,,,.:,:.,.,,,.,</span></span><br><span class="line"><span class="comment">//ZNE00q0qNqNXPkkFF11UUJuLYLLvLvv7777r7r7r77777LJLjuU2F151F1521u2uUuUu2u2u2u2u2u2u2u2u2UUu2u2uUjujUXN5kkk1FFPPEN8OM8GNXPMBBXFFXkqPZGOOMMOZEPNXqkPBZ.82r7vvL7L7v7v7v7;Y@BMO@@B0NP0PNqNqZGMGESN00SXXXSk1kSXSSS@O5FkSPXX2uYJYjYjvJN@Er  .,,:,:,:,:,:,,.......... . . . . . . . . . . .       .:r77::,,,:::,:,:,:::,:,:,:,:,:,:,:,:,:,:,:,,,,,:,,,:,:,:,,,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::::::::,:::,:,:,:,:,::::iirr777r7rr::::,,.............,.,.,.,,,,,.,.,.,,,,,,,.,.,.,,,.,,,,,,,,,,,.:,,,,,:,,,,,,,:,,,,,:,:,,.</span></span><br><span class="line"><span class="comment">//E0qEN0qNqNXNXqkXFS21uUJuLJLLvL7v7v77r7r7r7777vLjLju5UF5SFSFS15U1u2u2uUuUuUu2uUuUuuuuuUuUuujUuUu2USXZZMMMOMOGPP1uJYvv7v72M@M0POOM8ESjLjSOBB80Pqk0@Lk77v7vvv7L7v7v7vriZ@G8N0P0q0qNqENqk0O@80SPPXSXkkSkSkFPkS5BMS1kSPXP5ULJLuJJLYLqBM7. ..,,,,:,:,.,,.......... . . . . . . . . . .     :i77r::,:,:,:,:::::::,:,:,:,:,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::::,:,:,:,:,:::::,:::::,:,:,:,:,::i:iir;rr7r7r;ii::,,....   ......,.,.,.,.,.,.,,,,,.,.,.,.,.,.,,,.,.,,,,,,,.,,,,,,,,:,:,:,:,:,:,:,:,:::,:,:,:::::,:</span></span><br><span class="line"><span class="comment">//Z0EN0q0NEq0qqPXSkSF11uUJjLJLLvL7v7v77r7r7r7r77vLujuu11F5SFXSXFF1S1F2125U2UUuUuuuUuuu2U11kkNNGZOGOGZNqF5uuLv77rririr;rrrii7q@B57.        :LGBBZNFMBUi77L7Lvv7v7riiiri7B8X0PNq0q0q0qqXqkqO@GNFPSPkXFSkXkXSXkk1MBS5kSXXqF2JjYJJuYJLY5BMu.  ..,.,,:. ,,.......... ... . . . . .       :rL7i::,:::::::::::::::::::,:::::::::,:::::,:::,:::,:::,:::,:,:,:::,:::::,:::::,:::,:::::,:,:,:,::::::::iii;rrrrr;;ii::::...............,.,.,.,.,,,,,.,,,,,,,,,,,,,,,.,,,.,,,,,,,,,.,,,,:,,,,,,,::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//0E0EqEN0q0qNPqXPSXFF11UUJuLYLLvL7v7v77r7r7r7777vvuu2u12F1SSkFkFkSS5S5F1S5SFkSXkqq0NEZZ0ZEZNNXS2uYL77;;iiiii;ir;7r7r7r77ri1Xr               :uMBOq@X:i77v7v7riirYSkSP1B@0XNP0q0P0PNPqXPkXO@GP5kkXkk5SSXSPSXkk1OBX1kSXkqX5YYYuYuYuYJv2OB1:  .,.,,:. .,............ . . . . .    .i7L7i::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::,:,:::,:,:::::,:,:,:::::::iiiiiiir;riiii::,:.............,.,...,.,.,.,.,.,.,,,,,.,.,,,.,,,,,,,.,,,,,,,,,.,,,,,,,,:,:,:::,:,:::::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//8NZ0EqEq0P0PqPqXPkXFS21uUjuLYvLvL7v777vr7r7r7777vvJu55kSXXqXqq0qE0ZEZEE0ZNZ0ZN0NEPqkk52jJv7rriiiiiii;irrrr7rrrrrr;;i;i;rOF        . . .       r0@B@SYriirii7FG@B@@i:::OB0PNq88MB@MOPPPqkkO@GS5XkXSk255PSPSkkX1ZBN2kFkSqXSujYJYjJuYjLLuE@Zr. ..,::................ . .      .rLj7i::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,::,,,,,,::::iiii;;riiiiii:ii:,,...............,.,.,.,.,.,,,.,,,,,.,,,.,,,.,.,,,,,,,,,,,.,,,,,.,.,,,,:,,,:,:,::::::::::::::::::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//ZE0EEE0Eq0q0qNPqXPkXSF12uUjuYYvLvv7v777777r7r7r77vLJYUUFFPkPkXSXFS5S5k5k5FFS21uuLv77;iii:i:iiiiririr;ri;i;i;irrvvj2SF51@L      . . . . . .      :SB@BOXU7uZ@BO00q@v .vB@B@B@B@O0F0@@B0XPSSO@ESFPkPkkU21XSXSXSX10BZUkSXSPkXUjLJYuJuYjYJLJX@Bu.  ,,:..,........... .      ,7ju7i::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,,,,,:,:::::irrrr7r7rrii::::,,........,::,...,.,.,,,.,.,,,.,,,,,.,,,,,,,.,,,.,,,,,,,.,.,.,.,,,,,.,,:,:,:,:,:::,::::::::::::::::::::::::::::::::::::::::::::::::::::::i::</span></span><br><span class="line"><span class="comment">//ZNG0ZNE0Eq0N0qNPqXXSXFF21uUJjLYvLvL7v777777r7r7777LLYYuuujUu1U1251F5F11jJvvrriiii:iiiiiiriririri;iiiri7LuUXqEEO88qqkSY@F    .   . . . . . .     . :S@BMMMMMqqP00ZM@0@B@B8u;.       :MBBXXF58@NSFkSkkFuU2kkXSXkX5PBO2SSXkPkP1uLjJjYuJuYjYJv5O@ki...:.,,...........    :vuUvi::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,,,:,::iiii77v7777rr:i::,,...........,.,.,.,.,.,:i,.,,.,,,.,.,,,.,.,.,.,,,,,,,.,,,,,.,.,,,,,.,,,,,,:,:,:,:,::::::::::::::::::::::::::::::::::::::::::::::i:::i:iii:i:iiiiiiiii:</span></span><br><span class="line"><span class="comment">//0ZEZNE0ENEq0qNqNXqkPSk5S22uUjjLLLLvv7v7v7v7777777v7LLJYUU55SSk15ujLvr7iri;i;;rr7rri;iririiiiii;77uuSq0P0k5JY7rii:::: JM    . . . . . . . . . . ..,. :PB@MBBBB@@@MMMBUi.              :M@8PF5O@PSFXSXSSuuuFkPSkkk5XBM2SFXFXXq5ULJYjYjJjYJYuLLJZBMJ, ..,,..,....   .:Y1U7i:::i:::i:::i:::::::::::::::::::::::::::::::::::::::::::::iirr7r77v77rr;i::,:...........,.,,,,,.,.,,,.,,,.,.,.,,i:..,,,.,.,.,,,,,,,,,,,.,,,,,,,,,,,,,,:,:,:,:::,::::::::::::::::::::::::::::::::::::::::::::::i:i:i:iiiiiiiiiiiiiiiiiiiiiii:i</span></span><br><span class="line"><span class="comment">//Z0ZNZNEN0qENEqEPqqqXPkkF521uuJJLYLL7v7v777777r7777vvLLUUULv77;iii:i:i:i:i::::::,,,iii:iir7YJFFXXk2Uv7i:,... . ... .  B:   . . . . . . . . . . ....,.. :OMv7vYvvi:.          .          r@BG5FMBkSFkkPkSuuJ1FPkXkkFSMB55SXSPkNk1YJYjYuYjJjJjYJLL5BMPi. ,,,..   .:J11v;:i:iiiii:i:i:i:i:i:::i:::i:::::::::::::::::::::::iirr77v7v7v7riii::,,..........,,,.,.,,,,,,,,,,:,,,:,,,,,,,:,:,,,,,r,..,,,.,,,.,.,.,,,.,,:,:,:,:,:,:,:::::::::::::::::::::::::::::,:::,:,::::::::::::::i:::::i:i:i:iiiiiiiiii;irr7777L7LvYLujuu</span></span><br><span class="line"><span class="comment">//0EEGEE0E00N0NEqNqqXPXXkk5S21uuJJLYvLvv7v77777777777LvLri:,.,.............. . ..::ii77u1XXXF2Lvri::...........,.,,,. FG   . . . ..... ... . . . . ..:,,  r1:    ..... . . . . . .   .     jB@PSMMFSSXSPkFJJJU2XXPSXFSO@S5SkSkkqkSJjLjYuYuYjJjJuYYvUNM0v.    .iuF1vi:iiiiiiiiiiiii:i:i:i:i:i:::::::::::::::iii;77v7LvJvv77ri::::...........,.,.,,,,,.,.,,,,,,,.:,,,,,,,,,,,,,,,:,:,:,,,,.,,7,,.:,,,:,,.,,,,,.,,,,:,,,:,:::::::,:::,:,:,,,:,:::,:,:,::::::::i:ii;irir;rr7rr777vvLLYYuJuYuYuuuu2252F22uUuUjujuJjYJLLvv77</span></span><br><span class="line"><span class="comment">//G0G0GNZEEN0qEqEqNqNXNXPSk5521uUYuLLLLvv7v7v7777rv777Lr:::::::,:,,,:,,.,...,:ii7v2S00EFUvri::,.......,.,.,,,,,,,,,. 7@.  . . . . . . . ... ..... ....:,:..:Ski.,,:,,.... . . . . . . .      1@MqBZFSFXkXk5JYLuuFSXkXSFZ@X5FkFXkqXkuJLjJuJjYuJjJuLjLLLFG8u:iuF5v;:iiiiiiiiiii:iii:i:i:::::::::::iirrr7vvLvLvL7riri:,,.. . . . ......,...,.,.,.,.,.,.,.,.,.,,,.,.,.,.,.,.,.,,,,,,:,,,,,:,,,.:7.,,,,,,,,,.,.,.....,.,.:,,,:,:,::::::ii;i7r7;rr77vvYYujuu2uUu2U121U5112121U1jujjYYLYLLvLvv77rrii:i::::::,:,,.,.....,.,,,.</span></span><br><span class="line"><span class="comment">//EE0G0ZNEEENEq0N0qNPNPPkXSk5F21UuJjLYvLvv7v777777777v7riiii::::::,:,,...::irJuXNGEkY7i:::.......,.,.,,,,,,,.,,,..  L@.  . ... . . . . . . . . ........:::,..7Xj,.,:,,.. . . . . . .   .      .kB@@NFkSXSPk1YJLJu1FXkXSFq@015kSXSPPPUuLJJuYuYuJuYjYjLLvuG@BFvi:ii;iiiiiiii:i:::i:iiiirrvvLvLLjLYvv77ri:::,.... . ....,.:,:::,:::::::::::::::::::::::::::::::::::::::,:,:,:,,,,,,.,...,.,....rr.,,:,::::::i:iir;7;;irr7777777r7r7r77LvLLvrri;iiii::::::::::,:.,.,.,.,.....,...............,.....,.,...,.,.,.,.,.,.,.,.,</span></span><br><span class="line"><span class="comment">//G0ZEZ0E0EqENEN0q0q0PNXPXXFk1FU2uuJJLJLLvv7v7v77777777rriiii::::::...::i7u5PXX5u7i:,.......,.,,:.,,:,:,:,,,,.,...7Nq.  ..... . . . . ... . . ... ....,,:::,,.,LXr.,:,,.... . . . . . . . .     .2@BESXkXSPk5YYLJJU2kkXSSk@G5FkFkkXXq5uLJLjJjYuYJLLvu0MO5i::i:iii:iiiirrv7vvYJujuJujuLL77;i::,,.... . ......,,::::::::i:i:i:i:i:i:i:i:iiiii:i:i:i:i:i:i:i:::::::::::::::::::::i:::iiii;iii;:rLrrrrrr7rr;r;ririr7LLLri,,,,,,.,.............................,.,...,.....,...,.,.,.,.,...,.,.,.,,,.,.,.,.,.,.,,,,,.,.,,,.</span></span><br><span class="line"><span class="comment">//EZEZEZ0ENE0ENEq0N0PNPqXqkXSk15U1uuJjLYLLvvvv7v777v77rr;riiii:::,,::irvu551JYvr:,.....,.,,::,,,,:,,,,,,,,,,...iYSj:   ... . . . . ... ... ..... ......,,:::,:..:Fu:.,.,.... . . . . . . . . .     1@@0XSkSPk1JYLJYuuFSXSSS@MF1kFPSXSqSULYLYLYYjYUXMMqvi:r7YJuJuu515UujuJY77;i:::,...... . ......,.::::::::i:iiiiiii:iii:i:iiiiiiii;i;i;irir;rrr;rrrrrrrrrrrr7rrrrrrrrrrrr;r;riiiiii:i::::::,,.,,,.,.,.,.........,,iir:....,,,,,,,,,,,.,,,.,.,,,.,.,.,,,,,.,,,,,.,,,,,.,.,,,,,.,.,,,,,,,.,,,.,,,.,,,,,,,,,,:,,,,,,,:,,</span></span><br><span class="line"><span class="comment">//G0ZEZEZ0E0EqE00q0qNq0XqPPXPSk5522uUJjLYvLvvvv7v7777r7rr;;ii:::::iivuUU2ujv7::...,.,,,,,,:::,,,,,,,,,,.,...ivuvi     ..... . . . . . . . . . ..........,,:::,:,,.7Fr:i.,.. . . ... ..... . .        Y@@qFkSPk1YYLYLJYU2kkPS@@0qEEO8MMBBO0ZEO8O88B@ZuvJYjvv7vrri:::,,.... . . ......,.,,:,::::::i:i:iiiiiiii;ir;rrrrrrrrrrrrr;7r7rrrrrrrrrriiiiii:i::::::::::,:,:,:,,.,.,...,.....,.,...,.,.,.,,,.,.,,,.,,,,,,,.,.,..,ir:.,.,.,,,,,.,.,,,.,,,,:.,,,.:,,,,,,,,,,,,,,,,,:,:,,,,,,,,,,.,,,,,,,.,,,,:,,,:,,,,,,,,,,,,,,,,.</span></span><br><span class="line"><span class="comment">//EZEZ0Z0Z0Z0EN0P0N0q0qqPqXqXXSS15U1uUJJLYLLvL7v7v777777rrriii:;rrrUS5juu7:,...,,,,:,:.,:i:,,,,:,,,,,,...:7uv:   . ............... . . . . . ..........,.,,:,:,::,.:YjL:.,.... ........... . . . .     S@OkNNOOZXPXqP0EGOB@@M@BMOO0NPqkSuL7riiii,.  .... .   ........,...,.:,:,:,::::::::i:iiiii:iiiiiiiiiiiiiiiiiii:i::::::::,:,:,,.,.,.,...............,.,...,.,.,.,.,.,,,,,.,,,,,,,,,,,,,,,,,.,,,,,,,,,,,,,.,,,.,.,.,:i:,.,.,,,,,.,.,,,,,,,,,,,,,,:,,,,.,,,.,,:.,,:,:,:,:,,,,,,,:,,,,,,.,,,,,,,.,,,,,,:,:,:,:,,,:,,</span></span><br><span class="line"><span class="comment">//G0ZEZ0GNE0ZNEN0q0NNq0PNXqXPXPkS5F21uuJuYYLLvv7v777v77r7rrirr7rrLF1jJ1Y:...,,,,:,,,:.,:i,,,,,,,:,,,,..:Jji.     .....,,:::::,:.,,,...  . . ............,,:,:,:::,:..iS5,.,,,.....,.,.... . .   . .     iB@Z8kF52YjYL77;i::,,....               . ........,.,,:,:,:,::::::::::i:i:i:i:i:i:iiiii:i:i::::::::,:,:,,.,.,.............,.,.,.,.,.,.,.,.,.,.,.,.,,,,,.,,,.,,,.,.,.,,,,,,:,,,,,,,,.,,,,,,,.,,,.,.,.,,,,,,,.,.,..,i:,.,.,,,,,.,.,,,,,.:,,,,,,,,,,,,.,,,.,,,,,,:,,,,,,,:,:,,,,,:,:.,.,,,,,,:,:,:,:,,,,,,,:,,,,,</span></span><br><span class="line"><span class="comment">//ZZEG0Z0E0ZNZN0N0qEqNP0qqXqXPXPSkFF11U2juLYLLvLvv777777r7r777r7jFYYJ1v,.,,:,:,,,,,,.:;i,,,:,:,:,:,, :ju:    . .......:::i:i::::::::::.... . ............,,,,:,:,:,:,.,1k:.:,:,,,,,:,,.. . . . . . .     iBLi:.................,.,,:,:,:,:::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:,,.,.,.,.,.,.,.,.,.,.,.,.,,,.,.,.,,,,,.,.,.,.,,,,,,,.,,,,,.,,,.,.,.,,,,,,,.,,,,,.,,,.,,,,,.,,,.,,,.,,,.,,,,,.,,,,,.,.,.,.::,.,,,,,,,,,.,,,,:,,,,,,,,,,,,,,,,,,,:,,,:,:,,,:,,,,,:,:,:,,,,,,.,,,,,,,,:,:,:,:,:,:,,,:,,</span></span><br><span class="line"><span class="comment">//80G0ZEZ0Z0ENENEq0P0q0qNPNXqXPkPSXFF15UuuuYJvLvL7v7v7v777777rLujvLJ27,.,,:,:,:,,.,.;7:,:,:,,,,,,.. vX;   . . . ... ..::ii;;r::::::::::::,,...........,.,.,,:,,,:,:,:,,.vXr.:::::::,:,.   . . . . . .     jG77r:iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:i:i:i::::::::::::::::::::::,:,:,:,,,:,,,,,,,,,,,:.:,,,,,:,,.,,:.,.,,,,,.,.,.:.,.,.,,,.,.,.,,,,,,,.,.,,,.,,,.,,,,,,,.,.,,,,,.,,,,,.,,,.,.,,,.,.,.,.,.,,,.,.,.,.,.,.,.:::.,.,,,.,,,.,,,.,,:,,.,,,.,,,,:,,,,,:,:,,,:,:,:,,,,,,,,,:,:,:,,,,,,,:,:,,,:,,,,,:,:,,,,,</span></span><br><span class="line"><span class="comment">//EZEZEZ0ZE0NEq0NEqNqNPNqqPqXqXPXPSXFF55UUuuYYLLvvvv777v7v777LLLvYLuv:.:,:,:,,,:.,:7r:,,,:,,,:,,,. 2Z,   ....... . . ..,:ii77Lri::::::::::::::,,,,.,.,.,.,.,,:,,,:,:::,,.:SL.,:::::::,.. . . . . . .   ..  GU77rir;ri;iri;iiiiiiiiiiiiiiii:i:i:i:iii:i:i:i::::::::::::::::::::::::::::,:,:,:,:,:,,,,,:,,,,,:,:,,,,,,,,,,.,,,,,,,,,.,,,,,.,.,.,.,,,.,.,.,,,.,.,.,.,.,.,.,.,.,.,,,.,.,.,.,.,.,,,.,,,,,.,.:,,.,,,.,.,.,,,,,,,.,.,::.,,,,,.,,,,,,,,,,,,:,:,,,:,:,:,,,,,,,,,:,:,:,,,:,,.,,:,,,:,:,,,:,,,:,:,:,:,:,,,:,:,,,,</span></span><br><span class="line"><span class="comment">//G0GEGEGEZ0ZNENENNqNqNqNqNPqXqXqXXSXFF21U2uuYjLYvL7v7777777LvvvLvJLi,:::::,:,,.,iYi,,,,,,:,:,,,, YB.   . ... ... ... ..,,::irvL7i:::::::::::::,:,:,,,,.,,,.,.,,:,,,:,:,:.,YF:.,:::ri.. . . . . . .  ,iii:,jM7v7ririririiiiiiiiiiiiii:i:iii:i:i:i::::::::::::::::::::::::::::::::::::::::,:::,:,:,:,:,:,:,:,:,:,,,,.,,,,,,,,,,,,,.,.,,,,,,,.,.,.,.,.,.,.,.,.,,,.,,,,,,,,,,,,,.,,,.,.,.,,,,,,,.,.,,,,,,,.,,,,,,,.,,,,,.,.,,,,,.,::.,,,,,,,,,,,,,,,,,,:,,,,,:,:,:,:,:,:,:,,,,,:,:,:,,,:,:,:,:,:,:,:,,,:,:,:,:,:,:,:,:,,.</span></span><br><span class="line"><span class="comment">//EE0GEG0Z0Z0ENEN0q0q0q0PqXqPqkqXqkPSXFk51U2uUYjLYvL7v7v7v7v7v7v7LLv::::::,:,,.,;ji..,,,,,,,,,,,.,Br . ....... ....... ..,,::::ivjvi,:::::::::::::,:,:,,,,,,,,.:,:,:,:,:,:..rNj,..:J,. . . . . . .  .7.  ..,Z57vriiiiiii:iii:i:i:i::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,,,:,,,:,:,,,,,,,,,,,,,,,:,,,,,,,,,,.,,,.,,,,,,,.,.,.,.,.,.,.,.,,,,,.,.,,,,,,,,,.,,,,,.,,,.,,,.,.,.,.,,,,,,,,:,:,,,,,,,,,,i:.,,:,,,:,,,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,,,:,:,:,:,,,:,:,:,:,:,:,:</span></span><br><span class="line"><span class="comment">//80Z0GEZEZ0Z0ENE0EqNq0qNPqPNXqXqXPkXSXFS2FU2uUJJLYvL7L777v7v7v7vvYr:::::::,,.:rJ:..:,:,:,:,:,,. SB ... ... . ... ..... ..,,::::::vuv::,:::::::::,:,:,:,,,,,,,,,,,,,:,:,:::,..50i u7,.. . . . . . .  ::   . :OY77ii:i:i:::i::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::::,:,:,:,:,:,:,:,:,:,:,,,,,,,,,,,,,,,,,,,,,,.,,,,,,,.,,,,,.,.,.,.,,,.,,,,,,,,,,,,,,:,,,,,,,,,,,,,:,,,:,,,,,:,:,:,:,:.:r:.,,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::,:,:,:::::::::,::::::::::::::</span></span><br><span class="line"><span class="comment">//GZ0ZEZ0ZEG0Z0EqE00q0qNPqPqXNXqXqkPXXkXSS5F22uuJjLLLLvv7v7v7v7v7Lv7::::::,,.:rj:.,:,:,:,,,,,:,. @Y... . ... ....... . . ..,,:::::,:7u7:,:::::::::::,:,:,:,,.,,,.,,,,:,,,:::,,.rquX:..   . . . . . . .i,     7ZL77i::::i:i:i:i:::::::::::::::::i:::i::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:::,:,:::,:,:,:,:,:,:,:,:,,,:,,,,,,,,,,,,,,.,,,,,.,,,,,,,,,,,,,,,,,,:,:,,,:,,,,,:,,,:,:,:,:,:,:,:,:,,,:,,,:,,,:,:.:r,,:,:,:,:,:,:,:,:,:::,:,:,:::,:::::::::::::::,:::::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//8EZEZ0GEZ0Z0ENE0Eq0N0q0qNXqXPXPXPkPkPkPSk5521u2jjYJLLvL777v777v7Lii:i::::,:rJi..:,:,:,:,:,,,,.:@:.:.... ..... . ........,,:::::::,,:7jv::::::::::::,:,:,:,:,,,,,,,,,,,,,:,:,,..XE.,.. . . . . . . . .i.     r0u77i::::i:i:i:::i:i::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::::::::,:::::::::::::,:,:::,:,:,,,:,,,,,,,:,,,,,,,,,,,,,:,,,:,,,:,:,:,:,:,,,,,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,7r,,:,:::,:::::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,</span></span><br><span class="line"><span class="comment">//ZZEZEZEGEZ0ZNZNENEq0NEqNPNPPXqkXkPkPkXkPSSFS11u2juYJLLvv777v77vL7;iii:::,:rui.,:,:,:,:,:,:,:,.:@:,::.. . . . ............,,:::::::::,:7u7:,:::::::::::,:,:,:.,,,,,,:,:,:,:,:,, 7G..:.. . . . . . .   .i.     :q1rrii:::::::::i:::::::::::i:::::::i:::::::i:::::::i::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,:,:,:,,,,,:,:,:,:,:,,,:,,,:,:,:,:,:,:,:,:,:,:,:::,:,:,:,:::::::::::::::::,Li,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:</span></span><br><span class="line"><span class="comment">//G0ZZGEGEZEZ0E0EN0NEq0q0qNPqXPXqkPkPkPkXSXkkFS21U2uuYjvLvv7v77rvv7i;iiii::;J7,,:::,:,:,:,:,:,, iB:.:::,... . . . ... . ....,,::::::::::::7Jv:,,:::::::,:,:,:,:,:,:,:,:,:,:,:::,.i@,.,,.. . . . . . . . .::     .UXriiiii:i:::::i:::::i:::::i:::i:i:::::::::::i:i:::i::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:::::,:::,:,:::,:,:,:,:,:::,:,:,:::,:::::,:,:::::,:::::,:,::::::,:j,,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//EGEG0GEGEZEZNENZ0EN0qEN0P0PqXqXPXXSXSPSPkXSkFS1522juYjLLvL7v777L7ri;ii::;LY:,:,:,:,:,,,:,:,,, i@:,:::::,.. . . . . . ....,,:,:::,:::::::,:7Uv:,:::::::::::,:,:,,,:,:,:,:,:,:,:.,BJ ,,. ... . . . . .    :::,,:::POriiiiriiii:::::::::::i:i:i:i:i:i:i:::i:::i:::::::::::::::i:i::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::,,rY.:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//8EZEGEZEZEZEG0E0Eq000N0N0q0PqXPXqSXkkSXSPSXFkFk1FU2uujuLYLLvv7vvvrririii7u;.:::,:,:,:,:,,,,,. vB:,:::::::,,.............,.,,:::::,:::::::,,:vjL:,::::::::,:,:,:,,,:,:,:,:,:,:,,.u@: :.. . ... . . . . .       . .1MYLrri;iiiiii::::::,:,::::::::i:iii:iii:iii:i:i:i:::i:::::::::i:i:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:::i:::i:::i:i:::::::::::i::::::::::::::::::::::,,L7.::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//ZZEZEGEZEGEZ0Z0ZN0NZNEq0N0qNqqXPXqkXSkSkSkSkSkFS5525uUJjLYLLvv7L77rri;i7vJ,:::::,:,:,:,:,:.. ,@j.:::::::::::,,.....,.,.,,:,:,:,:::,:::::,:::,:717:,:::,:::::::::,:,:,:,:,:,:,:,.,GM..,.. . ... . . . . .   . ... rBUuFF5uuvvrriiiiii::::,,,,.,.,.,,:,::::::::iiiiiiiii:iiiii:i:i:i:i::::::::::::::::::::::::::::::,::::::::::::::::::::::::::::::::::::::::::::i:::::::i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:iii:i:i:i:i:i:i:i:i:i::::::::::U;,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//8EG0GEGEG0ZEZ0ZNZNENZ0Eq0q0N0qqPqXPkXSXFXSkFk5SFk5S25uUuuLJLL7vvL77rrirrJ7:::::::,::,,:,,.. 7@2.:::::::::::::::::,:,:,:,:,:,:,:,:,:,::::::::::,:L2L::::::::::,:,:::::,:,:,:,:::.,:MG:.,.. . . . . . .   . . ..,. X1:iir7LLU1111JJ77rriiii:i::::,,.,.,.,...,.,,,,:,:,::::::i:i:i:i:iii:i:i:i:i::::::::::::::::::::::::,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:::i:i:i:i:i:i:i:i:iiiii:i:iii:i:i:i:i:i:i:i:i:i:i2;:::i:i:::::::::::::::::::::::::::::::::::::::::i:::::i:i:i:i:i:i:i:i:i:iiiii:</span></span><br><span class="line"><span class="comment">//GZEGZGEZEZ0GEZ0Z0E0E0ENEN0q0PNPqXqXPkkSkSXFkSSFkFkFF15U1uuJjLLvLvv77rrr7L7::::::,:,:,,.. .rZOr.:::::::::::::::::::::::,:::,:::,:,:,:,:,:::::::::,iYFv:::::::::,:,:,:::,:,:,:,:,:.:iMMi...... .   . . . . ....,. L8;rrriiiiiiir7LJ2UF22uJ7vrriii:::::::,:,,,,.,.,.,.,.,.,.,.,,,,:,:,:,:,:::::::::::::::::::::::::,::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:i:i:::i:i:i:i:i:iii:i:i:i:iii:iiiiiiiiiiiiiiiiiiiiiiiii:i:;Ur:::i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:iiiiiii:iiiiiiiiiiiiiiiiiiiiiiiiiiiiiii</span></span><br><span class="line"><span class="comment">//80ZZGEZEZEZ0G0Z0ENZ0ZNENEq0q0qNPNXqXXXkSk5k5SFSFkFS5F1F22uUJJLYvL7777r77Jri::::::,:,,..:uq0r,.::::::iii::::::::::::::::::::,:,:,:,:,:,:,:,:::,:::::iUkY::::::::::,:::,:::::,:,:,,,::0BL...,.... . . .....,,,:..uB7rr7r7rrrr;;iiiiiiir7YLU5F1S2uYL7rii::::::::,,,:,,.,,,,,.,,,,,,,,,.,.,.,,,,,,,,:,:,:,,,:,:,:,:,:,:,:,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:::i:i:i:i:i:i:iiiii:ii;irrrr7r7r7r77777777v7777r7Uu777777r7r7rrrri;iiiiii:i:i:i:iii:iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:</span></span><br><span class="line"><span class="comment">//ZZZZEGZZ0G0Z0Z0Z0ZEENZNEqEN0q0q0qqXqkPSkkkFkFS5SFk1FF51F22UUjuLYLL7v7777J7ii::::,:...r2qYi.::::::i:iirr7ii:i::::::::::::::,:,:,:::,:,:,:,:,:::::::::,r1q7:::::::,:,:,:::,:,:,,,,,,:i:YMOr. ..,.,.,.,,:,:::,. i0M7rr7r7r7r7rrrr;r;riri;ii:iir7vv2255X52UuLvrri:::::,:,:,,,,,,,,.,,,,,,,,,,:,:,,,,,:,,,,,,,,,:,:,:,:,,,:,:,:,:,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:::i:::i:i:i:i:i:i:i:i:i:i:iiiiiii;ririr;rr7r77v777vvLvL7v777777rriiiiiiii:iii:i:i:iii:iiiiiiiiiiiiiiiiiiiiiii</span></span><br><span class="line"><span class="comment">//OZ8ZG0GEGEZEG0Z0Z0Z0Z0EqEqEqEqEqNPNXPXPkXSXFS5S5S1S1F1F1F21u2uuLJLv7v777j7rii::::..7k2r...,,::::::ii;r7Lu7;ii::::::::::::::::::,:,:,:,:,:,:,:,:::::,:::rkS7,:::::,:::,:,:::,:,,,,.,:i:i2@8j,. ..,,:,:::,...iXMS:::i:i:iiiiiiiiiiiiiiiiiiiiiii:i:iiiir7LYjuS5515Uuvvrrii:::,,:,,,:,,,,,:,:,:,:,,,:,,,,,:,:,:,:,:,:,:,:,:,:,:,:,:::,:::::::::::::,:::,:,:,:,:::::::::::::,::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:::::i:::i:i:i:i:i:::i:iiiiiir;7r77vLuYL77777v7777r7rr;;iiii:i:i:::::::i:i:i:iii:</span></span><br><span class="line"><span class="comment">//ZGE8EGEZ0ZEZEZ0Z0Z0E0ZqEN000q0q0PNPNXNXPkPSXFS5SF55F1F5S2122UUuuYJLL7v7vLv7rii::.:12:. ........,,::::iirvujLii::::::::::::::::::,:,:,:,:,:,:,:,:::,:,::::7kSi:::::::::::::,:,,,,,,.:iii:iJ0@Eur:.. . ..,iu0MP7:,.,.,.,.,.,.,,,,:,:,:,:::,:::::::::::::,:::::irr77juUu111ujLL7rii::::,:,:,:,:,:,:,,,,,:,,,:,:,:,:,:,:,:,:,:::,:::,:::,:::,:,:::::::::::,:::::,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::ir7i::iiiiri7r77v7vvLLYLYvL7v7vvvr7rr;ririi</span></span><br><span class="line"><span class="comment">//8EGEZZG0GEZEZEZ0Z0EEZ0ENENEN0q0q0N0qNXNXqkXSXFS5SFS15152511U2U2uuYJLLvL7J77r;:i,iX7.. . . . . . ..::::::iirvuv;::::::::::::::::,:::,:::,:,:,:,:,:::,:::::::L0Ui,:::::::::::::,:,:,:,iiiii::BBXOM8XS1S5PG8q27i,..,.,.,.,.,,,.,.,.....,.,.,.,.,,,.,.,.,,:,:,:,:,:,:,::::ii;rvvYJuuuYjLL7rr;i:::::,:,:,:,:,:,:,:,:,:,:,:,:,:::::,:,:::,:,:,:,:::::::,:::::::::::::::::,:::,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::r7i,::::::::::::::::i:iirrrr7777v7LLLLJY</span></span><br><span class="line"><span class="comment">//ZZEGEZE8ZZEG0Z0Z0Z0Z0Z0E0ENZ0Eq0q0qNqNXqXPkPkXSS5S1F2F1F2125U1u2uuJJLYLvLL77;i::F7.................,,:::::::i7JJ7i::::::::::::::::::,:,:,:,:,:::::,::::::::::2NJ:,::::,:::::,:,:::,,:iii::5@L77LY2FS15uY7r:,...:,:,,,,,,,,,,,,,,,,,,,,.,,,,,,,.,.,.,,,.,,,,,.,,,,:,:,:,:,:,:,::::iirr77LLLLJLv77rri:::,,,,.,,,,:,:,:,:::::::,:,:,:::::::::::::::::,:,:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:rr::::::::::::::::::::,:,:,:,:,:,:::,:</span></span><br><span class="line"><span class="comment">//8EGEGZGZG0GEZ0GEG0GEZ0Z0ZNEqENEN0q0q0qNPNPPXPkkSk5S5F2121U5U1u2u2uuJuLJvJLv77i:L1::,................,,:::::::,:iLuJi:::::::::::::::::,:,:,:,:,:,:::::::,::::::rkEv:,:::,:::::::::::,::::.j@uvvLvYLLvLvvri,.,:,:,:,:,:,,,:,,,,,,,:,,,,.,,,,,.,.,.,,,,,,,,,.,,,,,,:,,,:,:,:,,,:,:,:,:,,,:,::::iirr77vvL7vrrii::,,.,.,,,,:,:,:,:,:,:,:,:,:,:,:::::::::::,:::::::::::::::::::::::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i7:::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//GGZGE8EZZGEZEZEGEZEG0Z0ZNENEqEqEq0qNqEP0PNXNXqSPFkFk5S1121U2u2U2uUuuJuYJLJvL77i2r:::.................:::::::::::,:7UUvi:::::::::::::,:::,:,:,:::,:,:::::::::::::rEEv:,::::::::::::::,,.,F@u7vLLj777rii:,,:::::::::,,,:,,,:,,,:,,,,,,.:,,,,,,,,.,,,.:,,,,,,.,,,,,.,,,,:,,,,,:,,,:,:,:::,:,:,:,:,:,:::::iiirr7r777iiii::,,,:.,,:,:,:,:,:::,:,:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i7::::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//8EGZ8ZGEGZGZZEG0Z0Z0Z0Z0Z0ENE0ENEq0qEP0PNXNPPXqkPSXFS1F2522u2uUu2uuuuJuJJJLvL7Lj;i;::,......... ......::::::::::::,,iL5j7:::i::::::::::,:,:,:,:::::,:,::::::::::::vNZv:.:::,:,:::,:.. iMMvvvYLu7:,:,:::::::::::::::::,:::,:,:,:,,,,,:,,.,,,,,,:,,,,,,.,,,,:,,,,.:,,,,,,,,,,,:.:,,,:,:,:,:,:,:,:::,:::::,::::::::iir;rr7rr;;::::,:,,.,,:,:,:,:,:::::::::::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i7:::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//GGZGZ8Z8ZGZG0G0GEZEZ0Z0EEZNE0EN0q0NEq0qEP0PNPqXPkPSkSS5F1521uUuUjUuuuujjJuYYLLYurr;;::,,...... ......,,:::::::::::::,,:rj2Lr::::::::::::::,:::,:::::,:,:::::::::::::70Ej:,.......  .;0Mk7LvYLuv:::::::::::::::::::::::::::,:,:,:,:,:,:,:,:,:,,,:.,,,,,,,,,,:,,,,,,,,,:,,.,,,.,,:,,,,,,,,,,,:,:,:,:,:,:,,,:::,:,:,,,:,:::iiirr7r7r;ii::,:,,,,,:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::rr::::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//8E8ZGEGE8ZGZ80ZZZEZ0ZEZ0Z0Z0ENE0EqEqEq0q0qqqNXNXNkPSXkk1F2121u2juuUuuuuJuJuYYvj27rr;rii::,,.........:,:::::::::::::::::,,:vuUvi::::::::,:::::::::::::::,::::::::::::::7FZSui:,::iv5ZOFL7LvLvY7:::::::::::::::::::::::::::::::::::::,:,:,:,:,:,,,,,,,,,,.,,,,,.,,,,,.,,,,,,,,,,,,:,,,,,:,:,:,:,:,:,,,:,:,:,:,:,,,:,:,,,:,:,:,::::iirr77vrr;i::::,,,:,:,:,:::::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::rr:::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//Z8Z8E8EGEGZGEZEG0GEZEZEZ0Z0ENEN0NEN0qEP0qEq0qNP0XqkXXPSS5F11U2uuuujuJujujuJjLYL5L7r7;riii:::::,:,:,:::::::::::::::::::::::,:iLUur:::::::::::::::,:,:::::::,:,,,:,::::::::vvNBOM@B@OPjYvv7v7vvr::::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,:,:,,,:,:,:,,,:,,,:,,,,,,.,,,,,,:,,,,,,,:,,,:,:,,,,,,,:,:,:,:,:,:,:,:,:,,,,,:,:,,:::::iirr7r7;rii::,,,:,:,:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::ri::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//8EGZGZGZ8E8EGZGEGEZEZEGEZEZ0ZNZ000EN0q0N0qNP0qNPqPqXqSPkk5F11U2uujuJuJjYjJuJjYLu57777rriiii:i::::::::::::::::::::::::::::::::,:ruUYi:::::::::::::::::::::::,,.,,:,:,::i:i:.7@JJLJLuFkX0SX2uLvr;i:::::::::::::::::::::::::::::::::::::::::::::::,:::,:,:,:,:,:,:,:,,,:,,,,,,,,,,,,,,,,,,,,.,,,,,,:,,,,,,,:,,,:,:,:,:,:,:,:,:,:,:,:,:,,,,,,.,.,,::iirr777rri:::,:,:,:::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::7::::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//ZZZGZ8EGZ8E8EGEGEG0G0GEZEZ0Z0ZNEqEN0qEqEq0q0q0PNqNXqXqkPSXFS55U1uUuuJJYuYJLjYJYY2J7v77rriiii::::::::::::::::::::::::::::::::::,:,iLSu7::::::::::::::::::::,:,,,:,:::,:::::.EMLLJLYvv7Lvu25kqkPF1JLrri:::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,:,:,:,:,:,:,:,:,:,,,:,:,:,:,,,:,,,,,:,,,:,:,,,:,:,:,:,,,,,,,:,,,,,:,:,:,:,,,,.,,,,,,::iirr7r7rrii::,:,:,:,:,:,:::,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i7:::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//8EGZGZ8Z8EGZGZGEGEGEG0ZEZ0ZNZEE0EqENEqEN0qEq0N0qqXqPNXqXPkPSk1FU1uujuYjYjYYYJYJLuuL7v77;rii:i:i::::::::::::::::::::::::::::::::::,::v5SLi::::::::::::::::::,:,:::::::::::.;B1LJJjYuJuYYvL7v7vLuUkkPXP11uLrri:::::::::::::::::::::::::::::::::::::::::,:::,:,:::,:,:,:::,:::,:,:,:,:,:,:,:,:,:,,,:,,,,,,,,,:,:,:,:,,,:,:,,,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:.,.,,::iirr77vrrii::::::,:,:,,,:,:::::,:::,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i7::::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//GZEGEGZ8ZGEZZGEGEGEZEGEZEZEZNZ0ZNENENEqEN0NEN0q0NqqNPqXPkPkXFSF5U1uUuuJJLJLYLYLYY2vv7vr7rrii:i::::::::::::::::::::::::::::::::::::::,:r5k57i:::::::::::::::::::::::::::: .BZvjJUu2YYvLLL77r7rr;rirr77Lj2Ukkk5F2jLvr;ii:::::i:i::::::::::::::::::::::::::::::::::::::::,:::::,:::,:::,:::,:,:,:,:,:,:,:,:,:,,,:,,,:,:,,,,,,,:,:,,,,,,,,,:,,,:,:,:,:,:,:,:,:,:,,.,.,,:::irrv7v77irii::::::,:,:,:,:,:,:,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i7i::::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//OE8Z8EGZ8ZGEGZGZ8EZEZEZEZEGEG0Z0Z0ZNE0ENEqEqEq0PEq0X0qNXqkXXkFXFS11UUjuYYYYLLLLvLJLvv7v77rriiii:i:::::::::::::::::::::::::::::::::::::::iLPkui:::::,:,::::::::::::::::, .GOvYJUJ7i::::::::::::::::::i:i:iiii77LY2212S2uYJv7rriiiiiiii:iii:iii:i:i:i::::::::::::::::::::::::::::::::::,:::::::::,:,:,:,:,:,:,:,:,,,:,:,,,,,,,,,,,:,,,,.,,,,,,,,,,:,:,:,:,:,:,:,,,,.,.,.,.,,::iir7vvL77rriiii::::::,:,:,,,:,:::,:::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,i7r,::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//Z8Z8EGZGZ8ZGZGZGEZEGEGE8EZ0ZEE0E0GNZNEN0NEq0qEq0N0qNPNPqPNXPkXFkSS21U2uuYYLLvLLLvYLLvv7v77rri;ii:i:::::::::::::::::::::::::::::::::::::::::7Uq5Li:::::::::::::::::,:,. rB@vLJu7i::::::::::,:,:,:,,,:,:,::::::::i:ii;r77LLYLuJjLYLL77rri;iiiiiiiiii:iii:i:i:i:i::::::::::::::::::::::::,:::::,:,:,:::::,:,:::,:,:,:,,,:,:,,,:,:,,,,.,,,,,.,,,.,,,,,,,.,,:,,,:,:,,,:,:,:,:.,.,.,.,,::i;77LLYLL77r;ii::::::::::::::,:,:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::7v::::::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//8Z8Z8ZGE8EGZGEGZGE8EZEZEZEZEGEENE0ENE00NE00N0N0q0q0q0qNPqPqXPkPSXFk11U2uuYYLLLLvLvLvv7v777777rrii:i:i::::::::::::::::::::::::::::::::::::::::iLFqU7::::,:,:::::::,. .iqO550uLiiiiii:i::::::::::::::,:,:,:,:,:,:,::::::i:iiiirirr7r77Lvv7v77r7rri;iiiiiiiiiiii:i:i:::i:i::::::::::::::::::::,:::::::::,:::::::::,:,:,:,:,:,:,,,:,:,,,,,,.,,,.,,,,,,,,,,,,:.,,:,,,:,:,,,:,:,,,,,,,,,,.,.:,:irrvLYYjLv77;;ii:i:i:iii:i::::::::,:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::iLvi:::::::::::::::::::::</span></span><br><span class="line"><span class="comment">//ZZE8GGZ8Z8EGEGE8EGZGEGEZEGEZ0ZEZ0Z0Z0EqENENEqEq0q0q0PNqqPNPqXPXqkXFS1F22juLYLYvvvL7v7v77777v7777r;ii:i:i::::::::::::::::::::::::::::::::::::::::;uXPLi::,:,,.,.. .,Lq8FJLLUP7iiiiiii:i::::::::::::::,:,:,:::,:::::,::::::::::iiiiiiiiii;ir;rrrrr;rrririiiiiiiiiiii:iiiii:i:i:i::::::::::::::::::::::::::::::::::,:,:,:::,:,:,:,:,,,:,:,:,:,:,,,,,,,,,,,:,:,,.,.,,,,:,,,:,,,:,:,:,:,:,:,,.,.,,:::irrvvJYYLYv7rriiii:i:iiiiiii::::::::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::,iLYi:,:::::::::::::::::</span></span><br><span class="line"><span class="comment">//8EGE8ZGZ8Z8Z8ZGZGEGEG0GEZEG0ZEZEZEE0ENENENZqEqEq0q0q0PNqNPNXqXqXPkXFF5F22uuLYLLvLvv7v7777777L7v77rr;;ii:i:::::::::::::::::::::::::::::::::::::::::i75PXJr:,...:iLS805LJYYY7iUJiiiiiii::::::::::::,:::,:::,:,::::::::::::::::::::::i:i:i:iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:i:i:i::::::::::::::::::::::::::::::::::::::,:,:,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,,,:,:,,,,,,,,,,,:,:,,,:,:::::,:,:,,,,.,,:,:::i;r77LLYLJLv77r;iiiiiiiiiiiiiiii:i::::::::::::::::::::::::::::::::::::::::::::::::::::::iJYr:::::::::::::::::</span></span><br><span class="line"><span class="comment">//Z8ZGG8Z8Z8E8ZGZGZGZGZZEGEGEGEZ0GEZ0G0Z0ENE0ZN0q0q0q0q0q0q0PqPNXqkPkXSk15U2juLYLL7L7v7777777v7LvL77r7rriiii:::::::::::::::::::::::::::::::::::::::::::iv5PqGOOO880SJJLJLJYL;riuUr:iii:i:i::::::::::,:::,:::,:::,::::::::::::::::::::::::::::::i:iii:iiiii:iii:iiiii:i:iiiii:i:i:i:i:i::::::::::::::::::::::::::::::::::,:::::,:,:,:,:,:::,:,:,:,:,:,:::::,:,:,:,:,:,:,:,:,:,:,:,,,:,:::::::,:,:,:,:,:,,,:,:,::::iirr77vvLvv7vr7rririiiiiiiii;iiiiiiiiiiii:i:i::::::::::::::::::::::::::::::::::::,iLU7:,:::::::::::::</span></span><br><span class="line"><span class="comment">//GEGZ8GGGGZGGGZGZ8EGZ8EZ0GEGZZ0G0GEZ0ZNZNZ0ENZqEq0q0N0q0PNqNPqXNXqXPkPFk55UUjjLYvL7v7777r7r7r7rvvLvL77r7rrii:::::::::::::::::::::::::::::::::::::::::::::::F@MXLLYLjLJLYYLrrrrivU7:iii:i::::::::::::::::,:,:::,:::,::::::::::::::::::::::::::::::::::::i:i:i:i:i:i:i:i:i:::::i:i::::::::::::::::::::::::::::::::::::::,:::::,:,:::,:,:,:::,:,:,:,:,:::::,:,:::::::,:,:::,:,:,:,:,:,:,:,:,:,:,:::,:,:,:::,:,,,,,:,::::::iiiirrrr777r77777rrr;iiiiiii;iiiriririri;iii;iiii:i:i:::::::::::::::::::::::,:YUYi:,::::::::::</span></span><br><span class="line"><span class="comment">//GGGGZGGGG8Z8ZGEGZGZGZZEZEGEGEGEZ0Z0ZEE0ZNE0E0EN000q0q0qEP0PNXqPqXPkPSXSk15U2jjLLvL7v7v77r7r7rrrr7vLjLL77r7rrii::::::::::::::::::::::::::::::::::::::::::::.MZ8jLLYLYLYLj77r7rrirUL:iii:i::::::::::::::,:,:,:,:::,:::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::,:,:::,:::,:::,:,:::,:,:::,:::::::,:::,:,:,:::,:::::,:::::::::,:,:,:,:,:::::,:::,:,:,:,::::::i:iiiiiiii;ir;rr7r777r7rr;riiiii;iiiriririririr;ririri;iiiiii:i:i:i::::::::.:72uv:,,:::::::</span></span><br><span class="line"><span class="comment">//OE8Z8ZGZ8Z8Z8ZGEGEGZGZGEGEZEGEZEZEZ0E0Z0ZNE0ZNZNENEq0q0P0q0qNPqPqkqkPkXFS15UUjjLYvvvv77r7r777rrrrrr7vLuJjv7rrrrii:::::::::::::::::::::::::::::::::::::::::.F828LYLYLJLJ77r7rrrri;YJ::ii::::::::::::::,:,:,:,:,:,:::,:,:::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::::,:::::::,:,:::::,:,:,:::::,:::,:::,:::::::::::::,:::::,:::::::::::::::::::::::::,:,:::::,:,:,:,::::i:iiiiiiiiiiii;;rr7rrr7rr;ririiiii;i;iririr;r;rrririr;ririri;iiiiiiii:::rJP17:,::::,</span></span><br><span class="line"><span class="comment">//8GG8ZGZGE8Z8ZOEGZ8ZGEGEGEGEGEGEG0Z0G0ZEZ0Z0E0EN000q0NEN0PEP0P0PqPqkqXPkXFS11UUjuLLvv7v77r7r7r7rrr7rrrrr7vjjuLvrri;ii:i::::::::::::::::::::::::::::::::::::.007ZXvYLLLY7rr7r7rr;riivUi::i::::::::::::::::::,:,:,:,:,:,:,:,:,:::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::::,:::::,:,:::,:,:::,:,:,:::::,:::,:::::::::,:::::::,:,:::::,:::,:::::::::::::,:::::,:::::::::,:::::,:,:::,::::iiii;iiiiiiiiiii;;7r7r7r7rririiiri;iririririririr;r;r;rir;riririi:::vFqY:::i7</span></span><br><span class="line"><span class="comment">//OEOG8G8Z8G8Z8Z8Z8EGE8E8ZGEZEGZGZGEG0G0E0ZEZNE0Z0EN000qENEq0q0PNPqPNXqXPkXFF11UUJjLLvL7v77r7rrr7r7r7rrrrrrir7ju1uj7riiiiii::::::::::::::::::::::::::::::::,:B1ru8uvLvLvvr7rrrrrririirur::i::::::::::::::,:,:,:,:,:,:,:,:,:,:,:::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::::,:,:,:::,:,:,:::,:,:::,:::::::,:::::,:::::::,:::,:::::::,:::,:::::,:::::::,:::::::::::,::::::::::::::::::::::::i:ii;i;iri;i;iiiiirrrr7r;i;iriririririri;ir;ririr;ri;iriiii:::,.,r0N5kEq</span></span><br><span class="line"><span class="comment">//G8GOG8E8Z8Z8ZGZGZGEGEGEGEGEGEGEGZG0ZEZ0Z0Z0ZqE0EN0N0N0q0NEqEqNPNqqPNXPXXkXFS22uUJJLLvv7777777rrrr7r7rrrr;riiiirvukkSY7iiiiiiii:::::::i:::i:i:::i:::i:i:::.XO7v7XqvvL7L77r7r7rr;r;;iiiJLi::::::::::::::,:::,:,:,:,:,:,:,:,:,:,:::,:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,:,:,:::::,:,:::::,:::,:::,:::,:::,:::,:::,:::::,:::,:,::::::::::::::::::::::::::::::::::::::::::::::::::::::i:ii;iriri;i;iii;i;iii;iri;i;i;i;iri;iii;iiiiii:::::iiLjSkX212uLL</span></span><br><span class="line"><span class="comment">//OZ8Z8Z8Z8Z8G8Z8GGZ8ZGZGZGEGEGEGZG0ZEGEZ0GEG0E0E0EN0NEN0q0NNqEP0qNPNPNXPkqSk5F11uuYjLLvv7777r7r7r7r7r7rrrririiii:::rL5X0Suri:ii;iiii:i:i:i:i:iiiii:iii:i:,1MJLvvvZUv7vvvrrr7rr;riri;ii:7Jr::::::::::::::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::::::::,:,:::::,:,:,:,:,:,:,:::,:,:,:::,:::::,:::,:::::::::,:,:::::::,:::::::::,:::::::::::::,::::::::::::::::::::::::::::::::::::::::i:iiiiiiii;iiiiiii;iiiiiiiiiiiiii:i::,::i;vuSPqSFuJvvvLLLv</span></span><br><span class="line"><span class="comment">//G8ZOZ8G8ZGGGZ8EGZGEGZGEGEGEZZZEGEZEG0ZEGEZ0EEENE0E0ENZN0qENEq0q0qNPqPNXqkPSSFS21uuYJvL7v7vr7r777rrr7r7rrrriiiiii:i:::irYFENSvr:iiririiiiiiiiiiiiiiii::.:SOuJvLvvuEvv7v77;rrr;riri;iiii:iLv::::::::::::::::,:,:,:,,,:,:,:,:,:,:,:,:,:,:,:::::,:::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::::::::::::::::::,:,:,:,:::,:::,:,:,:,:::,:,:,:::,:,:,:::::::::,:,:,:::::::,:::,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:i:i:i:i::::::::,:,,,,,::r7LuF5X5UU1vvvLvLLLLYLL</span></span><br><span class="line"><span class="comment">//8ZOZ8G8ZOZ8G8Z8Z8GGZGE8ZGZGEGEGEZZGEGEG0ZEE0Z0Z0ENE0E00N0N0q0qNq0q0PqPNXPSXSk5F22uuLYvvvv77r7r7r7r7r7rrrr;;iiii:i:i:i:::::7UEG0Jriiir;;iiiiiiiiii:i:,:LENJujL7v7vXS777v7rrr;r;rrririiii::7Yi:::::::::,:::::::,:,:,:,:,:,:,:,,,:,:,:,:,:,:,:,:,:::::::::::::::::::::::::::::::::::::,:::::,:::::,:,:,:::::::::::,:::,:,:,:,:::,:,:,:,:::::,:,:,:::,:::::,:::::::::::::::::::,:,:,:::,:::,:::::,:::::,:::::,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,,.,.,,:,::iirrvYUu5SPSkUuJYvvv2LLLLvYLYLLLLL</span></span><br><span class="line"><span class="comment">//8GGOZ8GOGGZGZ8ZGE8Z8ZGEGZGEGZZE8ZGEZEGEG0ZEZ0Z0ENE0Z0ENEN0q0q0qNqNPNXNPPXPkXkS5F22jjLLvL7vr777rrr7r7rrrr;ri;ii:iii:::::::i:::;LqGE1vii:iiri;ii:::,.:JE05YuJuvv7v7JNu7777rrrrrr;riririiii::iJ7:,:::::::,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::::::::::::::::::::::::::::,:,:::::::::::::,:::::::::::::,:,:,:::::::,:,:::::::::,:,:,:::,:,:::,:,:,:,:::::,:,:,:::::,:::,:::,:,:,:::::,:,:,:::::::::,:::::::::,:::::::,:::::::::::::::::::::::::::::::::,:,,,,.......::::ir7vLY21kFXkqXPFSU1jJLYvYvLvLvuULvYLLLLLLvLvL</span></span><br><span class="line"><span class="comment">//OE8G8GOG8EGG8Z8ZGZ8ZGEGEGZGEGZGEGEG0GEZ0G0G0Z0Z0Z0ENE0E0ENENEqEqNP0P0PNPqXPkXFS51U2uuLLvv7777r77rr7rr;rrriri;iiii:::::::::i::::,i7FE8Xur::::::::;vPGZ2uJuJujY7v7775Sv7777rr;rrr;ririiii:i:::vvi,:::::::,:,:,:,:,:,:,,,,,,,:,:,,,:,:,:,:,:::,:,:::::::::,:::::::::::,:,:::::::,:::::,:,:::,:::::,:,:,:,:,:,:,:,:,:,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::::::::::::::,:,:,:::,:::,:,:::::,:::::,:::::::,:,:::::::::::::::::::,:::,:.,.... . . .,:irrvLuu5FXXXkXkXF5uujuLYLYvYLLLYLYLYLLLLvLFYvLLLvLvLLYLLL</span></span><br><span class="line"><span class="comment">//GGZOZ8Z8GOZ8G8Z8G8Z8ZGZ8ZGE8ZGEGZ8ZZEG0ZEZEZEZ0ZNE0E0ENEN0qEqEq0qNq0qNPqXPXqSXFS15U2JjLLvv7v7777rrrrrrrrrrrri;ii:i::::::::::::::::,:iL1ZOXu2UkEO8ZSUYuYuJjJUL77vr7vquvr7rr;rrrrririiiiii:i:::;Lr::::::::,:,:,:,:,:,:,:,:,,,,,:,:,:,:,:,,,:,:::,:,:,:::,:::::::::::::::,:,:,:::,:,:,:,:::,:::,:,:::,:::,:,:,:,:,:,:,:,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::::,:,:,:,:::::::::::::::,:,:,:::,:::,:,:::::::::,:,:,:,:,,,,.,.... . . ...:iirL5SkZMSPXk5F11uuJjYJvLLLvLvYLLLLLLLYLYLYLJLLLLvv217YvLLLvYLLvLLL</span></span><br><span class="line"><span class="comment">//OG8ZGG8Z8Z8G8ZGZ8G8Z8E8ZGE8ZGZGZGEGEZEG0G0ZEZEZEZNZNZ0ENEqENEN0q0q0q0PNPNXPkPSk5S21uUJjLL7v7vr7r7r7rrrrrr;rrri;ii:i:i:::i:::::i:i:i:i:.:@BqZZXFuJLjYjJuJjJjJj77777vYPLvr7;rrr;r;riri;iiiiii::::7Yi,,:::::,:,:,:,:,:,:,:,:,:,,,:,,,:,:,:,:::,:,:::,:,:,:,:::,:,:,:,:::,:::::,:,:::,:,:::::,:,:,:::,:,:::,:,:,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::,:,:,:,:::::,:,:::,:,:,:,:,:,:::,:,:,:::,:::,:::,:::::,:,,,,.,.. . . . ...,:i7vuUkNMM@@@B@B@B@B7vJLLLYLLLYLLLYLYLJLJvJLLLYLYLLLJLYLYLLLvYXLLvLLLvYvYLuJuL</span></span><br><span class="line"><span class="comment">//G88OZOGOGOGGZ8G8Z8Z8E8ZGZ8ZGEGZGEGEGEZEG0ZEZ0GEZ0Z0Z0Z0Z0Z00NEN0qEq0PNPNPqkqXPSkFF15UUjJLLvv7777r7r7rrr7rrr7rririiiiii:i:i:i:i:iii:iii.LBMvvLJYuJuJjYuJuYuYuY77v77772177rririr;ririiiiii:i:i:::::Lr:,:,:,:::,:,:,:,:,:,,,:,:,,,,,:,:,,,:,:::,:,:,:,:,:,:,:,:::::,:,:,:,:,:,:,:,:::,:,:::,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,,,,,:,:,:,:,:,:,:,:,:,:::,:,:,:::::,:,:,:,:,:,:::,:,:::,:::,:,:,:,:,:,:::,:,,,,.....      ..::irvJ5X8M@B@BBZ@B@B@B@BOkMMOBk7LLYLYLYLYLYLYLJLJYjYJYJYJLYLJLYLYLLLLLLvXuvvLLLLYYJJuvvri</span></span><br><span class="line"><span class="comment">//OZOGOZ8G8G8GOZ8G8ZGGGZGZ8ZGZGE8E8ZGEGEZEGEZEG0GEZ0Z0Z0ZNE0ZN0NEq0N0P0P0qqPqXqkPkkFF21uUJJLL7v77r7r7r7rrr7rrrrrrrri;i;iiiiiiii:iiii;ii.iBNGk7jJuJuJuYjYuLJYJYu77r7777vFJv7rrir;r;ri;iriiiiii:i:::::rvi,:,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::,:::::,:::,:::,:::::::,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,,,:,:,:,,,:,,,:,,,:,:,,,:,:,,,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,,,,,,....      ..,:i7L1XG8B@@B@B@B@BMZZqEMMMMMBZZ8M0qMM8@v7LJLYLJLuJjYuJuJuJuJjJjYJYuYuYJLJYYLJLL72FLvYLjYuJY7rii:::</span></span><br><span class="line"><span class="comment">//88Z8Z8Z8Z8G8Z8ZGG8G8Z8ZGZ8ZGEGZ8EGEGEGZG0ZEZEZEGEEEZ0ENZNZ0E0EqEN0NEqNq0qqXqXPXPkkFF21uuYJLL7v7777rrr7rrrrrrr7r7rr;r;r;riiii:i:ii;ii.rBOvPOLLuJuJuYjJuYjYjYJJvr777rvruUv77rrir;r;;iri;iiii:i::::::,i77:,,:::::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:::,:,:::,:,:,:::,:,:,:::,:,:::,:,:,:,:,:,:,:,:,:,:,:,:,:,,,:,:,:,:,:,:,:,:,:,:,:,:,:,,,:,:,,,,,:,:,:,:,:,:,:,,,:,:,:,,,:,:,:,:,:,:,:,:,,,,,,....     .,:i7Y5kZO@B@B@B@B@BBMMGPF0NNqFkMMMMBM8NPuqMEkBOBBvvujujUjuJjLYLL7777r7rrr7r7777v7LLLLYLYvJPuLJJjLvr;ii::ii:i</span></span><br><span class="line"><span class="comment">//OZ8Z8ZOGOZ8G8Z8G8ZGZGZGEGEGEGEGEGEGEGEGEZEGEGEZEZEE0Z0ZEE0ENE0ZqEq0qEq0PNPqPqPPkPkk5F22uuLYvv7v77r7r7r7r7rrrrr7r7rrr7rrrriiii:iiii:,uBGYuu@jLYjJjYjYjYjYJLJLj7777777v75Yvrrrrrriririiiiiiii:i::::::,:iLi,,:,:::::::,:,:,:,:,:,:,:,:,:,:,:,:,:::,:,:::,:,:,:,:::,:,:::::::::,:::,:,:,:::,:,:,:,:,:,:,,,,,:,:,:,:,:,:,,,:,:,:,:,:,,,,,,,:,:,,,:,:,,,:,:,:,:,,,:,:,:,:,:,,,,,,,:,,,,,,,,,,...      .:irJ1E8MB@B@@@BBMBMMMM8MZNS0PGSNG05ZMMOMMOqEPNNq0B0qBMBOrvvv7r;;ii:::::::::::::::::::i:iiiir;r;7PSvL7rii:::iiiiiii:</span></span><br><span class="line"><span class="comment">//88ZOG8G8G8Z8Z8GOZ8G8GGZ8E8ZGE8EGEZEGZGEGZZEGEG0Z0ZEZ0ZEE0E0Z0E0ENE00qEqNP0P0PqPqSPSk5F22uuLLvv777777rrr7r7777rrrir;rrrr7rri;iiii::rOBSJ2ujOG7JYuYJYJLJLJLYLYLvr777r777v177;rir;riri;i;iiiiii:i:::::::,:77:.:::::::::::,:,:,:,:,:,:,:,:::,:,:,:::,:::::,:,:,:,:,:::,:,:::,:,:,:,:,:,:::,:,:,:,:,:,:,,,:,:,,,:,,,:,:,,,:,:,,,,,,,:,:,,,,,,,,,:.,,:,,,,,,,,,,,,,,,:,,,:,:,,,,,:,,.,....     .,i7USEM@@@B@BBMM8OOMOMOO0G8X1SPEGO0SqM8Nq0MMOBO0PGNP8N11PMkME@u.,:::,:,:::::::::::::::::::::::::::::::JXii:::i:iiiiiii:i:i</span></span><br><span class="line"><span class="comment">//OEOZOZOZOGOGOZ8Z8G8ZOZ8Z8E8Z8Z8E80GEGZ8ZGEZEGEZEZ0Z0G0ZEENZNZ0ENEqEN0N0qNq0PNPqXqkXSS152UjuLLvv7v77r7rrr7r77LLYvL7riiiii;i;ii:::L0BEuu2U2jqMvLjYJYJLYLJLYLYLY7rr7777777uu77;r;r;riri;iiiiiiii::::::::::,i7r,:::::::,:,:,:::::::,:::,:::::::::,:,:,:,:::::::::::::::::::,:::,:::,:,:,:,:,:,:,:,:,:,,,:,:,,,:,:,:,,,:,,,,,:,,,,,,,,,,,,,,,,.,.,,,,:,,,,,,,,,:,,,,,,.,,:,,.,....     .,i7jSGM@B@@@MBOO8OGGZ8ZOOME8EqSXkk1Nq0PkSGkEF5kMMMMM1SN2FO1L7YXFFNM0Mv ::::::::i:::::::i:i:i:i:i:i:::i:i:i::iSi::i:iiiiiii:i:i:i:</span></span><br><span class="line"><span class="comment">//GOZOGOGOGOZOZOGOGOGOZ8Z8ZGE8Z8ZGZGEGEGE8Z8ZZ0ZEZ0G0ZEGEEEZ0Z0E0ZNZNEqEN0q0P0P0PqPqkPFS1F22juLYvL7777r7rrr7r7rvvJY225UY7rii:irYSOO0UuU2U2UUj@5vYuYJYJYJLYLYLLvvr777777v7vUL7riririri;i;iriiiiii:i::::::::,:rv:,,:::::::::::,:,:::,:::::,:,:::,:::,:,:,:::::::,:::,:,:::,:,:::,:,:,:,:,:,:,:,:,:,:,,,:,:,,,:.:,,,,,,.,,,,,,,,,,,,,.,.,.,.,,,,,.,,,,,,,.,.,,,,,,,,,.,.,...     .:iJUPMBB@B@BBOMG8G8E8G88OOM8MMMXXkNPGNqEGNq8GPqkZS1qMGGZF7LU1FNJLu2rLrikBqMr.:i:::i:i:::i:i:i:::i:::i:i:i:i:iii:::5r:iiii:iii:i:i:::i::</span></span><br><span class="line"><span class="comment">//OZOZOGOGOG8G8GOGOGOZOG8EGZGZ8ZGZ8Z8ZZEGEGEG0GEGEZEZEGEZ0Z0Z0ENENZ0E0EN0qNP0qqPNPqXPkPFS55UUjuLYvv7777r7r7rrrrr77JLLJ5XZqE0ZGOOEFuu2U1U5u2uu8O7LLjLJYJLJLYLYLL77r777777v7uuv7r;riri;iriii;iiiiii:i::::::::,,:7i:,:::::::::::::::::,:,:::::::::::::,:::::::::::::::::::::::::::::,:,:,:,:,:,:,,,:,:,,,,,,,:,,,,,,,,.,.,.,,,,,.,,,,,,,,,.,.,,,,,.,,,,,,,,,,,.,,,.,..     .,rLkEMB@B@OMMM8OGOZGZGZO8MOGZ0qMGOOZukNGOOPXNEqNSqEkJ5vrFBPZXu1PP5;i7i7FUjukJjO0Gr.::::::::::i:::i:::i:i:i:i:::i:i:ii::uj::i:i:i:i:::::i:::::</span></span><br><span class="line"><span class="comment">//G8GOGOG8GGGOZOZOZOG8G8Z8EGZ8E8ZGZGZGZZZ8EGEG0ZEZEZEZ0Z0Z0ZNZ0Z0ENZ0EqENEq0q0q0X0PqXPkPFS11uUjjLYvv7777r7rrr7rrrrrLjuLYJUu5152Uu2U1U221U221JXBJ7JYJYJLJLYLYLYv7r7r777r77v7ULvrririririiiiii:i:i:i::::::::::,:,r7:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::,:::::,:::::,:,:,,,:,,,:,:,,,,,,,,,,.,.,.,,,.,,,,,.,.,.,.,,,,,,,,,,,,,.,,,.,.,,,....     .:7jqO@@@BBMMMMOMG8NG0GZ88MOO88kFUX0X0M8M8EPZqSkuUXYPv7uY;FvL8MkMFr2ui:rJLjEM0ZEk7iLOqEi,:i:i:i:i:i:::i:i:i:::i:i:i:i:iii:i:71i:i:i:i:i:i:::i::::::</span></span><br><span class="line"><span class="comment">//OZOGOG8Z8GOG8GOGOGOG8Z8Z8ZGEGE8ZGZGZGZZZ8E8EGZZEGEGEZ0Z0Z0Z0E0ZNZ000E00N0q0q0PqPNXqkPSPFS15uUJjLLvv7777r7r7rrr77r;7L1UuLjjUu2U1U52121U1U1UUJ@F7LJLJLYLYLYLYLvrrr777777777L277rrir;ri;i;iiiiii:i::::::::::::::,:7r,:::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:::::::,:,:,:,:,,,,.,,,,,,,,,.,.,,,,,,,.,,,,,,,,,.,.,.,,,,,,,.,,,.,,,.,....     .:7u0M@B@BBMOG8GGNOO8ZOOZEOOM8ONZNPk5qGGPSG8MOP2SLuL7UuvuvruF:UqFPMXBuiJFiL1vuJXOS008ENGMGqXi,::i:::i:i:::i:i:::::::i:i:i:i:i:i:;5r:i:i:i:::::::::::i:::</span></span><br><span class="line"><span class="comment">//G8Z8G8GOGOGOGOG8ZOZ8G8Z8ZGZGZ8Z8Z8E8EGEZEGE80GZGEGEZEZEE0E0E0ENENENEqE00NEq0P0P0qNPqXXkXFS15uuJJLLvv7v77r7r7r7r777rrrL5P1uJuu2U121U1U1U122UJO@rLLjLYLYLYLLLYv7;rr7r7r77v77jj77;;iririri;iiiiii::::::::::::::::,:i7::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,:,:,,,,,,,,,,,,.,.,,,,,,,,,.,.,.,.,,,.,.,.,.,,,,,,,,,.,...    .:72ZM@@@BBOOG8Z8ZGEG00PMO8OBOGESUPPZqFk8XEXS5Su7PZ7i7kuuU5v7LJuXuUui1MkNrr5qUv7SujJO0GqPYq00Z8Ski,:i:::i:::i:i:i:i:i:i:i:i:i:i:i:i::2v:i:i:i:i:i::::::::::::</span></span><br><span class="line"><span class="comment">//OZ8Z8GO8OG8GO8OGOG8G8G8Z8Z8EGE8ZGE8ZGZGEGZZEGEGEZEGEG0GEZ0E0ZNENZNENE0E0Eq0q0qNqNXNXqXqkkFF22uUJYLL7v7777r7r7r7r77L77irLXZNUujUu2U1U1U2U2uUJF@J7YLJLYLLvYLLLvrri7r7r7r77vrvuv77iririririiiiii:i:i:i::::::::::::,::7i:,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,,,:,,,,,,,:,:.,,,,,,,,,.,.,,,,,,,,,,,.,.,,,,,,,.,...     ,ruEM@B@BBOOGOZ8ZGZGEGZGGOGGEBOO8MNPPkkZZSSZkF2vrju7SEr7u1r7JJ5U77S1Y7rLSMX8ujuLJLYuYuY80PSSFk5qSZ0X5i,::i:i:i:::::::::i:i:i:i:i:i:iii::jJ:iii:i:i:i:::::::::::::</span></span><br><span class="line"><span class="comment">//8OZ8GOG8GO8O8OGOZ8GOGOE8ZGG8EGZ8EGE8Z8ZGZ8ZZZGEGEZEG0Z0GEZ0E0ENENE0ZNE00qZN0qEq0PNPqXqkPkPFS12uuJYLL7v7777rrr7r7777LYY7i:v5O8XuuuuuujujuJuJjv@q7LYLYLYvLvYvY77i;r7r7r77v7vrJJ7rr;;;ri;i;i;iiii:i:i::::::::::::::::,rr:,:::::::::::::::::::::::::::::::::::::::::::::::::::,:::,:::,:,,,,,:,:,,,,,,,:,,,,,,,,,,.:,,,,.,,,,,.,.,.,.,,,,,.,..     :r5Z@B@BBMOG8ZGZGZ8EZE88OGMOONN0qEBZEEMqqqNSULSrrJjJ1r:uOUjUj7uu111YSuJu25vuBqZ5L72vr72XuLu0Z5P1J5PFPGGSF:::i:i:i:::i:i:i:i:i:i:i:i:i:iiii:v2:iii:i:i:::i:i:::i:i::::</span></span><br><span class="line"><span class="comment">//OZ8GOZOGOGOGOGOG8GOG8GOZ8ZGZOZ8E8EGE8E8EGZ8EGEZEGZGEGEZEZEZEZEE0ENZ0EN0N0NEqEq0q0PNPNXqXPSk5F21uuYYvL7v77r7rrr7r77v7LJ1uviiiUZBGEqZEZZ88OOMOGB@rLLJLJLYvLvLLvrrirr7r7r777777uv7rririririiiiiiii:i:i::::::::::::::::,iri::::::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,,,,,,,:,,,,,,,,.:,,,,,,,,,,,:,,,,,,,,.,,,,,,,.,.,..   .:v5O@@B@MM8OZ8ZGZ8ZGEZZ88OEEPEP1UqSF2k8@EZGELv7JYUvvFuvULuuZEU7Uvrv5ur::JPvv75LN0Zv:uju5uPji7Uv0GqLPPu1FLu0P2i:::::i:i:i:i:i:i:i:i:i:i:i:iiii:rFi::i:i:i:i:i:::::::::::::</span></span><br><span class="line"><span class="comment">//8OZOG8G8GOGOGO8O8O8OGOG8Z8Z8E8ZGZGZ8E8EGEGE8EGEZEGEZEGEZ0Z0E0G0Z0E0ENEqENENENEq0NNqNqqXPkXSkF522uuLYLL7v77r7rrr7r7777LL5PPYr:i71k0PqkXkkFS11YUBu7YLJLYLYvYvLv7irirr7r7r77v77vu77iri;iririiiiiiii:i::::::::::::::::::,:rr::::::::::::::::::::::::::::::::::::::::::::::::::,:::,:,:,,,:,,,,,,,,,:,,,,,,,:,:,,,,,,.,,:,:.,,,,:,,.,..    .ivkO@B@@MOOG8E8ZGEGZGZ88O8MGEkXS5Fk1PPNFSLY8ZFP01ru7UvJvUrL7LrLZ2rULUur72755Uri7jL1GqXrvv:iLuvruuLu0Ok5uS5Y:.:0X5:::i:::i:::i:i:::i:i:::i:i:i:ii:iF;::i:i:i:i:i:i:::i::::::::</span></span><br><span class="line"><span class="comment">//OGOZOG8G8G8GOGOGO8O8OG8ZOZ8Z8Z8Z8EGZ8E8ZGZ8EGZGEZZZEG0G0ZEE0Z0ZE00Z0ZNENENEqEq0q0qNPqPNXqXPSkFF22juLYLL7v77r7rrr7r7777LLu5GZXvi::::::::::::,:.G87LYLYLYvLvLvLrri;irrrr7777v77LLrririririri;iiiiii::::::::::::::::::::::i7::::::::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,,,:,:,:,,,,,,,,,,,,,,,,.:,:,,,,,,,:,:,,,,,,..   .:vSMB@@@MM88G8ZGZGE8E8GM8OGEkNqS5kPGNkFq0XUvLv7J0EXX0uv1LuL77YJjYvkGuu2771ukLii7iLj7:rPqqUrLrjS12L7uJLv8O2:,rXu7L5EPU:,::::i:i:::i:i:i:i:i:i:i:iii::iFr::iii:i:i:i:i:::i:i:i:::::</span></span><br><span class="line"><span class="comment">//8OZOGOGO8OGOGO8O8O8OGOG8ZGZGGGZ8Z8Z8Z8E8EGZ8EGZGZZEG0GEG0Z0ZEZ0ZEZ0E0EN000NEN0N0q0NNPNPqPPXPkX55u2uuYLvL7v77r7r7r7r77v7LvYj5NMO0FULJLJYuJU2kq0B@rLLJLYvLLYvLv7;ri;;rr7r7777v77v7rriri;i;iii;ii:i:i:::::::::::::::::::::::7i:::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,:,:,:,,,:,:,:,,,:,:,,,:,:,:,:,:,:,:,:,:,,.,.   .:7SO@B@BBOOG8Z8Z8EG08ZOOOOGPPPPXNPFuSPPujuYLrivvvJu;JGPS0E7ivruLr7U7LuX0v7L2LivvLrYEqNOGOGOFGuvv17iirYYiLir08::7Lr:vqJ0k5:::::i:i:i:i:i:i:i:i:i:i:iiiiiiF7:ii:i:i:i:i:i:::i:i:i::::::</span></span><br><span class="line"><span class="comment">//OZOGOGOGOGOGO8O8OGOGOGOG8Z8G8Z8GGZ8ZGE8ZGEGEGEGZGEGEZ0GEGEZEG0Z0Z0E0ENENE00qEN0N0N0PNP0PqXPXPSk5FUUJuLYvv777777r7r7r7777LLuuuUPGMM@B@B@@@B@MM8GBY7LLYLLLYLLvLrri;i;r7r7r7777v7v77i;iriri;iiiiiiii:i:::::::::::::::::::::::rr:::::::::::::::::::::::::::::::::::::::::::,:,:,:,:,,,:,,,:,:,:,,,:,,,:,,,:,:,,,:,:,:,:,,..    ,72OB@B@MM88GGZ8E8EGZ8GMOOGZ0P5q1PNPu1FXSJJuJF77uL72vYv7r2NqkZSiLuuLYuULv7kNYY:7J5550G0kFk5urF0N5Ju0EPuUuL7vjLU8NJU2r:r7;7PSU:,i:i:i:::i:i:i:i:i:i:i:i:i::i5v:iiii:i:i:i:i:i:i:i:i:i:::::</span></span><br><span class="line"><span class="comment">//GO8OGOZOZOZOGO8OGO888OGOGGG8Z8Z8Z8ZGZGEGZ8E8EGE8EGZGZG0Z0G0ZEZ0Z0Z0ZNZNENZq0q0N0N0P0qNPqXNXPXXkkF522juLYvL7777r7r777r77vvLLuu2U51SFXSXSXkkSXkXF@PrvLLLLYvLvLv7rriii;rrr77777777v7r;ririri;i;iiii:i:i:::::::::::::::::::::::i7i:::::::::::i:::::::::::i::::::::::::::,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,:,,..   .iuG@B@BBOOGOZGEGZGE88MOM880NFPS55X5PqPuUu1FkkXSPFXkXkPkXFS7v;5XPFZk7vL7YrjY;YNk7rL18qkk2vjir7i::UEXkjFFkkZ0OZ8G8GGNEPN0kP8qZMG15:::i:::i:i:i:i:i:i:i:i:i:iiii57:iiiiiiii:i:i:i:::::i:::::i::</span></span><br><span class="line"><span class="comment">//OGOGO88Z8ZOG88OGO8O8OGOZ8Z8G8Z8Z8G8Z8EGEGE8ZGE8ZGEGZZEG0ZEZ0ZEZ0ZEZNEN0N00EqEN0q0qEqNPNqNXqXqXXkS11U2JjLYvv7777r7r7r7r77vvYYuu12SFXkXkPXPXqXqXk8MrLLJLYvLvLLLrr;ri;i;;rr7r777r777rriririri;iiiiii:i:i:::::::::::::::::::::::irr:::::::::::i:i:::::::i:i::::::::::::::::,:,:,,,:,:,:,:,:,:,:,:,:,:,:::,:::,:,:,,..   :70B@B@BM8OGOZGZGE8ZOOM8OGZSk5kNSUSPNqNXuY5Sk5SFF2Sj5511Ju1Uk2kkP1NqXXG7:7UuLY7r10XY0E1jv7r7uLi:Yv2Z8Pk1225kE0NuPZGqqXPkEqN0ZEZ0ZqF1i,i:::i:i:i:i:i:i:i:i:iiii:i17:iiii:iii:i:i:i:i:::::::i:::::</span></span><br><span class="line"><span class="comment">//GOGOGOZOGOZOG88O8O8OGOG8Z8EGG8Z8Z8ZGEGZGEGZ8Z8ZGZZE8ZZZGEGEZ0GEE0ENZ0EN000qENEq0P0q0q0PNX0PNkqkXFS15uUjjLYvv7v7777r7r7777vvJYuU11SFkkqXPkPXqXqk0BurYLLLLvLvLv7rriririrrrr7r7r77777r;iririiiiiiiiiiii::::::::::::::::::::::::::;7:::i:::::i:::::::::::i:::i::::::::::,:,:,:,:,:,:,:,:,:,:,:,:::::::::::::::,,..  .r2O@@B@OM8OGOG8G8E88MOMMONXPZXXSPXPFS5005JYv1SXFF12uujJJ5j5uUSYJjjFL2SGXkP0YJrLFF7ivNPu;vJ77u7L7JXNG8G80PN5FZ0k55i:rSukE0FNSPPN0NNNqEUSi::i:i:i:i:i:i:::i:i:i:i:iiu7:iiiiii:iii:i:i:i:i:i:i:::i::::</span></span><br><span class="line"><span class="comment">//OGOGOGO8OG8GO8O8OGO8OGOZ8Z8Z8GGZ8Z8E8Z8EGZGEGEGEGZ8ZGZGEG0GEZ0Z0E0Z0Z0EN0NEN0N0q0qNPNq0qqXPPqkPkXFk15UUuuLLvL7v7777r7r77v7LLYJUU15SFXkPkPXqkqXPSBq7vYLYvLvLvL77iriii;irrrrrr7r777rririri;i;iiiiii:i:i:i:i::::::::::::::::::::::i7i::i:::i:i:i:i:i:i:i:i:i::::::::,:,:,:::,:,:,:,:,:::,:,:::::::::::::::,,.. .:Lq@B@BMOOGOGOG8Z88OOMM8qqNXU1XPS01kNk20qXuviYXX2k52u2uU1jjFuL77Luv72YvFUJuEqNZS;ir7:r7SEu:iv2rrvuqNPEqEP515XMqSFJr7riu1777LNGS1kE0X0XXFq5Fi,iii:i:i:i:i:i:i:i:i:iiiiur:iiiiiiii:i:i:i:i:::i:i:i:i:::::</span></span><br><span class="line"><span class="comment">//88G8GOG8GOG8GOOOGO8O8OG8Z8G8Z8Z8G8ZGE8Z8ZGE8EGZGZGE8ZGZGEGEZEZ0G0ZEE0Z0E00NEqEN0N0q0PNPNXNPPXPkPkPFk15uUJjLYvL7777r7r7r77v7LLJYuU55kFXSqXPXPkqkXZ@7vvYLLvLvLvvrririiir;rirrrr7r777rririri;i;iiiiiiii:i:i:i:::::::::::i:::i:::::::7;::::i:i:i:i:i:i:i:i:i::::::::::::::,:,:,:,:,:,:,:::::::::::::::::,,.. ,;18@B@MM8OGOZ8Z8EOGO88NPEX111NXPN0k55XSXkk2vLLiSNqXqSUY121uLYS2JJq5u15uuvvLu77kEX0EU:77r5ZukSuJ7r7rkPESNqq2u7vPPr:7J;L11u5JLrJvjqGP05kJ2JUu02ki::i:i:i:i:i:i:i:i:i:iiiiJ;:iiii:iii:iii:i:i:::i:i:i:i::::::</span></span><br><span class="line"><span class="comment">//OZOGO8OG8G8GO8O8O8O8O88GOG8GOE8ZGG8ZGE8ZGE8Z8Z8ZGEGZZZ8EG0ZEZ0ZEZ0Z0ZEE0ENEN0qEN0q0qNPqXqPqXqXqkPkXSk552UjuLLvv77777rr7r7777LLJj22F5SFXXPXqXPXPkPB2rLvYLYvLLL77rriririr;r;rr7r7r7rrr;iriririiiiiiii:i:i:i:::i:::::::i:::i:i:i:::::77::::i:i:i:i:i:i:i:i::::::::::::,:,:,:,:,:,::::::::::::::::::::,...:7PM@B@MMGOG8Z8ZGE88M8MO01NkNGZZGES5EqX15k1LuLYrrrFqNuL7i:77Jviiv;r;ri7JL7uSS2FU1vjPqSNE0F2SFvvkF7rL2Fqq0JLkSu2YSE57LYLv7L7:r7iYYjSvL5EPkk5LOS0G15r,i:i:i:i:i:i:i:i:i:iiiiYiiiiiiiiiiii:i:i:iii:i:i:::::::::::</span></span><br><span class="line"><span class="comment">//GO8O8O8OGOGOGO8OGO8O8OGOGOG8Z8EGZ8Z8Z8E8Z8Z8EGEGZGZGEGZ8EZEZEGEG0Z0G0ZEE0E00NEqENNqNqNXPXPXqXPXqkPSXSk15UUujLYvv7v77r7r77777vLLjJUUFFkSXXPXqXPkPF@OrvYLLLYvLvvrr;ri;iiir;rrrr7r7r7rriri;i;i;iiiiiiii:iii:i:i:i:i:i:i:i:i:i:i:i:i:::r7i:::i:iiiii:i:i:i::::::::::::::,:,:::::::::::::::::::::::,,...iJGB@@BOM8OGOZZ0ZGMOBMOOOGMOMMMOMOOOMOMOO0ZENYu5vj57uP2r:iLLjvii7vYJYi7L;i7;7vYr77uUFu10NSqPJ2kJriq2rv7JNqNJuXkJJYPXu7YvLYUX1j25XjYuv7JrL5GEqu1FuXqUFr::i:i:i:i:i:i:i:iiiiiiL;iiiiiiiii:iii:i:i:i:::i:::i:i:i:i::</span></span><br><span class="line"><span class="comment">//MGO8O8O8OGO8OGO8O8O8O8O8OG8Z8Z8Z8G8Z8E8ZGZ8Z8EGZGZGZGEGEGEGEG0GEZ0Z0ZEGNENEN0q0q0q0PNPqXqkPXXkqXPSPkXSk51UUjjLLvv777777r7r77v7LLuj2255kFXXPkqPPkX0@vvvYLLLYvLv7rr;riririr;rrrr7r7r7rri;iriiiiiiiiiiiiii:i:i:::i:i:i:i:i:i:i:i:i:i:i:i7r:::iiiii:i:i:i::::::::::,::::::::::::::::::::::::::::,...iu8B@BBOO88G8ZGEOOMB@BMMMOMOMZ8OG8Oq0O8NGPEPSFXFqNqSEk2NZuvvUL7vv7uvJL7LuJJvJYuv7i;Lu7rrv;FZqkE1uUPFYSkvvUSSU7jXPJUL2PvLFLrJ1L7vL7Lr;rjuuFu7ruG0SkLjqP1U7,i:i:i:i:i:i:iii:iiii7;ii;i;:iiiii:iii:i:iii:i:i:i:::::i:::</span></span><br><span class="line"><span class="comment">//OOGO8OGO8OGOGO8OOO8OGOGOGOZ8Z8EGZ8Z8Z8ZGZ8ZGZ8E8ZGZ8GZZGZZEG0Z0ZEZ0GEZ0ENE00qENEq0PNqqPPkPkPkPkXkPkXSkSk112UJJYYvv7777777777rv7LYuj12F5kkXXPXqXPkXBFrLLYvLvLvL7rrri;iii;ir;rrrr7r7r7;riri;i;i;iiiiiiiiiiii:i:i:i:i:i:i:i:i:iii:i:i:i:i77:iiiii:i:i:i::::::::::,:,:::,::::::::::::::::::::,...r2MB@@BOO8OZGEZZOMBB@MBOMO8ZXFE05qOP1UFU2uUrvYLr7jYYkSkFkPSk0NG0F5kSJi7i7vu7rvY7i77vUYL7iivJ7:SXkPE2LYuLS2vuSSY:LXkSJvXqjYU7Y12rrruJJjvujjL7j7rUrLOqPUqUku27::iii:iiiii:i:i:iiii7;ii;iiiiiiii:iiiii:iii:i:i:i:i:::i::::</span></span><br><span class="line"><span class="comment">//MGO8OGO8OGO8OGOGO8OGO8OG8ZOZ8GGZGZ8Z8ZGEGZGE8Z8ZGZ8ZGE8E8EGEGEGEGEGEGEGE00EN00EN0q0qNXqXqkPSXSPSXkXSXkkFk11U2juLJvv7v7777r7r77vvLLju12SSXkqkqkqXPFMO7vYLLvLvY77rrrriri;iriririrrrr7rriri;i;i;iiiiiiiiiiiiiiiiii:iii:i:i:iiiiiiiii:iii::rvi::i:i:i:i::::::::,:::::::::::::::::::::::::::...r1MB@BBOOGOGGZOOBMBMBMMOOqPkXUk0SqkSEOOEOZSY7J22Y7JuFkXFS52S152UF5SSPXSU55Jvjiii7vjuLr7ri777uJL7rvZqPSN7;r71XUSFFvYFquYL5Si72urvFrru2LJvUvr11Lj77ukujSO5P1u02Jv:::iiiiiiiii:i:ii;i7;ii;i;iiiiiiiiii:iii:i:i:i:i:i:i:i:i:i:</span></span><br><span class="line"><span class="comment">//OOGO8O8O8OGO8O8OOO8OOO88G8Z8GOZ8EGE8ZGE8EGZ8ZGZGE8E8ZGE8E8EG0Z0ZEZEG0GEE0ENZ0EqENEq0qNPqXPkPSXSXSkSXFXFXFS51U2JuLYvv7v777777777vvYLuu22FSXSPkPXPXXX@LvvYvLvLLL77rr;riririii;irrrrr;rrri;iri;iri;iii;iiiiiiiiiiiiiiii:i:iiiii:iiiiiiiii:iiLr::iiiii::::::::::::::::::::::::::::::::::..,r5MB@BMOO8O8OM@@@BBBBMMG8NZNEqkSPP2u0U2XM8ZPPqZqNqqqGk0Fk1j5F2Jv5UYvUu12FFPXuUS7ivjLuLiir7Lvrvvr7LY7Lk0FSPqi:;SSF2u7rLXUjLJqjLULULv77uFLLj5u2L5vLuYUSi7urYOEUvE1Jv::iii:i:iii:i:ii;irriiii;iiii:iiiiiiiiiii:i:i:i:i:::i:i:i::</span></span><br><span class="line"><span class="comment">//MGO8O8O8O8O8OGO8OOO8O88GOG8Z8Z8Z8GGZ8EGZGZGEGZ8ZGEGZGE8ZGEGEZEZ0GEZEG0E0Z0Z0E0E0ENEqNNNXqXXkXFXFkSkSkFkFkFF15U2jJLYvv7v77r777rv7vvLJuu11SFXXPXqkqkXMNrLLLvLvLvvrrrriririiiririrrr;r;r;ri;iririririri;iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:iiY7::iii::::::::::::::::::::::::::::::::...r2MB@@BOM8OOM@@BBqXO@BM8MO8Pkj50kPGZ8qZ8OESJPqPXqXPqXSq2kXuSkvjFkLLvYvju555U11F5S5F7ir7ir7uvL77777ri77ruuF0kXEk7v1k1FLvv5k27YUqrr:iLuujLuvrYFY7uLJFYFULU51LrLNGkqq2LJ:::iiiiiiiiiiii;irr;i;iriiiiii:iiiiiiiii:iii:i:i:i:i:i:::i:</span></span><br><span class="line"><span class="comment">//OO8OOO8OGOGO8O8O8O8O8O8OG8GOGGG8Z8ZGZ8ZGG8ZGZ8EGZ8Z8EGE8EGEGEGEGEZEZ0Z0E0ZEE0ENEN0qEPEPqXqXPkXFkSkFkFSFk5S5S11u2juYLvv7v77r777rv7LvJYUu51kFPXqkqXPSGM7vYvLvYLL77rr;ri;iri;iii;ir;rrr;rrririririii;i;iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:LLi:i:i::::::::::::::::::::::::::::...iuOB@@BOM8OOBB@B85j77;rvSM@BMOMOOZFuXN1Uk5NUL77JNq0NEPqU5XXSkjFX2uUYYjF1SSFLFuu5uuFFXSSJuuJ2q555SSXU152YvLSv7XP5XNLLkS21Lrjk55u7SUrirYFjYUJrLU177rjv7uv:vJ27vku7vkGEk2JY::iiiiiiiiiiii;irrriii;iiiiiiiiiiiiii:iiiii:i:i:i:i:i:i:i::</span></span><br><span class="line"><span class="comment">//O8M8OOO8O8O8O8O8OOO8O8OGOGOZOZ8Z8G8G8Z8GGZ8E8Z8ZGZGZ8EGZGZGEGEGEZEG0G0GEG0Z0E0Z0ENEq0q0PNPPkPkXSkFS5S5S5S5F5F11uUjJLLvvvv77r7r77v7LvjJUUF1SFkkPXPXXX@27LLLLLLvv77rr;ri;i;iiiii;irir;ririririiiii;iiiii;iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:7Yi:i:::::::::::::::::::::::i::,..:LZB@@BOMGOM@B@MqJvr77vvLv7irvNM@MOOBMBXSFkP1i;rSE00ZkFkPqNSPUSSF2uL7vFXP5Xu1FjvJSYiuuU5XqPkXSX5kkkSk2XXPPNXkSu:7qS5PX2Jk1u:ijXJukL25rYLLvir5JvuLvJ7YUvLv72Su77vvvuSLLOOkLj::iiiiiiiiiiiri;rriiiriiiiiiiiiiiiiiii:iiiiiiiii:i:i:i:i:i:</span></span><br><span class="line"><span class="comment">//OOOO8OOOGOOO8O8O8O8OOO8OGOZOG8Z8Z8G8GGZ8Z8Z8E8EGE8E8Z8E8Z8EGEGEGEG0GEZ0ZEE0E0E0ENEqEqEPEPNPqXPkXFk5S1S5F5F1F1F25UujJLYvv7777r7777v7LLJJ2255kSXkqkPkkOGrLLLvLvL7vrrrriri;i;i;iri;i;irir;r;;iri;iri;iriii;iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:rJr::::::::::::::::::::::::,,.:7N@@BBMMOMB@@@Z1v7r7vLvYvLLLvL7rirYZB@OO88ZSL2L2kkqGPZ1YUFuXN0FX1k5ULj5PSF5kU1SLUFvJF2vY7L2S1SuJL7r7r:rYvr;LjuFXkk2qkXkESLS12Y7k5LujvF2vUJL2YJvur7Y77Jv2uU1L17:;LkFPLiL1u2XYji:iii:iiiiiiri;;ririri;iiiiiiiiiiiiiiii:iii:i:i:i:i:::i:i::</span></span><br><span class="line"><span class="comment">//MOMOM8OOO8OGO8O8M8MOO8OGOG8ZOG8GOG8Z8G8Z8ZGZ8Z8Z8Z8EGEGZGEGEGEGZG0Z0ZEZ0Z0ZEZNZ0E0EN0N0N0PNPPkPSkFkFS5F151F151522uUjjLYvL7v7777777v7LLuu2255kSXSPXPk0BY7YLLvLvv77rrrririririii;iriririr;ri;iriri;i;iii;i;iiiiiiiii;i;iiiii;iiiiiiiiiiiiiiiiii:iY7,:::::::::::::::::::::.,iFM@B@MMOBB@BMSu777LLYvYvYvLvLvLvL7vrri71MBBEE08GX7rjNEqZSJuvvLX00k52kFUkP5k51F5uSUSuJYY1L75LvLLJFuuUvi77Lvrrvrir5jrv11EqPq0uu5FLL1SYujLjkiLuu7j7jLvYurJ227riLr7UYJPvij7Luj2uSLui:iiiiiiiii;i;i7i;i;iiiiiiiiiiiiiiii:iiiii:i:iii:i:i:i:i:i:</span></span><br><span class="line"><span class="comment">//MOOOOO8MOO8MOO8OOO8O8O8O8O88Z8Z8Z8Z8Z8Z8ZGZ8G8ZOZGZ8Z8EGE8EGZGZGEZEZEZEG0G0E0ENZ0E0EN0N0q0qqXqXPkXFkFF151F251525U2uUujLLLL7v77777v7LvYYuu22FSXSPXqXPSBP7vLvLLLvv77rrrr;;i;iriii;iririririri;i;iriririririii;i;i;iiiiiiiiiiiiiiiiiiiiiiiiiiiiii::L7,:::::::::::::::::..:JZ@B@MMM@B@MZuvr77LLLLLvYLLvLvvvLvvvL7v77i::r5BB8qGZFY50EPO5i,:7NPS0E0ESkPP12SS51u52YLuJuLLuYLJvYUiYX77US15vii7vvrrUuivY210XNq02FUr;5S2UUvLX1Ju;Yu7LUu12YLULLv55uJ177L2S7r5qSUvjJYr:iiiiiiiiiiri7iriri;iiiiiiiiiiiiiiiiii:iiiii:i:iii:i:i:i::</span></span><br><span class="line"><span class="comment">//MOOOMOMOOOMOMOOOMOM8O8O8O8OG8Z8Z8G8G8G8Z8Z8G8EGZGZ8ZGE8Z8E8Z8ZGEZZGEZ0G0GEZNE0ZNEN0qEq0qEqNPNPqkPSXSk5F1121U121U1u2UUuuYLLL7v7777777vvYYuu51SFXSXkPkkEB7vLLvYvLv7rrrr;riri;iiiri;i;irir;ri;i;iri;iri;i;i;iiiriiiiiii;iiiiiiiiiiiiiiiii;iiiiii::::7L,:::::::::::::,..rS@B@BMB@B@OqJ7rv7LLYLYLYvLvLvvvL7v7v7v7v77;i::,,:J8@O0ZOGGF5LrLEZZPFLL2kLXXkFF15F1jU11vLFF7vYFLvLYvYivSULvrYu15S22S2v2U111Y72ZkNX0ku7iuX121uLXjYi7JviUvLuvivLLj7rL71Lj5u7;r5LLiuYkuu7:i;i;i;iiir;rrrir;riii;iiiiiiiiiiiiii:iiiiiiiii:i:iii:i:i:</span></span><br><span class="line"><span class="comment">//MMOMOM8O8OOOOOOOOMOMOO8O8OGOGOG8Z8G8G8G8Z8Z8GGZ8E8Z8Z8EGEGE8Z8E80GEGEZZZ0ZEZ0E0E0E0ENEN0qNNNPNPqXPkkSS5F25U1u1U1U2u2uUJjLYvL7v77777v7vvJYuU51SFkkXkPkXBFrLLLLLvL77rrrrrriri;i;iii;iririr;riririri;iri;iri;iiiii;iii;iiiiiii;i;i;iii;iiiiiiii:::::,7u:,:::::::::,.:LGB@B@B@B@ZFv7rvvYLYLJLYLLvLvLvL7v7v7v7v77rriiiiii::,,;PMBEPq0XLL8G11jr;rLr7PXF5SU1FLU1FjuLuYJ2uvJjUJ7;rrS1rrvrLrvvuL7vYJ57Lrr77FqSNNGuLvuFFuuLLSj77JuiLuurLuu7u7Lu2SJLujrjjL5u12kUYF5JL:ii;i;iiir;r;r;riri;iii;iiiiiiiiiiiiiiiiii:i:iii:iii:iii::</span></span><br><span class="line"><span class="comment">//MOMOMOMOM8OOM8M8M8O8O8O8O8OGOG8Z8Z8Z8G8ZGZ8G8ZGZ8E8Z8EZEGEGE8EGEGEG0GEZEZEZ0ZEZ0ENENEq00EqNqNP0PqXPkkSk551FU2U2U2u2uUuUJjLYvLvv77777v7LvYJUUF5kSXSXXPSO877LLLvLvv77rrrr;ri;i;iri;i;i;iri;;ririr;ri;iriri;iri;i;i;iiiii;iiiriiiri;iiiii;i;ii:::::::,iU:,::::::.,iSM@B@@@B@E2777vvYLYLYvYvLvLvv7v7v7v777777rriiiiiiiiiiii::.:JMM8X0GMOSLLi7SS77X0SS5PJ5X5vjLuXjLFJuu2u7Lvi7YvFu;vYY::rj7iiL7LFu77LurLqPFkNSvLL511117S5777uJjv;vjUv1Uu5L;J2ku7jEkXJJjSrirXFuLiiriiirir;rir;riri;i;iii;iiiiiiiiiiiiiiiiiiiiii:i:i:i:i:::</span></span><br><span class="line"><span class="comment">//OMOMOMOMOMOOOO8OOMOOOO8OGO8O88GOZ8G8Z8Z8GOG8G8E8Z8ZGZGZ8EGZGZGE8EZEGEZEZ0Z0Z0Z0Z0Z0ENENEq0q0N0q0PqkqkPFS5F1122u1u2u2uUuuYjLYvLvv777v7vvLLJj2U55kFXkPkXP@J7LYLLLL7vr7r7rririri;i;iriiiririririr;riririri;iri;i;iii;i;i;iii;i;i;i;iriri;iiii:i:::::::,i5r,::,.,vN@B@B@BBPu777LLJLYLYvYLLLLvLvv7L7v7v7v77rr;riii;i;iiiiiiiiii:,,7qBGXFN0F7Yuvr7uOXX5Xk1SUFqJYJSYjSuYL7JYrr7LLJPrrLvLYJv7Y7vrL7u1v7jJvv2PXSqqY7;iFF2JYY0LLFUu2u5UY7vuJrLuFvvLrv1ri7kYYuJS2jSjJiiiriri;;r;rir;riri;i;i;iiiii;iiiiiiiiiiiiiiii:iiiii:i:i:i</span></span><br><span class="line"><span class="comment">//MOMOMOMOMOOOMOOOMOMOO8O8OGOGOG8Z8GOZOZ8G8G8Z8Z8Z8Z8Z8Z8ZGZGZGZ8EGEGEGEZEGEZEZ0Z0E0ZNENEN0N0q0q0PNPqXqSPSkFS15u2u2u2jujujuJJLYvL7v7v777vvLLuu2UFFSSPkPkkMZ7LvLLYvv77r7r7rr;r;;i;i;iiiri;iri;;r;riririririririri;iri;iri;i;i;iiiririririiii:i:::::::::::57,.:JMB@B@BMkj77vYYjLjLJLYvLvLvv7vvvvv7v7v7vr7rriii;iriiiiiiiiiiiiii::.,iFOOkk0G07vqYuZqSP5XPuLXuUUkuJjvvurirurvLLv5FUvvvLuuv7vvL1uU2Su2ur:ivFkS5E07rLLX12uvuEk7ri:;urirYurv2LrJ7u5YLUvuYLLLr7vUFuJri;irir;rr7rrrr;ri;iri;iiiiiiiiiiiiiiiiiiiiiiii:i:iii:i:::</span></span><br><span class="line"><span class="comment">//MMOMOMOMOOOMOMOMOMOMOOOO8OGOGOGO888888Z8G8G8Z8G8ZOG8GGZGZGZGE8EGEGEGEGEGEZ0Z0Z0Z0E0E0ENEqEqEN0qNPqPqXqkXSkFS11U1uUuUjujuJuYjLLvLvv7v777vvLLju12FFXkXXqk0Bv7LLYLLvv77r7r7rrrri;i;iririiiri;iririr;riririri;iriririri;iri;iririri;iri;i;iiii:::::::::::,.v7UB@B@BMSJ7vvYLuYjYjYJLYLLvL7vvv7v7v777v77rr;iiiiiiii;iiiiiiiiiiiiiiii::.iu8GP5XXq7:rNqXkF1FFPu5uYjuLu7Jvi727rLLYSF5vvJuv7v21525jYvvvjUUU525UqSkSE577v2X15uYuXLYvYj52U2SY22YrjS2LLL1JuUu1qP80OENuUriirir;r;7rr;rrri;iriririri;iiiiiiiiiiiiiiii:iii:iii:i:i:i</span></span><br><span class="line"><span class="comment">//MOMMMOMOMOMOMOOOMOMOM8O8OGOG8G8GOGOZOZOGOZGG8Z8Z8GGZGGGZ8Z8E8ZGEGZ8ZGZG0G0ZEGEZEZ0ZNZNEN0N0qEqNqNqqPqXqkXSkFS11UUuUuujuJuJJYJLLLLvv777v7L7YYuu22SFkFXXPS@X7vLLLvL7777r7rrrririri;i;iririri;i;i;;riririririririririririri;iririri;i;iiii:i:::::::::::,,rF@B@BMFJ7vLjJuYuJJYJYJLYLYvLvv7v7v7v7v77r7;;iiiiiri;iiiiiiiiiiiiiiiiiiii:::,:YN8SFk0X5k0kPP5uS1X11152ULrv1rvuPuLLFFkuj7vLJJ52ULLL7iiivvvrYu52JuEPPXZL7vUSS552vYG57vu7vrv7LuFLLuLrrLj5NEZZNqG2kkE0127:;irir;rrr;rr7;ri;;;i;iiiii;iii;i;iiiiiiiiiiiiiiii:i:i:i:</span></span><br><span class="line"><span class="comment">//OMOMMMOMOMOMOOOMOMOMOMOOOOGOG8GO888OGOGOZ8Z8G8Z8Z8ZOG8ZGZ8Z8Z8E8Z8ZGZGEZ0G0ZEG0ZEZ0E0ZNZqENE00NNqNqNPNXqXXkkFS15U2uUuuJjJjYjLYLLvLvv7v7v7LLYYuu11SFkSPXXZBvvvLLYvL77r7r7rrrr;ri;iri;iri;i;iririririririririririririri;i;iriririririiii:i:i::::::::.:78B@BOSJvJJuJuJujuYJJjYJLYvYLLvL7v77777v77rriri;i;iriii;iiiiiiiiiiiiiiiiiiiiii::.:vPZkUkPGNNUXkP5uF5SUu5uS2juUJUvvLSkXY7777FSFuLJLr;iJujLLLUvuvuuv50XPkEur:YXkSSv7k5iJ51juivJuriuJvkqGZqkF58JuN57uSP157ii;ir;rrvrrrr;r;riri;i;i;iiiiiiiiiiiiiiiiii:iiiii:iii:i:i</span></span><br><span class="line"><span class="comment">//MOMOMOMOMOMOOOMOMOM8OOO8O8OGO8O8OG8GOGOZOGOZ8Z8Z8G8ZOZ8ZGZGZGEGZGE8ZGEGEG0ZEG0Z0Z0E0Z0EqEqEq0q0P0qNqNXNXqkPkXFS1FU1uUJuJjLJLJLYLLvLvv7v777LvYJuU11FSXkXSPBSrLLYLLvv77r7rrrr;ririri;iririri;ir;rir;r;r;r;;i;;rir;r;r;;;rir;;irir;riiii:::::::::::,:uB@BMFJvLYUU2UUjujjYjJjLJLYvLvLvLvv7v7v77rr;riririri;i;i;iiiiiiiiiiiiiiiiiiiiii:i:::,,7PG52UX00UF1UXFj5kSY5ULJXu2u1kXX2rrvrYF5UJJv7irrLJjLY1juYJLvXu7X0PqXPY7iJk0k1rUXL7ir7YuJJr7UZNZEE2kSXUY0FLXE1j5XXFY:iirrri77rrrrr;ririri;i;i;iriii;i;i;iiiiiiiiiiiiiiii:iiii</span></span><br><span class="line"><span class="comment">//OMMMMMOMOMOMOMOMOMOOOMOO8M8OGO8OGO8888ZOG8ZOG8Z8ZOZOZ8Z8Z8ZGZ8E8E8ZGEGEGEG0G0ZEZEZEZEENENEq0qEq0q0qNPNP0XPXXkXFS55U2uUjuJjLJLJLJLLvv7v7v7vvLLJJUU55kFkSXFOMv7YLYLL7v77r7rrrr;rrr;riririr;riririririr;r;riririririr;riririririri;ii:i:i:i::::::,i1@BBFYvLLujUjUu2U2juJjYJLJYYLYLLvLvv7v7v77rri;i;i;i;i;iii;iiiiiiiiiiiiiiiiiiiiiiiiii:i::,:7XqFJ2kEEF5q22S51X5UvFk2FkkNX1i;;YLF12LLLvr7rvYjuJLJLL7SLuJkjvPNP00Svr777qqF7kJ77vuv;rLkkZXXXSNPJFkujkSuJYLPNGPkuiirrrir77;rrririr;ri;i;iririri;iiiiiiiiiiiiiiiiiiiiiiii:i</span></span><br><span class="line"><span class="comment">//MMMMMOMMMOMOMOMOOOMOMOM8O8O8O8OGOGOGO8OZ8G8G8G8Z8Z8Z8ZGZGZ8E8E8ZGEGEZEGEGEGEZEZEE0G0ZEE0E0EqENEq0PNq0PNPqXqXXkXSk5F25U2uujjLJLYLLvLvv7v7v7v7LLJJUU15SFkSkS@U7LLvYvL77r7r7rrrrrririr;ririri;iririr;ririr;r;ririririr;riririr;r;riiii:i:i:i::::i2OMPuvYLjjuJuuujujujUuuYjYjJYLYvLvLvvvv7v77rr;ri;iriiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:i:i:i:,,7k0UuuPNEk1qFuPS15PkPqNS2rrYv2jrLXSLu2ri1YLUJLjLL1Y7uvu7L2F7Uqqk00LrLv7iLNkkFvJJ12FqEqNSXXqvFNPXkuYuUu1k00G0EPFiiirrrrYrrrrrr;r;ririririririii;iiiii;iiiiiiiiiiiiiiiiii:</span></span><br><span class="line"><span class="comment">//MMOMMMOMOMOMOMOMOOOMOMOOOO8OGO8OGOG888GOG8GOZOGGZ8G8ZGZ8ZGE8E8ZGZGZGZGZG0ZZZ0G0ZEE0ZEENEN0NZ00q0N0NNP0XNPNXPkPkkSk5S21uUjuJJLYLYvLvLvv7v7vvvvLLju2U55kSXkk8MrLLYLYvv7777r7rrrr;r;riri;i;ir;rir;riririririr;rir;r;ririr;r;r;ririi:i:i:i:i::,;UZP5YjJuuuJujjJjJuJuJuJujuJjJjLYLLvLvLvv7v7r;rir;r;ririii;iiiii;iiiiiiiiiiiiiiiiiiiiii:iiiii:i::,:7PP2Y2qZqE0EPqNNkqkj2jrv7uu2Y7jPj7YujYrv7JUU72YYjujJu1uJS57kXXXZqJvJLrLqPXkPX0PqkPkkkkFkkUuXJJq1Xkvq8GZqq8EEXrirrrivYrrrrrrr;r;rir;riririri;iii;i;i;iiiiiiiiiiiiiiiiii</span></span><br><span class="line"><span class="comment">//MMMOMMMOMOMOMOMOMOMOMOOOOOOGO8O8O8O8O8OG8GOG8G8G8Z8ZOZGZ8EGE8Z8Z8ZGZGZ8E8ZG0GEGEZ0E0E0ENE0E00qEqEP0q0q0PNPqXqXqkXkX5F22UUjuJJLYLYvLvL7v7v7v7vLLLuu11F5kFXSPBUrLvYvLvv7777r7r7rr;rrririri;;rir;r;r;r;riririrrrir;r;rir;ririr;;iiiiii:i:::,i1qXUUuUjUJuJuJjYjLjLjYjJJYuJuYjYJLYLLLLvv7vrrrrrr;rrriri;i;iiiiiiiiiiiiiiiiiiiiiiiiiiii:iii:i:iii:i:::LkPuj1ZSju1US5JLY7;iJuuL;iLJUPuLJvYuLr7LuuvJFvJ2uu5uY2FS7r0PPNZX7:J52LUXNPPSkkXSFkXXUYZu2S58k5U5ZZ0SZ1YqZNNrirrrrjY;7r7rrrr;riririr;ri;iriri;iii;i;iiiiiiiiiiiiiiiii</span></span><br><span class="line"><span class="comment">//MMOMOMOMOMOMMMOMOMOMOMOM8MOM8OGO8OGOGO8OGOZ8GOG8ZGZ8ZOGGE8E8Z8Z8ZGZGEGEGEGEGEZEG0GEZEE0Z0E0ENEN0q0q0q0qNPNXqXPXPkXkk5F11U2uuJJLYvLvLvLvv7v7vvLvYYuu21F5kSkFM87vYLLvL7v7777r7r7r7rrrrir;ririririr;ririrrrirrrrrir;r;rrrrr;ri;iiii:i::::,iuZX1uUuUuUjujuJjYjLYLYLYLYLYLJLYJjYYLYLYvL77rrr7rrrrrrrririri;i;iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:i:i::,:LqFuJ555vuJr;uU2u1urvJLuvrjq2vuujYrr7jvU2LUv7YYJ52j22PjvF0PqqZ1LY7;uLYFPXEqXSXSPYF55PF5kq1U0U000X5XPXP0ZNvirrrrF7rr7rr;r;r;r;r;r;riri;i;i;i;i;iiiiiiiiiiiiiiiiii:i</span></span><br><span class="line"><span class="comment">//MOMMMOMOMMMOMOMOMOMOMOM8M8MOMOM8OGO8OGOG8G8Z8Z8G8G8ZGZ8Z8Z8E8EGGGEGZGEGEGZGEGEZ0Z0G0ZEE0Z0EqE00N0q0q0qNqqPqXqXqXqkXkkFS5522jujjLLvLvL7v7v7vvvvLLYYuu51F5kSSX@JvvJLYvv7v77r7r7rrrr;rrr;riririririr;r;r;rrr;r;rirrrirrr;r;ri;iiii:i:i:::u0q2UuUuUuuuuJuYJYJLJLYLLvv7v7v77rvvJYuYYLL7777r7r7rrrrrriririri;i;iiiiiiiiiiiiiiiiiiiiiiiiii:i:i:iiiiiii:i:::jXFL5FriuY1u772L5J7Lj2Y7Skk1k25Lu15U5J1v52F1Lj2212Skuv710PENG2LYuYv7::YuJXN0EN0XPF2PX55SjuONPPqP0SFkEEGLi;riv17;7rrrr;rrrirrr;r;ri;i;i;i;iri;iii;iiiiiiiiiiiiii:</span></span><br><span class="line"><span class="comment">//OMMMOMMMOMMMMMOMOMOMOMOM8M8OOO8OOO8O8OGOZOG8G8ZOZ8Z8Z8Z8G8Z8Z8E8GGEGEGEGE8EZEGEG0ZEZ0Z0Z0ZNENEN0qEq0q0q0PNP0XPXqkPXPkXFk1521uuJJLYvLvv7v7v7v7vvLvJJUu51FFkSFO87LLYLL7v7v7777r7rrrr;r;rirrririr;rrrrrrrrr;ririrrrrrrr;rrr;;iiiiii:i,:JZP1u2uUuujuJujuYjYJLYvYvLvL7v7v777v77r77LLYLYvvr7r7r7rrrr;r;ririri;i;i;iiiiiiiiiiiiiiiiiiiiiiii:iiiiiii:iiiii::,iuPuj505vu7rv7v72L2L2JYPX5XuLvX25Yjv7LuuFuFSuU21SXF7Y7FXEq0PP77r7:vju7ij0Su1GOO80XN8ZqM0Zq0NF1XEXuuPGZ2:rr;vkrrr7r7rr;rrrrr;rrriririri;iri;iii;iii;iiiiiiiiiiii</span></span><br><span class="line"><span class="comment">//MOMOMOMMMOMOMMMOMOMOMOOOM8O8OOO8O8OOOGOGOGOGOZ8Z8GOZ8G8Z8Z8ZGZGE8ZGZGZ8E8EGEGEZ0Z0ZEZ0Z0ZNZNZNZNEq0q0qEq0PNX0XNPqXPkXkXSk1521uujjLYvLvv7v777v7vvLLJjUu11SFk5PBj7JLLvL7v7777r7r7rrrr;r;rrrrrrr;r;r;r;r;rrr;rrr;r;r;rrr;ri;iiiiii:::L0G52u2uUuUjuJuJjJjYuYYLYvLvv7v777v7777rriiirr7vJYjvvrrrrrrrrrr;ririii;iiiiiiiiiiiiiiiiiiiiiiiiiiiiii:iiiiiiiiiiiii::;5SujXkLjFu22Y2kjviY7JkX1FuFY75Y2jU2kjYjJ5u5FkS1LLv1j5P0EPkXL2uJL7rJPZq27J7i;L0EEXJvjZqEPEP1FSq25OEOFii7ivFrrrr7rrrr;rrrrr;r;ririririri;i;iii;iii;iiiiiiiiiii</span></span><br><span class="line"><span class="comment">//OMMMMMOMMMMMOMOMOMOMOMOOOOOO8M8OOOOM8OGO8OG8G8G8GOZOGOZOZ8ZGGGZ8E8EGZ8Z8E8E8ZGEZEZEZEGEZ0ENE0Z0E0ENEqEqNP0PqXNXqPqkPXPkXFS5511uUuuLLvL7vvv7v7v7vvLLjjUU51S5S5BZ7vJLYvv7v7777r7r7rrrrrr;r;rrr;rrr;r;rrr;rrr;r;r;r;rrr;riiiiii:i::7qZku2uUuUuUjujuJuYjYJYJLLLLvvvvvv7v77rr;ririri;iir77YYjvvrrrrrrrririririri;iiiiiiiiiiii:iiiiiiiiiiiiiiiiiiiiiiiiiii:i::,755L1qkr7kLLS772uJv70X1uFuL2qSYJ21U1UU5FkSqSUvujL2FuXX8PS02:u5Sv2ENk0uULi:75OFPv7vvE00SkqkGFS1qkZGNi;rr7Xrrr7rrrr;rrr;rrrir;r;riririri;iiiriii;i;i;iiiiiiii</span></span><br><span class="line"><span class="comment">//MOMOMMMOMMMMMOMMMOMOMOM8MOM8OOM8O8M8OOO88GOZOZ8Z8ZOG8Z8GOGGGOZGZGZGGGEGEGZGE8EZEZ0ZEZ0ZEZ0Z0ENENEqEq0N0q0PNPNXqPNXPXqSPSkSSFF11u2jjLYvv7v7v777v7v7LLuuUUF1S55N@LvLJLYvv77777777r7rrr7rrrrrr;r;rrrirrrrr;r;rrr;rrrrrrri;i;iii:,;FOk2u2uUjUuuuuJuJuYjYjYJLLLLvLvLvv77rrrr;rrr;rrrrriri;ir7LLYLL7riririr;r;;iii;iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii::,:vSjJ12vYvJYvv1uv5UF0SXF5v1ukUukXFSFkFXkXYvLuLLLv2FLkEXUqEFvLv7k0kPPuLii5OGX7:iLLLON0PNEXUNkJuX08qri7ivS7irr7r7rr;r;r;r;rir;r;r;ririri;i;iiiiiiiii;iiiiii:</span></span><br><span class="line"><span class="comment">//MMMMOMOMOMOMMMMMMMOMOMOMOMOOOO8O8OOO8O8O8OGOG8G8Z8GOZ8ZOGOGGZ8GGZGZGZ8E8ZGE8ZGEGEGEZEZ0Z0E0ZNE0Z00q0N0q0q0P0PqXNPqXqXPXPkPFk5S21UUjuLYLL7v7777777vvLLujUUF1F2XBErLLLLL7v777v77r7r7r7r7rrrr;rrrrrrr;rrrrrrrrrrrrr;rrririiii:::U80UUU2u2uUuUJujuJuLjYYLJLLLLvLLLvvr7rrrrrrrrrrrrr7rrrrrr;rirr77YLLv7rriiiririri;i;iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii:::u1jj5FLjXUrLPUurL0PkXkFXkJ5uPSXSSSP5U2ULLL5kqPUUXk05kSSNL:uFZPqk05:iq8E1Uiu0v:LOZXNkP0qXNU0kGZ87irr7Xrrr7r7rrrrrr;rrrrr;ririririr;ririiiii;i;i;iiiiiiir</span></span><br><span class="line"><span class="comment">//MOMOMOMOMMMOMMMMMMMOMOMOOOOOMOOOMOO8OOOGOGOGOG8Z8ZOZ8G8GOGOZ8GOZ8EGZ8G8E8ZGEGEGEGEG0G0G0EEZ0Z0Z0Z00qZqEqNPNPNPqqqXqXqkPkXSXSSFF15U1uuLYLLvv77777v7v7LLjJUU5115@BY7YLLvv7v7777r7r7r7r7r7rrr7rrrrr7rrr7rrr7rrrrrrrr;riri;ii::v8ZFu1U2UUuujUuuJjJjYjYYLYLYLYLLvL77r7r7r7r7r7rrrrrrrrr7rrrrrrrr;r;r7LLJLY77;riiiiiii;iiiiiiiiiiiiiiiiiiiiiiiiiii;iiiiiiiiiiiiii:::rU2L11LYUvu25irYqNXJEFukSXq2PN00XuYLkuSujXkLS1XFNUX0P1XPu7iFGqqXG2PZN15u77v2qLS8ZqZk0qSXEXkEOGJi7rvk7r7r7r7r7rr;r;rrr;rrr;riri;;;iririiiriiiiiiiiiiii:</span></span><br><span class="line"><span class="comment">//MMMMOMOMMMOMMMOMMMOMOMOMOMOM8MOOOO8O8OGOGOG8GOZOGOGOZ8G8G8Z8G8G8Z8ZGEGZGEGZGZGE8EZEGEZEGEZNE0Z0ZNZNEq0N0q0P0qNqNXqXqPqXPXPSXSkFS15U2uuJJLL7v77r7r77v7LLYYuu5UUG@N7vJLLvv7v7777r777r7r7r7r7rrrrr7rrr7rrr7r7rrr7rr;ri;iiii:;kMk2U2U2uUu2uuuuJuJuJJLYLYLYLLvv7777r7r7r7rrr7rrrr;rrrirrr;rrr;rr7r7rriri77LLJYLvvrrii:iii:iiiii:iiiiiiiiiiiiiiiiiiiiiiii;iiiiiiiiii::vFjYFG2L2vLvvLSGkXPk1Suq1k0FuLXEX05kUuXujESJFP0uvXqNkqqLi7FEEZ08ENNXkkiU2r7F7jZ00NXN0Xk5S8ZMuir77X7rr7r7r7rrrrrrrr;r;r;r;r;riri;iririri;iriii;ii;i::</span></span><br><span class="line"><span class="comment">//MOMMMMMMMOMMMMMMMMMOMOMOMOM8MOO8MOOOO8OGOGO8OZ8G8G8GOG8Z8Z8Z8Z8G8G8E8Z8Z8EGZ8E8EGEGEZ0ZEGEZ0ENENE0EN00Eq0q0q0P0PNPqXqPPkXkPkkSkFS55U2uUJjLYvv7777r7777LvLLjjUJqOBLLLYLLvv7v7777r777r7rrr7r7rrr7r7r7r7r7rrrrr7rr;ririii::2OEU2U2u2u2uUuujuJujuYJLYLYLLvL7v7777r7r7rrrrr7rr;r;rrr;riririr;rir;rrr;rrrrrirr77LLJYJLvrrii:i:::iiiiiiii;iiiiiii;iiiiiiiii;iiiii;iiii::iU1JuFLj5LFk7u0PXF10jFSPZJ:j7vE8qSSXU1X1uPFkqPYr7ENZNEk7:r;rJuj0NXqPvrvju0riYO0Eq0XqP02Gq8G5irr7Sv;7r7r7r7r7rrrrrr;rrr;r;r;r;riri;iri;iiiii;ir;i:::</span></span><br><span class="line"><span class="comment">//MMOMOMOMMMMMMMOMMMOMOMOMOMOOOO8MOO8O8M8OGOGO88ZOG8G8G8G8Z8G8ZOG8Z8Z8Z8ZGEGEGZ8Z8E8ZGEGEZ0G0Z0E0E0EqENEN0q0qNq0P0XqXqkqXXXPkXSXSXFS1521uUJjLLvv7v77rrr77v7LvJJj5E8q7LLYLLvv7v7v77r777r7r7r7rrrrr7r7rrrrr7r7r7rr;rrri;::78OFu2u2uUu2uUuuuuYuYJYJLJLYLL7v7777r7r7r7r7rrr7rrrr;r;ririri;i;iiiiiiiiiri;irir;rrrir;rrvvJYjJjLLvv7r;riiiiiiiiiiiiiiiiiii;iriiiiiri;i;iii::722YS5L;Sjj2EPPSk2PXXN8FJ::r71EqqqqkkSXSXXZXvir1OXUuPjrJLL2JJL0qNuS1Lr7ir78ENXEX0FNSqkGE8SrrrrP7r77r7r7rrrrrrrr;rrrir;rrrrriri;iriri;iiiiir;i:i::</span></span><br><span class="line"><span class="comment">//MOMOMMMOMOMOMMMMMMMMMOMOMOOOOOMOMOMOO8OOOGO8OGOZOG8ZOGOG8G8GOZ8Z8Z8GGZ8ZGZ8ZGZ8EGZZEGZGEZ0ZEZEE0E0EN00EqEq0q0qNq0PNXqXPkqXPkPSkSSSF1F21UUjuLYvv77r7rrr7r77LvLL2XFOLvYLLvL7v7v7v7v77r7r777r7r7r7r7rrr7r7rrrrr7rrrrii:iSBPUu2u1u2u2uUJujuYjJjYjYJLLvL777v77r7r7rrrrr7rrrr;rrriririii;iii;iiiiiiiiiiiiiiiiiiirir;ri;i;;rr77LLYYjLJLL77rriiiiiiiii;ir;ririri;i;i;i;irii:iJkj5SSYurNNPXqPEXNN80jv5NJi7X0E8PqkXXkSq0j7rY21EPEEGU7JXuJrk0EX5kFULY5UqOqqE0qNGFPXkZ8NNrrr7FLr777r7rrr7rrrrrrrrrrrr;r;r;r;ririririri;iri::i:i:</span></span><br><span class="line"><span class="comment">//MMMMMMOMOMMMOMMMMMOMOMOMOMOMOMOMOMOOOMOM8OGOGOG8ZOG8G8Z8GOG8G8G8GOZ8Z8Z8Z8EGE8EGEGEZEG0ZEGEZ0G0ZNZNENEqEqEqEP0PNqqXqXPXqSPkPSXFkFk5S5F21u2uuLLvL7v77rrr7r7r77vLSJ0kvvJLLvL7v7v7v777777r7r7r7r7r7r7r7r7r7r7rrrrrrii:LMOU2U2U2u2uUuuuujuYuYjLuYYLLvv7777r7r7r7r7rrr7rrrr;rrrrrir;ririiiriiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii;iii;irrv7JYuJjJYvv77rriiiririr;ririri;iri;ii::7F11N5rrNZkNXqXqNMEi.7Fv::JB1iu8XXkPkXPE;7u1Y7qq5qqk7r7:i1Zq0PvSP220UJq8N00E5qEEZGEZEOMvi7rXvr777777r7rrrrrr;rrrrrrrrr;rir;riri;i;iri7i::i:i::</span></span><br><span class="line"><span class="comment">//MMMMMMMMMMMMMMMOMOMOMOMOMOMOMOOOMOOOMOMOOGO8OGOGOGOG8G88OGOG8Z8G8G8G8G8ZGZ8ZGZ8ZGZGEGEGEG0Z0ZEZEZNZ0ENENEqEqNP0q0qNXqXqXPkPSPSX5k5S1521U1u2juLYvvvv77rr;rr7r77vuuuZvvLYvLvvvv7v777vr77777r7r7r7r777r7r7r7r7rrrri:iNBXu5U1u1uUuUuUuuJuJuYjYJLYvL7v7v777777r7r7r7rrrrrrrrrr;r;ri;i;i;i;i;iiiiiiiiiiiiiiiiii:iii:iiiiiiiiii;iii;iiiiiiirr77vvLLJLYv7rr;rrr;riririr;ri;iri:iUS2Xq5OqqqNX0EGXY7qZ2irikM7:i2ZqqPNkNqjvkLiLSPZEPqF7kFu1MqZS1k25NEY5O00NEPZqZ0Z0G0OMMYrr7SYr777r7r7rrrrrrrrrr;rrr;r;r;riririririrrri::i:i:i:</span></span><br><span class="line"><span class="comment">//MMMMMMOMMMOMMMMMMBOMMMOMOMOMOMOMOMOMOM8OOO8O8OGOG8GOG8GOZOGOGOGOZOGOG8Z8E8Z8E8Z8EGEGEZEG0G0G0Z0ZNENEN0NEq0q0q0PNqNPqPqXqXPSPFXFk5F15U521u2uUJjYJLL7v77r7rrrrr77jYLP57LLLvL7L7v7v7v77777777r7r7r7r7r7r7r7r7r7rri:LB81u5U2U2U2uUuUjuuujjYJYJLYvv7v7v777777r7r7r7r7rrrr;rrr;r;riri;i;i;i;iiiiiiiiiiiiiiiiiiiiiiii:iiiiiii:iiiiiiii;i;iri;i;iiiri77vLYvvrr;r;r;r;ririr;r;ri::7FSF8GEqZN0XEJ.:Y7:,:iEBq:2PSJFN0NG0OPLJUYXL2ZkXOZFYFL5EOGO8ZPOqPU0ZZ000ENGEGZG88O8OkirrPjrr777r7r7rrrrrrrrrrrrrr;r;r;ririri;irr7:i:iii:i:i</span></span><br><span class="line"><span class="comment">//MOMMMMMMMMMMMMMOMMMMMOMOMOMOOOOOMOMOMOM8O8M8OGOGOGO88ZOGOGO8O8OZOZ8GOGOG8ZGE8Z8Z8ZGEGZZEGEZEZ0ZEZEZNZ0E0Eq0N0q0P0PNPNXPkqXXFkFkFF15U1U2uUuuJuYjYJLL7v77rrrr;7r7vJvuqL7LvLvLvv7v7v77777777r77777r7r7r7r7rrr7rr:iq@X2U5U2u1u2uUuUuujujuYJLLLLvv7v777v77r7r7r7r7rrrrrr;rrr;r;ri;iririiiii;i;i;iiiiiiiiiiiiiiiiiiiiiiii:iii:i:iiiiiiiiiiii;irir;ri;irr7vYvv77;rrr;rrr;rrr;rii:iuX2P8Zk8Nj5ZuS5vv2qOOB1i:7SUqOPJFkX88rv7LJvkNG00XL:rYvJXN0GM8OG80ZqEEGE88GEZXX5ZOMP;i7k1r7777777r7rrrrr7rrrrrr;r;rir;r;r;rirrr:i:iiiii:i:</span></span><br><span class="line"><span class="comment">//MMOMMMMMMMOMMMMMOMMMMMOMOOOMOMOMOMOMOMOMOO8O8O8OGOG888Z8G8GOZOG8GOG8Z8Z8Z8ZGEGZ8EGEGEGZGEGEZ0G0Z0ZNZNENEqEN0N0q0P0XqPqXqkPSXFS1F22u2uUuuJuYjYJYJLYvvvv77rrrrrrr7vv7ku7vLvLvLvv7v7v7v7v77r777r7r7r7r7r7r7rrr;:LMOU2U1u5U1u2uUuUuUuujjYuLYvL7v777v7v7777r7r7r7r7rrrrrrrrir;ririririririri;iiiiiiiiiiiiiiii:iiiii:iiiiiiiiiiiiiiiiiiiiiiii;i;iriri;;rir;77LvL77rr;rrrrr;r;r;i::7S5Xkv1800qEX0EMMMMMSrirY0S0NrrLLFvLL55v7ju0GN0Gk1F1YYFY712YLL77OOGMZGPS22UkPG8MPZrrrPSrr77777r7rrrrrrrrrrrrrrrrrrrrirrr;r7r:iiiiiii:i:i</span></span><br><span class="line"><span class="comment">//MMMMMMMOMOMOMOMMMOMOMOMOMOMOMOMOMOMOMOM8O8OGO8O8O88G8GOZOGOG8GOGOG8GOZOZ8Z8ZGZ8Z8EGZGE8ZZ0GEG0G0GNE0E0EN0q0qEq0qNqNqNXqXPkXFF5FU2uUuujJYJLJLYLLLLvLvv7v77rrr7rrrv7vJk7vvLvLvLvLvv7v7v777777777777777777rrri:XBNu1U521U1u2U2uUuuuujuYjLYvLvv7v7v777vr777r7r7r7r7rrrr;r;r;r;riri;iririiiiiiiiiiiiiiiiiiiiiiiiii:i:iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii;irirrrr77vvv77rrr7rrrr;r;ri:i1SXq2XOZPPG0GGZuu7::L8MZM8k15viiL:jX7;uSL78GZ8OXrvU;i;UUvirjPqZXFuuJuUSP0qZPZM00virkXr7777777r7rrrrrrrrrrrrrrrrrrrrrrirvr:iii:iii:i:i:</span></span><br><span class="line"><span class="comment">//MMMMOMMMMMMMOMMMOMMMOMOMOMOMOMOMOMOMOMOMOO8O8OGO8OGOGOGOGOGOGOGO88G8Z8GOZ8ZGZGE8Z8EGEGZZ0ZEZEZ0GEZ0E0ZNE0ZqEqEq0PqPNPNXPkXSk5FU2uUjuYJLJLYLLvLvLvLvL7v7777r7rrrr7v7L5jrLvLvLvv7v7v7v777777777777r7r777r7i:7MM5u121U1U1u2uUuUuuuujuYYLYvLvv7v7v7v777777r7r7r7rrrrrrrrrrir;r;ririii;iiiiiiiiiiiiiiiiii:i:i:iiiiiii:iii:iiiiiiiii:iiiiiiiiiiiiiiii;iiir;rrrrrr77LvL7777rr;rrr;rii:LXq0Nk088ZOOMX;ruLZO8ZMP7:7vuL1Yu5YLq5Y7U2EEOOGkF1U50FFkXFFjuLJu11XP0PXSPkq0M0GJiiXP7rv77r777r7r7r7rrr7r7rrrrrrrriri7vr:iiiiiiiii:i:i</span></span><br><span class="line"><span class="comment">//MOMOMMMMMOMOMMMMMOMOMOMOMOMOMOMOMOMOMOMOMOMOO8O8O8OG88OG8GOGOGOGOG8G8G8Z8Z8ZGZGZ8Z8E8ZGZGEGEGEGEZ0Z0ENZNE0ENEN0q0qNqqXPkPFk1521uuuuYJLYLLvLvLvvvv7v7v7777r7rrrrr7777u177vvLvLvv7vvv7v7v7777777777r777rri:U@q2U52525U1u1u1uUuUJujjJJLLvLvvvv7v777v7777r7r7r7rrrrrr;r;riririririiiiiiiiiiiiiiiiii:iiiiiiiiiiiiiiiii:i:iiiiiiiiiiiiiiiiiiiiiiiiiiiiii;i;i;rrrrr7r77L777vrrrrir;rii:rFNk0Y5PG05r1B@X0OMMO7i7jL2152PSUj5Y7rLvLXM0NPEXSFS1S5F5k5XSPkXSkSkFFFPPqPqO8Z5irSE7r77r77777r7r7rrrrr7rrrrrrrrrri7v;:iiiiiiiii:iii:</span></span><br><span class="line"><span class="comment">//MMMMMMMMMMMMMMMMOMOMOMOMOOOMOMOMOMOMOMOOOO8O8OGOGO8OGOGOGO8O8OGO8OZOGOG8G8ZOGGZ8ZGEGZGEZE8EGEG0GEZEZ0Z0E0Z00qEN0P0qqXqXPSkFFU5uUjuYjLJLLvLvv7v7v77777vr777r7;r;rr7rv75v7vvvvvvvLvv7v7v7v777v777777r77r:;0@52252525U1U2u2uUjujuJuYJLYvLvv7v7v7v777777r777r7r7rrrrrr;r;r;riri;i;iii;iiiiiiiiiiiiiiiiii:iiiii:iii:i:iiiiiii:i:iiiiiiiiiiiiiiiiiiiiiiiiii;i;irrrr7r7r7r77L7r;rrr;r;i:ijNPEu7L7LJu1Fqqq1UrikXuS5r7Y7rJuYuuvruSqPkNZ00kXkqqNXqkk51212F1S5S5XkPXPSO8GS;iPEvr7777777r777r7r7r7rrrrr7rrrri7Lr:iiiiiiiiiiiiiii</span></span><br><span class="line"><span class="comment">//MOMMMOMMMOMMMMMMMMMOMOOOM8OOOOMOMOMOMOMOM8M8O8OGOGO8O8O8OGOGOGO88GOGOG8Z8GGZGZ8Z8Z8Z8EGZGEZEZEZ0G0ZEZ0E0ZN0N0qEP0q0XNXPSkSF21UUuUjuLJLLLLvv7v77777777r7rrrrrrrrirrrr7YUrv7v7v7vvL7vvv7v7777777777777r:LMOu1251521U2U1u2uUuUuuJuYYLLvLvLvv7v7v77777777r7r7r7rrrrrrirrririririii;i;iiiiiiiiiiiiiiiiiiiiiiiiiiiiii:iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiirirrrr777777Lv7irirrr;ri:7qqZquuX17;L55vrv7uPu775UE2LFq7LjPPqqSukZZNEqq5F5F151515151F251S5kSkkPkX0OqNrikZvr777777777777r7r7r7r7r7rrrri7Li:iiiiiiiiiiiiiii:</span></span><br><span class="line"><span class="comment">//MMOMMMMMMMMMMMMMOMMMOMOMOMOMOMOMOMOMOMOMOMOOOOOOGOGO88GOG8GOGOG888GOG8GOG8G8GGZ8EGZ8EGZGZ8ZGEG0GEZEZEZ0Z0ENE00NEq0qNPqkXFk5F21uUjuYjLYLLvL7v7v7777rrrrrrrrrr;r;rirr7rvuvrvvvvLvLvL7v7v7v7v7v7777r7riiFB0U51511U1U5U2u2uUuUjuJuYjLLvLvvvL7v7v7v7777r7r7r7rrrrr7rr;r;r;ririri;iii;iiiiiiiiiiiiiiii:i:iiiiiii:i:iii:i:iii:i:iiiiiiiiiiiiiiiiiiiiiiiiiiii;iriiirirrrr7r777rvLv;r;rrrrri:iSE0OOvr7Xk5LPkrrUuuJJu7ir1J;JEPkk212Xk00NqNqq5F5S5S5F1F25252F5SFXSXSXSE80G7:PEYr7777777r777r7rrr7r7r7rrrri7Yr:iiiiiiiiiiiiiii:i</span></span><br><span class="line"><span class="comment">//MMMMMOMMMMMMMMMMMMMOMOMOMOOOMOMOMOMOMOMOOOMOO8O8O8OGO8OGOG8GOGOGO8OGOZ8ZOG8Z8Z8Z8Z8ZGZGZ8E8ZGZG0ZEG0EEGNZNEN00Eq0PNPqPXkXFF15UUuUjjJJLYvLvL7v7v7777r7;rrririririrrrrrrYY77v7v7Lvv7v7v7v7v7v777777riiGMSUF25152521U2U2U2uUuujuYJLLLYvv7v7vvv77777777r7r7r7rrrrrrrr;r;riri;i;i;iiiiiiiiiiiiiiiiiiiiii:i:i:i:i:iii:i:iii:iii:iiiiiiiii:iiiiiiiiiiiiiiiiii;i;iririrrrrrr7r7r7LYrrrrrrrrii:Y0qNSj2LuLFL;7q5u5N5uuFj1uFXFUuuSkqSF500NP0NP2F1S1F5F15152F5SFkFkFXkPPONOLiPGY7r77777r7r7r7r7rrrrr7rrr7;7Jr:iiiiiiiiiiiiiiiii:</span></span><br><span class="line"><span class="comment">//OMMMOMOMMMMMMMMMOMOMOMOMOMOMOMOMOMOMOMOOOMOO8OOO8OGOGO8O8O8OGO8OGOGOG8GOG8ZGG8E8Z8ZGEGEGEGZZZGEGEG0GEZ0Z0E0ZN0qEqNqNXqkXSk1FU1u2uuJjYJLYLLvLvv77r7r7rrrriri;iri;ir;r;r7u777v7vvvvvvvvv7v777v7777ri7B8S1555151121U2U1U2uuuUJuYJLYLLvLvv7v7v7v7v7v77r7r7r7r7r7rrrr;r;riri;iiiri;iiiiiiiiiiiiiiii:i:iii:i:i:i:i:i:i:i:iiiiiii:i:iiiii:iiiiiiiiiiiiiiiiiiiiiiii;ir;r;rrrr7r7r7vuvr;rrrrr;i:7kZNZk7Yuj52k21X17U20ZPU2uju1FXkS1F55FGqNP00S2S1S5S551F1F1S1SFSSXkPXN8EGUiNEU7777777777r777r7r7r7r7rrrrYr:ii;i;i;iiiiiiiiii:i</span></span><br><span class="line"><span class="comment">//MMMMMMMMMOMMMMMMMOMOMOOOMOMOOOMOMOMOMOMOMOM8MOO8O8OGO8OGOGOGOG8GO8OGOGOG8GOZ8Z8ZGZ8ZGZGE8EZZGEG0ZEG0ZEZEENZNE00q0qNXqkPFk5S1122uuuuJjLjLYvLvv7v77r7r7rririri;iiiiirir;rvLr77v7v7LvL7vvv7v7v7777;iu@NFFS1F1521u2U2u2U2uUuuJuYjLYLLvLvLvL7v7v777v7vr7r7r7r7rrrr;r;r;r;riri;i;iiiiiiiiiiiiiiiiii:i:iii:i:i:i:i:i:i:iii:iii:iiiii:iiiiiiiiiiiiiiiiiiiiiiiiii;irir;r;rrrrrr7r7rr7uj7;7rrrrrr:i5GXqP5LvL5UX55uUk02uLju55F1F251S5SF5P8qqPENF1F5F1F1F5F1F5S5kFkSPkPkO0GXi5Zuvr7r777r777r777r7r7r7rr;rY7:;iii;i;iii;i;iiiiii:</span></span><br><span class="line"><span class="comment">//OMMMMMMMMMMMMMMMOMOMOMOOOMOM8MOMOMOMOMOMOMOM8M8OOO8O8O8O8OGOGO8O8OGOZOZOG8GOG8G8Z8Z8EGZ8EGEGEGZGEGEZEZEZ0ENENENEqNPNPqkPSk1F21uUuUjuJJLJLLvLvv777vr7rrrr;riiiii;iiirir;7L7r77v7vvLvL7v7v7v7v77i;0@kF5F5F151125u2U2U2u2uuuuJJLJLLvLvvvv7v7v777777r777r7r7rrr7rrrririr;riririiiii;iiiiiiiiii:i:i:i:i:i:i:i:i:i:i:i:i:i:i:iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii;i;iririrrrr7r7r7rJULirr7rr;r:iJ8ZOEPk1S0SUU1UuJU2kSF11U125155S1F150ZP0XZP15S1S5F5F1S1S5SFkFXSPXPEGEGikE5L777777777r777r7r7r7r7rrLLiiiri;i;iiiiiiiiiiiiii</span></span><br><span class="line"><span class="comment">//MOMOMMMMMOMMMMMMMOMOMOMOM8MOMOMOMOMOMOOOMOM8MOO8OOOGO8OGO8OGO8O88G888GOGOG8G8ZOZ8E8E8E8E8ZGEGEGEGEGEGEZ0ZEE0ENEq0q0XqkPkkSS1522u2uujuJjLJLYvL7L7777rrrr;riri;i;i;iii;ir;L7r777vvLvL7vvv7v7777:rM@15FF5F1521U1U1U2u2uUuujuJjYJLLvLvLvLvv7v7v777v77r7r7r7r7rrrrrr;r;ririri;iiiiiiiiiiiiiiii:iii:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:iii:i:iiiiiiiiiiiiiiiiiiiiii;iriririrrr;rr7rrrrr7UUrrr7r7rri:vM8OMEkk5S5FFXSqSk152111212F1F5F5S15GZPNPZF11SFF5S5F5S5FFkFXkPXqkZG087kOUur7r7r7r77777r7r7r777rr7Yiiiiiii;iiiiiiiiiiiiiii</span></span><br><span class="line"><span class="comment">//MMOMOMMMMMMMOMOMMMOMOMOOOMOMOMOMOMOMOMOMOOOM8O8O8OOO8OGO8OGOGO888O8888GOGOZ8Z8G8Z8GGZGZ8EGE8EGZG0GEGEGEZ0Z0ZNENEN0PNXPkXSSFS15U1u2uUjuJJLJLYvLvv7777r7rrrririiiiiiiiirirrLr7r77vvvvvvv7v7v77:LBM2F5S5F152F11U2u1U1u2uUuuJuLJLYvYvLvLvv7v7v7v777vr7r7r7r7rrrrrriririri;i;i;i;iiiiiiiiii:i:iii:i:i:i:iii:i:i:i:i:i:i:i:i:i:i:i:i:iii:i:iiiii:iiiiiiii;iiiii;i;i;iririr;rrr;rrrr7rrYSvrr7r7rri:i8BOM@O8NEXPSF5F1F1F1F1F151F5S5SFF2XZNXNNE1SFS5k5FFF5SSXSkSXXPXqqMqOuFM22Lrv77r777r7r7r7r7r7rr7jiii;i;i;i;i;iii;iiiiiiii</span></span><br><span class="line"><span class="comment">//MOMMMMMOMOMMMMMMMOMMMOMOMOM8OOOOMOMOMOMOMOMOMOM8O8O8O8O8O8OGOGOGOGO8OGOZOZ8Z8G8ZOZOZ8ZGZGZGEGZ8EGZG0GEG0ZEE0Z0ENEq0PqPPkXSS5F1522uUuujjYJYJvLvL7v7777r7rr;r;ri;iiiii;i;;rv7;77v7v7v7Lvvvv7r:5BBjSFSFF151F1125U2U1U2uUjUJjYjLYLYvLvLvvvv7v7v7777r7r7r7r7r7rrrrrriririri;i;iiiiiiiiiiiiiiii:i:i:i:i:i:i:i:i:i:i:::i:i:i:i:i:i:iiiiiii:iiiiiiiiiiiiiiiiii;i;iiiiiri;ir;r;rrrrrrrr7rr7FU7r7r7r7;i:FZSqM0qkPXPXPSXSXFF5F55251F5S5S5k20ZqXNEN1S5kFSFS5kFXSXkPXPP0XN8G8qJB15L7r777777vr7r77777rrrjriiriri;i;iriii;iiiiiiiii</span></span><br><span class="line"><span class="comment">//OMMMMMMMMMMMOMOMMMMMOM8MOMOMOOOMOMOMOMOMOMOMOO8O8OOO8O8O8OGO8O8O8OGOGOGOZOG8G8ZGZ8ZOZ8Z8Z8EGZ8EZEZZZ0Z0ZEZEZ0E0ZqEq0PqXqSXSS1F21u2u2uUjuLJLYvLvv7v7777r7rr;riri;iiiiiii;i77rr77v7v7vvv7v7rrEB@E21SFS552525U1U2U1U2uUuUuuYJLYLLvLvLvLvv7v7v7v77r777r7r7rrr7rrrr;r;ririri;iii;iiiiiiii:iiiiiii:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:i:iii:i:i:iii:iiiiiiiiiiiiii;iiiiiri;iriririrr7rrr7r7rrruFYr7r7r7ri:UOXF8EqSXSkSXSkFk5S5S1F555F5S5SFS180qPNZX5kFkFkFXFXSXkPkqPNqqqMOOGYM0u17777r777r7r777r777rLviiririri;i;i;i;i;iriiiiii</span></span><br><span class="line"><span class="comment">//MMMMMMMOMMMMMMMOMMMMMOMOMOMOOOMOMOMOMOMOMOMOM8MOO8O8O8O8O8O8O8O8O8OGO8OZOG8G8G8G8Z8ZGZ8Z8ZGEGZ8Z8EGEGZGEGEZ0E0ENEqEPNPNkPkXFS5F21U2uuuujuYYLYLLvL7v77r7r7rriri;i;iiiii;irrvrrr77v7v7vvv7r7MEkBNUSFS5S1525U1U5u1u2uUuUuuJjLYLLLLvLvL7vvv7v777777r7r7r7r7r7rr;rrr;r;r;;iiiiiiiiiiiiii:i:iiiii:i:i:i:i:i:i:i:i:i:i:::i:i:i:i:i:i:i:i:iii:iii:i:iiiiiiiiiiiiii;i;iri;irir;r;rrrrrrrr7r7rLk2777777rr:LO0FZZNXPkXFPkkFkFk5S5F5S5S5FFkF5SOqqqEES5kFXSXkPkPXPXqXNq0P0GMGMYEM22Y7777777777777777r7Lriririririri;iri;i;i;i;iii</span></span><br><span class="line"><span class="comment">//MMOMMMOMOMOMMMMMMMMMMMOMOMOMOMOOOMOMOMOMOMOMOOOO8O8O8OOO8O8O8OGOGO8OGOZOG8Z8GOG8Z8GGZ8ZGE8ZGZ8EGZZEGEGEZEZEZNZNEqEqEP0PPkPSX5S1522UUuuuuJuYjLLLLvvvv7777rrrr;r;;i;iiiii;i;77r7r77v7vvv7rv@NLN@k15kFS11111125U1U2uUuUuuJJLJLLvLvLvLvvvv7v7v7777r7r7r7rrrrr7rr;r;ririririri;i;iiiiiiii:i:iii:i:i:i:i:i:::i:i:i:i:i:i:i:i:i:i:i:i:i:iii:i:i:iiiii:iiiiii;i;i;iii;iririririr;rrr;rr7r777rv2kLrr777rr:7ZO50Z0kPkPSXSkkkFS5kFSFkFSFkFk5FN8P0X8qSSXkXkPkPXqXqX0q0NE08M8BUP@5Fuv7777777777r777r7Lvirir;riri;iririri;i;i;i;ii</span></span><br><span class="line"><span class="comment">//MMMMMOMMMMMMMMMMMMMMMOMOMOOOM8O8MOMOMOMOMOOOMOMOO8O8O8O8O8OGO8O8OGOGOGOGOZOZ8Z8G8Z8Z8ZGG8Z8ZGEGZ8EGEGEGEZ0Z0E0E00N0qEqqXqXPFSFS15U1UUuuuuYjLYLLLLvv7777r7r7rrir;ri;i;iii;irrrr7r77vvv7rvBPuY8BkUSFk5F2522U121U2u2uUjUjjYJLYLYvLvLvL7v7L7v7v777777r7r7r7r7rrrrrr;riri;iiiii;iii;iiiiii:iii:i:i:i:i:::i:i:i:i:::::i:::i:i:i:i:i:i:iiiii:i:iiiiiiiiiiiiiiiiii;i;i;iri;iririr;rrrrrr7r77777LP2vr7r7rriiPMkqE0kPSXkXSXSkFkFk5SFkFkSXFkFSZGXqNOSkkXkXkqXPXNqNN0NE0ZGB8@Z@BMuSLv77r7r77777r7777Yirir;r;r;riri;iriri;i;iiiii</span></span><br><span class="line"><span class="comment">//OMMMOMOMMMOMOMMMOMMMOMOMOMOOOM8MOMOMOMOMOMOMOOOO8O8O8O8O8O8OOO8OGOGOGOG8GOZ8Z8Z8GOZ8G8Z8EGZGEGZGZGEGEZEGEG0ZEZNZ0E00q0qqXPkXFk5F25U1u2uUjuYjLYLLLLvv7v77r7rrrririii;iiiri;i7rrr7rv7v777MPUUj8@25Fk5S2521U1U1U1U1uUuUJuJjLJLLvLvLvLvL7v7v7v777777r7rrrrrrr7rr;rrririririiiiiiiiiiiiiiiiiiii:i:i:i:::i:i:i:i:i:::i:::::i:i:i:i:i:i:i:i:iiiiiiiiiiiiiiiiiiiiii;i;i;i;irir;r;rir;7r7r7r7rv7772Xurrr777ii2MPP0ESXSXSXSkSkFkFkFkSkFkkXkX5POEPqG8FXXPkqPNPqPNq00GEGZ8MMB@5NBk1177r777777777r77Jriir;r;rir;r;;iririri;iii;ii</span></span><br><span class="line"><span class="comment">//MOMOMMMMMMMMMMMMMMMMMOMOMOMOMOOOMOMOOOMOMOMOOOMOO8O8O8O8OGO8O8O8O8O8OGOGOGOGOGOGOG8G8Z8E8E8Z8Z8EGZZZZEZ0GEG0Z0Z0Z0EqEN0PqXPkX5k1F21UUuUuUjuYjLJLLvL7v7v77r7rrrrir;;iiiiiii;r7rrr77v77r00u22LM@51S5F1F2125U1U1U1uUuUjuJJLYLLvLvvvvvv7v7v777777r7r7r7r7rrrrrrrrrr;riri;i;iii;iiiiiiiiii:i:i:i:i:i:::::::i:i:::i:i:::::i:::::i:i:i:i:i:i:iiiii:iiiiiiiiiiiiii;i;iri;iri;;rirrr;r;7r7r7777v7vrLkNY7r7r7;iLMZPEEkXkPkkSXSXSXSkSXSXSXkPkXSEO0qEO0FqXqPNPNP0qZ0ZEOZOEMB@2ju@O1FJ777777777777rvL;ir;rir;riririr;ri;iri;iri;i</span></span><br><span class="line"><span class="comment">//MMOMOMOMOMMMOMMMOMOMMMMMMMOMOMOMOMOMOMOOOMOMOOOOOO8O8O8O8O8O8O8OGO8O8OGO8OGOZ8GOG8G8GOG8ZGE8EGZGEGEGZZZZ0G0GEZ0E0EN0qNqNXqkPSXFk1515U2uuuuJuYYLJLLvL7v7v77r7rr;ririri;i;irir7rr7r777ruEUU1UjM@uFFS55252121U2u2UUuujuJuLJLYLYvLvLvvvLvv7v7v77r77777r7rrrrrrrrrr;riri;iririiiiiiiiii:iii:iii:i:i:i:i:i:::::i:::::i:::i:i:i:i:::::i:i:i:i:i:iii:i:i:iiiiiiii;iiiii;iririr;rir;rirrrrrr77v7v7v77JZqu77r7rirG8qEESPkPkXkXSXSXSPSXSXXPXPkXSOOE0OOPXqq0qENEEZEGG8Z88BBMuu2Uq@FF5L777777r77v77Yvir;rrrirrririr;riririri;iii;</span></span><br><span class="line"><span class="comment">//MOMOMOMOMMMMMMMMMMMMMMMOMOMOMOMOMOMOMOOOMOOOO8M8OOM8MOMOO8O8OGO8OGO8OGO88G8Z8GOG8Z8Z8ZGZGGGE8ZGZGEGZGEGEGEGEZEG0ZNZNEqEqNXqXXFkFF25U5U2uujUJuYjLYLLvL7v7777r7r7rrrr;rir;;irirrrr7r7r7PSu121JB@U1S551521U122u2UUu2juJjLJLLLLLLvLvLvv7v7v7v7v7777r7r7rrr7rrrrrr;ririririiiii;iiiiiiii:i:i:i:i:i:i:::::i:::i:::::i:::i:::i:::i:i:i:i:i:i:i:i:i:i:iiiiiiiiiiiiiiiiiiririri;;r;rir;rrrr7r7777v7v77rSOEuL77riiPO0EZXPSPkPkPkXkPkPkPkPXqXNXqXMGZ0MGqqENZEG0GZ8G8GMB@BXJ11S22BMUXU777777777777urr;r;r;r;r;ririririri;iriri;i</span></span><br><span class="line"><span class="comment">//OMOMOMOMOMMMMMOMMMMMMMMMOMMMOMMMOMOMOMOOOMOMOMOM8M8OOOOO8O8O8OGOOO8O8O8OGOZOZ8G8G8Z8Z8Z8ZGG8ZGZ8E8Z8ZGEGEG0ZEZ0E0E00NEq0PqXPkXFS5F11U1U2uujuJjLJYLLLvLvv7v77r7r7rr;rir;r;rir;r;rr77rYXjUU1ujM@uF5F1F25U1U1u1UUuUuUjuYJLJLLLLvYvL7vvv7v7v7777r7r7r7rrr7r7rr;rrr;r;riri;iriiiiiiiiiiii:i:i:i:i:i:::i:::i:::::::::i:i:i:i:i:i:i:::i:i:i:i:i:i:i:iii:i:iiiiiiiiii;i;i;i;i;i;irir;rir;rr7r77v7v7vvvrL0Mq2YL7ri1OE0GXPXqXPXPXPXPXqXqXNPNP0PqEBG8ZMG00ZEGEGZ8GMB@BBqUuF5S5SuX@qUkL7r7777777rLLr;rrr;r;r;r;r;r;riri;i;i;i;ii</span></span><br><span class="line"><span class="comment">//MMMOMOMMMOMMMMMMMOMMMOMMMMMMMOMOMOMOMOMOMOOOMOMOOOM8OOO8OOO8O8OGO8O8OGO8OGOGOGOGOZ8GOZGZ8Z8ZGE8EGZGE8EGEGZG0Z0GEZ0ZN00EqNPqXPSkSkFF1F21U2uujujuLjLJLLvL7v7777r7rrrr;rrrir;rirrrrrr7r2ujj2U2YBBU1S5525U1U1U1U2u2uuuuLjYYLYLLLLvL7v7L7v7v777777r7r7r7rrr7rr;r;rrririri;iii;iiiiii:iii:i:i:i:i:i:::::::::::i:::::i:::::i:i:i:i:i:i:i:::i:i:i:i:iii:iii:iiiiiiiiii;iiirir;ri;irirrr;rrrrrr7777v7L7v7v1Z802uL7iL880OqPXqqNXNXqPNqNPNq0q0q0qNOBZ88MGZZ88MM@B@@@GSuU2F1FFS55uMB25F7777777v77Jvirrrrrrrrriririr;rir;riri;iri</span></span><br><span class="line"><span class="comment">//OMMMOMMMMMOMOMMMMMMMOMMMMMMMMMOMOMOMOMOMOMOOOOOMOM8MOMOOOO8O8O8O8O8O8OGOGOGOGO88G8GOGOZ8G8Z8ZGZGZGE8EGEG0ZEZEG0Z0Z000Eq0q0XNkPkkSSFF21U2UUuujujjLjLYLLvv777v7777rrrr;r;riririrrrr7r7uJYuu2uuMBu5FF1115U5U1u2uUuUjuJJYJLJLYLLLLvL7vvv7v7v777777r7r7r7rrrrrrrr;rir;ri;iri;iiiiiiiiiiiiiiii:i:i:::::i:::::::i:i:::::i:i:i:::i:i:i:::i:i:i:i:iii:iii:iii:iiiiiiiiiiiiiirir;rir;rir;r;rrrrrr7777v7Lvv7LuSNON5YY;7ZO0OENP0q0N0PNq0qENE0Z0ZEG0ZMMZ8M@B@B@@@MOPFuUUF1S5S5F5S121@GUS277777v7772rrrrrrrrrrrririr;rir;r;riririi</span></span><br><span class="line"><span class="comment">//MMMMMMMMMOMOMOMMMMMMMOMOMMMOMOMMMOMOMOMOMOMOMOMOMOO8MOM8O8OGO8O8OOO8OGOGO8OG8ZOG8Z8ZOZ8Z8Z8E8Z8Z8ZGZZEGZZZGEZEG0G0Z0E0Eq0N0XPkPSkFk1511U1u2jUuujuLJLYLLvv7v7v77r7r7rrrr;r;r;rr7rrrrvuLjJUu2YMMU2S1S112121U2U2u2uuJjLJLYLLLLvLvLvv7v7v7v777777r7r7r7r7rrrrrrrrrriririri;iiiiiiiiii:iii:i:i:i:::::::i:::::::::::::::i:::i:i:i:i:i:i:i:i:i:i:i:i:i:iiiiiiiiiiiiii;iii;iririririr;rirrrrrr7r77v7vvLvL7Lu210MM5j77qBEOOZqE000Z0Z0ZEZZZEGE80ZZ@B@M@811S11uujUU55F5SFF1S1F1F12P@S2Sjr77777rYj;rrrrrrrrrr;r;rrririr;riririri</span></span><br><span class="line"><span class="comment">//OMOMOMOMOMOMOMOMOMMMMMMMMMMMMMOMMMOMMMOMOMOMOMOMOM8MOO8MOM8O8O8O8O8OGO8OGO8OGOG8GOZOG8GOZOZGZGEGE8ZGZZE8ZZ0GEGEGEE0ZEEN0qNq0XPkPSXFS5511U1uUuuJuJjYJLYLLvL7v777777rrr7rrrrrr;rr7rrrvvLLjjUuJOMuF1F15U5U1U1U1uUuuYjYJLJLYvLvLvL7Lvv7v7v7v7777r7r7r7rrrrr7rr;rrrir;ri;i;iiiiiiiiiiiiii:i:i:::i:i:::::::::::::::::::::::::::::i:i:::i:i:i:::i:iii:i:i:iiiiiiiiiiii;iii;i;iriririr;r;r;r;7r7r77v7vvLvv7L25j5EBBEL75B8OMMEGEG0GE8Z8G8GOZ88MB@O@BMB@ZuLUUF5S5S5S5S5F1S5S1F1S2u8@15FL77777ruYirr7rrrrrr;rrr;rirrr;r;rir;rir</span></span><br><span class="line"><span class="comment">//MOMMMMMMMOMMMOMOMOMOMMMMMOMMMOMMMMMOMOMOMOMOMOMOM8MOM8O8M8O8OOOOO8OGO8O8O8OGOZOGOG8G8ZOZOG8G8Z8Z8EGZ8EGEGEGEZEZEGEZ0E00qEN0PqPqkXSX5S1F15U1uUuuJuJJYjLLvLvv7v77r7r7rrr7rrrr;r;rr7rr7vvYLjuuL8OU1F552121U221u2uujjJjYJLJLYLYvLvL7Lvv7v777777r7r7r7r7rrrrrrrrrr;r;r;ri;iriii;iiiiiiii:iii:i:i:i:i:::::::::::::::::::::::::::::::i:::i:i:::i:i:i:iii:i:iiiiiiiiiiiiiiri;i;iririr;r;r;rrr;rr7r77v7vvLvL7Y2FUuuqB@82uGMOOMO8G8ZOGOG8GOOB@@BMFLP@BBB@BPY25S5F5S5F5S5S1F1S1F5FU2MB2F5vr777rF7ir7rrrrrrrrrrrr;rrrrrir;rir;ri</span></span><br><span class="line"><span class="comment">//MMOMMMOMOMOMMMMMMMMMMMMMOMMMMMMMOMOMOMOMOMOMOMOOOMOMOOOOOO8O8OOO8O8OGO8O8OG8GOZ8G8GOZ8ZOZ8G8G8Z8E8EGZ8ZGEGEZEZEZEGEZNENEqEqNPqXqkPSSFS252522u2uuuuJJLYvYvLvv7v7v77r7r7rrr7rrrrr7rrrv7vvJYujJEMuF151521U1u1U2uUJuJjYJYYLYLLLLLL7Lvv7v7v7v777777r7r7r7r7rrrrrrrr;riririiiiiiiiiiiiii:i:i:i:i:::::i:::::::::::::::::::::::::::i:::::i:::i:i:i:i:iii:iiiiiiiiiiiiiiiiii;i;i;i;;r;rirrrrrr7rrr7rv7v7vvLvL7L1S21juFMBMEM@BM@MMMMMBMB@@B@BMP2jUj1B@MBM@@MuuU55F1F5F1F1F1F1F1F15uFBOuS2777rvSrirrrr7rrrrrrrrrrrr;rir;riririr</span></span><br><span class="line"><span class="comment">//MOMOMOMOMOMOMOMMMMMMMOMOMMMMMMMMMOMMMOMOMOMOMOMOOOOOO8M8O8O8O8OOO8O8O8O8O8OGOGOZOZ8GOZ8Z8Z8G8Z8G8ZGEGE8EG0G0ZEGEZEZ0Z0ENEN0qNXNkPkXFkFS1525U2uUjuJuJJYYLYvL7v7v7777r7r7r7rrrrrrr7r77v7LLLJuY0O21F1F2121U2U2uUuuJJYJLYLYLLLLvLvvvvvv7777777777r7r7r7rrrrrrrrrr;r;riri;iiiiiiiiiiii:iii:iii:::i:::i:::::::::i:::::::::::::::i:::::::::i:i:i:i:iiiii:i:iiiiiiiiiiiiiiii;iri;iririr;r;rrrr7r7r7777v7LvLvL7JFS1512JuZMGMB@B@B@B@BBOOEP1UJ2UF15JOBMMMOB@@Pjj11F155F55251F252F25ukB8uSu77rLXirrrrrrrrrrrr7rrrr;r;rirrrir;;i</span></span><br><span class="line"><span class="comment">//OMOMMMMMMMOMOMMMOMOMMMOMOMMMMMOMMMMMOMOMMMMMOOOMOOOO8MOO8O8OOO8OOO8O8O8O8O88GOGOZOG8GOG8GOZ8G8GGZ8Z8ZGZ8EGEZEZEZEE0Z0ENE0Eq0q0PNXqSXFSFF1521u2uUuuJuYjLYLYvL7L7v7v777777rrr7;rrrrrr7777LvJYYkMuF552521U22UuUuujuJjYJLYLYLYvLvL7v7v7v7v777777r7r7r7r7rrrr;r;rrr;riririri;iiiiiiiiiiiiii:i:::i:::::::::::::::::::::::::::::i:::::i:i:i:i:i:i:i:i:i:i:i:iiiiiiiiiiiiiiiiri;i;i;ir;r;r;rrrrrr7r7r77v7vvLvv7uFF15u200JuuUuUuUu2UUuujuu11F5F1S1uN@BMMMOMB@BSLuUF25151525151FU522jPBZukj7r2Fiirr7rrrrrrrrrrrrrrrr;rrrrr;rir</span></span><br><span class="line"><span class="comment">//MOMOMMMOMMMMMMMMMMMOMMMOMOMMMMMMMOMOMMMOMOMOMOMOMOOOM8MOMOOOO8OOOGO8O8O8OGOGOGOZ88OZOGOG8GOZ8Z8Z8E8Z8ZGE8ZZEG0GEG0ZEE0ENE00q0PNPNXXSkFS5F2F21UUuUuUYuYjYJLYvL7v7v777777r7rrr7r7rrr7777vvLLYLkGUu5U121U1U2uUuujuYjYjLJLLLYLLvLvLvv7v7v7v7vr777r7r7rrrrr7rrrrrr;rir;ririri;iiiiiiii:iii:i:i:i:::::::::::::::::::::::::::::::::::::::i:::i:::i:i:i:i:iiiiiiiiiiiiiiii;iiiriiiri;ir;r;rrr;rrrrrr7r77v7LvLvv7155218EU52S2F1525152F5F5F1F5S1F15j1B@MMMMMMM@BM2JJ2U52F152F2F212511JPB0uSLrk5irrrrrrrrrr7r7;rrrrrrriririrrri</span></span><br><span class="line"><span class="comment">//MMOMOMMMOMMMOMOMOMOMOMMMMMMMMMMMOMOMMMMMOMMMOMOMOMOOOM8MOMOOOO8O8OOO8O8O8O8OGOGOGOGOG8Z8ZOG8G8Z8G8ZGZ8E8EGEGEZ0ZEZ0ZEZ0E0EqENNq0PqXXkkFk5F2521u2uUuuJjYJYYLLvLvv7v777777r7r7r7rrrrr7r77vvLLL18u2U12121U2u2uUjuYJYJYYLYLLvLvLvLvLvv7v7v7777r7r7r7r7rrr7rrrrrr;r;riri;iiiiiiiiiiiiiiiiii:i:i:i:::::::::::::::::::::::::::::::::i:i:::i:i:i:i:i:i:i:i:iiiiiii:iiiiiiii;i;i;i;ir;r;rir;rrrrrrrr7r7777v7LvLvvLF1UOMu55F5k5S1F5S1F5SFF5S5S1F151UY@BMMMMMMMOBB@MSLju12F1525252F2521J0BNu5vNUir7r7rrr7rrrrrrrrrrrrrrrrrrrr;r</span></span><br><span class="line"><span class="comment">//MOMOMOMOMMMOMMMMMOMMMMMOBOMOMMMOMMMOMMMMMOMOMOMOMOM8OOM8MOOOM8O8MOOGO8O8O8O8OGOGOZOG8ZOZ8G8G8G8Z8Z8ZGZ8EGE8EZEG0ZEZ0Z0ZNE0EN0q0P0PPXXkkFS551121u2uUjuYjYJLJLLvLvL777v77r7r7rrr7r7r7r7r77vvLv202u12522u2u1UUjujjJjLJLJLYvYvLvvvL7v7v7v7v77r777r7r7r7r7r7rrrr;rrririririri;iiiiiiiiiiii:i:i:i:::i:::::::::::::::::::::::::::::::::::::::::i:i:i:i:i:i:iiiiiiiiiiiiiiii;i;i;irir;ririr;rrrrrrrrrr7777v7LvLvvU1qBU11F5k5SFS5SFS5F5F5F5F5F1F11uYM@MMMBOMOMOOM@@@XuLuu1U52525U52511uNBquFGUirr7r7rrr7r7r7r7rrrrrr;rrrrrrr;</span></span><br><span class="line"><span class="comment">//MMMMOMMMMMOMMMMMMMMMMMMMMMMMOMOMMMMMMMMMMMOMOMOMOMOMOOOMOO8OOO8OOOOOOM8O8O8O8O8OGO8OG8G8G8GOGGGOZ8ZGZ8Z8EGEZEZEGEZ0ZEE0EEE00NEq0PqPqkXkXFS1F15U2u2u2uuJjYJLjLLvLvv7v7vr777r7r7r7r7r777r77LvLj0UUU1U1U1U2u2jujuJjYjLYLLLLvLvLvLvv7v7v77777777r7r7r7r7rrrrrr;r;r;riririri;iiiiiiiiiiiiiiii:i:::::::::::::::::::::::::::::::::::::::i:::::i:i:i:i:i:iii:i:iiiiiiii;iiiii;i;i;i;ir;ririr;rrrrrr7r777777vvLvv7J5MN21S5S1SFS1S5S5S5S5F5F5F2525U2LMBMOMOMOMOM8MOMB@B82LYuU1U225252512jNBXjM2i;rrrr7r7rrrrrrrrrrrrrr;rrrrr;r</span></span><br><span class="line"><span class="comment">//MOMMMMMOMOMOMOMOMMMOMMMMMMMOMMMMMMMMMMMOMOMMMOMOMOMOOOOOMOOOO8M8MOM8OOOOOGOGOGOGO8OGOG8GOZ8Z8Z8ZGG8ZGE8Z8ZGZGEG08EGEG0ZEG00NENNq0PqXPkXSk5S1F2121u2uuuuJjYjLJLLvvvL77777777rrr7r7r7r77v77777Yq5J2u122U2u2uujuJuLjLJLYLLvLvLvLvL7v7v7v77777777r7r7r7rrrrrr;r;rrr;r;riririii;iiiiiiiiii:i:i:i:::i:::::::::::::::::::::::::::::::i:::::::::i:i:i:i:i:iii:i:iiiiiiiiiiiiiiiiiiririr;r;rrrrrrrrrr7r7r77v7vvvvv72BZUF5S5S5S5S5S5S5S5F5F1F5515U5uL8@MMOMOMOMOMOOOOOBB@MqJYLuU1U1U52F21j0BP0Grrr7r7rrrrrrrrr7rrr7rrrr;r;rrr;</span></span><br><span class="line"><span class="comment">//OMOMOMOMMMOMMMMMMMMMMMMMOMOMMMMMMMMMMMOMOMOMOMOMOMOMOMOMOOOM8MOOOM8OOOOOOM8OGOGOG8GOG8G8GOGOG8ZOG8G8E8ZGZGE8E8ZG0GEG0Z0E0ENEq0q0XqXqkPSk5F1F21U2u2juJjJuLYLYvLvL7v777777r7rrr7r7r7777vvYLJYYLq1uu1U2U1U2u2uuJjYjLJLYvLLLvLvLvLvv7v7v7777r777r7r7r7rrrrrrrrrr;rrr;r;ri;iriiiiiiiiiiii:i:i:i:i:i:::::::::::::::::::::::::::::::::i:::i:::i:i:i:i:i:i:i:i:i:iiiiiiiiiiii;iri;irir;r;r;r;rrrrrrrr7r7777v7vvL7vvOE11FFS5S5S5S5S5S5F5F5F2F15U1U2LMBMOMOMOMOMOOOO8O8OO@B@OXJLLuu2U52525u0BOZurrr7rrr7r7rrrrr7rrrrrrrrrrrrrr</span></span><br><span class="line"><span class="comment">//MOMOMMMMMOMOMMMMMMMOMMMMMMMMMMMMMMMMMOMMMMMMMOMOMOMOMOMOM8OOOOO8O8O8OOMOOOO8OGO8OG8ZOZOGOZ8Z8G8Z8ZGE8Z8ZGZGZGZGEZEG0Z0E0ZqEq0q0PqXqkPSk5F15U1U2uUjjJuYJLYvLvv7v7v77r7rrrr;r;rr7r7r77vvYLYJ1uFPSu1U521u1U2uUjuYjYJYJLYLLLLvLvLvL7v7v7v777777r7r7r7r7r7rrrrrr;rir;ririririri;iiiiiiiiii:i:i:i:::i:::::::::::::::::::::::::::::::::::i:::::i:i:i:i:i:i:i:i:i:iiiiiiiiiiii;iiiiirir;ririrrr;rrrrrr7r7777v7LvLv7FM255SFF5S5S5k5k1S5S1F1F1521U5uYB@OMOMOMOMOMOM8M8OG8GOM@B@8quLLjj22F25Jq@BJUrrr7r7r7r7rrrrr7r7r7rrrrrrrr;</span></span><br><span class="line"><span class="comment">//MMOMOMMMMMMMMMOMMMMMMMMMMMOMMMMMOMMMOMMMMMMMOMOMOMOOOMOMOMOM8OOO8M8O8O8O8O8O8OGO88G8ZOG8GOG8Z8Z8ZGZGEGZ8E8ZGZG0G0ENZ0ZNEq0q0PqXqkPkk5k5F11U2uUuuLJYYLLvL7v77r7rrrriri;iiiiiiiiirr77vvLLujuU210kUU511U122u2JuYjYjLJLYLLLLvLvLvvvL7v7v7v777777r777rrr7rrrrrrrr;rrririri;i;i;iiiiiiiiii:i:i:i:::i:i:::::::::::::::::::::::::::::::::::::i:::::::i:i:iii:iiiiiiiiiiiiiiiiiiiiiiriririr;rir;rrr;rr7r7r7777v7vvL7JMqUSFSFS5SFF5F5S5S5S1F152525uuj@BMOMOMOMOOOM8O8OOOGOGOZOM@B@MO5UYJYuuUYXBZJUrrr7r7r7rrrrr7rrrrrrrrr7rr;r</span></span><br><span class="line"><span class="comment">//MOMMMOMOMMMOMMMMMOMMMMMMMMMMMMMMMMMMMMMOMMMOMOMOMOMOOOMOM8MOOOMOM8OOO8O8OOO8O8OGOZOGOZOG8ZOZ8G8GGZOG8Z8ZGEZ0G0Z0ENEN0q0qNXPXXSkSk5S1521uuuUjuLYLLvL7v7777rrrriiiiii:::::::::::::i;77LLuu2u55FPN2F1F2121U2uuJuJjYJLJLYLLvLvLvL7v7v7v77777777r7r7r7r7r7rrrr;rrr;rir;ri;i;i;i;iiiiii:i:iii:i:::i:::::::::::::::::::::::::::::::::i:i:i:::::i:i:i:i:i:iii:iiiii:iiiiiiiiiiiiiiririririrrrir;rrrrrrrr7r77v7vvLvv7G815F5k5S5SFSFS5S5S551F251F21LPBBOMOMOOOM8MOOOOGOGO8OGOGOEG8BB@BBZ02UJYvSBNjUrrr7rrr7rrr7r7r7r7r7rrrrrr;</span></span><br><span class="line"><span class="comment">//MMMMOMOMMMMMMMMMMMMMOMMMMMMMMMOMMMOMMMMMOMMMOMMMOMOMOMOMOMOM8OOOOO8O8OOM8O8O8O8OGO88Z8GOZ8GOG8GOG8Z8E8ZZ0Z0E0EN0qNPNXqkqSkSk5S1F12U2uuJuYYLYvv7v7777rririiii:i::::,:,,.......,,::i;7vuj2155Pk00S5F5525U1uUjuJjJJLJLYLYvLvLvvvLvv7v7777777777r7rrrrr7rrrrrrrr;rrr;riri;i;i;iiiiiiiiiiii:i:i:i:i:i:::::::::::::::::::::::::::::::::::::i:::i:i:i:i:i:i:i:i:iiiiiiiiiiii;i;iiiri;iririrrrrrrr;rrrrrr7r77v7vvLv7u@515SFkFS5SFk5S1F5F1F1F2F25uYO@MMOMOMOO8O8O8O8O8OGOGOGOGOG8ZGGBM@B@BBMOkXBGYurrr7r7r7r7rrr7r7rrr7rrr7rr</span></span><br><span class="line"><span class="comment">//MMMMMMMOMMMOMMMMMOMOMMMMMMMMMMMMMMMMMMMMMMMMMOMOMOMOMOMOMOMOMOO8MOM8O8OOOOO8OGOGOG8G8G8GOZOGOZOZ8EGEZEGEZN0NEqNqqkPkXFkSF1525u2uUuuJjLYvv7v7777rri;iiii::::::,,....           ..,:irvLuUS5kXqNOSFFF2515UUuujuYJYJLYLLLLvLvLvvvvvv7v7777r7r777r7r7r7r7rrrrrr;rrrir;riri;iii;iiiiiiii:iii:i:i:i:i:::::::::::::::::::::::::::::::::::i:i:::::i:::i:i:iiiii:iiiiiiiiiiiiiiiiii;i;i;i;irir;r;rrr;rrrr7r7r77v7vvL77G8UFFS5S5FFS5SFS5F1S1F1F25Uj2@BMOMOMOOOO8O8OGOGOGO8OZ8G8G8GOZ88OZGZOMBB@B@BMuJrrr7rrrrr7r7r7r7rrr7rrrrr</span></span><br><span class="line"><span class="comment">//OMOMMMMMMMOMOMMMMMMMMMMMMMMMMMOMMMMMMMOMMMMMOMOMMMOMOMOMOMOMOMOMOO8O8MOM8OOO8OGO8O8OGOG8GOZOGOZOE8ZZEZq0P0PNPqkXSk5k5F2521u2uuJuJYLYvL7v77rrrri;ii::::::,,......                 .:irLJ21SFqPEOq1S5F2222uuJuJuYjYJLYLLLLvLvLvvvv7v7v7777r7r7r7r7r7rrrrrrrr;r;r;r;riririri;i;iiiiiiiiii:i:i:i:i:::::::::::::::::::::::::::::::::::::::::i:::i:i:i:iiiiiiii;i;iririr;r;r;ririr;ririririr;rrr;rrrrrrrr7rv777LvLr2BX2F5kFS5SFF5F5S1F5S1F1521LOBBOMOOOO8O8OGOGOGOGOG8GOZ8G8GOG8G8OOZ8G8Z8EGZM@@uLrrr7r7r7r7rrrrr7r7rrrrrr</span></span><br><span class="line"><span class="comment">//MOMMMOMOMMMMMMMOMMMMMMMOMMMMMMMMMMMMMMMMMMMMMOMOMMMOMOMOMOMOMOMOM8MOMOOOM8OGOGO8OG8GOZOG88OZ8Z8ZGEZNEN0P0XqXkFk5F5F21U1UUuuJuYjLYvL7v77rr;rii:i:::::,,,....                       .:;rYu55kXZqO0F5S1121UUuuJuYjYJLYLJvLLLvL7L7v7L7v77r77777r7r7r7r7r7rrrrrrrr;r;r;riri;iiiiiiiiiiiiii:i:i:i:i:::::::::::::::::::::::::::::::i:::::::i:iiiiiiiiiiiii:iii:i:::::i:i:i:i:iiii;ir;rrrrrr7r7rrrrrrrrrrr7r7r77vvvvv7GM51SFSFSFS5F5F5F2F5F1F11J1@@OMOMOM8OOO8O8O8OZOGOGO88888OGOGOGOOOGOG88OGOZ8B@17r7rrrrr7r7r7r7r7rrr7rrr</span></span><br><span class="line"><span class="comment">//OMOMMMOMMMMMMMMMMMMMOMMMOMMMMBMMOMMMMMMMMMMMMMMMOMOMOMOMOMOMOMOM8MOMOMOM8O8O8O8OGOGOGOGOZ8ZOZGEZ00q0qqPPkXFSFS5521U1uuuuJuYJLLLL7v77rririiii::::,:,,....                           ::rvjuF5k0ZOO2S5521UUuujuYjYjYYLYLLLLvLvvvLvv7v7v7v7777r77777r7r7rrrrrrrrrrrriririri;iriii;iiiiii:i:i:i:i:i:i:::::::::::::::::::::::::::::::iii:i:i:i::::::::,::::::::::::::::::::::::::::::i:iiiirrrr7r7r7rrrrr7r7777vvvvvLBZ11S5k5S5S5S5S1F1F1F1FuYO@MOOMOO8O8OGOGOGOG8G8GOGOG8ZOGOZOG8GOMOGO888O8OGOB@Frr7r7r7rrrrr7rrr7r7rrrr</span></span><br><span class="line"><span class="comment">//MOMOMMMMMOMMMOMMMOMMMOMMMMMMMMMMMOMMMOMMMMMMMMMMMOMOMOMOOOMOOOMOMOMOOOMOO8O8O8O8OGO8OZ8G8ZGZG0ENEqNPPkkFk5S5F21U2uUuujjJjLYvvvv77rrrriiii::::::.,.... .                            .:i7vuUS1NEOM51F15U5uUjuJuYuYjYJLYvYvLvLvL7v7v7v777v77r7r7r7r7r7r7r7rrrrrr;r;r;riririiiiiiiiiiiiii:i:i:i:i:i:::::::::::::::::::::::i:i:i:i:i::::,:,:,::::::::::::::::::::::::::::::::i:i:i:i:i:i:i:i:ii;ir777v77rrr7777v7Lv71@X15S5k5S5SFS5F5S5F5FUu5@BOOMOOOO8O8O8OG8G8Z88OGOGO8O8OG8GOGOGMM88OGOGOG8GOB@Sir7r7rrr7r7r7r7rrr7rrr</span></span><br><span class="line"><span class="comment">//MMMMOMMMMMMMMMMMMMMMMMMMMMMMMMOMMMMMMMMMOMMBMMMMMMOMOMOMOOOMOMOMOOOOOMOO8O8O8O8O8OZ8GOG8ZGEZ0EqEqqXXSX5S5S15U1u2uujuYjYYvLvvvv77rrrrii:i::::,:...... .                              .:ivLu2S58OBF215U1uUuujuYjJjYJLJLLvLvLvLvvvv7v7v77777777r7r7r7rrrrr7rr;rrr;ririririri;iiiiiiiiiiiiii:i:i:i:i:::::::::::::::::i:i::::::::,:,:,:,::::::::::::::::::::::::::::::::::::i:i:i:iii:iii:iiiiiiiiii;r77vvv77r77vvLvvEB555SFS5k5S5SFS1S15UuJ@@M8MOMOM8O8OGOGOGOG8GO8OGO8OG8Z88888GOZMM8G8GO8OGOG8B@Fir7r7r7r7rrr7r7rrr7r7</span></span><br><span class="line"><span class="comment">//MOMMMMMMMOMOMOMMMOMOMOMMMOMMMMMMMOMMMMMMMMMMMMMMMOMOMOMOMOMOMOMOOOMOOOMOO8OOO8OGOG8Z8Z8EZ0EN0qqXPkkFkSS5F21UUuUuujuJjLJvLvv7v77r7rrii:i::::,,.,....                                 .,irLJ225EMBNu111U2uUuuJuJuYJYYLLLLvLvLvLvv7v7v777777r7r777r7r7rrrrrrrrrrrrrr;ririririiiiiiiiiiii:iii:i:i:::::i:::::::::i::::::::,:,:,:::,:::::,::::::::::::::::::::::::::::::i:i:::::i:i:i:iiiiiiiiiiiiiiiiiiii77vLLvv7v7L7uMM25FS5S5kFS5SFS1512LMBBOMOOOOOO8OGOGOGOZOG8G8Z8GO8OGOGOGOGO8OGBO8GOGOGOOO8OB@Pii7r7r7rrr7r7r7rrr7r</span></span><br><span class="line"><span class="comment">//MMMMOMMMMMOMMMMMOMMMOMMMOMMMMMOMMMMMMMMMOMMMMMMMOMOMOMMMOMOOOMOMOMOOOMOM8O8OGO8OG8Z8ZGEZq0q0PPkXFSFS5F1521u2uUuUjjJjLjLYLLvv7v77rriiii::::,:,,...... .                               ,:r7Jj1uXM@ZuU1U2u1jujuYjYJYJYYLYvLLLvLvv7v7vvv7v777777r7r7r7r7r7r7rrrr;rrririr;ri;i;i;iiiiiiiiiiiiii:i:i:::i:iii::::::::,:,:,:::::,::::::::::::::::::::::::::::::::::::::::::::::::::i:i:i:iiiiiiiiiiiiiiiiiiiiiiirLJuJY777PBEUSFS5kFS5S1S5F22LZB@OMOMOM8OGOGO88Z8GOGOG8GOGOGO88GOG8GO8OGO8BOO8O8OGO8O88B@Gri777r7r7rrr7r7r7rr</span></span><br><span class="line"><span class="comment">//MOMMMOMOMOMMMOMMMMMMMMMMMMMOMMMMMMMMMMMMMMMMBOMMMOMMMMMOMOMOMOMOMOMOOOOOOOO8OGO8OGGEG0Zq0PqPPSkFS5S5F11U1u2uujujujuYJYYLYvLvv7vr7rriiii:i::::,,,,.... .                              .:i7vJuUuOBMj222U1UUJuYjJjYJLYLLLYvLvLvL7v7v777v77777777r7r7r7rrrrr7r7rrrririr;ri;i;i;iii;iiiiiiii:i:i:i:i:iii::::,:,,,:::::::,:::::::,::::::::::::::::::::::::::::::::::::::::::i:::i:i:i:i:iiiiiiiiiiiiiiii;iri;iiiirLuFuLJZBk2SFS5F5SFS5F22Y8B@8MOMOOOO8O8OGOG88OG8G8GOG8GOZO88GO88GOG8GOO@88GO8OOM8OOOM@M7i777r7rrr7r7r7r7r</span></span><br><span class="line"><span class="comment">//MMOMMMMMMMMMMMMMOMMMOMMMMMOMMMMMMBMMMMMMMMMMMBMMMMMMMMMMOMOMOMOOOMOMOOOO8O8O88GGEG0Eq0PNXqSXFSFS5F11U1u2uUuUuujuJuJuYJYYLYLLvLvv777ri;iiii:i:::::,,,.,.... .                         .:iivLuujq@B2j2u2u2uujuYuYJLJLYLLvLvLvL7vvv7v7v7v7777r7r777r7rrr7r7rrrr;r;r;r;rrr;ri;iiiiiiiiiiii:i:iiiii:i::::,:::,:,:,:::::,:,::::::::::::::::::::::::::::::::::::::::::::::::i:i:i:i:i:i:iiiiiiiiiiiiii;iiiii;iriri;i;rj2XkMM22S5SFF5SFF2ujMB@OMOMOOOOOO8OGOGOGO8OGO8OGO8OGOZ8GOGO8O8O8O88MB8O8O8MOOOMOOM@Bvi7r7r7r7r7r7r7r7</span></span><br><span class="line"><span class="comment">//MOMOMOMMMOMMMOMMMMMOMMMMMMMMMMMMBMMMBMMMMMBMBMMMMMMOMOMOMOMOMOMOOOMOMOOOO8OG8G8EZ00qNqNXPSXFk5F1F2122U2u2uujuJujuJuYuJjLjYJLYvLvv7v77r7;ri;iiii::::::,:,,......                      .::r7LJuj2@@Fuu2u2uUjjJuYuYJLJLYLLvLvLvLvLvvvv77777777r777r7r7r7r7r7rrrr;rrrrririririiiii;iiiiiii;iiii::::::::::::::,:,:,:,:::::::::::::,::::::::::::::::::::::::::::::::::::::i:i:i:i:i:i:i:i:iiiiiiiiiiii;iii;irir;;;r;;ir7N8@021kFS5S5FUu1@BBOMOMOOOOOOOO8OGOGO8OGOGO8OGOGO888OGO8OGOOO8OG8BB8OOOOM8OOMOMM@Bui777r7r7r7rrrrr</span></span><br><span class="line"><span class="comment">//OMOMOMOMOMMMOMOMOMMMOMMMOMMMMMMMMMMMMMMMMMMMMMMMMBMMOMMMOMOMOMOMOMOM8M8OG8GOZ8EENEqNPqkPFk5S1F1521u2U2uUuUuUuUjuuujujuJjYjYJYYLLvL7v7v77r7rrrri;iii:::::,:,:.,.....                 .,:ii7vJjuYOBGLuu2U2uuJjJjYjLYLYLYvLvLvLvvvv7v7v7v777777r7r7r7rrr7r7rrr7rrrr;r;rrrir;;i;i;iiiririiii::::::::::::::::::::,::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:i:i::ii:iii:iiiiiiiiiiii;iiiii;ii;ririrrrr;7FO@k25S5S55juZ@@BOMOMOMOM8O8O8O8OGOGOGOGO8OGOGO8OGOGOGO8O8O8OOO8OBBGOOOOMOMOMOMM@@kirr7r7r7r7r7r7</span></span><br><span class="line"><span class="comment">//MOMOMOMOMMMMMOMOMMMMMOMMMOMMBMMMMMMMMMBMMMMMBMMMMMBOMOMOMOMOMOMOMOMOOOOGOGOZG0ZqNqqXPSkFS5S5F2125U1u2UUuUuUu2uUuujUjujuJuJuJJYjLYLLvLvv7v77r7rr;ri;iiii:i::::,:,,.,......         ..,,:ir7LJujj1@BYJUU2uUjuYjJjLJLYLYLYvLvLvL7v7v7v7v777v777777r7r7r7r7r7r7rrrr;r;rrriri;irir;7rrii::::::::::::::::::::::::::,::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:i:i:iiiiiiiiiiiiiiiiii;iiiri;iririrr7rrYUO@215S22YX@@BMOMOMOMOMOM8O8O8OGOGO88GOGOGOGOGO8OGOGO8O8O8O8O8O8MBM8OOMOMOMOMMMO@B8iir7r7rrr7rrr</span></span><br><span class="line"><span class="comment">//OMMMOMMMMMMMMMOMMMMMOMOMMMMBMMMBMMMMMMMBMMMMMMMBMMMBMMOMOMOMOMOMOMOMOO8OGGEZ00qNPPkXFX5S5F1525U121u2uUuUu2uUuUuUuUuUuuuujuJuJuYjYJLLvLvv7v7777r7rr;riiii:i:::::::,,,.,.............,:::rrvLJJUjuB@UJu1uUuuJuYjYjLJLYLYvYvLvLvL7v7v7v777777r7r7r7r7r7r7r7rrrrrrrrrrrririr;rr7rrii:::::::i::::::::::::::::::,:,:,::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:i:i:iii:iiiiiiiiii;iii;iiiri;iririr;rrrr7uSBGu5uj2MB@BMOMOMOMOMOM8OGOGOGOGO8OGOG88O8O8OGOGO8O8OOO8MOOOOOOGMBOOMOMOMOMOMMMO@B@r:i7r7r7r7r7</span></span><br><span class="line"><span class="comment">//MOMOMOMMMOMOMOMMMMMOMMMMBMMMMMMMBMMMBMMMBMBMMMMMBMBMMOMOMMMMMOMOM8OOO8OG80EN0PNkPFXFSFS1F151122U1uUu1u2u2uUu1U2uUuUuuuujujuJjJuYJLYvLvvvv7v77r7rr;ri;iiii:i::::::,:,,,,.,...,.,,:,::iirr7vJjUu1Y0BEvUu2uUjuJjJJYJYJLYLYvLvLvL7v7v7v7v77777777r7r777r7r7rrrrrrrrrrirrrr7r7;i:::i:i:i:i:i::::::::::::::::::::::,:,::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:::i:i:i:i:i:iiiiiiiiiiii;iiiiiii;i;;rirrrr7;7YOBFL28@B@O@BMOMOMOMOMOOGO8O8O8OGO888OGO8OGOGOGO8OOO8O8O8OOOOM8O8MMMOMOMOMMMOMMMM@B@v:irr7r7rrr</span></span><br><span class="line"><span class="comment">//OMOMMMMMMMMMMMOMOMMMMMMMMMMBMMMMMMMBMBMBMMMBMMMMMBMBMMMMOMMMMMOMOOOOOOZ8EZNNPqkPSXFS5F21152125U2U2u1u2U2u1u1u2uUu2uuuuuujuJJLJYYvLLLvv7777r7rrrr;iiiii:i::::::,:,,,,.,.,.,.,.::::::iirrvvJYUU22Uj@BYu2U2uuJuJuJJYJLJLYvLLLvvvL7v7v777v7v777777r7r7r7r7r7r7rrr7rrrrr7rr;i:i:i:i:i:i:i:i::::::::::::::::::::::::,::::::::::::::::::::::::::::::::::::::::::::::::::i:i:i:i:i:i:i:i:i:i:iiiiiiiiiiii;i;iririririr;rrrr7r7Y@BOB@@BMMO@MMOMOMOOOO8O8OGOGO8O8OGOG88OGO8O8O8O8OOOOO8MOM8M8O8M8BMOOMOMOMOMMMMMMBB@1::rr7r7r7</span></span><br><span class="line"><span class="comment">//MOMOMOMMMMMMMMMMMOMMMMMMBMBMBMBMBMBMMMBMBMMMMMMMMMMMBMMMMMMMMOMMMOMOOG8EZN0PPkXFS5SFS5F252522U1U221u121u1U1U2U1uUjUuUjuJuYJLYLLvLvv7v77r7rrrri;iiiiii:i::::::,,,,.,.........,,::::i;rrvvjJuu125UjO@Uju2uUJujuJuJuLJYYLLLYvLvLvv7v7v7v7v777777r7r7r7r7rrr7rrrrr7r7r7ii:i:iiiiiiiii:::i:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:iii:i:iiiiiiiiiiiiiiiiriri;iri;irir;rr7ri2@@@MMMBMMM@OMOOOMOMOO8O8OGO8OGO8O8OGOGO8O8O8OGO8OOOOOOO8M8OOMOMOBOMOMMMOMMMMMMBMBB@Gi:rr777r</span></span><br><span class="line"><span class="comment">//MMOMOMOMMMMMMMMMMMMMMBMBMMMBMMMMMMMBMMMBMMMMMMMBMMMMMMMMMMOMOMMMOO8O8OZZ0EPqkPSk5S1F152F21U1U1U52121U121u1U2u2u2uuuujuJuYjLLLLvv7v777777rrrriiii:i:i::::::,:,,.,.............:,::;ir7vLJjuu1U515u5BNLUuUuujuYjYjLJYYLYvLvLvLvLvv7v777v7v7v77r77777r7r7r7r7r7r7rriiiiiiiiiiii:iii:i:i:i::::::::::::::::::::::::::,::::::::::::::::::::::::::::::::::::::::::::::::i:i:::::i:i:iiiiiiiiiiiiiiiiiiii;iiiii;i;irir;rrrrrr7riM@BMMMMMMMB@8MOMOOOO8O8OGO8OGO8OGOGO8O8OGO8O8OOO8OOMOM8MOMOMOMOOMBOMOMOMMMMMMBMBMBB@@7,i;7r7</span></span><br><span class="line"><span class="comment">//MOMOMOMMMOMMMMMMBMMMMMMMBMMMMMMMMMMMMMMMMMMMBMBMMMMMBMMMMMMOMOMOMOM8O8GEZ00XPSXSS5S1F5F1F25252125U52522U1u2u2uUuUuujuJJLJLYLLvLvv77r7rrrri;i;iiii::::::::::,,................,::ii77vLJJUu2252F22u@BJjUuuuuJuYjYJYjLYLYLLvLvLvLvv7v7v7v7v777777r7r7r7r7r777rri;iii;i;iiiiiiiiii:i:i:i:i:i:::::i::::::::::::::::,::::::::::::::::::::::::::::::::::::::::::::::::i:::::i:i:i:i:i:iiiiiiiiiiiiiiiiriiiriririr;rir;rrrrrr7ivB@MMOMMMOMBB8OOOOOOO8O8O8O8OGOGO8OGOGO8O8M8O8M8O8M8MOMOOOMOMOMOMBBOMMMMMMMMMMBMBMBB@B1:ir7r</span></span><br><span class="line"><span class="comment">//MMOMOMOMMMMMMMMMMBMMMMMMMMMMMBMMMMMMMMMBMMMBMBMMMMMBMBMMMMOMOMOMOMOM8OZ8E0NqkPSk5S1F1S1S1F551F1525U51122U1u2u2uUjUuuJjLJLYvLvL7v7v77rrrrrri;iiiiii:i::::::,,.,........ . ....,,::rrLLujUU5251S1F2uN@Uuu2uUjuJuYuJjYJLJLYLLvLvLvL7L7v7v7v7v77777777777777r7r;i;iri;iiiii;iiiiiiiiiiii:i:i:i:i:i:i:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::i:i:i:i:iii:iiiiiiiiiiiiii;iriiiririririr;rirrrrrr7r7:NB@MBOMMMOBBMOMOO8OOO8O8O8O8OGO8O8O8O8O8M8OOMOM8MOMOOOMOMOMOMOMOMBMMMMMMBMBMBMBMBMBB@B8::r7</span></span><br><span class="line"><span class="comment">//MOMOMMMMMMMMMMMMMMMMMMMMMMMMMMBMMMMMMMMMMMMMMMMMBMMMMMMMMOMMMMMOMOM8OGOEENNXqFk5F5525252525U522U1U2u2uUuuuuJuJjYjLLLYvLvv7v7777rr;ririiiiii::::::::,,.,...... . .             ..::rrvLjjUU1212121J2BGvujuYJLYLYLYvLvLvv7v7v77777777r7r7r7r7rr;r;rir;ri;ii:iii:i:i:i:i::::::::::::::::::::::::::,:,:,:,:,,,:,,,,.,.,.,,:,,,,,,,,,,,,,:.:,,,:,:,,,:,:,,,:,:,:,:::,:,:,:,::::::::::::::::::::::::i:i:i:i:i:iii:i:iiiiiiiirri:B@BOMMMOM8B@O8O8OGOGOGO8OGOZ8GOGO8O8O8O8O8O8O8O8OOOOMOMOMOMOMOMOBMMMMMBMMMBMBMBMBMBM@B@Yii</span></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
        <category>BFS</category>
      </categories>
      <tags>
        <tag>kuangbin带你飞</tag>
      </tags>
  </entry>
  <entry>
    <title>POJ 1321 棋盘问题 (DFS + 回溯)</title>
    <url>/2018/08/10/POJ-1321-%E6%A3%8B%E7%9B%98%E9%97%AE%E9%A2%98-DFS-%E5%9B%9E%E6%BA%AF/</url>
    <content><![CDATA[<p>传送门：<a href="http://poj.org/problem?id=1321">棋盘问题</a></p>
<blockquote class="blockquote-center">人一我百！人十我万！永不放弃～～～怀着自信的心，去追逐梦想 ——kuangbin </blockquote>

<h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>在一个给定形状的棋盘（形状可能是不规则的）上面摆放棋子，棋子没有区别。要求摆放时任意的两个棋子不能放在棋盘中的同一行或者同一列，请编程求解对于给定形状和大小的棋盘，摆放 k 个棋子的所有可行的摆放方案 C。<span id="more"></span></p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>输入含有多组测试数据。<br>每组数据的第一行是两个正整数，n k，用一个空格隔开，表示了将在一个 n*n 的矩阵内描述棋盘，以及摆放棋子的数目。 n &lt;= 8 , k &lt;= n<br>当为 - 1 -1 时表示输入结束。<br>随后的 n 行描述了棋盘的形状：每行有 n 个字符，其中 # 表示棋盘区域， . 表示空白区域（数据保证不出现多余的空白行或者空白列）。 </p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>对于每一组数据，给出一行输出，输出摆放的方案数目 C （数据保证 $C \le {2^{31}} $）。</p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">2 1</span><br><span class="line">#.</span><br><span class="line">.#</span><br><span class="line">4 4</span><br><span class="line">...#</span><br><span class="line">..#.</span><br><span class="line">.#..</span><br><span class="line">#...</span><br><span class="line">-1 -1</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">2</span><br><span class="line">1</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">char</span> mz[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="type">bool</span> visrow[<span class="number">10</span>], viscol[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> used)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(used == k)</span><br><span class="line">    {</span><br><span class="line">        ans++;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span>(i &gt; n)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(mz[i][j] == <span class="string">'#'</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(!visrow[i] &amp;&amp; !viscol[j])</span><br><span class="line">            {</span><br><span class="line">                visrow[i] = <span class="literal">true</span>;</span><br><span class="line">                viscol[j] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">dfs</span>(i<span class="number">+1</span>, used<span class="number">+1</span>);</span><br><span class="line"></span><br><span class="line">                visrow[i] = <span class="literal">false</span>;</span><br><span class="line">                viscol[j] = <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">dfs</span>(i<span class="number">+1</span>, used);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k) &amp;&amp; (~n || ~k))</span><br><span class="line">    {</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(visrow, <span class="literal">false</span>, <span class="built_in">sizeof</span>(visrow));</span><br><span class="line">        <span class="built_in">memset</span>(viscol, <span class="literal">false</span>, <span class="built_in">sizeof</span>(viscol));</span><br><span class="line">        <span class="built_in">memset</span>(mz, <span class="string">'.'</span>, <span class="built_in">sizeof</span>(mz));</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;=n; j++)</span><br><span class="line">                mz[i][j] = <span class="built_in">getchar</span>();</span><br><span class="line">            <span class="built_in">getchar</span>();</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>还是觉得自己太菜了，于是决定刷一遍 kuangbin 带你飞。决心要把每一道题弄会。</p>
<p>上传代码会精简一些，不放头文件堆叠等一些代码。</p>
<p align="right">2018 年 8 月 10 日</p>

<p align="right">于学校</p>]]></content>
      <categories>
        <category>ACM</category>
        <category>DFS</category>
      </categories>
      <tags>
        <tag>kuangbin带你飞</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 牛客网暑期 ACM 多校训练营（第五场）A gpa 01 分数规划</title>
    <url>/2018/08/03/2018%E7%89%9B%E5%AE%A2%E7%BD%91%E6%9A%91%E6%9C%9FACM%E5%A4%9A%E6%A0%B7%E8%AE%AD%E7%BB%83%E8%90%A5%EF%BC%88%E7%AC%AC%E4%BA%94%E5%9C%BA%EF%BC%89A-gpa-01%E5%88%86%E6%95%B0%E5%88%92%E5%88%86/</url>
    <content><![CDATA[<p>传送门： <a href="https://www.nowcoder.com/acm/contest/143/A">2018 牛客网暑期 ACM 多样训练营（第五场）A gpa</a></p>
<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>  At the university where she attended, the final score of her is  ${\sum{s[i]c[i]} \over \sum{s[i]}}$ </p>
<p>  Now she can delete at most k courses and she want to know what the highest final score that can get.  <span id="more"></span></p>
<h3 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">The first line has two positive integers n,k</span><br><span class="line"></span><br><span class="line">The second line has n positive integers s[i]</span><br><span class="line"></span><br><span class="line">The third line has n positive integers c[i]</span><br></pre></td></tr></tbody></table></figure>

<h3 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Output the highest final score, your answer is correct if and only if the absolute error with the standard answer is no more than 10-5</span><br></pre></td></tr></tbody></table></figure>

<h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例 1</h3><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3 1</span><br><span class="line">1 2 3</span><br><span class="line">3 2 1</span><br></pre></td></tr></tbody></table></figure>

<h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">2.33333333333</span><br></pre></td></tr></tbody></table></figure>

<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Delete the third course and the final score is </span><br></pre></td></tr></tbody></table></figure>

<h3 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">1≤ n≤ 105</span><br><span class="line"></span><br><span class="line">0≤ k &lt; n</span><br><span class="line"></span><br><span class="line">1≤ s[i],c[i] ≤ 103</span><br></pre></td></tr></tbody></table></figure>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>大学里有 n 门课，每门课有着自己的学分，gpa 的计算公式为 ${\sum {分数 * 学分} \over {\sum 学分}}$， 现可以最多除去 $k$ 门课成绩，问绩点最多可以达到多少。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这题一看就不可以贪心。是一个 01 分数规划的问题 (模板题)，自己之前在白书上看过，做到这题时忘了，多谢<a href="https://blog.csdn.net/Pandauncle">朱兄</a>的提醒。</p>
<h3 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h3><p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180805/abd5763gC5.png" alt="mark"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180805/K0haJIk0jj.png" alt="mark"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180805/ldK1adHFdA.png" alt="mark"></p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> maxn=<span class="number">1e5</span><span class="number">+7</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> eps=<span class="number">1e-7</span>;</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="type">double</span> a[maxn];</span><br><span class="line"><span class="type">double</span> b[maxn];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;k)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>&amp;&amp;k==<span class="number">0</span>)<span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;b[i]);</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">"%lf"</span>,&amp;a[j]);</span><br><span class="line">       <span class="keyword">for</span>( <span class="type">int</span> j = <span class="number">0</span>; j &lt; n; ++j ) {</span><br><span class="line">        a[j] = a[j] * b[j];</span><br><span class="line">       }</span><br><span class="line"> </span><br><span class="line">      <span class="type">double</span> L=<span class="number">1.0</span>;</span><br><span class="line">      <span class="type">double</span> R=<span class="number">1000.0</span>;</span><br><span class="line">      <span class="type">double</span> mid;</span><br><span class="line"> </span><br><span class="line">      <span class="type">double</span> t[maxn];</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">while</span>(R-L&gt;eps)</span><br><span class="line">      {</span><br><span class="line">         mid=(R+L)*<span class="number">1.0</span>/<span class="number">2</span>;</span><br><span class="line"> </span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">          t[i] = a[i] - mid * b[i];</span><br><span class="line">         <span class="built_in">sort</span>(t, t + n);</span><br><span class="line">         <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> i = k; i &lt; n; i++)</span><br><span class="line">          sum += t[i];</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span>(sum&gt;<span class="number">0</span>)</span><br><span class="line">            L=mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            R=mid;</span><br><span class="line">      }</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">"%.5f\n"</span>,mid);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
        <category>01分数规划</category>
      </categories>
      <tags>
        <tag>01分数规划</tag>
      </tags>
  </entry>
  <entry>
    <title>CodeForces 471D MUH and Cube Walls (KMP + 差分)</title>
    <url>/2018/08/03/CodeForces-471D-MUH-and-Cube-Walls-KMP-%E5%B7%AE%E5%88%86/</url>
    <content><![CDATA[<h2 align="center">D. MUH and Cube Walls </h2>

<div align="center">time limit per test: 2 seconds<br>memory limit per test: 256 megabytes <br>input: standard input<br>output: standard output</div>

<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Polar bears Menshykov and Uslada from the zoo of St. Petersburg and elephant Horace from the zoo of Kiev got hold of lots of wooden cubes somewhere. They started making cube towers by placing the cubes one on top of the other. They defined multiple towers standing in a line as a wall. A wall can consist of towers of different heights.<span id="more"></span></p>
<p>Horace was the first to finish making his wall. He called his wall an elephant. The wall consists of <em>w</em> towers. The bears also finished making their wall but they didn’t give it a name. Their wall consists of <em>n</em> towers. Horace looked at the bears’ tower and wondered: in how many parts of the wall can he “see an elephant”? He can “see an elephant” on a segment of <em>w</em> contiguous towers if the heights of the towers on the segment match as a sequence the heights of the towers in Horace’s wall. In order to see as many elephants as possible, Horace can raise and lower his wall. He even can lower the wall below the ground level (see the pictures to the samples for clarification).</p>
<p>Your task is to count the number of segments where Horace can “see an elephant”.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains two integers <em>n</em> and <em>w</em> (1 ≤ <em>n</em>, <em>w</em> ≤ 2·105) — the number of towers in the bears’ and the elephant’s walls correspondingly. The second line contains <em>n</em> integers <em>a**i</em> (1 ≤ <em>a**i</em> ≤ 109) — the heights of the towers in the bears’ wall. The third line contains <em>w</em> integers <em>b**i</em> (1 ≤ <em>b**i</em> ≤ 109) — the heights of the towers in the elephant’s wall.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print the number of segments in the bears’ wall where Horace can “see an elephant”.</p>
<h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">13 5</span><br><span class="line">2 4 5 5 4 3 2 2 2 3 3 2 1</span><br><span class="line">3 4 4 3 2</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></tbody></table></figure>

<h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><p>The picture to the left shows Horace’s wall from the sample, the picture to the right shows the bears’ wall. The segments where Horace can “see an elephant” are in gray.</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180803/3jljc9If7d.png" alt="mark"></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>首先差分，计算出主串和模式串中相邻数字的差分数组。(去掉首位的)</p>
<p>之后就是 KMP 匹配这两个差分数组了了。</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;cstdlib&gt;</span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">#include &lt;map&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;utility&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#define MAXN 200005</span><br><span class="line">#define INF 0x3f3f3f3f</span><br><span class="line">#define DEBUG</span><br><span class="line">#define DataIn</span><br><span class="line">typedef long long LL;</span><br><span class="line"></span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">inline int read()</span><br><span class="line">{</span><br><span class="line">    int x=0,f=1;char ch=getchar();</span><br><span class="line">    while(!isdigit(ch)) {if(ch=='-') f=-1;ch=getchar();}</span><br><span class="line">    while(isdigit(ch)) {x=x*10+ch-'0';ch=getchar();}</span><br><span class="line">    return x*f;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">int n, w;</span><br><span class="line">int a[MAXN], b[MAXN];</span><br><span class="line">int next[MAXN];</span><br><span class="line"></span><br><span class="line">void prekmp()</span><br><span class="line">{</span><br><span class="line">    int i=0, j=-1;</span><br><span class="line">    next[0] = -1;</span><br><span class="line">    while(i&lt;w)</span><br><span class="line">    {</span><br><span class="line">        while(~j &amp;&amp; b[i]!=b[j])</span><br><span class="line">            j = next[j];</span><br><span class="line">        next[++i] = ++j;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">int kmpcnt()</span><br><span class="line">{</span><br><span class="line">    int i=0, j=0;</span><br><span class="line">    int cnt = 0;</span><br><span class="line">    prekmp();</span><br><span class="line">    while(i&lt;n)</span><br><span class="line">    {</span><br><span class="line">        while(~j &amp;&amp; a[i]!=b[j])</span><br><span class="line">            j = next[j];</span><br><span class="line">        i++; j++;</span><br><span class="line">        if(j &gt;= w)</span><br><span class="line">        {</span><br><span class="line">            cnt++;</span><br><span class="line">            j = next[j];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return cnt;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">int main()</span><br><span class="line">{</span><br><span class="line">    n = read(), w = read();</span><br><span class="line">    for(int i=0; i&lt;n; i++)</span><br><span class="line">        a[i] = read();</span><br><span class="line">    for(int i=n-1; i&gt;0; i--)</span><br><span class="line">        a[i] -= a[i-1];</span><br><span class="line">    for(int i=0; i&lt;n-1; i++)</span><br><span class="line">        a[i] = a[i+1];</span><br><span class="line">//    for(int i=0; i&lt;n-1; i++)</span><br><span class="line">//        printf("%d ", a[i])</span><br><span class="line">//    putchar(10);</span><br><span class="line">    n--;</span><br><span class="line"></span><br><span class="line">    for(int i=0; i&lt;w; i++)</span><br><span class="line">        b[i] = read();</span><br><span class="line">    for(int i=w-1; i&gt;0; i--)</span><br><span class="line">        b[i] -= b[i-1];</span><br><span class="line">    for(int i=0; i&lt;w-1; i++)</span><br><span class="line">        b[i] = b[i+1];</span><br><span class="line">    w--;</span><br><span class="line">    if(w==0)//子中长度为1时要特判</span><br><span class="line">        printf("%d\n", n+1);</span><br><span class="line">    else</span><br><span class="line">        printf("%d\n", kmpcnt());</span><br><span class="line">    return 0;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180803/9JEEEBaKGF.png" alt="mark"></p>
<table>
<thead>
<tr>
<th>#</th>
<th>When</th>
<th>Who</th>
<th>Problem</th>
<th>Lang</th>
<th>Verdict</th>
<th>Time</th>
<th>Memor</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://codeforces.com/contest/471/submission/41132718">41132718</a></td>
<td>2018-08-02 21:26:50</td>
<td><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></td>
<td><a href="http://codeforces.com/contest/471/problem/D">D - MUH and Cube Walls</a></td>
<td>GNU C++</td>
<td>Accepted</td>
<td>31 ms</td>
<td>2400 KB</td>
</tr>
<tr>
<td><a href="http://codeforces.com/contest/471/submission/41132612">41132612</a></td>
<td>2018-08-02 21:23:05</td>
<td><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></td>
<td><a href="http://codeforces.com/contest/471/problem/D">D - MUH and Cube Walls</a></td>
<td>GNU C++</td>
<td>Wrong answer on test 2</td>
<td>30 ms</td>
<td>2400 KB</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>ACM</category>
        <category>字符串</category>
        <category>KMP</category>
      </categories>
  </entry>
  <entry>
    <title>CodeForces 825F String Compression (KMP 求循环节 + DP)</title>
    <url>/2018/08/03/CodeForces-825F-String-Compression-KMP%E6%B1%82%E5%BE%AA%E7%8E%AF%E8%8A%82-DP/</url>
    <content><![CDATA[<h2 align="center">F. String Compression  </h2>

<div align="center">time limit per test: 2 seconds<br>memory limit per test: 512 megabytes<br>input: standard input<br>output: standard output</div>

<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Ivan wants to write a letter to his friend. The letter is a string <em>s</em> consisting of lowercase Latin letters.</p>
<p>Unfortunately, when Ivan started writing the letter, he realised that it is very long and writing the whole letter may take extremely long time. So he wants to write the compressed version of string <em>s</em> instead of the string itself.<span id="more"></span></p>
<p>The compressed version of string <em>s</em> is a sequence of strings <em>c</em>1, <em>s</em>1, <em>c</em>2, <em>s</em>2, …, <em>c**k</em>, <em>s**k</em>, where <em>c**i</em> is the decimal representation of number <em>a**i</em>(without any leading zeroes) and <em>s**i</em> is some string consisting of lowercase Latin letters. If Ivan writes string <em>s</em>1 exactly <em>a</em>1 times, then string <em>s</em>2 exactly <em>a</em>2 times, and so on, the result will be string <em>s</em>.</p>
<p>The length of a compressed version is |<em>c</em>1| + |<em>s</em>1| + |<em>c</em>2| + |<em>s</em>2|… |<em>c**k</em>| + |<em>s**k</em>|. Among all compressed versions Ivan wants to choose a version such that its length is minimum possible. Help Ivan to determine minimum possible length.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The only line of input contains one string <em>s</em> consisting of lowercase Latin letters (1 ≤ |<em>s</em>| ≤ 8000).</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Output one integer number — the minimum possible length of a compressed version of <em>s</em>.</p>
<h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">aaaaaaaaaa</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></tbody></table></figure>

<h4 id="input-1"><a href="#input-1" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">abcab</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output-1"><a href="#output-1" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></tbody></table></figure>

<h4 id="input-2"><a href="#input-2" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">cczabababab</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output-2"><a href="#output-2" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>KMP 求循环节：如果 $len % (len-next [len] == 0)$, 则字符串由循环节组成，循环节长度为 $len - next [len]$，循环 $len \over {len-next [len]}$ 次；否则字符串并无循环节。</p>
<p>$a [i][j]$ 表示子字符串 $s [i,i+1, ….j]$ 循环节长度 + 循环次数的位数。</p>
<p>$dp [i]$ 表示字符串前 $i$ 个字符压缩后的长度。</p>
<p>$dp[i] = min(dp[i], dp[j]+a[j+1][i])$</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 8005</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> next[MAXN];</span><br><span class="line"><span class="type">char</span> s[MAXN];</span><br><span class="line"><span class="type">int</span> len;</span><br><span class="line"><span class="type">int</span> dp[MAXN];</span><br><span class="line"><span class="type">int</span> a[MAXN][MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">prekmp</span><span class="params">(<span class="type">char</span> x[])</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">-1</span>;</span><br><span class="line">    next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; len)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">while</span>(j!=<span class="number">-1</span> &amp;&amp; x[i]!=x[j])</span><br><span class="line">            j = next[j];</span><br><span class="line">        next[++i] = ++j;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">digitcnt</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k)</span><br><span class="line">    {</span><br><span class="line">        k /= <span class="number">10</span>;</span><br><span class="line">        cnt++;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">prekmp</span>(s + i);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i; j &lt; len; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(j == i)</span><br><span class="line">            {</span><br><span class="line">                a[i][j] = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> t1 = j - i + <span class="number">1</span>, t2 = t1 - next[t1];</span><br><span class="line">            a[i][j] = t1 % t2 == <span class="number">0</span> ? t2 + <span class="built_in">digitcnt</span>(t1/t2) : t1 + <span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    len = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="built_in">fill</span>(dp, dp+len, INF);</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; len;i ++)</span><br><span class="line">    {</span><br><span class="line">        dp[i] = a[<span class="number">0</span>][i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; i; j ++)</span><br><span class="line">            dp[i] = <span class="built_in">min</span>(dp[i],dp[j] + a[j + <span class="number">1</span>][i]);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[len<span class="number">-1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180803/DHJIgDCe8b.png" alt="mark"></p>
<table>
<thead>
<tr>
<th>#</th>
<th>When</th>
<th>Who</th>
<th>Problem</th>
<th>Lang</th>
<th>Verdict</th>
<th>Time</th>
<th>Memory</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://codeforces.com/contest/825/submission/41132032">41132032</a></td>
<td>2018-08-02 21:00:29</td>
<td><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></td>
<td><a href="http://codeforces.com/contest/825/problem/F">F - String Compression</a></td>
<td>GNU C++</td>
<td>Accepted</td>
<td>810 ms</td>
<td>250900 KB</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>ACM</category>
        <category>DP</category>
        <category>字符串</category>
        <category>KMP</category>
      </categories>
      <tags>
        <tag>dp</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>CodeForces 731C Socks (并查集)</title>
    <url>/2018/08/03/CodeForces-731C-Socks-%E5%B9%B6%E6%9F%A5%E9%9B%86/</url>
    <content><![CDATA[<h2 align="center">C. Socks  </h2>

<div align="center">time limit per test: 2 seconds<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output</div>

<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Arseniy is already grown-up and independent. His mother decided to leave him alone for <em>m</em> days and left on a vacation. She have prepared a lot of food, left some money and washed all Arseniy’s clothes.<span id="more"></span></p>
<p>Ten minutes before her leave she realized that it would be also useful to prepare instruction of which particular clothes to wear on each of the days she will be absent. Arseniy’s family is a bit weird so all the clothes is enumerated. For example, each of Arseniy’s <em>n</em> socks is assigned a unique integer from 1 to <em>n</em>. Thus, the only thing his mother had to do was to write down two integers <em>l**i</em> and <em>r**i</em> for each of the days — the indices of socks to wear on the day <em>i</em> (obviously, <em>l**i</em> stands for the left foot and <em>r**i</em> for the right). Each sock is painted in one of <em>k</em>colors.</p>
<p>When mother already left Arseniy noticed that according to instruction he would wear the socks of different colors on some days. Of course, that is a terrible mistake cause by a rush. Arseniy is a smart boy, and, by some magical coincidence, he posses <em>k</em> jars with the paint — one for each of <em>k</em> colors.</p>
<p>Arseniy wants to repaint some of the socks in such a way, that for each of <em>m</em> days he can follow the mother’s instructions and wear the socks of the same color. As he is going to be very busy these days he will have no time to change the colors of any socks so he has to finalize the colors now.</p>
<p>The new computer game Bota-3 was just realised and Arseniy can’t wait to play it. What is the minimum number of socks that need their color to be changed in order to make it possible to follow mother’s instructions and wear the socks of the same color during each of <em>m</em> days.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of input contains three integers <em>n</em>, <em>m</em> and <em>k</em> (2 ≤ <em>n</em> ≤ 200 000, 0 ≤ <em>m</em> ≤ 200 000, 1 ≤ <em>k</em> ≤ 200 000) — the number of socks, the number of days and the number of available colors respectively.</p>
<p>The second line contain <em>n</em> integers <em>c</em>1, <em>c</em>2, …, <em>c**n</em> (1 ≤ <em>c**i</em> ≤ <em>k</em>) — current colors of Arseniy’s socks.</p>
<p>Each of the following <em>m</em> lines contains two integers <em>l**i</em> and <em>r**i</em> (1 ≤ <em>l**i</em>, <em>r**i</em> ≤ <em>n</em>, <em>l**i</em> ≠ <em>r**i</em>) — indices of socks which Arseniy should wear during the <em>i</em>-th day.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print one integer — the minimum number of socks that should have their colors changed in order to be able to obey the instructions and not make people laugh from watching the socks of different colors.</p>
<h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3 2 3</span><br><span class="line">1 2 3</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></tbody></table></figure>

<h4 id="input-1"><a href="#input-1" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3 2 2</span><br><span class="line">1 1 2</span><br><span class="line">1 2</span><br><span class="line">2 1</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output-1"><a href="#output-1" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></tbody></table></figure>

<h4 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h4><p>In the first sample, Arseniy can repaint the first and the third socks to the second color.</p>
<p>In the second sample, there is no need to change any colors. </p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>利用并查集将要穿的袜子分成不同的集合。看每一个集合里哪个颜色的袜子最多，将其他的袜子染成同样的颜色即可。</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 200010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> par[MAXN], urank[MAXN];</span><br><span class="line"><span class="type">int</span> a[MAXN];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; b[MAXN];</span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    {</span><br><span class="line">        par[i] = i;</span><br><span class="line">        urank[i] = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ufind</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(par[x] == x)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> par[x] = <span class="built_in">ufind</span>(par[x]);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">unite</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    x = <span class="built_in">ufind</span>(x);</span><br><span class="line">    y = <span class="built_in">ufind</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(x == y)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(urank[x] &lt; urank[y])</span><br><span class="line">        par[x] = y;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        par[y] = x;</span><br><span class="line">        urank[x]++;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">same</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">ufind</span>(x) == <span class="built_in">ufind</span>(y);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, a+i);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> x, y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;x, &amp;y);</span><br><span class="line">        <span class="built_in">unite</span>(x, y);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        b[<span class="built_in">ufind</span>(i)].<span class="built_in">push_back</span>(a[i]);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(b[i].<span class="built_in">size</span>() &lt;= <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;</span><br><span class="line">        <span class="type">int</span> maxx = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;b[i].<span class="built_in">size</span>(); j++)</span><br><span class="line">        {</span><br><span class="line">            mp[b[i][j]]++;</span><br><span class="line">            maxx = <span class="built_in">max</span>(maxx, mp[b[i][j]]);</span><br><span class="line">        }</span><br><span class="line">        ans += b[i].<span class="built_in">size</span>()-maxx;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180803/987ggd9iHm.png" alt="mark"></p>
<table>
<thead>
<tr>
<th>#</th>
<th>When</th>
<th>Who</th>
<th>Problem</th>
<th>Lang</th>
<th>Verdict</th>
<th>Time</th>
<th>Memory</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://codeforces.com/contest/731/submission/41139275">41139275</a></td>
<td>2018-08-03 04:20:15</td>
<td><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></td>
<td><a href="http://codeforces.com/contest/731/problem/C">C - Socks</a></td>
<td>GNU C++</td>
<td>Accepted</td>
<td>202 ms</td>
<td>9700 KB</td>
</tr>
<tr>
<td><a href="http://codeforces.com/contest/731/submission/41139257">41139257</a></td>
<td>2018-08-03 04:18:37</td>
<td><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></td>
<td><a href="http://codeforces.com/contest/731/problem/C">C - Socks</a></td>
<td>GNU C++</td>
<td>Accepted</td>
<td>187 ms</td>
<td>11500 KB</td>
</tr>
<tr>
<td><a href="http://codeforces.com/contest/731/submission/41139197">41139197</a></td>
<td>2018-08-03 04:14:49</td>
<td><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></td>
<td><a href="http://codeforces.com/contest/731/problem/C">C - Socks</a></td>
<td>GNU C++</td>
<td>Wrong answer on test 6</td>
<td>124 ms</td>
<td>6600 KB</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>ACM</category>
      </categories>
  </entry>
  <entry>
    <title>CodeForces 911D Inversion Counting (思维)</title>
    <url>/2018/08/03/CodeForces-911D-Inversion-Counting-%E6%80%9D%E7%BB%B4/</url>
    <content><![CDATA[<h2 align="center">D. Inversion Counting  </h2>

<div align="center">time limit per test: 2 seconds<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output</div>

<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>A permutation of size <em>n</em> is an array of size <em>n</em> such that each integer from 1 to <em>n</em> occurs exactly once in this array. An inversion in a permutation <em>p</em> is a pair of indices (<em>i</em>, <em>j</em>) such that <em>i</em> &gt; <em>j</em> and <em>a**i</em> &lt; *a**j*. For example, a permutation [4, 1, 3, 2] contains 4 inversions: (2, 1), (3, 1), (4, 1), (4, 3).<span id="more"></span></p>
<p>You are given a permutation <em>a</em> of size <em>n</em> and <em>m</em> queries to it. Each query is represented by two indices <em>l</em> and <em>r</em> denoting that you have to reverse the segment [<em>l</em>, <em>r</em>] of the permutation. For example, if <em>a</em> = [1, 2, 3, 4] and a query <em>l</em> = 2, <em>r</em> = 4 is applied, then the resulting permutation is [1, 4, 3, 2].</p>
<p>After each query you have to determine whether the number of inversions is odd or even.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains one integer <em>n</em> (1 ≤ <em>n</em> ≤ 1500) — the size of the permutation.</p>
<p>The second line contains <em>n</em> integers <em>a</em>1, <em>a</em>2, …, <em>a**n</em> (1 ≤ <em>a**i</em> ≤ <em>n</em>) — the elements of the permutation. These integers are pairwise distinct.</p>
<p>The third line contains one integer <em>m</em> (1 ≤ <em>m</em> ≤ 2·105) — the number of queries to process.</p>
<p>Then <em>m</em> lines follow, <em>i</em>-th line containing two integers <em>l**i</em>, <em>r**i</em> (1 ≤ <em>l**i</em> ≤ <em>r**i</em> ≤ <em>n</em>) denoting that <em>i</em>-th query is to reverse a segment [<em>l**i</em>, <em>r**i</em>] of the permutation. All queries are performed one after another.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print <em>m</em> lines. <em>i</em>-th of them must be equal to odd if the number of inversions in the permutation after <em>i</em>-th query is odd, and even otherwise.</p>
<h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3</span><br><span class="line">1 2 3</span><br><span class="line">2</span><br><span class="line">1 2</span><br><span class="line">2 3</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">odd</span><br><span class="line">even</span><br></pre></td></tr></tbody></table></figure>

<h4 id="input-1"><a href="#input-1" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">4</span><br><span class="line">1 2 4 3</span><br><span class="line">4</span><br><span class="line">1 1</span><br><span class="line">1 4</span><br><span class="line">1 4</span><br><span class="line">2 3</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<h4 id="output-1"><a href="#output-1" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">odd</span><br><span class="line">odd</span><br><span class="line">odd</span><br><span class="line">even</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给你一个数组和若干区间，问你区间翻转后数组中逆序对数为奇数还是偶数。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>思维题目：首先求出区间的长度 $len = r-l+1$ ，那么区间内共有 $tot = \frac {len * (len-1)} 2$ 个数对。若 $tot$ 为奇数，则不管该区间有多少个逆序对，翻转区间后逆序对数奇偶性改变； 若为偶数，则不变。</p>
<p>所以我们可以先暴力求出整体逆序对数，再对区间进行以上处理。</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 1505</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[MAXN];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> all = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, a+i);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">+1</span>; j&lt;n; j++)</span><br><span class="line">            <span class="keyword">if</span>(a[i] &gt; a[j])</span><br><span class="line">                all++;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> isodd = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(all &amp; <span class="number">1</span>)</span><br><span class="line">        isodd = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> l, r, len;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;m; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;l, &amp;r);</span><br><span class="line">        len = r-l<span class="number">+1</span>;</span><br><span class="line">        <span class="keyword">if</span>((len * (len<span class="number">-1</span>) / <span class="number">2</span>) &amp; <span class="number">1</span>)</span><br><span class="line">            isodd = !isodd;</span><br><span class="line">        <span class="keyword">if</span>(isodd)</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"odd"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"even"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180803/c8k5Eg98CH.png" alt="mark"></p>
<table>
<thead>
<tr>
<th align="center">#</th>
<th align="center">When</th>
<th>Who</th>
<th>Problem</th>
<th>Lang</th>
<th>Verdict</th>
<th align="center">Time</th>
<th align="center">Memory</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><a href="http://codeforces.com/problemset/submission/911/41129808">41129808</a></td>
<td align="center">2018-08-02 19:31:53</td>
<td><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></td>
<td><a href="http://codeforces.com/problemset/problem/911/D">911D - Inversion Counting</a></td>
<td>GNU C++</td>
<td>Accepted</td>
<td align="center">93 ms</td>
<td align="center">0 KB</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>ACM</category>
        <category>思维</category>
      </categories>
  </entry>
  <entry>
    <title>CodeForces 920F SUM and REPLACE (线段树)</title>
    <url>/2018/08/03/CodeForces-920F-SUM-and-REPLACE-%E7%BA%BF%E6%AE%B5%E6%A0%91/</url>
    <content><![CDATA[<h2 align="center">F. SUM and REPLACE </h2>

<div align="center">time limit per test: 2 seconds<br>memory limit per test: 256 megabytes<br>input: standard input<br>output: standard output</div>

<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Let <em>D</em>(<em>x</em>) be the number of positive divisors of a positive integer <em>x</em>. For example, <em>D</em>(2) = 2 (2 is divisible by 1 and 2), <em>D</em>(6) = 4 (6 is divisible by 1, 2, 3 and 6).<span id="more"></span></p>
<p>You are given an array <em>a</em> of <em>n</em> integers. You have to process two types of queries:</p>
<ol>
<li>REPLACE <em>l</em> <em>r</em> — for every <img src="http://codeforces.com/predownloaded/33/4e/334e338c9804dd0f2ad09a404a1b0b0a64693034.png" alt="img"> replace <em>a**i</em> with <em>D</em>(<em>a**i</em>);</li>
<li>SUM <em>l</em> <em>r</em> — calculate <img src="http://codeforces.com/predownloaded/85/f3/85f3b14f57b1f05c219263ba36a0274dd8e82c2f.png" alt="img">.</li>
</ol>
<p>Print the answer for each SUM query.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line contains two integers <em>n</em> and <em>m</em> (1 ≤ <em>n</em>, <em>m</em> ≤ 3·105) — the number of elements in the array and the number of queries to process, respectively.</p>
<p>The second line contains <em>n</em> integers <em>a</em>1, <em>a</em>2, …, <em>a**n</em> (1 ≤ <em>a**i</em> ≤ 106) — the elements of the array.</p>
<p>Then <em>m</em> lines follow, each containing 3 integers <em>t**i</em>, <em>l**i</em>, <em>r**i</em> denoting <em>i</em>-th query. If <em>t**i</em> = 1, then <em>i</em>-th query is REPLACE <em>l**i</em> <em>r**i</em>, otherwise it’s SUM <em>l<strong>i</strong>r**i</em> (1 ≤ <em>t**i</em> ≤ 2, 1 ≤ <em>l**i</em> ≤ <em>r**i</em> ≤ <em>n</em>).</p>
<p>There is at least one SUM query.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each SUM query print the answer to it.</p>
<h3 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">7 6</span><br><span class="line">6 4 1 10 3 2 4</span><br><span class="line">2 1 7</span><br><span class="line">2 4 5</span><br><span class="line">1 3 5</span><br><span class="line">2 4 4</span><br><span class="line">1 5 7</span><br><span class="line">2 1 7</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">30</span><br><span class="line">13</span><br><span class="line">4</span><br><span class="line">22</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>数组区间求和，区间更新为将 $a [i]$ 变为 $a [i]$ 的 因子个数。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>明显的线段树。</p>
<p>首先要暴力预处理出 $[1, 10^6]$ 每个数因子的个数。发现数字 1 的因子数为 1，2 的因子数为 2， 故 $num \le 2$ 时，不再会更新值。</p>
<p><del>这个题较坑的一点是会卡常数，我用 <code>scanf()</code> 输入会在 Case2 T 掉，而改用读入挂后只用了 249ms。</del></p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 1000005</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> divnum[MAXN];</span><br><span class="line"><span class="type">int</span> maxx[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line">LL sum[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;<span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) {<span class="keyword">if</span>(ch==<span class="string">'-'</span>) f=<span class="number">-1</span>;ch=<span class="built_in">getchar</span>();}</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">isdigit</span>(ch)) {x=x*<span class="number">10</span>+ch-<span class="string">'0'</span>;ch=<span class="built_in">getchar</span>();}</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;MAXN; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i; j&lt;MAXN; j+=i)</span><br><span class="line">            divnum[j]++;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    sum[root] = sum[root&lt;&lt;<span class="number">1</span>] + sum[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>];</span><br><span class="line">    maxx[root] = <span class="built_in">max</span>(maxx[root&lt;&lt;<span class="number">1</span>], maxx[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>]);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    {</span><br><span class="line">        sum[root] = a[l];</span><br><span class="line">        maxx[root] = a[l];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(root&lt;&lt;<span class="number">1</span>, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r);</span><br><span class="line">    <span class="built_in">pushup</span>(root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(maxx[root] &lt;= <span class="number">2</span>)<span class="comment">//1的因子只有1， 2的因子有1、2两个，到此个数不再变化</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    {</span><br><span class="line">        maxx[root] = sum[root] = divnum[sum[root]];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=mid)</span><br><span class="line">        <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, b);</span><br><span class="line">    <span class="keyword">if</span>(b&gt;mid)</span><br><span class="line">        <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, a, b);</span><br><span class="line">    <span class="built_in">pushup</span>(root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="comment">//    if(l&gt;b || r&lt;a)</span></span><br><span class="line"><span class="comment">//        return 0;</span></span><br><span class="line">    <span class="keyword">if</span>(a&lt;=l &amp;&amp; b&gt;=r)</span><br><span class="line">        <span class="keyword">return</span> sum[root];</span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    LL ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a &lt;= mid)</span><br><span class="line">        ans += <span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, b);</span><br><span class="line">    <span class="keyword">if</span>(b &gt; mid)</span><br><span class="line">        ans += <span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, a, b);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line"></span><br><span class="line">    n=<span class="built_in">read</span>(), m=<span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        a[i] = <span class="built_in">read</span>();</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">    <span class="type">int</span> op, l ,r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    {</span><br><span class="line">        op = <span class="built_in">read</span>(), l = <span class="built_in">read</span>(), r = <span class="built_in">read</span>();</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>, <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, l,r));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180803/i7abj3AJ1e.png" alt="mark"></p>
<table>
<thead>
<tr>
<th><a href="http://codeforces.com/contest/920/submission/41131343">41131343</a></th>
<th>2018-08-02 20:37:41</th>
<th><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></th>
<th><a href="http://codeforces.com/contest/920/problem/F">F - SUM and REPLACE</a></th>
<th>GNU C++</th>
<th>Accepted</th>
<th>249 ms</th>
<th>54800 KB</th>
</tr>
</thead>
<tbody><tr>
<td><a href="http://codeforces.com/contest/920/submission/41131149">41131149</a></td>
<td>2018-08-02 20:30:15</td>
<td><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></td>
<td><a href="http://codeforces.com/contest/920/problem/F">F - SUM and REPLACE</a></td>
<td>GNU C++</td>
<td>Time limit exceeded on test 2</td>
<td>2000 ms</td>
<td>54800 KB</td>
</tr>
<tr>
<td><a href="http://codeforces.com/contest/920/submission/41130678">41130678</a></td>
<td>2018-08-02 20:10:48</td>
<td><a href="http://codeforces.com/profile/MoonChasing">MoonChasing</a></td>
<td><a href="http://codeforces.com/contest/920/problem/F">F - SUM and REPLACE</a></td>
<td>GNU C++</td>
<td>Time limit exceeded on test 2</td>
<td>2000 ms</td>
<td>54800 KB</td>
</tr>
</tbody></table>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><del>第一次遇到卡常的题目，被读入挂惊呆了。没想到读入挂这么厉害。</del></p>
<p>更新：</p>
<p>这题自己会 T 并不是因为卡读入，而是因为一开始自己写的程序中，叶子结点时写的是 <code>l[::a]</code>，可能是因为::a 双冒号访问会慢。将其改成 <code>sum[root]</code> 会可以 AC。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>数据结构</category>
        <category>树状数组</category>
      </categories>
      <tags>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>CodeForces 703D Mishka and Interesting sum (树状数组)</title>
    <url>/2018/08/03/CodeForces-703D-Mishka-and-Interesting-sum-%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 align="center">D. Mishka and Interesting sum</h2>

<div align="center">time limit per test: 3.5 seconds<br>memory limit per test: 256 megabytes <br>input: standard input<br>output: standard output</div>

<h2 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h2><p>Little Mishka enjoys programming. Since her birthday has just passed, her friends decided to present her with array of non-negative integers <em>a</em>1, <em>a</em>2, …, <em>an</em> of <em>n</em> elements!<span id="more"></span></p>
<p>Mishka loved the array and she instantly decided to determine its beauty value, but she is too little and can’t process large arrays. Right because of that she invited you to visit her and asked you to process <em>m</em> queries.</p>
<p>Each query is processed in the following way:</p>
<ol>
<li>Two integers <em>l</em> and <em>r</em> (1 ≤ <em>l</em> ≤ <em>r</em> ≤ <em>n</em>) are specified — bounds of query segment.</li>
<li>Integers, presented in array segment [<em>l</em>,  <em>r</em>] (in sequence of integers <em>a**l</em>, <em>a**l</em> + 1, …, <em>a**r</em>) even number of times, are written down.</li>
<li>XOR-sum of written down integers is calculated, and this value is the answer for a query. Formally, if integers written down in point 2 are <em>x</em>1, <em>x</em>2, …, <em>x**k</em>, then Mishka wants to know the value <img src="http://codeforces.com/predownloaded/ea/45/ea4547ffed8a3c8eb751acf0531e94388122e790.png" alt="img">, where <img src="http://codeforces.com/predownloaded/7b/ea/7beade55e90846d70020a3d03521d3458b66751b.png" alt="img"> — operator of exclusive bitwise OR.</li>
</ol>
<p>Since only the little bears know the definition of array beauty, all you are to do is to answer each of queries presented.</p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>The first line of the input contains single integer <em>n</em> (1 ≤ <em>n</em> ≤ 1 000 000) — the number of elements in the array.</p>
<p>The second line of the input contains <em>n</em> integers <em>a</em>1, <em>a</em>2, …, <em>a**n</em> (1 ≤ <em>a**i</em> ≤ 109) — array elements.</p>
<p>The third line of the input contains single integer <em>m</em> (1 ≤ <em>m</em> ≤ 1 000 000) — the number of queries.</p>
<p>Each of the next <em>m</em> lines describes corresponding query by a pair of integers <em>l</em> and <em>r</em> (1 ≤ <em>l</em> ≤ <em>r</em> ≤ <em>n</em>) — the bounds of query segment.</p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print <em>m</em> non-negative integers — the answers for the queries in the order they appear in the input.</p>
<h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3</span><br><span class="line">3 7 8</span><br><span class="line">1</span><br><span class="line">1 3</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output"><a href="#output" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></tbody></table></figure>

<h4 id="input-1"><a href="#input-1" class="headerlink" title="input"></a>input</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">7</span><br><span class="line">1 2 1 3 3 2 3</span><br><span class="line">5</span><br><span class="line">4 7</span><br><span class="line">4 5</span><br><span class="line">1 3</span><br><span class="line">1 7</span><br><span class="line">1 5</span><br></pre></td></tr></tbody></table></figure>

<h4 id="output-1"><a href="#output-1" class="headerlink" title="output"></a>output</h4><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">0</span><br><span class="line">3</span><br><span class="line">1</span><br><span class="line">3</span><br><span class="line">2</span><br></pre></td></tr></tbody></table></figure>

<h3 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h3><p>In the second sample:</p>
<p>There is no integers in the segment of the first query, presented even number of times in the segment — the answer is 0.</p>
<p>In the second query there is only integer 3 is presented even number of times — the answer is 3.</p>
<p>In the third query only integer 1 is written down — the answer is 1.</p>
<p>In the fourth query all array elements are considered. Only 1 and 2 are presented there even number of times. The answer is <img src="http://codeforces.com/predownloaded/f3/f4/f3f48ca9259e359e0f860214756305ac8291888b.png" alt="img">.</p>
<p>In the fifth query 1 and 3 are written down. The answer is <img src="http://codeforces.com/predownloaded/a1/ba/a1ba125fbec1b545761705318974b0be213f2ef2.png" alt="img">.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>给你一个数组，若干个询问。询问区间 [l, r] 上出个次数为偶数的数的异或和。</p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>一个数字，奇数次异或和为其本身，偶数次异或和为 0。一个区间上所有数字异或和为该区间上出现奇数次的数字的异或和。而现在让我们求偶数次数字的异或和， 我们可以再求得区间上所有 distinct 数字 (去重) 的异或和，再用此异或和和区间所有数字异或和进行异或操作，即为所求。</p>
<p>对于区间所有数字的异或和，我们可以先预处理出一个前缀异或和 $sum$，区间 $[l,r]$ 上所有数字的异或和即为 <code>sum[r] ^ sum[l-1]</code></p>
<p>区间上 distinct 数字的异或和我们用树状数组来维护。用一个 map 来维护某个数上次出现的位置，离线处理答案，走到 $a [i]$ 时，如果 $map [ a [i] ]$ 不为 0，（说明 $a [i] $ 之前出现过）， 那么从上次的位置开始把 $a [i]$ 异或掉，并在此位置开始异或上 $a [i]$，更新 map。只把出现多次的值放在最后出现的位置<strong>（这个思想很常见）</strong>。 </p>
<p>询问按区间右端点排序，依此顺序回答。</p>
<h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">1e6</span><span class="number">+10</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, q;</span><br><span class="line"><span class="type">int</span> a[MAXN], sum[MAXN], tree[MAXN&lt;&lt;<span class="number">2</span>]; <span class="comment">//sum为原数组前缀和</span></span><br><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; mp;   <span class="comment">//mp[i]表示上一次i出现的下标</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> l, r;</span><br><span class="line">    <span class="type">int</span> no;</span><br><span class="line">    <span class="type">int</span> ans;</span><br><span class="line">}Query[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.r==b.r ? a.l&lt;b.l : a.r&lt;b.r;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp2</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> a.no &lt; b.no;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> k&amp;(-k);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> ind, <span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(ind &lt;= n)</span><br><span class="line">    {</span><br><span class="line">        tree[ind] ^= val;</span><br><span class="line">        ind += <span class="built_in">lowbit</span>(ind);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(k)</span><br><span class="line">    {</span><br><span class="line">        ans ^= tree[k];</span><br><span class="line">        k -= <span class="built_in">lowbit</span>(k);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, a+i);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;q; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;Query[i].l, &amp;Query[i].r);</span><br><span class="line">        Query[i].no = i;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    sum[<span class="number">0</span>] = a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;n; i++)</span><br><span class="line">        sum[i] ^= sum[i<span class="number">-1</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(Query, Query+q, cmp);</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;q; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> l=Query[i].l, r=Query[i].r;</span><br><span class="line">        <span class="keyword">while</span>(p&lt;=r)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(mp[a[p]] == <span class="number">0</span>)</span><br><span class="line">            {</span><br><span class="line">                mp[a[p]] = p;</span><br><span class="line">                <span class="built_in">update</span>(p, a[p]);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">update</span>(mp[a[p]], a[p]);	 <span class="comment">//从上次的位置开始把 a[i] 异或掉</span></span><br><span class="line">                <span class="built_in">update</span>(p, a[p]);		<span class="comment">//在此位置开始异或上 a[i]</span></span><br><span class="line">                mp[a[p]] = p;</span><br><span class="line">            }</span><br><span class="line">            p++;</span><br><span class="line">        }</span><br><span class="line">        Query[i].ans = sum[r] ^ sum[l<span class="number">-1</span>] ^ <span class="built_in">query</span>(r) ^ <span class="built_in">query</span>(l<span class="number">-1</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(Query, Query+q, cmp2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;q; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Query[i].ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
        <category>数据结构</category>
        <category>树状数组</category>
      </categories>
  </entry>
  <entry>
    <title>夜雨寄北</title>
    <url>/2018/08/01/%E5%A4%9C%E9%9B%A8%E5%AF%84%E5%8C%97/</url>
    <content><![CDATA[<h2 align="center">夜雨寄北</h2>

<h3 align="center">李商隱</h3>

<p align="center">君問歸期未有期，巴山夜雨漲秋池。<br>何當共剪西窗燭，卻話巴山夜雨時。</p>

]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>詩詞</tag>
        <tag>李商隱</tag>
        <tag>別離</tag>
        <tag>思念</tag>
      </tags>
  </entry>
  <entry>
    <title>判断语句中位运算符的一个小坑</title>
    <url>/2018/07/31/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5%E4%B8%AD%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%B8%80%E4%B8%AA%E5%B0%8F%E5%9D%91/</url>
    <content><![CDATA[<p>最近训练时敲代码总爱在 if 语句中有位算符时踩坑， 比如 <code>if(i&amp;1==0)</code> 或 <code>if(i&amp;i-1 == 0)</code>，本意是想判 i 是否为偶数和 i 是否为 2 的幂，但这么写都是错误的，导致程序不能输出正确结果。每次 debug 时又不明所以，耗了很长时间才找到。在这里记录下。</p>
<p>错误的原因是 <code>==</code> 运算符优先级要高于 <code>&amp;</code> <code>|</code> <code>^</code> 这三个位运算符，故导致上面代码的判断顺序实际为 <code>if(i &amp; (1==0))</code> 和 <code>if(i &amp; (i-1 == 0))</code>。 很痛苦呀，有没有。</p>
<p><strong>建议：</strong></p>
<ul>
<li>判断式中如果同时存在<strong>位运算符</strong>和<strong>小于等于大于</strong>时，将位运算符表达式加上括号</li>
<li>判等时，如果一边是常数一边是变量，将常数放于判等左边。 （TAT，当时听郝斌老师讲这条时还不以为意，心想判等自己肯定不会写成 = , 现在想来，真是内牛满面呀，这条规则实在太好了）</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>坑</tag>
      </tags>
  </entry>
  <entry>
    <title>臨江仙  送錢穆父</title>
    <url>/2018/07/30/%E8%87%A8%E6%B1%9F%E4%BB%99-%E9%80%81%E9%8C%A2%E7%A9%86%E7%88%B6/</url>
    <content><![CDATA[<h2 align="center">臨江仙  送錢穆父</h2>

<h3 align="center">蘇軾</h3>

<div align="center">一別都門三改火，天涯踏盡紅塵。依然一笑作春溫。無波真古井，有節是秋筠。
惆悵孤帆連夜發，送行淡月微雲。樽前不用翠眉顰。人生如逆旅，我亦是行人。</div>


]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>詩詞</tag>
        <tag>蘇軾</tag>
        <tag>別離</tag>
        <tag>曠達</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 Multi-University Training Contest 2 1007 Naive Operations (线段树)</title>
    <url>/2018/07/29/2018-Multi-University-Training-Contest-2-1007-Naive-Operations-%E7%BA%BF%E6%AE%B5%E6%A0%91/</url>
    <content><![CDATA[<p>传送门： <a href="http://acm.hdu.edu.cn/showproblem.php?pid=6315">2018 Multi-University Training Contest 2 1007 Naive Operations</a></p>
<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h1 style="color:#1A5CC8;text-align:center">Naive Operations</h1>

<p><strong>Time Limit: 6000/3000 MS (Java/Others)&nbsp;&nbsp;&nbsp;&nbsp;Memory Limit: 502768/502768 K (Java/Others)</strong> </p>
<h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>In a galaxy far, far away, there are two integer sequence a and b of length n.<br>b is a static permutation of 1 to n. Initially a is filled with zeroes.<br>There are two kind of operations:<br>1. add l r: add one for $a_l,a_{l+1}…a_r$<br>2. query l r: query $\sum_{i=l}^r \lfloor a_i / b_i \rfloor$ <span id="more"></span></p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>There are multiple test cases, please read till the end of input file.<br>For each test case, in the first line, two integers n,q, representing the length of a,b and the number of queries.<br>In the second line, n integers separated by spaces, representing permutation b.<br>In the following q lines, each line is either in the form ‘add l r’ or ‘query l r’, representing an operation.<br>$1 \leq n,q \leq 100000$, $1 \leq l \leq r \leq n$, there’re no more than 5 test cases. </p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Output the answer for each ‘query’, each one line. </p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><blockquote>
<p>5 12</p>
<p>1 5 2 4 3</p>
<p>add 1 4</p>
<p>query 1 4</p>
<p>add 2 5</p>
<p>query 2 5</p>
<p>add 3 5</p>
<p>query 1 5</p>
<p>add 2 4</p>
<p>query 1 4</p>
<p>add 2 5</p>
<p>query 2 5</p>
<p>add 2 2</p>
<p>query 1 5</p>
</blockquote>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><blockquote>
<p>1</p>
<p>1</p>
<p>2</p>
<p>4</p>
<p>4</p>
<p>6</p>
</blockquote>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>看到题目就知道这个题目肯定是线段树。但是因为其非叶子结点的更新并不能在 O (1) 时间内得出，所以我们要对线段树进行特殊处理。</p>
<p>QAQ，关于想明白非叶子结点更新要在 O (1) 结点想出也是源于上海大都会赛上一个线段树的反思。等我明白后补上那题。</p>
<p>由 $\lfloor a_i /b_i \rfloor$ 可知，因为是向下取整，所以只有每加 $b_i$ 次后，叶子结点的值才会加 1。于是我们要维护一个最小值，再维护一个叶子结点为 0 个数的和。每次更新，就把叶子结点 - 1，当叶子结点变成 0 后，再将其赋为 $b_i$，而 0 的个数 + 1。</p>
<p>最终 0 个数的结果即为我们要求的值。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">1e5</span><span class="number">+5</span>;</span><br><span class="line"><span class="type">int</span> n, q, a[MAXN], b[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">{</span><br><span class="line">    LL minx, valb, sum_zero, lazy;</span><br><span class="line">} SegTree[MAXN &lt;&lt; <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PushDown</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(SegTree[root].lazy)</span><br><span class="line">    {</span><br><span class="line">        SegTree[root&lt;&lt;<span class="number">1</span>].lazy += SegTree[root].lazy;</span><br><span class="line">        SegTree[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].lazy += SegTree[root].lazy;</span><br><span class="line"></span><br><span class="line">        SegTree[root&lt;&lt;<span class="number">1</span>].minx -= SegTree[root].lazy;</span><br><span class="line">        SegTree[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].minx -= SegTree[root].lazy;</span><br><span class="line"></span><br><span class="line">        SegTree[root].lazy = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PushUp</span><span class="params">(<span class="type">int</span> root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    SegTree[root].sum_zero = SegTree[root&lt;&lt;<span class="number">1</span>].sum_zero + SegTree[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum_zero;</span><br><span class="line">    SegTree[root].minx = <span class="built_in">min</span>(SegTree[root&lt;&lt;<span class="number">1</span>].minx, SegTree[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].minx);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    SegTree[root].lazy = SegTree[root].sum_zero = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    {</span><br><span class="line">        SegTree[root].minx = SegTree[root].valb = b[l];</span><br><span class="line">        SegTree[root].sum_zero = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">build</span>(root&lt;&lt;<span class="number">1</span>, l, mid);</span><br><span class="line">    <span class="built_in">build</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r);</span><br><span class="line">    <span class="built_in">PushUp</span>(root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(l &gt; r)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(SegTree[root].minx &gt; <span class="number">1</span> &amp;&amp; a==l &amp;&amp; b==r)</span><br><span class="line">    {</span><br><span class="line">        SegTree[root].lazy++;</span><br><span class="line">        SegTree[root].minx--;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(l == r &amp;&amp; SegTree[root].minx == <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        SegTree[root].sum_zero++;</span><br><span class="line">        SegTree[root].lazy = <span class="number">0</span>;</span><br><span class="line">        SegTree[root].minx = SegTree[root].valb;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">PushDown</span>(root, l, r);</span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(b &lt;= mid)</span><br><span class="line">        <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, b);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a &gt; mid)</span><br><span class="line">        <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, a, b);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, mid);</span><br><span class="line">        <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, mid<span class="number">+1</span>, b);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">PushUp</span>(root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">query</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(l &gt; r)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l == a &amp;&amp; r == b)</span><br><span class="line">        <span class="keyword">return</span> SegTree[root].sum_zero;</span><br><span class="line">    <span class="keyword">if</span>(SegTree[root].minx &lt;= <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">1</span>, n, a, b);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(b &lt;= mid)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, b);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a &gt; mid)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, a, b);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, mid) + <span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, mid<span class="number">+1</span>, b);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">     <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;n, &amp;q)) {</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]);</span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">        <span class="keyword">while</span> (q--) {</span><br><span class="line">            <span class="type">char</span> op[<span class="number">10</span>];</span><br><span class="line">            <span class="type">int</span> l, r;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s %d %d"</span>, op, &amp;l, &amp;r);</span><br><span class="line">            <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">'a'</span>) {</span><br><span class="line">                <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                LL ans = <span class="built_in">query</span>(<span class="number">1</span>, <span class="number">1</span>, n, l, r);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在这题 AC 代码中，自己学习了线段树一种新的更新方法。主要为这一步</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(b &lt;= mid)</span><br><span class="line">    <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, b); <span class="comment">//更新左边</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a &gt; mid)</span><br><span class="line">    <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, a, b); <span class="comment">//更新右边</span></span><br><span class="line"><span class="keyword">else</span> <span class="comment">//两边同时更新</span></span><br><span class="line">{</span><br><span class="line">    <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, mid);</span><br><span class="line">    <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, mid<span class="number">+1</span>, b);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>而原来，用的是</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, b, modify);</span><br><span class="line"><span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, a, b, modify);</span><br></pre></td></tr></tbody></table></figure>

<p>此题所用的代码中，通过对查询区间左右边界值的修改，可以达到 <code>a==l &amp;&amp; b==r</code> 情况下的更新。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>数据结构</category>
        <category>线段树</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>求逆序数对个数 (归并排序法)</title>
    <url>/2018/07/28/%E6%B1%82%E9%80%86%E5%BA%8F%E6%95%B0%E5%AF%B9%E4%B8%AA%E6%95%B0-%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E6%B3%95/</url>
    <content><![CDATA[<p>求逆序对数有多种方法，如归并排序法、线段树 \ 树状数组法、离散化。</p>
<p>归并排序法几乎就是归并排序。</p>
<h2 id="白书讲解"><a href="#白书讲解" class="headerlink" title="白书讲解"></a>白书讲解</h2><p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180728/6E29jfkieH.png" alt="mark"><span id="more"></span><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180728/8EeGdgKmfF.png" alt="mark"></p>
<h2 id="紫书代码"><a href="#紫书代码" class="headerlink" title="紫书代码"></a>紫书代码</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> A[MAXN]= {<span class="number">3</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">13</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">10</span>}, T[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">merge_cnt</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> <span class="comment">//统计区间为[l, r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(r - l &gt; <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        cnt += <span class="built_in">merge_cnt</span>(l, mid);</span><br><span class="line">        cnt += <span class="built_in">merge_cnt</span>(mid, r);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> p=l, q=mid, i=l;</span><br><span class="line">        <span class="keyword">while</span>(p&lt;mid || q&lt;r)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(q&gt;=r || (p&lt;mid &amp;&amp; A[p]&lt;=A[q]))</span><br><span class="line">            {</span><br><span class="line">                T[i++] = A[p++];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                T[i++] = A[q++];</span><br><span class="line">                cnt += mid - p;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(i=l; i&lt;r; i++)</span><br><span class="line">            A[i] = T[i];</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="白书代码"><a href="#白书代码" class="headerlink" title="白书代码"></a>白书代码</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">merge_count</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> n = a.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">b</span><span class="params">(a.begin(), a.begin()+n/<span class="number">2</span>)</span></span>;</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">c</span><span class="params">(a.begin()+n/<span class="number">2</span>, a.end())</span></span>;</span><br><span class="line"></span><br><span class="line">    cnt += <span class="built_in">merge_count</span>(b);</span><br><span class="line">    cnt += <span class="built_in">merge_count</span>(c);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ai=<span class="number">0</span>, bi=<span class="number">0</span>, ci=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(ai &lt; n)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(bi &lt; b.<span class="built_in">size</span>() &amp;&amp; (ci==c.<span class="built_in">size</span>() || b[bi]&lt;=c[ci]) )</span><br><span class="line">        {</span><br><span class="line">            a[ai++] = b[bi++];</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        {</span><br><span class="line">            cnt += n/<span class="number">2</span>-bi;</span><br><span class="line">            a[ai++] = c[ci++];</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="一点建议"><a href="#一点建议" class="headerlink" title="一点建议"></a>一点建议</h2><p>敲完数组实现的紫书代码和白书的 vector 实现的代码， 第一反应就是每次对 vector 的构造及初始化应该会费时间，于是测试了下。果不其然，在 $10^6$ 数据量下， 代码运行效果如图：<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180728/0IgJdhBK2h.png" alt="mark">(突然发现当时复制的代码没改过来，第三行应为紫书代码，QAQ)</p>
<p>经过多次实验，用时稳定在本次用时左右。可以看出，用数组实现的效率远远高于 vector 实现。故推荐数组实现。</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>分治法</tag>
      </tags>
  </entry>
  <entry>
    <title>归并排序</title>
    <url>/2018/07/28/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F/</url>
    <content><![CDATA[<p>归并排序思路很简单， 但自己一直不会敲， 也没敲过。 大学算法课本上的代码丑得不行， 嫌弃得要死。 所以自己只知道它的思想。 这几天打高校遇到了求逆序数对的问题，用树状数组来写会爆内存，需要用到归并的思想。于是自己打算好好看一下归并排序，发现紫书上的代码非常简洁，心喜，很快就记住了这段代码，并用自己喜欢的风格敲了一遍。<span id="more"></span></p>
<p>自己对简洁的代码果真没有一丝抵抗力。</p>
<p>先写排序的模板</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> A[MAXN], T[MAXN]; <span class="comment">//A为原数组， T为辅助数组</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mergesort</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span> <span class="comment">//排序区间为[l, r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(r-l &gt; <span class="number">1</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">mergesort</span>(l, mid);</span><br><span class="line">        <span class="built_in">mergesort</span>(mid, r);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> p=l, q=mid, i=l;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(p &lt; mid || q &lt; r)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>( q&gt;=r || ( p&lt;mid &amp;&amp; A[p] &lt;= A[q] ) )</span><br><span class="line">                T[i++] = A[p++];</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                T[i++] = A[q++];</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=l; i&lt;r; i++)</span><br><span class="line">            A[i] = T[i];</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>代码的两个条件是关键。首先，只要有一个非空序列，就要继续合并 <code>while( p &lt; mid || q &lt; r )</code>，因此在比较时不能直接比较 A [p] 和 A [q]， 因为可能其中一个序列为空， 从而 A [p] 或 A [q] 为一个实际不存在的元素。正确的方式是：</p>
<ul>
<li>如果第二个序列为空（此时第一个序列一定为非空），复制 A [p]。</li>
<li>否则，当且仅当第一个序列也非空，且 A [p] &lt;= A [q] 时，才复制 A [p]。</li>
</ul>
<p>代码巧妙地利用短路运算符 <code>||</code> 把两个条件连接在了一起：如果条件 1 满足，就不是计算条件 2； 如果条件 1 不满足，就一定会计算条件 2。这样的技巧很实用。</p>
<p>排序传入的参数为起始与终止的数组下标，为左闭右开，传入的右端点应为实际的加 1。</p>
<p>下面为调用函数</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> A[<span class="number">10</span>] = {<span class="number">3</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">12</span>, <span class="number">10</span>};</span><br><span class="line"><span class="type">int</span> T[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">mergesort</span>(<span class="number">0</span>, <span class="number">10</span>); <span class="comment">//右端点应使用r+1，即最后一个元素后面的位置</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%-3d"</span>, A[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
      <categories>
        <category>ACM</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>排序</tag>
        <tag>分治法</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 牛客网暑期 ACM 多样训练营（第三场）H.Diff-prime Pairs 脑洞</title>
    <url>/2018/07/27/2018%E7%89%9B%E5%AE%A2%E7%BD%91%E6%9A%91%E6%9C%9FACM%E5%A4%9A%E6%A0%B7%E8%AE%AD%E7%BB%83%E8%90%A5%EF%BC%88%E7%AC%AC%E4%B8%89%E5%9C%BA%EF%BC%89H-Diff-prime-Pairs-%E8%84%91%E6%B4%9E/</url>
    <content><![CDATA[<p>传送门：<a href="https://www.nowcoder.com/acm/contest/141/H">https://www.nowcoder.com/acm/contest/141/H</a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Eddy has solved lots of problem involving calculating the number of coprime pairs within some range. This problem can be solved with inclusion-exclusion method. Eddy has implemented it lots of times. Someday, when he encounters another coprime pairs problem, he comes up with diff-prime pairs problem.<span id="more"></span> diff-prime pairs problem is that given N, you need to find the number of pairs (i, j), where $ i \over gcd(i,j)$  and  $j \over gcd(i, j)$ are both prime and i ,j ≤ N. gcd(i, j) is the greatest common divisor of i and j. Prime is an integer greater than 1 and has only 2 positive divisors.<br> Eddy tried to solve it with inclusion-exclusion method but failed. Please help Eddy to solve this problem.<br> Note that pair (i1, j1) and pair (i2, j2) are considered different if i1 ≠ i2 or j1 ≠ j2.</p>
<h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Input has only one line containing a positive integer N.</span><br><span class="line"></span><br><span class="line">1 ≤ N ≤ 107</span><br></pre></td></tr></tbody></table></figure>

<h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">Output one line containing a non-negative integer indicating the number of diff-prime pairs (i,j) where i, j ≤ N</span><br></pre></td></tr></tbody></table></figure>

<h2 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例 1</h2><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></tbody></table></figure>

<h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></tbody></table></figure>

<h2 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例 2</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">5</span><br></pre></td></tr></tbody></table></figure>

<h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></tbody></table></figure>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>首先用数组 primecnt 来记录从 1 到 n 之间素数的个数。</p>
<p>$\sum_{i=1}^nprimecnt [\lfloor {n \over i}\rfloor]*(primecnt [\lfloor {n \over i}\rfloor]-1)$ 即为答案</p>
<h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">1e7</span><span class="number">+1</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> notprime[MAXN];</span><br><span class="line"><span class="type">int</span> primecnt[MAXN];</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(notprime, <span class="literal">false</span>, <span class="built_in">sizeof</span>(notprime));</span><br><span class="line">    notprime[<span class="number">0</span>] = notprime[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;MAXN; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(!notprime[i])</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>( i &gt; MAXN/i )</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i*i; j&lt;MAXN; j+=i)</span><br><span class="line">            {</span><br><span class="line">                notprime[j] = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    primecnt[<span class="number">0</span>] =primecnt[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>; i&lt;MAXN; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(!notprime[i])</span><br><span class="line">            primecnt[i] = primecnt[i<span class="number">-1</span>]<span class="number">+1</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            primecnt[i] = primecnt[i<span class="number">-1</span>];</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> temp;</span><br><span class="line">LL ans = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line"><span class="comment">//    for(int i=1; i&lt;100; i++)</span></span><br><span class="line"><span class="comment">//       printf("%d:%d\n", i, primecnt[i]);</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    {</span><br><span class="line">        temp = primecnt[n/i];</span><br><span class="line"></span><br><span class="line">        ans += (LL)(<span class="number">1LL</span>*(temp<span class="number">-1</span>)*temp);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>注意数据类型转换！ <code>ans += (LL)(temp * (temp-1) );</code> 是错误的！不能把 <code>temp * (temp-1)</code> 转换为 long long。应该使用 (LL) temp * (temp-1)。以后再在这上面犯错剁手！</p>
<p>再用 % d 输出 long long 剁手！</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>思维</category>
      </categories>
  </entry>
  <entry>
    <title>2018 牛客网暑期 ACM 多样训练营（第三场）A.PACM Team 01 背包路径回溯</title>
    <url>/2018/07/27/2018%E7%89%9B%E5%AE%A2%E7%BD%91%E6%9A%91%E6%9C%9FACM%E5%A4%9A%E6%A0%B7%E8%AE%AD%E7%BB%83%E8%90%A5%EF%BC%88%E7%AC%AC%E4%B8%89%E5%9C%BA%EF%BC%89A-PACM-Team-01%E8%83%8C%E5%8C%85%E8%B7%AF%E5%BE%84%E5%9B%9E%E6%BA%AF/</url>
    <content><![CDATA[<p>传送门：<a href="https://www.nowcoder.com/acm/contest/141/A">https://www.nowcoder.com/acm/contest/141/A</a></p>
<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Eddy was a contestant participating in ACM ICPC contests. ACM is short for Algorithm, Coding, Math. Since in the ACM contest, the most important knowledge is about algorithm, followed by coding(implementation ability), then math. However, in the ACM ICPC World Finals 2018, Eddy failed to solve a physics equation, which pushed him away from a potential medal.<span id="more"></span><br> Since then on, Eddy found that physics is actually the most important thing in the contest. Thus, he wants to form a team to guide the following contestants to conquer the PACM contests(PACM is short for Physics, Algorithm, Coding, Math).<br> There are N candidate groups each composed of pi physics experts, ai algorithm experts, ci coding experts, mi math experts. For each group, Eddy can either invite all of them or none of them. If i-th team is invited, they will bring gi knowledge points which is calculated by Eddy’s magic formula. Eddy believes that the higher the total knowledge points is, the better a team could place in a contest. But, Eddy doesn’t want too many experts in the same area in the invited groups. Thus, the number of invited physics experts should not exceed P, and A for algorithm experts, C for coding experts, M for math experts.<br> Eddy is still busy in studying Physics. You come to help him to figure out which groups should be invited such that they doesn’t exceed the constraint and will bring the most knowledge points in total.</p>
<h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">The first line contains a positive integer N indicating the number of candidate groups.</span><br><span class="line">Each of following N lines contains five space-separated integer pi, ai, ci, mi, gi indicating that i-th team consists of pi physics experts, ai algorithm experts, ci coding experts, mi math experts, and will bring gi knowledge points.</span><br><span class="line">The last line contains four space-separated integer P, A, C, M indicating the maximum possible number of physics experts, algorithm experts, coding experts, and math experts, respectively.</span><br><span class="line"></span><br><span class="line"> 1 ≤ N ≤ 36</span><br><span class="line"> 0 ≤ pi,ai,ci,mi,gi ≤ 36</span><br><span class="line"> 0 ≤ P, A, C, M ≤ 36</span><br></pre></td></tr></tbody></table></figure>

<h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">The first line should contain a non-negative integer K indicating the number of invited groups.</span><br><span class="line">The second line should contain K space-separated integer indicating the index of invited groups(groups are indexed from 0).</span><br><span class="line"></span><br><span class="line">You can output index in any order as long as each index appears at most once. If there are multiple way to reach the most total knowledge points, you can output any one of them. If none of the groups will be invited, you could either output one line or output a blank line in the second line.</span><br></pre></td></tr></tbody></table></figure>

<h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例 1</h3><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">2</span><br><span class="line">1 0 2 1 10</span><br><span class="line">1 0 2 1 21</span><br><span class="line">1 0 2 1</span><br></pre></td></tr></tbody></table></figure>

<h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></tbody></table></figure>

<h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例 2</h3><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2 1 1 0 31</span><br><span class="line">1 0 2 1</span><br></pre></td></tr></tbody></table></figure>

<h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><figure class="highlight plaintext"><table><tbody><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></tbody></table></figure>

<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>其实就是 01 背包问题，只是背包的容量从一维变成了四维，并要求输出最优解方案。</p>
<h2 id="AC代码-1"><a href="#AC代码-1" class="headerlink" title="AC代码(1)"></a>AC 代码 (1)</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">37</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, p[MAXN], a[MAXN], c[MAXN], m[MAXN], g[MAXN];</span><br><span class="line"><span class="type">short</span> dp[MAXN][MAXN][MAXN][MAXN][MAXN];</span><br><span class="line"><span class="type">bool</span> path[MAXN][MAXN][MAXN][MAXN][MAXN];</span><br><span class="line"><span class="type">int</span> P, A, C, M;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>, p+i, a+i, c+i, m+i, g+i);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;P, &amp;A, &amp;C, &amp;M);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> ip=<span class="number">0</span>; ip&lt;=P; ip++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> ia=<span class="number">0</span>; ia&lt;=A; ia++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> ic=<span class="number">0</span>; ic&lt;=C; ic++)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> im=<span class="number">0</span>; im&lt;=M; im++)</span><br><span class="line">                    {</span><br><span class="line">                        <span class="keyword">if</span>(ip&lt;p[i] || ia&lt;a[i] || ic&lt;c[i] || im&lt;m[i])</span><br><span class="line">                            dp[i][ip][ia][ic][im] = dp[i<span class="number">+1</span>][ip][ia][ic][im];</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        {</span><br><span class="line">                            <span class="keyword">if</span>( dp[i<span class="number">+1</span>][ip][ia][ic][im] &lt; dp[i<span class="number">+1</span>][ip-p[i]][ia-a[i]][ic-c[i]][im-m[i]] + g[i] )</span><br><span class="line">                            {</span><br><span class="line">                                dp[i][ip][ia][ic][im] = dp[i<span class="number">+1</span>][ip-p[i]][ia-a[i]][ic-c[i]][im-m[i]] + g[i];</span><br><span class="line">                                path[i][ip][ia][ic][im] = <span class="literal">true</span>;</span><br><span class="line">                            }</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                dp[i][ip][ia][ic][im] = dp[i<span class="number">+1</span>][ip][ia][ic][im];</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>, ip=P, ia=A, ic=C, im=M; i&lt;n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(path[i][ip][ia][ic][im])</span><br><span class="line">            {</span><br><span class="line">                ans.<span class="built_in">push_back</span>(i);</span><br><span class="line">                ip -= p[i];</span><br><span class="line">                ia -= a[i];</span><br><span class="line">                ic -= c[i];</span><br><span class="line">                im -= m[i];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> sz = ans.<span class="built_in">size</span>();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sz);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;sz; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, ans[i], <span class="string">" \n"</span>[i<span class="number">+1</span>==sz]);</span><br><span class="line">        <span class="keyword">if</span>(sz==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br></pre></td></tr></tbody></table></figure>

<h2 id="AC代码-2"><a href="#AC代码-2" class="headerlink" title="AC代码(2)"></a>AC 代码 (2)</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">37</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, p[MAXN], a[MAXN], c[MAXN], m[MAXN], g[MAXN];</span><br><span class="line"><span class="type">short</span> dp[MAXN][MAXN][MAXN][MAXN][MAXN];</span><br><span class="line"><span class="type">bool</span> path[MAXN][MAXN][MAXN][MAXN][MAXN];</span><br><span class="line"><span class="type">int</span> P, A, C, M;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>, p+i, a+i, c+i, m+i, g+i);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>, &amp;P, &amp;A, &amp;C, &amp;M);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> ip=<span class="number">0</span>; ip&lt;=P; ip++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> ia=<span class="number">0</span>; ia&lt;=A; ia++)</span><br><span class="line">            {</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> ic=<span class="number">0</span>; ic&lt;=C; ic++)</span><br><span class="line">                {</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> im=<span class="number">0</span>; im&lt;=M; im++)</span><br><span class="line">                    {</span><br><span class="line">                        <span class="comment">//if(ip&lt;p[i] || ia&lt;a[i] || ic&lt;c[i] || im&lt;m[i])</span></span><br><span class="line">                            dp[i][ip][ia][ic][im] = dp[i<span class="number">+1</span>][ip][ia][ic][im];</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> ip=P; ip&gt;=p[i]; ip--)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> ia=A; ia&gt;=a[i]; ia--)</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> ic=C; ic&gt;=c[i]; ic--)</span><br><span class="line">                    <span class="keyword">for</span>(<span class="type">int</span> im=M; im&gt;=m[i]; im--)</span><br><span class="line">                    {</span><br><span class="line">                            <span class="keyword">if</span>(dp[i<span class="number">+1</span>][ip-p[i]][ia-a[i]][ic-c[i]][im-m[i]]+g[i] &gt; dp[i<span class="number">+1</span>][ip][ia][ic][im])</span><br><span class="line">                            {</span><br><span class="line">                                dp[i][ip][ia][ic][im] = dp[i<span class="number">+1</span>][ip-p[i]][ia-a[i]][ic-c[i]][im-m[i]]+g[i];</span><br><span class="line">                                path[i][ip][ia][ic][im] = <span class="literal">true</span>;</span><br><span class="line">                            }</span><br><span class="line">                    }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">fprintf</span>(stderr, <span class="string">"%d\n"</span>, dp[<span class="number">0</span>][P][A][C][M]);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>, ip=P, ia=A, ic=C, im=M; i&lt;n; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="comment">//if(dp[i][ip][ia][ic][im] == dp[i+1][ip-p[i]][ia-a[i]][ic-c[i]][im-m[i]]+g[i])</span></span><br><span class="line">        <span class="keyword">if</span>(path[i][ip][ia][ic][im])</span><br><span class="line">        {</span><br><span class="line">            ans.<span class="built_in">push_back</span>(i);</span><br><span class="line">            ip -= p[i];</span><br><span class="line">            ia -= a[i];</span><br><span class="line">            ic -= c[i];</span><br><span class="line">            im -= m[i];</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> sz = ans.<span class="built_in">size</span>();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sz);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;sz; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, ans[i], <span class="string">" \n"</span>[i<span class="number">+1</span>==sz]);</span><br><span class="line">    <span class="keyword">if</span>(sz==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上两个代码主要思想是一样的，只要在细节上的实现不一样。</p>
<p>这个题因为是四维的背包，再加上一维，空间耗费极大。而所维护的数值范围很小，所以使用 short 类型的数组。（骚呀，第一次遇到这样的，比赛时卡了空间）<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180727/CCHc2381Bf.png" alt="mark"></p>
<p>因为要回溯路径，所以要用五维的数组，四维的数组保存不了路径，会被破坏。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180727/HK7D3JgCkm.png" alt="mark"></p>
<p>（不过 lyy 说通过压位可以）</p>
<p>自己用的白书上的模板</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i++)</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;=W; j++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(j &lt; w[i])</span><br><span class="line">            dp[i][j] = dp[i<span class="number">+1</span>][j];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            dp[i][j] = <span class="built_in">max</span>(dp[i<span class="number">+1</span>][j], dp[i<span class="number">+1</span>][j-w[i]]+v[i]);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>由于需要回溯路径， 所以 <code>dp[i][j] = max(dp[i+1][j], dp[i+1][j-w[i]]+v[i]);</code> 一行不再适用，需要分开判断。而在比赛时自己就在这里犯了错。自己只写了</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(dp[i<span class="number">+1</span>][j-w[i]]+v[i] &gt; dp[i<span class="number">+1</span>][j])</span><br><span class="line">    dp[i][j] = dp[i<span class="number">+1</span>][j-w[i]]+v[i];</span><br></pre></td></tr></tbody></table></figure>

<p>而没写</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">else</span></span><br><span class="line">    dp[i][j] = dp[i<span class="number">+1</span>][j];</span><br></pre></td></tr></tbody></table></figure>

<p>这个点卡了自己很久，用了几乎两个晚上找到！</p>
<p>还有一点就是路径的回溯， 要用一个 bool 类型的 path 数组来记录在此位置是否进行更改。自己之前是用的记录跳跃的位置，耗费了很多的空间。</p>
<p>这题可以说是到目前为止自己耗时最多的题目了，现在对于 01 背包清楚了许多！以后不怕了，记录下解题的曲折路程。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180727/6b4181A4iI.png" alt="mark"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180727/8mhgA2j7aB.png" alt="mark"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180727/98EkC2jI58.png" alt="mark"></p>
<p>（中间一次过掉是用了标程）</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>DP</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>dp</tag>
        <tag>01背包</tag>
      </tags>
  </entry>
  <entry>
    <title>集合的整数表示</title>
    <url>/2018/07/25/%E9%9B%86%E5%90%88%E7%9A%84%E6%95%B4%E6%95%B0%E8%A1%A8%E7%A4%BA/</url>
    <content><![CDATA[<p>当元素较少时，可以使用二进制码来表示集合。集合 ${0， 1， 2， \ldots，n-1}$ 的子集可以用如下方式编码成整数。$$f (S) = \sum_{i \in S} 2^i$$</p>
<p>像这样表示之后，一些集合运算可以对应地写成如下方式。</p>
<ul>
<li>空集 $\phi$——0</li>
<li> 只含有第 $i$ 个元素的集合 ${i}$——$1&lt;&lt;i$</li>
<li> 含有全部 $n$ 个元素的集合 ——$(1&lt;&lt;n)-1$</li>
<li> 判断第 $i$ 个元素是否属于集合 $S$—— <code>if( S&gt;&gt;i&amp;1 )</code> 或 <code>if(S &amp; (1&lt;&lt;i))</code></li>
<li>向集合 $S$ 加入第 $i$ 个元素 ——<code>S |= 1&lt;&lt;i </code></li>
<li>从集合 $S$ 中去除第 $i$ 个元素 ——<code>S&amp;~(1&lt;&lt;i)</code></li>
<li>集合 $S​$ 和集合 $T​$ 的交集 ——<code>S&amp;T</code></li>
<li>集合 $S$ 和集合 $T$ 的并集 ——<code>S|T</code></li>
<li>切换第 <code>i</code> 位 ——<code>S ^= 1&lt;&lt;i</code></li>
<li>判断某状态是否有相邻的两者相同 ——<code>if( S &amp; S&lt;&lt;1 )</code></li>
<li>把一个数字二进制下最靠右的第一个 1 去掉 ——<code>S = S&amp;(S-1)</code></li>
</ul>
<p>此外，想要将集合 {0,1,….,n-1} 所有子集枚举出来的话，可以像下面这样写</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> S=<span class="number">0</span>; S &lt; <span class="number">1</span>&lt;&lt;n; S++)</span><br><span class="line">{</span><br><span class="line">	<span class="comment">//对子集的操作    </span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
        <category>DP</category>
      </categories>
      <tags>
        <tag>DP</tag>
      </tags>
  </entry>
  <entry>
    <title>2018 Multi-University Training Contest 1 记录</title>
    <url>/2018/07/24/2018-Multi-University-Training-Contest-1-%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="1001-Maximum-Multiple"><a href="#1001-Maximum-Multiple" class="headerlink" title="1001 Maximum Multiple"></a>1001 Maximum Multiple</h2><h3 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Given an integer&nbsp;n, Chiaki would like to find three positive integers&nbsp;x,&nbsp;y&nbsp;and&nbsp;z&nbsp;such that:&nbsp;$n=x+y+z$, $x\mid n$, $y \mid n$, $z \mid n$ and $xyz$ is maximum. </p>
<h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>There are multiple test cases. The first line of input contains an integer $T$ ($1 \le T \le 10^6$), indicating the number of test cases. For each test case:<br>The first line contains an integer $n$ ($1 \le n \le 10^{6}$). </p>
<h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output an integer denoting the maximum $xyz$. If there no such integers, output $-1$ instead.  <span id="more"></span></p>
<h3 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h3><blockquote>
<p>3</p>
<p>1</p>
<p>2</p>
<p>3</p>
</blockquote>
<h3 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h3><blockquote>
<p>-1</p>
<p>-1</p>
<p>1</p>
</blockquote>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>对 $n$ 是否是 3，4 的倍数进行讨论。</p>
<p>如果是 3 的倍数， 则 $ x = y = z =  {n \over  3} $； 如果是 4 的倍数， 则 $ x = {n \over 2}, y = z = {n \over 4} $。</p>
<p>若 $n$ 为 3 和 4 的公倍数，则按 3 的倍数处理。</p>
<h3 id="AC代码（队友）"><a href="#AC代码（队友）" class="headerlink" title="AC代码（队友）"></a>AC 代码（队友）</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="type">int</span> _;</span><br><span class="line">    <span class="built_in">scanf</span>( <span class="string">"%d"</span>, &amp;_ );</span><br><span class="line">    <span class="keyword">while</span>( _-- ) {</span><br><span class="line">        <span class="built_in">scanf</span>( <span class="string">"%d"</span>, &amp;n );</span><br><span class="line">        <span class="keyword">if</span>( n % <span class="number">3</span> == <span class="number">0</span> ) {</span><br><span class="line">            LL ans = <span class="number">1</span>;</span><br><span class="line">            ans = ( ans * n/<span class="number">3</span> * n/<span class="number">3</span> * n/<span class="number">3</span> );</span><br><span class="line">            <span class="built_in">printf</span>( <span class="string">"%lld\n"</span>, ans );</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span>( n%<span class="number">4</span> == <span class="number">0</span> ) {</span><br><span class="line">            LL ans = <span class="number">1</span>;</span><br><span class="line">            ans = ( ans * n/<span class="number">2</span> * n/<span class="number">4</span> * n/<span class="number">4</span> );</span><br><span class="line">            <span class="built_in">printf</span>( <span class="string">"%lld\n"</span>, ans );</span><br><span class="line"></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="built_in">puts</span>( <span class="string">"-1"</span> );</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<hr>

<h2 id="1011-Time-Zone"><a href="#1011-Time-Zone" class="headerlink" title="1011 Time Zone"></a>1011 Time Zone</h2><h3 id="Problem-Description-1"><a href="#Problem-Description-1" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Chiaki often participates in international competitive programming contests. The time zone becomes a big problem. Given a time in Beijing time (UTC +8), Chiaki would like to know the time in another time zone&nbsp;s. </p>
<h3 id="Input-1"><a href="#Input-1" class="headerlink" title="Input"></a>Input</h3><p>There are multiple test cases. The first line of input contains an integer $T$ ($1 \le T \le 10^6$), indicating the number of test cases. For each test case:<br>The first line contains two integers $a$, $b$ ($0 \le a \le 23, 0 \le b \le 59$) and a string $s$ in the format of "UTC+X’’, "UTC-X’’, "UTC+X.Y’’, or "UTC-X.Y’’ ($0 \le X, X.Y \le 14, 0 \le Y \le 9$). </p>
<h3 id="Output-1"><a href="#Output-1" class="headerlink" title="Output"></a>Output</h3><p>For each test, output the time in the format of $hh:mm$ (24-hour clock). </p>
<h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input"></a>Sample Input</h3><blockquote>
<p>3</p>
<p>11 11 UTC+8</p>
<p>11 12 UTC+9</p>
<p>11 23 UTC+0</p>
</blockquote>
<h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output"></a>Sample Output</h3><blockquote>
<p>11:11</p>
<p>12:12</p>
<p>03:23</p>
</blockquote>
<h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>水题，时区转换，模拟即可。</p>
<p>如果让自己写可能会以分钟计数，应该可以省去进位的麻烦。</p>
<h3 id="AC代码（队友）-1"><a href="#AC代码（队友）-1" class="headerlink" title="AC代码（队友）"></a>AC 代码（队友）</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> h, m;</span><br><span class="line"><span class="type">double</span> change;</span><br><span class="line"><span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="type">int</span> _;</span><br><span class="line">    <span class="built_in">scanf</span>( <span class="string">"%d"</span>, &amp;_ );</span><br><span class="line">    <span class="keyword">while</span>( _-- ) {</span><br><span class="line">        <span class="built_in">scanf</span>( <span class="string">"%d%d"</span>, &amp;h, &amp;m );</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="built_in">getchar</span>();</span><br><span class="line">        <span class="built_in">scanf</span>( <span class="string">"%lf"</span>, &amp;change );</span><br><span class="line">        <span class="keyword">if</span>( (<span class="type">int</span>)change == change ) {</span><br><span class="line">            h += change<span class="number">-8</span>;</span><br><span class="line">            <span class="keyword">if</span>( h &lt; <span class="number">0</span> ) {</span><br><span class="line">                h += <span class="number">24</span>;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span>( h &gt;= <span class="number">24</span> ) {</span><br><span class="line">                h -= <span class="number">24</span>;</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="type">int</span> _h = (<span class="type">int</span>)change;</span><br><span class="line">            <span class="type">double</span> _m = change-_h;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;m&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>( _m &lt; <span class="number">0</span> ) {</span><br><span class="line">                _m = (<span class="type">int</span>)( _m * <span class="number">10</span> +- <span class="number">0.5</span> ) / <span class="number">10.0</span>;</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                _m = (<span class="type">int</span>)( _m * <span class="number">10</span> + <span class="number">0.5</span> ) / <span class="number">10.0</span>;</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line"><span class="comment">//            cout&lt;&lt;_m&lt;&lt;endl;</span></span><br><span class="line">            h += _h<span class="number">-8</span>;</span><br><span class="line">            m += (<span class="type">int</span>)(_m*<span class="number">60</span>);</span><br><span class="line"><span class="comment">//            cout&lt;&lt;m&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>( m &lt; <span class="number">0</span> ) {</span><br><span class="line">                m += <span class="number">60</span>;</span><br><span class="line">                h -= <span class="number">1</span>;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span>( m &gt;= <span class="number">60</span> ) {</span><br><span class="line">                m -= <span class="number">60</span>;</span><br><span class="line">                h += <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>( h &lt; <span class="number">0</span> ) {</span><br><span class="line">                h += <span class="number">24</span>;</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span>( h &gt;= <span class="number">24</span> ) {</span><br><span class="line">                h -= <span class="number">24</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>( <span class="string">"%02d:%02d\n"</span>, h, m );</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<hr>

<h2 id="1003-Triangle-Partition"><a href="#1003-Triangle-Partition" class="headerlink" title="1003 Triangle Partition"></a>1003 Triangle Partition</h2><p><strong>Time Limit: 2000/1000 MS (Java/Others)&nbsp;&nbsp;&nbsp;&nbsp;Memory Limit: 132768/132768 K (Java/Others)</strong></p>
<p><strong>Special Judge</strong> </p>
<h3 id="Problem-Description-2"><a href="#Problem-Description-2" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Chiaki has&nbsp;3n&nbsp;points&nbsp;p1,p2,…,p3n. It is guaranteed that no three points are collinear. Chiaki would like to construct&nbsp;n&nbsp;disjoint triangles where each vertex comes from the&nbsp;3n&nbsp;points. </p>
<h3 id="Input-2"><a href="#Input-2" class="headerlink" title="Input"></a>Input</h3><p>There are multiple test cases. The first line of input contains an integer $T$, indicating the number of test cases. For each test case:<br>The first line contains an integer $n$ ($1 \le n \le 1000$) – the number of triangle to construct.<br>Each of the next $3n$ lines contains two integers $x_i$ and $y_i$ ($-10^9 \le x_i, y_i \le 10^9$).<br>It is guaranteed that the sum of all $n$ does not exceed $10000$. </p>
<h3 id="Output-2"><a href="#Output-2" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output $n$ lines contain three integers $a_i,b_i,c_i$ ($1 \le a_i,b_i,c_i \le 3n$) each denoting the indices of points the $i$-th triangle use. If there are multiple solutions, you can output any of them. </p>
<h3 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input"></a>Sample Input</h3><blockquote>
<p>1</p>
<p>1</p>
<p>1 2</p>
<p>2 3</p>
<p>3 5</p>
</blockquote>
<h3 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output"></a>Sample Output</h3><blockquote>
<p>1 2 3</p>
</blockquote>
<h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>把顶点按 x, y 坐标排序，依次构成三角形。</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC 代码</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 3005</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">point</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> id, x, y;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span> &lt; (point p)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(x &lt; p.x)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x == p.x)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(y &lt; p.y)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">}P[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>*n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;P[i].x, &amp;P[i].y);</span><br><span class="line">            P[i].id = i<span class="number">+1</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="built_in">sort</span>(P, P<span class="number">+3</span>*n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>*n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, P[i].id);</span><br><span class="line">            <span class="keyword">if</span>(i<span class="number">+1</span>%<span class="number">3</span>==<span class="number">0</span>)</span><br><span class="line">                <span class="built_in">putchar</span>(<span class="number">10</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<hr>

<h2 id="1004-Distinct-Values"><a href="#1004-Distinct-Values" class="headerlink" title="1004 Distinct Values"></a>1004 Distinct Values</h2><p><strong>Time Limit: 4000/2000 MS (Java/Others)&nbsp;&nbsp;&nbsp;&nbsp;Memory Limit: 32768/32768 K (Java/Others)</strong> </p>
<h3 id="Problem-Description-3"><a href="#Problem-Description-3" class="headerlink" title="Problem Description"></a>Problem Description</h3><p>Chiaki has an array of $n$ positive integers. You are told some facts about the array: for every two elements $a_i$ and $a_j$ in the subarray $a_{l..r}$ ($l \le i  \lt j \le r$), $a_i \ne a_j$ holds.<br>Chiaki would like to find a lexicographically minimal array which meets the facts. </p>
<h3 id="Input-3"><a href="#Input-3" class="headerlink" title="Input"></a>Input</h3><p>There are multiple test cases. The first line of input contains an integer $T$, indicating the number of test cases. For each test case:<br><br>The first line contains two integers $n$ and $m$ ($1 \le n, m \le 10^5$) – the length of the array and the number of facts. Each of the next $m$ lines contains two integers $l_i$ and $r_i$ ($1 \le l_i \le r_i \le n$).<br><br>It is guaranteed that neither the sum of all $n$ nor the sum of all $m$ exceeds $10^6$. </p>
<h3 id="Output-3"><a href="#Output-3" class="headerlink" title="Output"></a>Output</h3><p>For each test case, output $n$ integers denoting the lexicographically minimal array. Integers should be separated by a single space, and no extra spaces are allowed  at the end of lines. </p>
<h3 id="Sample-Input-3"><a href="#Sample-Input-3" class="headerlink" title="Sample Input"></a>Sample Input</h3><blockquote>
<p>3</p>
<p>2 1</p>
<p>1 2</p>
<p>4 2 </p>
<p>1 2</p>
<p>3 4 </p>
<p>5 2</p>
<p>1 3 </p>
<p>2 4 </p>
</blockquote>
<h3 id="Samplt-output"><a href="#Samplt-output" class="headerlink" title="Samplt output"></a>Samplt output</h3><blockquote>
<p>1 2</p>
<p>1 2 1 2 </p>
<p>1 2 3 1 1 </p>
</blockquote>
<h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><p>用一个优先队列维护，优先使用较小的数字。使用完后注意放回。</p>
<h3 id="AC代码（队友）-2"><a href="#AC代码（队友）-2" class="headerlink" title="AC代码（队友）"></a>AC 代码（队友）</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL long long</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span><span class="number">+7</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span> {</span><br><span class="line">    <span class="type">int</span> l ,r;</span><br><span class="line">} P[N];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(a.l!=b.r)</span><br><span class="line">        <span class="keyword">return</span> a.l&lt;b.l;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> a.r&lt;b.r;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt; &gt; Q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="type">int</span> _;</span><br><span class="line">    <span class="built_in">scanf</span>( <span class="string">"%d"</span>, &amp;_ );</span><br><span class="line">    <span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1e5</span>; ++i ) {</span><br><span class="line">        Q.<span class="built_in">push</span>( i );</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">while</span>( _-- ) {</span><br><span class="line">        <span class="built_in">scanf</span>( <span class="string">"%d%d"</span>, &amp;n, &amp;m );</span><br><span class="line">        <span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i ) {</span><br><span class="line">            <span class="built_in">scanf</span>( <span class="string">"%d%d"</span>, &amp;P[i].l, &amp;P[i].r );</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">sort</span>( P, P+m, cmp );</span><br><span class="line">        l = r = <span class="number">1</span>;</span><br><span class="line">        ans[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        Q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i ) {</span><br><span class="line">            ans[i] = <span class="number">0</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i ) {</span><br><span class="line">            <span class="type">int</span> _l = P[i].l;</span><br><span class="line">            <span class="type">int</span> _r = P[i].r;</span><br><span class="line">            <span class="keyword">for</span>( <span class="type">int</span> j = l; j &lt; _l; ++j ) {</span><br><span class="line">                Q.<span class="built_in">push</span>( ans[j] );</span><br><span class="line">            }</span><br><span class="line">            l = <span class="built_in">max</span>( l, _l );</span><br><span class="line">            <span class="keyword">for</span>( <span class="type">int</span> j = r<span class="number">+1</span>; j &lt;= _r; ++j ) {</span><br><span class="line">                ans[j] = Q.<span class="built_in">top</span>();</span><br><span class="line">                Q.<span class="built_in">pop</span>();</span><br><span class="line">            }</span><br><span class="line">            r = <span class="built_in">max</span>( r, _r );</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>( <span class="type">int</span> i = l; i &lt;= r; ++i ) {</span><br><span class="line">            Q.<span class="built_in">push</span>( ans[i] );</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>( <span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i ) {</span><br><span class="line">            <span class="keyword">if</span>( ans[i] == <span class="number">0</span> ) {</span><br><span class="line">                ans[i] = <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>( i == <span class="number">1</span> ) {</span><br><span class="line">                <span class="built_in">printf</span>( <span class="string">"%d"</span>, ans[i] );</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="built_in">printf</span>( <span class="string">" %d"</span>, ans[i] );</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">puts</span>( <span class="string">""</span> );</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>





















]]></content>
      <categories>
        <category>ACM</category>
        <category>综合比赛</category>
        <category>思维</category>
        <category>构造</category>
        <category>数论</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>HDOJ 5573 Binary Tree</title>
    <url>/2018/07/13/HDOJ-5573-Binary-Tree/</url>
    <content><![CDATA[<p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=5573">题目链接</a></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/18-7-13/45119042.jpg" alt="HDU 5573"><span id="more"></span></p>
<h2 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h2><p>&amp;emsp;&amp;emsp; 在一棵以 1 为根的满二叉树上，然后从根节点到第 k 层的某一个结点，你可以以一些途径到达，然后经过的节点编号需要加加减减，问你怎么凑出 n，特判数据。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>&amp;emsp;&amp;emsp; 一开始想到的是 dfs 深搜， 可没能想出可行的剪枝函数，之后转向了新的思路。若每层都取 + 号，到达第 K 层时，其和为 $2^k-1$ 到 $2^{k-1}-n-2$ 之间， 也就是如果我们一直走左边， 得到的最大值为 $2^k-1$，如果我们只最后一步走右边（下边的思路所说的路径都是除最后一步外只往左走），则为 $2^k$ ，由<strong>题目数据范围</strong>可知， $N\le2^k$ ，即我们如果一直走左边的话是可以取到最大值的。最左边一枝的编号为  $2^k$ ，联想到数的二进制表示，即我们可以取路径上边的部分或全部节点构成任意 1 ~ $2^k$ 的数字。题意可知，我们必须要走 K 层，如果选取部分节点，那剩下的结点怎么办呢。思路一下僵结住，不知道该如何向下进行。后来灵光一闪，想到可以反过来用 $2^k$ 减去某个数得到我们想要的 $N$ ，这题便出来了。</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><ol>
<li>$diff = \frac{2^k-n}{2}$</li>
<li>N 若为奇数，则最后一步向左走；若为偶数，则向右走。将符号全部初始为 + 。</li>
<li>求出 $diff$ 的二进制，其二进制位若为 1，则将其对应位的符号改为 - 。</li>
</ol>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 65</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> T, k;</span><br><span class="line">LL n;</span><br><span class="line">LL maxx;</span><br><span class="line">LL tar;</span><br><span class="line"><span class="type">bool</span> sub[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> kiss = <span class="number">1</span>; kiss &lt;= T; kiss++)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%d"</span>, &amp;n, &amp;k);</span><br><span class="line">        <span class="built_in">memset</span>(sub, <span class="literal">false</span>, <span class="built_in">sizeof</span>(sub));</span><br><span class="line">        maxx = <span class="number">1LL</span> &lt;&lt; k;</span><br><span class="line">        tar = (maxx - n) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(tar)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(tar &amp; <span class="number">1</span>)</span><br><span class="line">            {</span><br><span class="line">                sub[cnt] = <span class="literal">true</span>;</span><br><span class="line">            }</span><br><span class="line">            tar &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d:\n"</span>, kiss);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=k<span class="number">-1</span>; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld %c\n"</span>, <span class="number">1LL</span>&lt;&lt;(i<span class="number">-1</span>), sub[i] ? <span class="string">'-'</span> : <span class="string">'+'</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(n &amp; <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld %c\n"</span>, <span class="number">1LL</span>&lt;&lt;(k<span class="number">-1</span>), sub[k] ? <span class="string">'-'</span> : <span class="string">'+'</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld %c\n"</span>, (<span class="number">1LL</span>&lt;&lt;(k<span class="number">-1</span>))<span class="number">+1</span>, sub[k] ? <span class="string">'-'</span> : <span class="string">'+'</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180713/1A7fK73gE9.png" alt="AC"></p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180713/kbmJK514K8.png" alt="mark"></p>
<h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>&amp;emsp;&amp;emsp; 刷题时要仔细看题目给的数据范围，这题因为没有注意 $N\le2^k$ 纠结了很久，注意到后突然醒悟可以只走左边构成该值。</p>
<p>&amp;emsp;&amp;emsp; 要多思考，当得出思路，一次 AC 的时候真的很喜悦，很有成就感！</p>
]]></content>
      <categories>
        <category>ACM</category>
        <category>思维</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 一篇文章多个 categories</title>
    <url>/2018/07/03/Hexo-%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%A4%9A%E4%B8%AA-categories/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>&amp;emsp;&amp;emsp; 在很多情况下，我们希望在 Hexo 中写的一篇文章能够同时属于多个分类，例如我写一篇 <a href="http://zhiyi.live/2018/06/29/Servlet%E7%AC%94%E8%AE%B0/">《Servlet 笔记》</a>，我既想将它放在 <a href="http://zhiyi.live/categories/Java/">Java</a> 这个分类中，又想将它放入 <a href="http://zhiyi.live/categories/Java/Servlet/">Servlet</a> 这个分类。<span id="more"></span></p>
<p>&amp;emsp;&amp;emsp; 按照官方的解释，<code>categories</code>&nbsp;这个选项有两种配置方法（其实有三种）。那我们就来讲讲这三种配置方法。 </p>
<h2 id="子分类"><a href="#子分类" class="headerlink" title="子分类"></a>子分类</h2><p>下面的分类会将该分章放到 <code>Java/Servlet</code> 这个分类下。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Java</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Servlet</span></span><br></pre></td></tr></tbody></table></figure>

<p>同样的作用我们也可以这样写。</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span> [<span class="string">Java</span>, <span class="string">Servlet</span>]</span><br></pre></td></tr></tbody></table></figure>

<p>上面两种方法最终效果一样，都是将文章放在了一个子分类的目录下，效果如图。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180703/9eJKE7b4Il.png" alt="mark"></p>
<h2 id="多个分类"><a href="#多个分类" class="headerlink" title="多个分类"></a>多个分类</h2><p>如果我们的要求是将文章同时分到多个不同的分类中呢，我们应该这样：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> [<span class="string">Java</span>]</span><br><span class="line">  <span class="bullet">-</span> [<span class="string">Servlet</span>]</span><br></pre></td></tr></tbody></table></figure>

<p>这样，就可以将上面的文章分类到 <code>Java</code> 和 <code>Servlet</code> 这两个不同的目录中了。</p>
<p>扩展一下，如果我们将其分类到 <code>Java/Servlet</code> 和 <code>Programming</code> 两个不同的目录下，我们应该如下写：</p>
<figure class="highlight yaml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> [<span class="string">Java</span>, <span class="string">Servlet</span>]</span><br><span class="line">  <span class="bullet">-</span> [<span class="string">Programming</span>]</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ Idea 创建第一个 Servlet 项目</title>
    <url>/2018/07/02/IntelliJ-Idea%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AAServlet%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<p>&amp;emsp;&amp;emsp; 本文主要根据 <a href="https://blog.csdn.net/antony9118/article/details/51800404">Intellij Idea 创建 Web 项目并部署 servlet</a>，<a href="https://www.jianshu.com/p/82446a31f0b9">JavaWeb 开发 - 使用 IDEA 创建 Servlet 程序</a>两篇文章。</p>
<p>&amp;emsp;&amp;emsp; 一开始入手  JavaWeb、Tomcat 还是有一点点迷茫的，因为自己还没有太多的接触过有关的网络编程，不过学习编程早已习惯了一开始的无从下手，不用怕，找路就是了。本文记录的是使用 <code>IntelliJ Idea 2017.3.2 </code>编写第一个 JavaWeb 项目，并部署 Servlet，用到了 Tomcat。（一开始学习还不知道这个具体来做什么的）</p>
<h2 id="1-创建一个web项目"><a href="#1-创建一个web项目" class="headerlink" title="1. 创建一个web项目"></a>1. 创建一个 web 项目</h2><p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/FlHI8ljLE4.png" alt="创建项目"></p>
<span id="more"></span>我们创建好后文件工程结构目标如下：（图片来源于网络）![mark](https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/C2i412I6I2.png)

<p>&amp;emsp;&amp;emsp; 但我使用 <code>IntelliJ Idea 2017.3.2</code> 创建好后，却没有 WEB-INF 文件夹和 web.xml 文件，这时就要自己配置添加 <code>web.xml</code>。</p>
<p>步骤：</p>
<ol>
<li><p>打开 Project Structure， (File -&gt; Project Structure, 快捷键 Ctrl+Shift+Alt+S. 也可以右击项目，有个 Open Module Settings, 快捷键 F4. )</p>
</li>
<li><p>在 Facets 中选中次级的 Web 或者在 Modules 中选中 Web，在 Deployment Descriptors 面板里，点击   + 号选择 web.xml 以及版本号。然后在弹出的对话框中修改 xml 默认的目录，加上 web 就可以了。 <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/Cf0hgKcKAD.png" alt="mark"></p>
</li>
<li><p>完成。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/didEidD7E5.png" alt="mark"><br>(classes 和 lib 是后边设置的)</p>
</li>
</ol>
<h2 id="2-Web工程设置"><a href="#2-Web工程设置" class="headerlink" title="2. Web工程设置"></a>2. Web 工程设置</h2><h3 id="创建classes、lib目录"><a href="#创建classes、lib目录" class="headerlink" title="创建classes、lib目录"></a>创建 <code>classes</code>、<code>lib</code> 目录</h3><ol>
<li>在 WEB-INF 目录下点击右键，New –&gt; Directory，创建 classes 和 lib 两个目录 。classes 目录用于存放编译后的 class 文件，lib 用于存放依赖的 jar 包 </li>
<li><code>classes</code> 目录配置<br>File –&gt; Project Structure，进入 Project Structure 窗口，点击 Modules –&gt; 选中项目 “JavaWeb” –&gt; 切换到 Paths 选项卡 –&gt; 勾选 “Use module compile output path”，将 “Output path” 和 “Test output path” 都改为之前创建的 classes 目录。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/miJm6Ij30i.png" alt="mark">即将后面编译的 class 文件默认生成到 classes 目录下 </li>
<li><code>lib</code> 目录配置<br>还是在这个 <code>Project Structure</code> 这个窗口。点击 Modules –&gt; 选中项目 “JavaWeb” –&gt; 切换到 Dependencies 选项卡 –&gt; 点击右边的 “+”，选择 “JARs or directories…”，选择创建的 lib 目录。</li>
</ol>
<h3 id="配置打包方式Artifacts"><a href="#配置打包方式Artifacts" class="headerlink" title="配置打包方式Artifacts"></a>配置打包方式 Artifacts</h3><p>&amp;emsp;&amp;emsp; 点击 Artifacts 选项卡，IDEA 会为该项目自动创建一个名为 “JavaWeb:war exploded” 的打包方式，表示 打包成 war 包，并且是文件展开性的，输出路径为当前项目下的 out 文件夹，保持默认即可。<del>另外勾选下 “Build on make”</del>“Include in project build”(虽然不知道是干啥用的，但按照他的意思勾上吧)，表示编译的时候就打包部署，勾选 “Show content of elements”，表示显示详细的内容列表。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/l5BbLilfm0.png" alt="mark"></p>
<h2 id="3-Tomcat-配置"><a href="#3-Tomcat-配置" class="headerlink" title="3. Tomcat 配置"></a>3. Tomcat 配置</h2><h3 id="创建-Tomcat-容器"><a href="#创建-Tomcat-容器" class="headerlink" title="创建 Tomcat 容器"></a>创建 Tomcat 容器</h3><ol>
<li>打开菜单 Run -&gt; 选择 Edit Configuration&nbsp; <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/6fKA0BD1l5.png" alt="mark"></li>
<li>点击 “+” 号 -&gt; 选择 “Tomcat Server” -&gt; 选择 “Local”&nbsp; <img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/md4Hg8mfKl.png" alt="mark"></li>
<li>点击 “Application server” 后面的 “Configure…”, 弹出 Tomcat Servers 窗口，选择本地安装的 Tomcat 目录，  比如我的是”G:\Tomcat\apache-tomcat-9.0.10”, 即 bin 文件夹所在的目录。 点击 OK。</li>
<li>在”Run/Debug Configurations” 窗口的”Server” 选项板中，取消勾选”After launch”，设置”HTTP port” 和”JMX port”（默认值即可），点击 Apply -&gt; OK， 至此 Tomcat 配置完成。&nbsp; </li>
<li>点击 Deployment -&gt; 选择刚刚建立的 Tomcat 容器 -&gt; 选择 Deployment -&gt; 点击右边的 “+” 号 -&gt; 选择 Artifact-&gt; 选择 web 项目 -&gt; Application context 可以填 “/HelloWorld”(其实也可以不填的～) -&gt; OK&nbsp;.<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/J2LgCk9b5L.png" alt="mark"></li>
</ol>
<h2 id="4-编辑-index-jsp文件"><a href="#4-编辑-index-jsp文件" class="headerlink" title="4. 编辑 index.jsp文件"></a>4. 编辑 <code>index.jsp</code> 文件</h2><p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/44DBe7bldL.png" alt="mark"></p>
<h2 id="5-运行-Tomcat，-在浏览器中查看结果"><a href="#5-运行-Tomcat，-在浏览器中查看结果" class="headerlink" title="5. 运行 Tomcat， 在浏览器中查看结果"></a>5. 运行 Tomcat， 在浏览器中查看结果</h2><p>&amp;emsp;&amp;emsp; 点击绿色按钮，在浏览器地址栏软入 localhost:8080/HelloWorld (HelloWorld 为刚刚设置的地址)，查看结果。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/CAICkfi5bH.png" alt="mark"></p>
<h2 id="6-Servlet简单实现"><a href="#6-Servlet简单实现" class="headerlink" title="6. Servlet简单实现"></a>6. Servlet 简单实现</h2><h3 id="编写Servlet源文件"><a href="#编写Servlet源文件" class="headerlink" title="编写Servlet源文件"></a>编写 Servlet 源文件</h3><p>&amp;emsp;&amp;emsp; 在 src 目录下新建 HelloWorld.java，并编写一下代码并进行编译： </p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> {</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException {</span><br><span class="line">        resp.setContentType(<span class="string">"text/html"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> resp.getWriter();</span><br><span class="line">        out.println(<span class="string">"&lt;h1&gt;Hello,world!&lt;/h1&gt;"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> {</span><br><span class="line">        <span class="built_in">super</span>.destroy();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>&amp;emsp;&amp;emsp; 因为是第一次编写 Servlet 代码，没有过经验，所以可能要导入下 J2EE 库， Idea 蛮智能的，跟着它的引导走就好了。</p>
<p>&amp;emsp;&amp;emsp; 编译后会发现在 classes 目录下生成了 HelloWorld.class 文件。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/3j5EKBFjh9.png" alt="mark"></p>
<h2 id="7-部署-Servlet"><a href="#7-部署-Servlet" class="headerlink" title="7. 部署 Servlet"></a>7. 部署 Servlet</h2><p>方法一：在 WEB-INF 目录下 web.xml 文件的 <code>&lt;web-app&gt; </code>标签中添加如下内容：</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloWorld<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p> 其中 <code>&lt;url-pattern&gt;</code> 为访问网址的地址。</p>
<p>方法二：在 HelloWorld 文件的类前面加上：</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">@WebServlet(name = "HelloWorld", urlPatterns = "/my")</span></span><br></pre></td></tr></tbody></table></figure>

<h3 id="运行-Servlet"><a href="#运行-Servlet" class="headerlink" title="运行 Servlet"></a>运行 Servlet</h3><p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/HaalhdHFJA.png" alt="mark"></p>
<p>&amp;emsp;&amp;emsp; 点击运行， 控制台出现 successfully 则 tomcat 服务启动成功！打开浏览器输入：localhost:8080/HelloWorld/HelloWorld 即可查看 servlet 运行状态了。</p>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/I6Hldc71C5.png" alt="mark"></p>
<h3 id="更新后点击运行四个按钮"><a href="#更新后点击运行四个按钮" class="headerlink" title="更新后点击运行四个按钮"></a>更新后点击运行四个按钮</h3><p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/180702/galelEm2FG.png" alt="mark">四个按钮的区别待更新。</p>
<p align="right">2018 年 7 月 2 日</p>]]></content>
      <categories>
        <category>Java</category>
        <category>Servlet</category>
      </categories>
      <tags>
        <tag>Servlet</tag>
      </tags>
  </entry>
  <entry>
    <title>软件工程考试试题及总结</title>
    <url>/2018/06/25/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E8%80%83%E8%AF%95%E8%AF%95%E9%A2%98%E5%8F%8A%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<h2 id="试题"><a href="#试题" class="headerlink" title="试题"></a>试题</h2><h3 id="简答题（8-10’）"><a href="#简答题（8-10’）" class="headerlink" title="简答题（8*10’）"></a>简答题（8*10’）</h3><ol>
<li>软件过程框架的普适性活动有哪些。列举其中一项并描述。</li>
<li>敏捷软件开发是什么？写出其四条宣言。</li>
<li>需求分析的任务有哪些。需求规格说明书一般包括什么内容。</li>
<li>用例图、类图、时序图、部署图…… 中任选两个画出样例图。</li>
<li>软件体系结构是什么？任选一个体系结构说明其基本（元素？具体忘了是啥了）。</li>
<li>测试有哪四类，分别叙述其目标。</li>
<li>运用实例列举出三个以上的用户界面设计原则。</li>
<li>基本路径测试问题（画流图，计算环复杂度，设计测试路径）</li>
</ol>
<h3 id="叙述题-20’"><a href="#叙述题-20’" class="headerlink" title="叙述题(20’)"></a>叙述题 (20’)</h3><ul>
<li>近 50 年中软件开发模型历程？及其原因情况。结合实例阐述。</li>
</ul>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
      <tags>
        <tag>软件工程</tag>
      </tags>
  </entry>
  <entry>
    <title>几句话</title>
    <url>/2018/06/13/%E5%87%A0%E5%8F%A5%E8%AF%9D/</url>
    <content><![CDATA[<blockquote>
<p>持志如心痛，一心在痛上，岂有功夫说闲话，管闲事。——~~~ 王阳明～～薛侃</p>
</blockquote>
<p>&amp;emsp;&amp;emsp; 今日读《传习录》，恰遇此句，为薛侃录首，惊其为薛侃问阳明之句，乃知世人谓持志如心痛为阳明言皆谬尔！故学者不可轻信盲从，应据于典。原文下：</p>
<blockquote>
<p>侃问：“持志如心痛，一心在痛上，安有功夫说闲话，管闲事？”</p>
<p>先生曰：“初学功夫如此用亦好，但要使知 ‘出入无时，莫知其乡’。心之神明原是如此，功夫方有着落。若只死死守著，恐于功夫上又发病。“</p>
</blockquote>
<p>&amp;emsp;&amp;emsp; 【译文】</p>
<p>&amp;emsp;&amp;emsp; 薛侃问：” 操守志向犹如心痛一般，一心只在痛上，哪里有时间说闲话，管闲事？“</p>
<p>&amp;emsp;&amp;emsp; 先生说：“开始学时，如此下功夫也行，但须明白天理的神明原来就是 ‘进出没有时间，不知它要到哪里’。这样功夫方有着落。若只死守志向，在功夫上大概又会发生问题。”</p>
<blockquote>
<p>没有天花板。—— 陈志老师</p>
</blockquote>
<blockquote>
<p>不会所以去学。—— 陈志老师</p>
</blockquote>
<span id="more"></span>

<blockquote>
<p>给你任务不是让你跟我们讨论怎么做，而是你把方案写好，我们再来看可不可行，有没有改善的地方。—— 陈文凯学姐</p>
</blockquote>
<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/v2-cf7026e89501abd8a13ef223b7de387a_r.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/v2-7d0827280413aee9a82fbd1906165df1_r.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/v2-1b4fc7f51e4545ac2ea0f34f4eb20ba3_r.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/v2-c79f4355c49587c4e278e613dc5acd3f_r.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/v2-2d842054d5cdee1bfc0834189a0e6d91_r.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/v2-c79f4355c49587c4e278e613dc5acd3f_r.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/v2-d54dbcac148726c4dc3b17ea8abbd634_r.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/6ae25885a396ef7be42f35a4478bee06_r.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/v2-0e6364db5d77031621c4f4f9116f6a2e_r.jpg"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/v2-22b7efd773fd3396b964b08062517980_r.jpg"></p>
<blockquote>
<p>恐惧就是这样一个懦夫，当你触及它的底线，接受事情最坏的结果，然后开始准备和它大干一场的时候，它早就不知躲到哪里去了。—— 古典 《拆掉思维里的墙》</p>
</blockquote>
<blockquote>
<p>满地都是六便士，，只有他选择了月亮。——《月亮与六便士》书评</p>
</blockquote>
<blockquote>
<p>若他不在山上， 不会有这漫天的雪花。——《剪刀手爱德华》</p>
</blockquote>
<blockquote>
<p>执者失之。—— 顾城</p>
</blockquote>
<blockquote>
<p>如果你爱上了一朵生长在一颗星星上的花， 那么夜间， 你看着天空就感到甜蜜愉快。 所有的星星上都好像开着花。——《小王子》</p>
</blockquote>
<p>最近对乔布斯佩服得五体投地，记一些他的语录。<br>来自<a href="https://news.stanford.edu/2005/06/14/jobs-061505/">乔布斯 2005 斯坦福毕业大学演讲</a></p>
<blockquote>
<p>This was the closest I’ve been to facing death, and I hope it’s the closest I get for a few more decades. Having lived through it, I can now say this to you with a bit more certainty than when death was a useful but purely intellectual concept:</p>
<p>No one wants to die. Even people who want to go to heaven don’t want to die to get there. And yet death is the destination we all share. No one has ever escaped it. And that is as it should be, because Death is very likely the single best invention of Life. It is Life’s change agent. It clears out the old to make way for the new. Right now the new is you, but someday not too long from now, you will gradually become the old and be cleared away. Sorry to be so dramatic, but it is quite true.</p>
<p>Your time is limited, so don’t waste it living someone else’s life. Don’t be trapped by dogma — which is living with the results of other people’s thinking. Don’t let the noise of others’ opinions drown out your own inner voice. And most important, have the courage to follow your heart and intuition. They somehow already know what you truly want to become. Everything else is secondary.</p>
<p>When I was young, there was an amazing publication called <em>The Whole Earth Catalog</em>, which was one of the bibles of my generation. It was created by a fellow named Stewart Brand not far from here in Menlo Park, and he brought it to life with his poetic touch. This was in the late 1960s, before personal computers and desktop publishing, so it was all made with typewriters, scissors and Polaroid cameras. It was sort of like Google in paperback form, 35 years before Google came along: It was idealistic, and overflowing with neat tools and great notions.</p>
<p>Stewart and his team put out several issues of <em>The Whole Earth Catalog</em>, and then when it had run its course, they put out a final issue. It was the mid-1970s, and I was your age. On the back cover of their final issue was a photograph of an early morning country road, the kind you might find yourself hitchhiking on if you were so adventurous. Beneath it were the words: “Stay Hungry. Stay Foolish.” It was their farewell message as they signed off. Stay Hungry. Stay Foolish. And I have always wished that for myself. And now, as you graduate to begin anew, I wish that for you.</p>
<p>Stay Hungry. Stay Foolish.</p>
<p>Thank you all very much.</p>
</blockquote>
]]></content>
      <categories>
        <category>杂记</category>
      </categories>
  </entry>
  <entry>
    <title>一些句子</title>
    <url>/2018/06/05/%E4%B8%80%E4%BA%9B%E5%8F%A5%E5%AD%90/</url>
    <content><![CDATA[<ul>
<li><p>你背单词时，阿拉斯加的鳕鱼正跃也水面；<br>你算数学时，太平洋彼岸的海鸥振翅掠过城市上空；<br>你晚自习时，极圈上的夜空散漫了五彩斑斓。<br>但是，<br>少年，<br>你别着急，<br>在你为自己未来踏踏实实地努力时，<br>那些你感觉从来不会看到的风景，<br>那些你觉得终身不会遇到的人，<br>正一步步向你走来。<span id="more"></span></p>
</li>
<li><p>我走过山的时候山不说话，<br>我路过海的时候海不说话；<br>我坐着的毛驴一步一步滴滴答答，<br>我带着的倚天喑哑。<br>大家说我因为爱着杨过大侠，<br>找不到所以在峨嵋安家；<br>其实我只是喜欢峨嵋的云和霞，<br>像十六岁那年绽放的烟花。</p>
</li>
</ul>
<p><img src="https://upload-images.jianshu.io/upload_images/2223621-742b7b9ed8fc10ea.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700"><img src="https://upload-images.jianshu.io/upload_images/2223621-870fe775400215e9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/700"></p>
<ul>
<li><p>少年就是少年。他们看春风不喜，看夏蝉不烦，看秋风不悲，看冬雪不叹，看满身富贵懒察觉，看不公不允敢面对。</p>
</li>
<li><p>看清楚这个世界，并不能让这个世界变更好。但能让你在看清楚这是个怎样的世界后，把自己变得比较好。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/blog/20181129/YnaCvfGT1AIn.jpeg" alt="mark"></p>
</li>
<li><p>世上只有一种英雄主义，就是在认清生活真相之后依然热爱生活。 —— 罗曼・罗兰</p>
<p>Il n’ya qu’un héroïsme au monde : c’est de voir le monde tel qu’il est et de l’aimer.</p>
</li>
<li><p>生活不是把眼前琐碎的事情解决后才开始的。生活就是你现在面对的一切。所以最近每天都在用认真的态度做每一件事，而不是想着等我做完这些事情再去认真享受。这样子，突然一下感觉自己的存在更有重量了，而不是像之前为了眼前的活儿怠慢自己，随便一件别的事情都会影响自己的计划。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>文学</category>
      </categories>
      <tags>
        <tag>励志</tag>
        <tag>感情</tag>
        <tag>句子</tag>
      </tags>
  </entry>
  <entry>
    <title>算法模板</title>
    <url>/2018/05/11/%E7%AE%97%E6%B3%95%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h2 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h2><span id="more"></span>

<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 1000</span></span><br><span class="line"><span class="type">int</span> par[MAXN];</span><br><span class="line"><span class="type">int</span> u_rank[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n = <span class="number">500</span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    {</span><br><span class="line">        par[i] = i;</span><br><span class="line">        u_rank[i] = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">u_find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(par[x] == x)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> par[x] = <span class="built_in">u_find</span>(par[x]);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">unite</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    x = <span class="built_in">u_find</span>(x);</span><br><span class="line">    y = <span class="built_in">u_find</span>(y);</span><br><span class="line">    <span class="keyword">if</span>(x == y)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(u_rank[x] &lt; u_rank[y])</span><br><span class="line">        par[x] = y;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        par[y] = x;</span><br><span class="line">        u_rank[x]++;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">same</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">u_find</span>(x) == <span class="built_in">u_find</span>(y);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="BIT-树状数组"><a href="#BIT-树状数组" class="headerlink" title="BIT(树状数组)"></a>BIT (树状数组)</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	计算前i项和需要从i开始，不断把当前位置i的值加入到结果中，并从i中减去i的二进制最低非0位对应的幂，直到i变为0为止。i的二进制最后一个1可以通过 i&amp;-i 得到。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sum</span><span class="params">(<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        s += BIT[i];</span><br><span class="line">        i -= i&amp;-i;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	使第i项的值增加x需要从i开始，不断把当前位置i的值增加x，并把i的二进制最低非0位对应的幂加到i上。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=n)</span><br><span class="line">    {</span><br><span class="line">        BIT[i] += x;</span><br><span class="line">        i += i&amp;-i;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<h2 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h2><h3 id="单点的更新维护"><a href="#单点的更新维护" class="headerlink" title="单点的更新维护"></a>单点的更新维护</h3><p><a href="http://acm.hdu.edu.cn/showproblem.php?pid=1166">敌军布阵</a></p>
<p>题目：求区间和</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//#define LOCAL</span></span><br><span class="line"><span class="comment">//#define DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 50005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> T, n;</span><br><span class="line"><span class="type">int</span> kiss = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> a[MAXN];</span><br><span class="line"><span class="type">char</span> ope[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> op1, op2;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Tree</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">}SegTree[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span> a);</span><br><span class="line">    <span class="built_in">memset</span>(SegTree, <span class="number">0</span>, <span class="keyword">sizeof</span> SegTree);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PushUp</span><span class="params">(<span class="type">int</span> root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    SegTree[root].val = SegTree[root&lt;&lt;<span class="number">1</span>].val + SegTree[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[l]);</span><br><span class="line">        SegTree[root].val = a[l];</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">build</span>(root&lt;&lt;<span class="number">1</span>, l, mid);</span><br><span class="line">        <span class="built_in">build</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r);</span><br><span class="line">        <span class="built_in">PushUp</span>(root);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(a&gt;r || b&lt;l)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=l &amp;&amp; b&gt;=r)</span><br><span class="line">        <span class="keyword">return</span> SegTree[root].val;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, b)+<span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, a, b);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> ind, <span class="type">int</span> modifyVal)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">    {</span><br><span class="line">        SegTree[root].val += modifyVal;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ind &lt;= mid)</span><br><span class="line">        <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>, l, mid, ind, modifyVal);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, ind, modifyVal);</span><br><span class="line">    <span class="built_in">PushUp</span>(root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="meta">#<span class="keyword">ifdef</span> LOCAL</span></span><br><span class="line">        <span class="built_in">freopen</span>(<span class="string">"C:\\Users\\Administrator\\Desktop\\in.txt"</span>, <span class="string">"r"</span>, stdin);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        <span class="built_in">build</span>(<span class="number">1</span>, <span class="number">1</span>, n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case %d:\n"</span>, kiss++);</span><br><span class="line">        <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s"</span>,ope))</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(ope[<span class="number">0</span>] ==<span class="string">'E'</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;op1, &amp;op2);</span><br><span class="line">            <span class="keyword">if</span>(ope[<span class="number">0</span>] == <span class="string">'Q'</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">query</span>(<span class="number">1</span>,<span class="number">1</span>,n,op1,op2));</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(ope[<span class="number">0</span>] == <span class="string">'A'</span>)</span><br><span class="line">                <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">1</span>, n, op1, op2);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(ope[<span class="number">0</span>] == <span class="string">'S'</span>)</span><br><span class="line">                <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">1</span>, n, op1, -op2);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="keyword">ifdef</span> DEBUG</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=<span class="number">40</span>; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%2d:%5d\n"</span>, i, SegTree[i].val);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d: %d\n"</span>,i, a[i]);</span><br><span class="line">        <span class="type">int</span> ans = <span class="built_in">query</span>(<span class="number">1</span>,<span class="number">1</span>,n,<span class="number">1</span>,<span class="number">8</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, ans);</span><br><span class="line">        <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<h3 id="区间的更新维护"><a href="#区间的更新维护" class="headerlink" title="区间的更新维护"></a>区间的更新维护</h3><p><a href="https://nanti.jisuanke.com/t/17309">Train Seats Reservation</a></p>
<p>题目：求区间最大值</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 100010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="comment">//#define DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> start, endd, num;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Tree</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    <span class="type">int</span> modify;</span><br><span class="line">} SegTree[MAXN&lt;&lt;<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PushUp</span><span class="params">(<span class="type">int</span> root)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    SegTree[root].val = <span class="built_in">max</span>(SegTree[root&lt;&lt;<span class="number">1</span>].val, SegTree[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">PushDown</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(SegTree[root].modify)</span><br><span class="line">    {</span><br><span class="line">        SegTree[root&lt;&lt;<span class="number">1</span>].val += SegTree[root].modify;</span><br><span class="line">        SegTree[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].val += SegTree[root].modify;</span><br><span class="line"></span><br><span class="line">        SegTree[root&lt;&lt;<span class="number">1</span>].modify += SegTree[root].modify;</span><br><span class="line">        SegTree[root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].modify += SegTree[root].modify;</span><br><span class="line"></span><br><span class="line">        SegTree[root].modify = <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(l==r)</span><br><span class="line">        SegTree[root].val = SegTree[root].modify = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">build</span>(root&lt;&lt;<span class="number">1</span>, l, mid);</span><br><span class="line">        <span class="built_in">build</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r);</span><br><span class="line">        <span class="built_in">PushUp</span>(root);</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> modify)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(a&gt;r || b&lt;l)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=l &amp;&amp; b&gt;=r)</span><br><span class="line">    {</span><br><span class="line">        SegTree[root].val += modify;</span><br><span class="line">        SegTree[root].modify += modify;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">PushDown</span>(root, l, r);</span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, b, modify);</span><br><span class="line">    <span class="built_in">update</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, a, b, modify);</span><br><span class="line">    <span class="built_in">PushUp</span>(root);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(a&gt;r || b&lt;l)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=l &amp;&amp; b&gt;=r)</span><br><span class="line">        <span class="keyword">return</span> SegTree[root].val;</span><br><span class="line">    <span class="built_in">PushDown</span>(root, l, r);</span><br><span class="line">    <span class="type">int</span> mid = l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">max</span>(<span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>, l, mid, a, b), <span class="built_in">query</span>(root&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, mid<span class="number">+1</span>, r, a, b));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(SegTree, <span class="number">0</span>, <span class="built_in">sizeof</span>(SegTree));</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> DataIn</span></span><br><span class="line">    <span class="built_in">freopen</span>(<span class="string">"C:\\Users\\Administrator\\Desktop\\in.txt"</span>, <span class="string">"r"</span>, stdin);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n) == <span class="number">1</span> &amp;&amp; n)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line">        <span class="comment">//build(1, 1, 100);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;start, &amp;endd, &amp;num);</span><br><span class="line">            <span class="built_in">update</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">100</span>, start, endd<span class="number">-1</span>, num);</span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> DEBUG</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i&lt;=<span class="number">100</span>; i++)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%-4d"</span>, SegTree[i].val);</span><br><span class="line">            }</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// DEBUG</span></span></span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, SegTree[<span class="number">1</span>].val);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"*"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="单调队列"><a href="#单调队列" class="headerlink" title="单调队列"></a>单调队列</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;(n&lt;&lt;<span class="number">1</span>); i++)</span><br><span class="line">{</span><br><span class="line">    <span class="comment">// l&lt;r表示队列非空</span></span><br><span class="line">    <span class="keyword">while</span>(l&lt;r &amp;&amp; sum[i] &lt; sum[que[r<span class="number">-1</span>]])	<span class="comment">//入队操作，参照引用中的1</span></span><br><span class="line">        r--;</span><br><span class="line">    que[r++] = i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(i&gt;=n &amp;&amp; sum[que[l]] - sum[i-n] &gt;= <span class="number">0</span>)</span><br><span class="line">        ans++;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;r &amp;&amp; que[l] &lt;= i-n<span class="number">+1</span>)	<span class="comment">//出队操作，将超出区间的出队</span></span><br><span class="line">        l++;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>




<hr>

<h1 id="数论"><a href="#数论" class="headerlink" title="数论"></a>数论</h1><h2 id="组合数初始化"><a href="#组合数初始化" class="headerlink" title="组合数初始化"></a>组合数初始化</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line">C[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;MAXN; i++)</span><br><span class="line">    C[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;MAXN; i++)</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>; j&lt;MAXN; j++)</span><br><span class="line">        C[i][j] = (C[i<span class="number">-1</span>][j<span class="number">-1</span>] + C[i<span class="number">-1</span>][j]) % MOD;</span><br></pre></td></tr></tbody></table></figure>



<h2 id="矩阵快速冪"><a href="#矩阵快速冪" class="headerlink" title="矩阵快速冪"></a>矩阵快速冪</h2><h3 id="取模-数组实现"><a href="#取模-数组实现" class="headerlink" title="取模(数组实现)"></a>取模 (数组实现)</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> m[<span class="number">2</span>][<span class="number">2</span>];</span><br><span class="line">}matrix;</span><br><span class="line">matrix I={<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>};</span><br><span class="line">matrix P={<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>};</span><br><span class="line"><span class="function">matrix <span class="title">mul</span><span class="params">(matrix a,matrix b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> i,j,k;</span><br><span class="line">    matrix c;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)</span><br><span class="line">      <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>;j++)</span><br><span class="line">      {</span><br><span class="line">          c.m[i][j]=<span class="number">0</span>;</span><br><span class="line">          <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="number">2</span>;k++)</span><br><span class="line">            c.m[i][j]+=(a.m[i][k]*b.m[k][j])%MOD;</span><br><span class="line">          c.m[i][j]%=MOD;</span><br><span class="line">      }</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">matrix <span class="title">qpow_MOD</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    matrix a=P,b=I;</span><br><span class="line">    <span class="keyword">while</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(n&amp;<span class="number">1</span>)</span><br><span class="line">          b=<span class="built_in">mul</span>(b,a);</span><br><span class="line">        n=n&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        a=<span class="built_in">mul</span>(a,a);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>
<h3 id="不取模-Vector实现"><a href="#不取模-Vector实现" class="headerlink" title="不取模(Vector实现)"></a>不取模 (Vector 实现)</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; vec;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;vec&gt; mat;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = <span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"><span class="function">mat <span class="title">mul</span><span class="params">(mat &amp;A, mat &amp;B)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="function">mat <span class="title">C</span><span class="params">( A.size(),  vec( B[<span class="number">0</span>].size() ) )</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;A.<span class="built_in">size</span>(); i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>; k&lt;B.<span class="built_in">size</span>(); k++)</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;B[<span class="number">0</span>].<span class="built_in">size</span>(); j++)</span><br><span class="line">                C[i][j] = (C[i][j] + A[i][k] * B[k][j]) % MOD;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">mat <span class="title">qpowmod</span><span class="params">(mat A, LL n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="function">mat <span class="title">B</span><span class="params">( A.size(), vec( A.size() ) )</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;A.<span class="built_in">size</span>(); i++)</span><br><span class="line">        B[i][i] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(n)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(n &amp; <span class="number">1</span>)</span><br><span class="line">            B = <span class="built_in">mul</span>(B, A);</span><br><span class="line">        A = <span class="built_in">mul</span>(A, A);</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> B;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="求组合数"><a href="#求组合数" class="headerlink" title="求组合数"></a>求组合数</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> MOD 10000</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">100</span>; <span class="comment">// 组合上限</span></span><br><span class="line"><span class="type">int</span> c[MAXN][MAXN];    <span class="comment">// 组合数</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">GetGroup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">0</span>] = c[<span class="number">1</span>][<span class="number">0</span>] = c[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">2</span>; i&lt;MAXN; ++i)</span><br><span class="line">    {</span><br><span class="line">        c[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>; j&lt;=i; ++j) </span><br><span class="line">            c[i][j] = (c[i<span class="number">-1</span>][j] + c[i<span class="number">-1</span>][j<span class="number">-1</span>]) % MOD;  <span class="comment">// 求模，防止结果过大</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MOD = (<span class="type">int</span>)<span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> F[N], Finv[N], inv[N];<span class="comment">//F是阶乘，Finv是逆元的阶乘</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>{</span><br><span class="line">    inv[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>; i &lt; N; i ++){</span><br><span class="line">        inv[i] = (MOD - MOD / i) * <span class="number">1ll</span> * inv[MOD % i] % MOD;</span><br><span class="line">    }</span><br><span class="line">    F[<span class="number">0</span>] = Finv[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i ++){</span><br><span class="line">        F[i] = F[i<span class="number">-1</span>] * <span class="number">1ll</span> * i % MOD;</span><br><span class="line">        Finv[i] = Finv[i<span class="number">-1</span>] * <span class="number">1ll</span> * inv[i] % MOD;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">comb</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span></span>{<span class="comment">//comb(n, m)就是C(n, m)</span></span><br><span class="line">    <span class="keyword">if</span>(m &lt; <span class="number">0</span> || m &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> F[n] * <span class="number">1ll</span> * Finv[n - m] % MOD * Finv[m] % MOD;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<h2 id="Lucas定理"><a href="#Lucas定理" class="headerlink" title="Lucas定理"></a>Lucas 定理</h2><p>代码未曾用过，正确性与否待测试</p>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line">LL n,m,p=<span class="number">1e9</span><span class="number">+7</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">quick_mod</span><span class="params">(LL a, LL b)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    LL ans = <span class="number">1</span>;</span><br><span class="line">    a %= p;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            ans = ans * a % p;</span><br><span class="line">            b--;</span><br><span class="line">        }</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = a * a % p;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(LL n, LL m)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(m &gt; n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    LL ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)</span><br><span class="line">    {</span><br><span class="line">        LL a = (n + i - m) % p;</span><br><span class="line">        LL b = i % p;</span><br><span class="line">        ans = ans * (a * <span class="built_in">quick_mod</span>(b, p<span class="number">-2</span>) % p) % p;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">Lucas</span><span class="params">(LL n, LL m)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(m == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">C</span>(n % p, m % p) * <span class="built_in">Lucas</span>(n / p, m / p) % p;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%I64d%I64d"</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%I64d\n"</span>, <span class="number">2</span>*<span class="built_in">Lucas</span>(n<span class="number">-1</span>,m)%p);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br><span class="line"><span class="comment">//Lucas定理，解决C(n,m)%p问题</span></span><br></pre></td></tr></tbody></table></figure>

<hr>

<h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><h2 id="Dijkstra算法"><a href="#Dijkstra算法" class="headerlink" title="Dijkstra算法"></a>Dijkstra 算法</h2><h3 id="使用优先权队列优化"><a href="#使用优先权队列优化" class="headerlink" title="使用优先权队列优化"></a>使用优先权队列优化</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> to, cost;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> V;</span><br><span class="line"><span class="type">int</span> d[MAXN];</span><br><span class="line">vector&lt;edge&gt; G[MAXN];</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; P;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">fill</span>(d, d+V, INF);</span><br><span class="line"></span><br><span class="line">    priority_queue&lt;P, vector&lt;P&gt;, greater&lt;P&gt; &gt; que;</span><br><span class="line"></span><br><span class="line">    d[s] = <span class="number">0</span>;</span><br><span class="line">    que.<span class="built_in">push</span>( <span class="built_in">P</span>(<span class="number">0</span>, s) );</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!que.<span class="built_in">empty</span>())</span><br><span class="line">    {</span><br><span class="line">        P p = que.<span class="built_in">top</span>();</span><br><span class="line">        que.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> v = p.second;</span><br><span class="line">        <span class="keyword">if</span>(d[v] &lt; p.first)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;G[v].<span class="built_in">size</span>(); i++)</span><br><span class="line">        {</span><br><span class="line">            edge e = G[v][i];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(d[e.to] &gt; d[v] + e.cost)</span><br><span class="line">            {</span><br><span class="line">                d[e.to] = d[v]+e.cost;</span><br><span class="line">                que.<span class="built_in">push</span>( <span class="built_in">P</span>(d[e.to], e.to));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>

<h2 id="A-求第-K-短路"><a href="#A-求第-K-短路" class="headerlink" title="A* 求第 K 短路"></a>A* 求第 K 短路</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0xffffff</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 100010</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> to;</span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    <span class="type">int</span> next;</span><br><span class="line">};</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node2</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> to;</span><br><span class="line">    <span class="type">int</span> g,f;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> node2 &amp;r ) <span class="type">const</span>  </span><br><span class="line">    {  </span><br><span class="line">        <span class="keyword">if</span>(r.f==f)  </span><br><span class="line">            <span class="keyword">return</span> r.g&lt;g;  </span><br><span class="line">        <span class="keyword">return</span> r.f&lt;f;  </span><br><span class="line">    }   </span><br><span class="line">};</span><br><span class="line">node edge[MAXN],edge2[MAXN];</span><br><span class="line"><span class="type">int</span> n,m,s,t,k,cnt,cnt2,ans;</span><br><span class="line"><span class="type">int</span> dis[<span class="number">1010</span>],visit[<span class="number">1010</span>],head[<span class="number">1010</span>],head2[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="built_in">sizeof</span>(head));</span><br><span class="line">    <span class="built_in">memset</span>(head2,<span class="number">-1</span>,<span class="built_in">sizeof</span>(head2));</span><br><span class="line">    cnt=cnt2=<span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addedge</span><span class="params">(<span class="type">int</span> from,<span class="type">int</span> to,<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge[cnt].to=to;</span><br><span class="line">    edge[cnt].val=val;</span><br><span class="line">    edge[cnt].next=head[from];</span><br><span class="line">    head[from]=cnt++;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">addedge2</span><span class="params">(<span class="type">int</span> from,<span class="type">int</span> to,<span class="type">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    edge2[cnt2].to=to;</span><br><span class="line">    edge2[cnt2].val=val;</span><br><span class="line">    edge2[cnt2].next=head2[from];</span><br><span class="line">    head2[from]=cnt2++;</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">spfa</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> n,<span class="type">int</span> head[],node edge[],<span class="type">int</span> dist[])</span>  </span></span><br><span class="line"><span class="function"></span>{  </span><br><span class="line">    queue&lt;<span class="type">int</span>&gt;Q1;  </span><br><span class="line">    <span class="type">int</span> inq[<span class="number">1010</span>];  </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)  </span><br><span class="line">    {  </span><br><span class="line">        dis[i]=INF;  </span><br><span class="line">        inq[i]=<span class="number">0</span>;  </span><br><span class="line">    }  </span><br><span class="line">    dis[s]=<span class="number">0</span>;  </span><br><span class="line">    Q<span class="number">1.</span><span class="built_in">push</span>(s);  </span><br><span class="line">    inq[s]++;  </span><br><span class="line">    <span class="keyword">while</span>(!Q<span class="number">1.</span><span class="built_in">empty</span>())  </span><br><span class="line">    {  </span><br><span class="line">        <span class="type">int</span> q=Q<span class="number">1.f</span>ront();  </span><br><span class="line">        Q<span class="number">1.</span><span class="built_in">pop</span>();  </span><br><span class="line">        inq[q]--;  </span><br><span class="line">        <span class="keyword">if</span>(inq[q]&gt;n)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">        <span class="type">int</span> k=head[q];  </span><br><span class="line">        <span class="keyword">while</span>(k&gt;=<span class="number">0</span>)  </span><br><span class="line">        {  </span><br><span class="line">            <span class="keyword">if</span>(dist[edge[k].to]&gt;dist[q]+edge[k].val)  </span><br><span class="line">            {  </span><br><span class="line">                dist[edge[k].to]=edge[k].val+dist[q];  </span><br><span class="line">                <span class="keyword">if</span>(!inq[edge[k].to])  </span><br><span class="line">                {  </span><br><span class="line">                    inq[edge[k].to]++;  </span><br><span class="line">                    Q<span class="number">1.</span><span class="built_in">push</span>(edge[k].to);  </span><br><span class="line">                }  </span><br><span class="line">            }  </span><br><span class="line">            k=edge[k].next;  </span><br><span class="line">        }  </span><br><span class="line">    }  </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">A_star</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> n,<span class="type">int</span> k,<span class="type">int</span> head[],node edge[],<span class="type">int</span> dist[])</span> </span></span><br><span class="line"><span class="function"></span>{  </span><br><span class="line">    node2 e,ne;  </span><br><span class="line">    <span class="type">int</span> cnt=<span class="number">0</span>;  </span><br><span class="line">    priority_queue&lt;node2&gt;Q;  </span><br><span class="line">    <span class="keyword">if</span>(s==t)</span><br><span class="line">        k++;  </span><br><span class="line">    <span class="keyword">if</span>(dis[s]==INF)  </span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">    e.to=s;  </span><br><span class="line">    e.g=<span class="number">0</span>;  </span><br><span class="line">    e.f=e.g+dis[e.to];  </span><br><span class="line">    Q.<span class="built_in">push</span>(e);  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())  </span><br><span class="line">    {  </span><br><span class="line">        e=Q.<span class="built_in">top</span>();  </span><br><span class="line">        Q.<span class="built_in">pop</span>();  </span><br><span class="line">        <span class="keyword">if</span>(e.to==t)<span class="comment">//找到一条最短路径  </span></span><br><span class="line">        {  </span><br><span class="line">            cnt++;  </span><br><span class="line">        }  </span><br><span class="line">        <span class="keyword">if</span>(cnt==k)<span class="comment">//找到k短路  </span></span><br><span class="line">        {  </span><br><span class="line">            <span class="keyword">return</span> e.g;  </span><br><span class="line">        }  </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=head[e.to]; i!=<span class="number">-1</span>; i=edge[i].next)  </span><br><span class="line">        {  </span><br><span class="line">            ne.to=edge[i].to;  </span><br><span class="line">            ne.g=e.g+edge[i].val;  </span><br><span class="line">            ne.f=ne.g+dis[ne.to];  </span><br><span class="line">            Q.<span class="built_in">push</span>(ne);  </span><br><span class="line">        }  </span><br><span class="line">    }  </span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">}  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m))</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">init</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">        {</span><br><span class="line">            <span class="type">int</span> a,b,c;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">            <span class="built_in">addedge</span>(a,b,c);</span><br><span class="line">            <span class="built_in">addedge2</span>(b,a,c);</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;s,&amp;t,&amp;k);</span><br><span class="line">        <span class="built_in">spfa</span>(t,n,head2,edge2,dis);</span><br><span class="line">        ans=<span class="built_in">A_star</span>(s,t,n,k,head,edge,dis);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">} </span><br></pre></td></tr></tbody></table></figure>



<h2 id="Prim算法"><a href="#Prim算法" class="headerlink" title="Prim算法"></a>Prim 算法</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="type">int</span> cost[MAX_V][MAX_V];</span><br><span class="line"><span class="type">int</span> mincost[MAX_V];</span><br><span class="line"><span class="type">bool</span> used[MAX_V];</span><br><span class="line"><span class="type">int</span> V;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;V; i++)</span><br><span class="line">    {</span><br><span class="line">        mincost[i] = INF;</span><br><span class="line">        used[i] = <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    mincost[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> v = <span class="number">-1</span>;</span><br><span class="line">        <span class="comment">//从不属于X的顶点中选取从X到其权值最小的点</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> u=<span class="number">0</span>; u&lt;V; u++)</span><br><span class="line">        {</span><br><span class="line">			<span class="keyword">if</span>( !used[u] &amp;&amp; (v==<span class="number">-1</span> || mincost[u] &lt; mincost[v]) )</span><br><span class="line">                v = u;</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(v == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        used[v] = <span class="literal">true</span>;</span><br><span class="line">        res += mincost[v];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> u=<span class="number">0</span>; u&lt;V; u++)</span><br><span class="line">			mincoust[u] = <span class="built_in">min</span>(mincost[u], cost[v][u]);</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="Kruskal算法"><a href="#Kruskal算法" class="headerlink" title="Kruskal算法"></a>Kruskal 算法</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span></span><br><span class="line">{</span><br><span class="line">    <span class="type">int</span> u, v, cost;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> edge&amp; e1, <span class="type">const</span> edge&amp; e2)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">return</span> e<span class="number">1.</span>cost &lt; e<span class="number">2.</span>cost;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">edge es[MAX_E];</span><br><span class="line"><span class="type">int</span> V, E;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">kruskal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="built_in">sort</span>(es, es+E, cmp);</span><br><span class="line">    <span class="built_in">init_ufs</span>(V);</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;E; i++)</span><br><span class="line">    {</span><br><span class="line">        edge e = es[i];</span><br><span class="line">        <span class="keyword">if</span>( !<span class="built_in">same</span>(e.u, e.v) )</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">unite</span>(e.u, e.v);</span><br><span class="line">            res += e.cost;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h1 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h1><h2 id="离散化"><a href="#离散化" class="headerlink" title="离散化"></a>离散化</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="built_in">sort</span>(a, a+tot);</span><br><span class="line">tot = <span class="built_in">unique</span>(a, a+tot) - a;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">    node[i].y = <span class="built_in">lower_bound</span>(a, a+tot, node[i].y)-a<span class="number">+1</span>;</span><br></pre></td></tr></tbody></table></figure>

<h2 id="数位dp"><a href="#数位dp" class="headerlink" title="数位dp"></a>数位 dp</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> pos, <span class="type">int</span> state, <span class="type">bool</span> lead, <span class="type">bool</span> limit)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">if</span>(pos == <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;	<span class="comment">//按题目返回</span></span><br><span class="line">    <span class="keyword">if</span>(!limit &amp;&amp; !lead &amp;&amp; ~dp[pos][state])</span><br><span class="line">        <span class="keyword">return</span> dp[pos][state];</span><br><span class="line">    </span><br><span class="line">    <span class="type">int</span> up = limit ? a[pos] : <span class="number">9</span>;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;=up; i++)</span><br><span class="line">    {</span><br><span class="line">    	<span class="keyword">if</span>()</span><br><span class="line">            ans += <span class="built_in">dfs</span>(pos<span class="number">-1</span>, <span class="comment">/*状态表示*/</span>, lead &amp;&amp; i==<span class="number">0</span>, limit &amp;&amp; i==up);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            ans += dfs.....</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(!limit &amp;&amp; !lead)</span><br><span class="line">        dp[pos][state] = ans;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">go</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> pos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    {</span><br><span class="line">        a[pos++] = x%<span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dfs</span>(pos<span class="number">-1</span>, <span class="comment">/*状态*/</span>, <span class="literal">true</span>, <span class="literal">true</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="SG-函数-sg-x-x3D-mex-sg-y-y是x的后继"><a href="#SG-函数-sg-x-x3D-mex-sg-y-y是x的后继" class="headerlink" title="SG 函数 sg(x)=mex{sg(y) | y是x的后继 }"></a>SG 函数 sg (x)=mex {sg (y) | y 是 x 的后继 }</h2><h3 id="打表法"><a href="#打表法" class="headerlink" title="打表法"></a>打表法</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">//f[]：可以取走的石子个数</span></span><br><span class="line"><span class="comment">//sg[]:0~n的SG函数值</span></span><br><span class="line"><span class="comment">//hash[]:mex{}</span></span><br><span class="line"><span class="type">int</span> f[K],sg[N],hash[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getSG</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">&nbsp; &nbsp; <span class="built_in">memset</span>(sg,<span class="number">0</span>,<span class="built_in">sizeof</span>(sg));</span><br><span class="line">&nbsp; &nbsp; <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">&nbsp; &nbsp; {</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; <span class="built_in">memset</span>(hash,<span class="number">0</span>,<span class="built_in">sizeof</span>(hash));</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; f[j]&lt;=i &amp;&amp; j &lt; k; j++) <span class="comment">//k是f[]的有效长度</span></span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; hash[sg[i-f[j]]]=<span class="number">1</span>;</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; ; j++) &nbsp; &nbsp; <span class="comment">//求mes{}中未出现的最小的非负整数</span></span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; {</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="keyword">if</span>(hash[j]==<span class="number">0</span>)</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sg[i]=j;</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="keyword">break</span>;</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span><br><span class="line">&nbsp; &nbsp; &nbsp; &nbsp; }</span><br><span class="line">&nbsp; &nbsp; }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h3 id="dfs-法"><a href="#dfs-法" class="headerlink" title="dfs 法"></a>dfs 法</h3><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//注意 S数组要按从小到大排序 SG函数要初始化为-1 对于每个集合只需初始化1遍</span></span><br><span class="line"><span class="comment">//n是集合s的大小 S[i]是定义的特殊取法规则的数组</span></span><br><span class="line"><span class="type">int</span> s[<span class="number">110</span>],sg[<span class="number">10010</span>],n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">SG_dfs</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>(sg[x]!=<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> sg[x];</span><br><span class="line">    <span class="type">bool</span> vis[<span class="number">110</span>];</span><br><span class="line">    <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="built_in">sizeof</span>(vis));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(x&gt;=s[i])</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">SG_dfs</span>(x-s[i]);</span><br><span class="line">            vis[sg[x-s[i]]]=<span class="number">1</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="type">int</span> e;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;;i++)</span><br><span class="line">        <span class="keyword">if</span>(!vis[i])</span><br><span class="line">        {</span><br><span class="line">            e=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">    <span class="keyword">return</span> sg[x]=e;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>



<h1 id="黑科技"><a href="#黑科技" class="headerlink" title="黑科技"></a>黑科技</h1><h2 id="杜教BM"><a href="#杜教BM" class="headerlink" title="杜教BM"></a>杜教 BM</h2><figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rep(i,a,n) for(int i=a;i&lt;n;i++)</span></span><br><span class="line"><span class="keyword">namespace</span> linear</span><br><span class="line">{</span><br><span class="line">    ll mo=<span class="number">1000000009</span>;</span><br><span class="line">    vector&lt;ll&gt; v;</span><br><span class="line">    <span class="type">double</span> a[<span class="number">105</span>][<span class="number">105</span>],del;</span><br><span class="line">    <span class="type">int</span> k;</span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">matrix</span></span><br><span class="line">    {</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        ll a[<span class="number">50</span>][<span class="number">50</span>];</span><br><span class="line">        matrix <span class="keyword">operator</span> * (<span class="type">const</span> matrix &amp; b)<span class="type">const</span></span><br><span class="line">        {</span><br><span class="line">            matrix c;</span><br><span class="line">            c.n=n;</span><br><span class="line">            <span class="built_in">rep</span>(i,<span class="number">0</span>,n)<span class="built_in">rep</span>(j,<span class="number">0</span>,n)c.a[i][j]=<span class="number">0</span>;</span><br><span class="line">            <span class="built_in">rep</span>(i,<span class="number">0</span>,n)<span class="built_in">rep</span>(j,<span class="number">0</span>,n)<span class="built_in">rep</span>(k,<span class="number">0</span>,n)</span><br><span class="line">            c.a[i][j]=(c.a[i][j]+a[i][k]*b.a[k][j]%mo)%mo;</span><br><span class="line">            <span class="keyword">return</span> c;</span><br><span class="line">        }</span><br><span class="line">    }A;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="built_in">rep</span>(i,<span class="number">1</span>,n<span class="number">+1</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="type">int</span> t=i;</span><br><span class="line">            <span class="built_in">rep</span>(j,i<span class="number">+1</span>,n<span class="number">+1</span>)<span class="keyword">if</span>(<span class="built_in">fabs</span>(a[j][i])&gt;<span class="built_in">fabs</span>(a[t][i]))t=j;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">fabs</span>(del=a[t][i])&lt;<span class="number">1e-6</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="built_in">rep</span>(j,i,n<span class="number">+2</span>)<span class="built_in">swap</span>(a[i][j],a[t][j]);</span><br><span class="line">            <span class="built_in">rep</span>(j,i,n<span class="number">+2</span>)a[i][j]/=del;</span><br><span class="line">            <span class="built_in">rep</span>(t,<span class="number">1</span>,n<span class="number">+1</span>)<span class="keyword">if</span>(t!=i)</span><br><span class="line">            {</span><br><span class="line">                del=a[t][i];</span><br><span class="line">                <span class="built_in">rep</span>(j,i,n<span class="number">+2</span>)a[t][j]-=a[i][j]*del;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(vector&lt;ll&gt; V)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        v=V;</span><br><span class="line">        <span class="type">int</span> n=(v.<span class="built_in">size</span>()<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">        k=n;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            <span class="built_in">rep</span>(i,<span class="number">0</span>,k<span class="number">+1</span>)</span><br><span class="line">            {</span><br><span class="line">                <span class="built_in">rep</span>(j,<span class="number">0</span>,k)a[i<span class="number">+1</span>][j<span class="number">+1</span>]=v[n<span class="number">-1</span>+i-j];</span><br><span class="line">                a[i<span class="number">+1</span>][k<span class="number">+1</span>]=<span class="number">1</span>;</span><br><span class="line">                a[i<span class="number">+1</span>][k<span class="number">+2</span>]=v[n+i];</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">solve</span>(n<span class="number">+1</span>))<span class="keyword">break</span>;</span><br><span class="line">            n--;k--;</span><br><span class="line">        }</span><br><span class="line">        A.n=k<span class="number">+1</span>;</span><br><span class="line">        <span class="built_in">rep</span>(i,<span class="number">0</span>,A.n)<span class="built_in">rep</span>(j,<span class="number">0</span>,A.n)A.a[i][j]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">rep</span>(i,<span class="number">0</span>,A.n)A.a[i][<span class="number">0</span>]=(<span class="type">int</span>)<span class="built_in">round</span>(a[i<span class="number">+1</span>][A.n<span class="number">+1</span>]);</span><br><span class="line">        <span class="built_in">rep</span>(i,<span class="number">0</span>,A.n<span class="number">-2</span>)A.a[i][i<span class="number">+1</span>]=<span class="number">1</span>;</span><br><span class="line">        A.a[A.n<span class="number">-1</span>][A.n<span class="number">-1</span>]=<span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">formula</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"f(n) ="</span>);</span><br><span class="line">        <span class="built_in">rep</span>(i,<span class="number">0</span>,A.n<span class="number">-1</span>)<span class="built_in">printf</span>(<span class="string">" (%lld)*f(n-%d) +"</span>,A.a[i][<span class="number">0</span>],i<span class="number">+1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" (%lld)\n"</span>,A.a[A.n<span class="number">-1</span>][<span class="number">0</span>]);</span><br><span class="line">    }</span><br><span class="line">    <span class="function">ll <span class="title">cal</span><span class="params">(ll n)</span></span></span><br><span class="line"><span class="function">    </span>{</span><br><span class="line">        <span class="keyword">if</span>(n&lt;v.<span class="built_in">size</span>())<span class="keyword">return</span> v[n];</span><br><span class="line">        n=n-k<span class="number">+1</span>;</span><br><span class="line">        matrix B,T=A;</span><br><span class="line">        B.n=A.n;</span><br><span class="line">        <span class="built_in">rep</span>(i,<span class="number">0</span>,B.n)<span class="built_in">rep</span>(j,<span class="number">0</span>,B.n)B.a[i][j]=i==j?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(n)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(n&amp;<span class="number">1</span>)B=B*T;</span><br><span class="line">            n&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">            T=T*T;</span><br><span class="line">        }</span><br><span class="line">        ll ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">rep</span>(i,<span class="number">0</span>,B.n<span class="number">-1</span>)ans=(ans+v[B.n<span class="number">-2</span>-i]*B.a[i][<span class="number">0</span>]%mo)%mo;</span><br><span class="line">        ans=(ans+B.a[B.n<span class="number">-1</span>][<span class="number">0</span>])%mo;</span><br><span class="line">        <span class="keyword">while</span>(ans&lt;<span class="number">0</span>)ans+=mo;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> abcdefg[] = {<span class="number">3</span>,<span class="number">9</span>,<span class="number">20</span>,<span class="number">46</span>,<span class="number">106</span>,<span class="number">244</span>,<span class="number">560</span>,<span class="number">1286</span>,<span class="number">2956</span>,<span class="number">6794</span>,<span class="number">15610</span>,<span class="number">35866</span>,<span class="number">82416</span>,<span class="number">189384</span>};</span><br><span class="line">    <span class="function">vector&lt;ll&gt; <span class="title">V</span><span class="params">(abcdefg, abcdefg<span class="number">+14</span>)</span></span>;<span class="comment">//&lt;-----</span></span><br><span class="line">    linear::<span class="built_in">build</span>(V);</span><br><span class="line">    linear::formula();</span><br><span class="line">    ll n;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n))</span><br><span class="line">    {</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,linear::<span class="built_in">cal</span>(n<span class="number">-1</span>));</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

































]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>线段树</tag>
      </tags>
  </entry>
  <entry>
    <title>好用的软件及工具</title>
    <url>/2018/05/11/%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<ul>
<li><p>Everything</p>
</li>
<li><p>Wox</p>
</li>
<li><p><a href="https://tool.lu/">tool.lu</a></p>
</li>
<li><p>Todoist</p>
</li>
<li><p>WindowTabs</p>
</li>
<li><p>Open Hardware Monitor、Aida</p>
</li>
<li><p>Typora、MarkdownPad</p>
</li>
<li><p>Brook、SS、SSR</p>
</li>
<li><p>Dism++、CCleaner</p>
</li>
<li><p>SumatraPDF</p>
</li>
<li><p>mPic</p>
</li>
<li><p><a href="https://ctool.me/">JSON 工具</a></p>
</li>
<li><p> Chrome Plug-ins</p>
<ul>
<li>Infinity</li>
<li>Gitzip for github</li>
<li>LastPass</li>
<li>StayFocusd</li>
<li>SimpRead</li>
<li>TamperMonkey</li>
<li>GHelper</li>
<li>Saladict</li>
<li>FeHelper 工具</li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>安利</tag>
      </tags>
  </entry>
  <entry>
    <title>Gym-101606F Flipping Coins</title>
    <url>/2018/05/08/Gym-101606F-Flipping-Coins/</url>
    <content><![CDATA[<p><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/%E6%8D%95%E8%8E%B7.PNG" alt="题目"></p>
<ul>
<li><p>题意：给你一些硬币，硬币的初始状态都是正面向下，反面向上，现在你可以每次任取一个硬币把它抛向空中，你可以进行 k 次操作，问你 k 次操作之后硬币正面向上的最大数学期望。<span id="more"></span></p>
</li>
<li><p>思路：一共进行 k 次操作，每次我们都可以任取一个硬币把它抛一次，由于题目中说是让求最大的数学期望，那么我们抛的时候取正面向下的可以得到最大的数学期望，我们定义一个状态 dp [i][j]，表示抛 i 次其中有 j 个硬币正面向上的概率。</p>
<p>那么我们可以得到转移方程：</p>
<p>*<em>dp[i+1][j]+=dp[i][j]<em>0.5;</em></em></p>
<p>*<em>dp[i+1][j+1]+=dp[i][j]<em>0.5;</em></em></p>
<p>当 j=n 时</p>
<p>*<em>dp[i+1][n]+=dp[i][n]<em>0.5;</em></em></p>
<p>*<em>dp[i+1][n-1]+=dp[i][n]<em>0.5;</em></em></p>
<p><strong>注意 dp [0][0]=1;</strong></p>
</li>
<li><p>AC 代码：</p>
</li>
</ul>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;utility&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 410</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INF 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DEBUG</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DataIn</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">double</span> dp[MAXN][MAXN];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;k);</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line"></span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;k; i++)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;n; j++)</span><br><span class="line">        {</span><br><span class="line">            dp[i<span class="number">+1</span>][j] += dp[i][j]*<span class="number">0.5</span>;</span><br><span class="line">            dp[i<span class="number">+1</span>][j<span class="number">+1</span>] += dp[i][j]*<span class="number">0.5</span>;</span><br><span class="line">        }</span><br><span class="line">        dp[i<span class="number">+1</span>][n] += dp[i][n]*<span class="number">0.5</span>;</span><br><span class="line">        dp[i<span class="number">+1</span>][n<span class="number">-1</span>] += dp[i][n]*<span class="number">0.5</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">    {</span><br><span class="line">        ans += dp[k][i] * i;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%f\n"</span>,ans);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>dp</tag>
      </tags>
  </entry>
  <entry>
    <title>LCS 算法</title>
    <url>/2018/05/08/LCS%E7%AE%97%E6%B3%95/</url>
    <content><![CDATA[<span id="more"></span>
<figure class="highlight c++"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXN 105</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="type">char</span> str1[MAXN], str2[MAXN];</span><br><span class="line">    <span class="type">int</span> dp[MAXN][MAXN];</span><br><span class="line">    <span class="type">int</span> path[MAXN][MAXN];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Please input the first string:"</span>);</span><br><span class="line">    <span class="built_in">gets</span>(str1);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Please input the second string:"</span>);</span><br><span class="line">    <span class="built_in">gets</span>(str2);</span><br><span class="line">    <span class="type">int</span> len1 = <span class="built_in">strlen</span>(str1), len2 = <span class="built_in">strlen</span>(str2);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="built_in">sizeof</span>(dp));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;len1; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j&lt;len2; j++)</span><br><span class="line">        {</span><br><span class="line">            <span class="keyword">if</span>(str1[i] == str2[j])</span><br><span class="line">            {</span><br><span class="line">                dp[i<span class="number">+1</span>][j<span class="number">+1</span>] = dp[i][j] + <span class="number">1</span>;</span><br><span class="line">                path[i<span class="number">+1</span>][j<span class="number">+1</span>] = <span class="number">1</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            {</span><br><span class="line">                dp[i<span class="number">+1</span>][j<span class="number">+1</span>] = <span class="built_in">max</span>(dp[i<span class="number">+1</span>][j], dp[i][j<span class="number">+1</span>]);</span><br><span class="line">                path[i<span class="number">+1</span>][j<span class="number">+1</span>] = dp[i<span class="number">+1</span>][j] &gt; dp[i][j<span class="number">+1</span>] ? <span class="number">2</span> : <span class="number">3</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ans = dp[len1][len2];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"The length of LCS is %d\n"</span>, ans);</span><br><span class="line">    <span class="type">int</span> cnt = ans<span class="number">-1</span>;</span><br><span class="line">    <span class="type">char</span> LCS[MAXN];</span><br><span class="line">    <span class="type">int</span> i=len1, j=len2;</span><br><span class="line">    <span class="keyword">while</span>(i&gt;<span class="number">0</span> &amp;&amp; j&gt;<span class="number">0</span>)</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">if</span>(path[i][j] == <span class="number">1</span>)</span><br><span class="line">        {</span><br><span class="line">            LCS[cnt--] = str1[i<span class="number">-1</span>];</span><br><span class="line">            i--, j--;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(path[i][j] == <span class="number">2</span>)</span><br><span class="line">            j--;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            i--;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">puts</span>(LCS);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>&amp;emsp;&amp;emsp; 可以说，这是自己第一次写程序来保存路径，之前自己总觉得在数组中保存路径是保存确定的位置，经过编码自己了解，其实是要保存转移的方向，再根据方向来回溯。</p>
<p>&amp;emsp;&amp;emsp; 编程真的要细心呀，这个程序自己在程序课上敲码 5 分钟，Debug 两节课。原因竟是 <code>else if(path[i][j] == 2)</code> 中的 == 写错，少打了一个等号，弱智错误呀，调试了两节课才找到。不过找到的时候蛮玄学的，是自己用常用的<code>#ifdef DEBUG</code> 大法时，再判等时想起应该是两个等号， 忽地一想，自己不会是之前判等写错了吧，眼光向下一移，果然…. 解决。事迹已加入脑残系列，可以与上次离散实验中的 <code>if(ischuandi());</code> 相并列了。</p>
]]></content>
      <categories>
        <category>ACM</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>字符串</tag>
      </tags>
  </entry>
  <entry>
    <title>编程资料</title>
    <url>/2018/05/06/%E7%BC%96%E7%A8%8B%E8%B5%84%E6%96%99/</url>
    <content><![CDATA[<ul>
<li>资源网站 <ul>
<li><a href="https://love2.io/">Love2</a><br>介绍：Android, 前端， IOS， 后端， 人工智能， 云计算， 数据库， 大数据，设计， 其它<br>（里边有区块链，目前在看，下边一些区块链的链接来源于此）<br><br><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/Love2.png" alt="Love2网站截图"><br></li>
<li><a href="https://github.com/xingshaocheng/architect-awesome/blob/master/README.md#%E4%BA%8C%E5%8F%89%E6%A0%91">后端架构师技术图谱</a></li>
<li><a href="https://github.com/xitu/gold-miner">掘金翻译计划</a></li>
<li><a href="https://goalkicker.com/">Programming Notes for Professionals books</a></li>
<li><a href="https://hellogithub.com/">分享 GitHub 上 有趣、入门级的开源项目</a><span id="more"></span></li>
</ul>
</li>
</ul>
<hr>

<ul>
<li><p> Blog</p>
<ul>
<li><a href="https://www.lijiaocn.com/">李佶澳（推荐）</a></li>
</ul>
</li>
</ul>
<hr>

<ul>
<li><p>区块链</p>
<ul>
<li><a href="https://www.jianshu.com/u/30081a05cf95">比特币源码解读</a></li>
</ul>
</li>
<li><p>人工智能</p>
<ul>
<li><a href="https://developers.google.cn/machine-learning/crash-course/">Google 官方速成课程</a></li>
<li><a href="https://morvanzhou.github.io/tutorials/machine-learning/">机器学习系列</a></li>
<li><a href="https://mp.weixin.qq.com/s/WOGZK6zK796mHR2ERAUcHQ">吴恩达 deeplearning.ai 专项课程历史文章汇总</a></li>
<li><a href="https://mp.weixin.qq.com/s/O10hgqlYD5ysYWWYcm2UcQ">林轩田《机器学习基石》资源汇总</a></li>
<li><a href="https://github.com/RedstoneWill/NTU-HsuanTienLin-MachineLearning">林轩田《机器学习基石》资源汇总 (Github)</a></li>
</ul>
</li>
<li><p>Android</p>
<ul>
<li><a href="https://cn.udacity.com/course/android-basics-user-interface--ud834">Google 官方教程</a><br>该网页是课程其中一节，网页中含有其他节课程。</li>
<li><a href="https://developer.android.com/guide">Google 官方指导</a></li>
<li><a href="https://developer.android.com/reference/android/widget/TextView">Google 官方手册</a></li>
</ul>
</li>
<li><p> Python</p>
<ul>
<li><a href="https://pan.baidu.com/s/17TtgOkVrYoooBq8Ee_rLuA#list/path=%2F">Python3 爬虫视频</a> , 密码 571x</li>
<li><a href="https://pan.baidu.com/s/1By9nOd-xujthTmdfR3JC3w">python 全栈</a> 密码: u55f</li>
<li><a href="https://pan.baidu.com/s/1scBXSLdiTs9SBixdkykflw">Python 全栈</a> 密码：ck51</li>
<li><a href="https://mp.weixin.qq.com/s/aYQmgPiKXZSnpFCF78C76A">Python 资料 + 经典练手项目</a></li>
<li><a href="https://mp.weixin.qq.com/s/2rFbJ-O2BsHbJTTc2Y6DCQ">Python 爬取公众号文章并制作为 PDF</a></li>
<li><a href="https://mp.weixin.qq.com/s/U-CofaG27xnVntCkonbXVg">一些项目</a></li>
</ul>
</li>
<li><p> Java</p>
<ul>
<li><a href="https://pan.baidu.com/s/1-HNGnhdkzxLXhsKiIXHN8g">黑马 Java 后端</a> 密码: 14d6</li>
<li><a href="https://pan.baidu.com/s/1DtnDNv1p9ENZETLqIuKytw">Java 学科链接</a> 密码：82lk</li>
</ul>
</li>
<li><p> 数据库</p>
<ul>
<li><a href="https://pan.baidu.com/s/1kVTdjcr">Mysql</a> 密码：e37d</li>
<li><a href="https://pan.baidu.com/s/1i6jwpal">Oracle</a> 密码：hk6p</li>
</ul>
</li>
<li><p>HTML5 + CSS3</p>
<ul>
<li><a href="https://pan.baidu.com/s/1cUHz3o">HTML5+CSS3</a> 密码：gdyw</li>
</ul>
</li>
<li><p>JavaScript</p>
<ul>
<li><a href="https://pan.baidu.com/s/1i6eC5YP">JavaScript 视频教程</a> 密码：ku5k</li>
<li><a href="https://pan.baidu.com/s/17DbNSnR3q5OGSjdw9tvCEA">JQuery</a> 密码：twcp</li>
</ul>
</li>
<li><p>PHP</p>
<ul>
<li><a href="https://pan.baidu.com/s/1ggiKvYV">ThinkPHP</a> 密码：7p5h</li>
<li><a href="https://pan.baidu.com/s/1kWE0qZP">PHP 视频教程</a> 密码：xc4q</li>
</ul>
</li>
<li><p>NodeJs</p>
<ul>
<li><a href="https://pan.baidu.com/s/1sm509GD">NodeJs</a> 密码：fux1 </li>
<li><a href="https://pan.baidu.com/s/15tYBZ2yVz9aPO57LKqt7Mg">微信开发</a> 密码:jrwb</li>
</ul>
</li>
</ul>
<hr>

<ul>
<li> 面试 <ul>
<li><a href="https://github.com/jwasham/coding-interview-university/blob/master/translations/README-cn.md">[译] Google Interview University 一套完整的学习手册帮助自己准备 Google 的面试</a></li>
<li><a href="https://juejin.im/post/5ae9bc51518825673e357209">我的春招求职经验分享（已拿阿里京东网易等 5 个 offer）</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzU4MjQ3NzEyNA==&amp;mid=2247483685&amp;idx=1&amp;sn=277079d188a3ef4b5023eddae9d03cbe&amp;chksm=fdb6f50ecac17c18103b5bf2c67df6493fd98465263cb285fc870118ce5f554cec3daf8c2701&amp;scene=21#wechat_redirect">我的面试之路 (上)</a></li>
<li><a href="https://mp.weixin.qq.com/s/Cgu50L-MOeMwNBg-Sk_t9A">我的面试之路 (下)</a></li>
<li><a href="https://github.com/CyC2018/Interview-Notebook">面试笔记</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>资源</tag>
        <tag>编程</tag>
      </tags>
  </entry>
  <entry>
    <title>闲情记趣</title>
    <url>/2018/05/01/%E9%97%B2%E6%83%85%E8%AE%B0%E8%B6%A3/</url>
    <content><![CDATA[<blockquote class="blockquote-center">浮生若梦，为欢几何。</blockquote>

<ul>
<li><p>准备中午去吃，龚逸舟说老崔，你中午是不是去吃香锅，balabala，吃的时候带上我，你是不是要吃 50 的，分我点呗。我没说话，老龚说老崔不理我一看就是不愿意（当然是开玩笑的那种语气），我冷漠地说了一句在和小姐姐聊天，他说我重要还是小姐姐重要，我说当然是小姐姐重要，他说放屁，当然是我重要。我默默说了一句：“你重。”</p>
<p align="right">2018-4-29</p><span id="more"></span>
</li>
<li><p>今天和铭毓、青青一起吃饭，聊天时我说了 jiān 菜，青青说：“原来你们也会说 jiān 菜呀”，后来聊起来才知道，铭毓那边也会这么说，而青青那边一般说夹菜。本以为这个话题到这也就为止了，结果重点来了，铭毓出人意料地说出了 “蒹葭苍苍”，（捂脸哭），三人大笑。我：“原来苍苍是道菜呀”。哄笑不止。估计之后再也无法正视这首诗了。</p>
<p align="right">2018-5-7</p></li>
</ul>
]]></content>
      <categories>
        <category>大学</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
  <entry>
    <title>更新日志</title>
    <url>/2018/05/01/%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<ol>
<li>2018-4-28</li>
</ol>
<ul>
<li> 搭建博客， 详情请看 <a href="http://zhiyi.live/2018/04/27/%E5%BB%BA%E7%AB%99%E8%AE%B0/">建站记</a><span id="more"></span><br><br></li>
</ul>
<ol start="2">
<li><p> 2018-4-29 </p>
<ul>
<li>优化社交工具图标显示</li>
<li>增添阅读次数显示功能，未成功，阅读次数不能显示。</li>
<li>实现分享功能</li>
<li>增加动态背景<br><br></li>
</ul>
</li>
<li><p>2018-5-1</p>
<ul>
<li>修复了阅读次数不显示 Bug，发现是因为自己复制时将代码中的 app_id, app_key 不小心覆盖成了 appid,appkey。学会使用浏览器 Console 真的很有用。<br><br></li>
</ul>
</li>
<li><p>2018-5-2</p>
<ul>
<li><p>优化菜单栏图标</p>
</li>
<li><p>添加了说说功能，又多了个矫情的地方。<br></p>
<br></li>
</ul>
</li>
<li><p>2018-5-3</p>
<ul>
<li>实现了相册功能。<br><br></li>
</ul>
</li>
<li><p>2018-5-8</p>
<ul>
<li>修改分享时网址为 yoursite.com 的 Bug。<br><br></li>
</ul>
</li>
<li><p>2018-5-9</p>
</li>
</ol>
<ul>
<li>优化了文章排序。<br><br></li>
</ul>
<ol start="8">
<li><p>2018-5-27</p>
<ul>
<li>谷歌收录网站。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ%E5%9B%BE%E7%89%8720180621103919.png" alt="谷歌收录网站截图"><br><br></li>
</ul>
</li>
<li><p>2018-6-21</p>
<ul>
<li>百度收录网站。<img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ%E5%9B%BE%E7%89%8720180621103950.png"><img src="https://blogphoto-1300662669.cos.ap-nanjing.myqcloud.com/QQ%E5%9B%BE%E7%89%8720180621103954.png"><br><br></li>
</ul>
</li>
<li><p>2018-8-18</p>
</li>
</ol>
<ul>
<li>添加了博客图片背景</li>
<li>优化了博客内容宽度</li>
<li>将编程资料、要做的事放入了友链位置，不再置顶。</li>
<li>更改了文章、代码字体<br><br></li>
</ul>
<ol start="11">
<li><p>2018-9-30 </p>
<ul>
<li>优化了文章排序，增添的文章更新日期的排序。<br><br></li>
</ul>
</li>
<li><p>2018-12-29</p>
<ul>
<li>觉得之前用的背景图片有些花里胡哨，不适合现在的简约风。于是换了个清新些的。（感谢 狼狼 的图片～）</li>
</ul>
</li>
<li><p>2022-5-7</p>
<ul>
<li>最近重新迁移了博客，算是推倒重来了一波，舍弃了原来一些功能、自定义。</li>
<li>将博客源文件、生成的 public 网页分成两个仓库。使得博客部署更加简单，无心智负担。</li>
<li>添加 Github Action，支持 Github 上修改源文件，自动推送。</li>
<li>非常感谢 <a href="https://blog.0xfaner.top/">柏柏</a> 学弟的指导～</li>
</ul>
</li>
</ol>
]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>建站记</title>
    <url>/2018/04/27/%E5%BB%BA%E7%AB%99%E8%AE%B0/</url>
    <content><![CDATA[<blockquote class="blockquote-center">如果明天没课该多好，这样五一就有五天假了。<br>崔明浩</blockquote>

<p>&amp;emsp;&amp;emsp; 每个人都要为自己的冲动付出代价，这句话是没错的。就像今天早上醒来时，突发奇想说想要搭个博客，便再忍不住心性，想要立刻完成。博客这种东西之前还要有想搞过的，最初是去年吧，在 CSDN 上开通过一个，打算记录下算法呀学习呀什么的，不过嘛，草草没了下文，开通那一天后再也没更新过，甚至几乎没进过自己的博客。今天搭博客呢，想着自己能不信赖于像 CSDN 这种网站博客的固定样式，把博客做出自己喜欢的样式。（不只是博客，好像很多事情自己都不愿执拗于别人已有的固定的，想做出自己喜欢的样子，哈哈哈）这带来的后果呢，就是自己动手要多一些，不过嘛，自己醒来想搭博客也是想今天一天要做什么的结果。<span id="more"></span></p>
<p>&amp;emsp;&amp;emsp; 博客采用的是 Github + hexo 搭建的。从很早开始呢，自己就想有一个属于自己的域名，大概是内心的归属感和光鲜感在作怪吧。开头为什么说要为自己冲动作出代价呢，就是因为搭博客一念起，就买了个域名。（/ 拍桌）一开始想买 moonchasing.com 域名的，可是发现这个域名已经被外国人注册。（/ 拍桌）想当年，我注册谷歌帐号时一开始也想采用 moonchasing， 发现同样被人采用了， 无奈改成了 moonchasing1999。 别让我知道是谁，要是同一个人的话，我…… 我….. 我好像也不能咋滴他。看了一下，moonchasing.com 有效期是 2014-6-5 到 2018-6-5， 差不多还有一个月也就到期了， 当时心里有些犯嘀咕， 要不要等他到期了看看他会不会续费再决定呢。顺便也去这个网站看了一下，发现只有几张照片，但照片应该蛮有分量的，心想觉得应该不会续费吧，要不等等再搭博客？可是一时心起呀，怎么会等得了这一个月，又开始急切地去找别的网址。换之伊来命名 zhiyi.com，zhiyi.cn 呢，也被注册了，O（= 自己真的很想要个 com 后缀的域名呀 =）O，之后找到个 mooncika.com，一年 55， 想买下来时发现还要填自己身份信息模板之类的，就暂缓了下，因为其实吧，这个域名自己也并不是特别喜欢，虽然自己 Google 帐号填的名字是 Moon Cika， 但还是偏 MoonChasing 和 Cika 一些， 可是 Cika 域名太贵了，后来在之伊中选择时， 发现 zhiyi.live 不错，还蛮便宜的， 一年的话只要 25，便买下了它，也算是缘分吧。（不过还想 6 月 5 号看下 moonchasing.com 有没有续费，没有的话还是想买下来， QAQ）（闲说两句，想域名的时候脑突然想起 “昨夜闲潭梦落花” 一句，欲以 “闲潭” 二字取域名）</p>
<p>&amp;emsp;&amp;emsp; 第一次搭博客当然遇到蛮多困难的，搭建的时候想着写这篇文章时可以详细地记录下来，不过 11:00 就要断网了，明天还有着随堂测试（/ 拍桌， 一开始本来想着今天能看下概率论的，结果搭了一天博客），现在也没太多心思去记录了。如果以后还能想起，那就再更吧。其实也就是设置网址的时候信息没能与身份证同步、 网络延迟让自己以为自己设置有错、Github 本地库地址选用的不是 ssh 连接导致无法推送（这个卡了挺长时间的），下午呢也算是顺风顺水，优化着博客的界面及增加些功能，社交网络图标一直加载不好（还未解决），晚上遇到两点，因为一开始采用的是英语，后来想到其他人看的原因想换成简体中文，更换语言包后却死活更改不过来，最后无奈， 直接交换两个语言包的名字，问题解决（哈哈哈，我可真是个小机灵鬼呢），还有一个现在还未解决，那就是分享设置。一开始成功了的，可是想在分享渠道中能多加些社交网络，便在 addthis 中更新自己设置的分享栏，设置好后却发现调用不出来…. 这个问题折腾了很久，一直到现在都没能解决。（这个以后一定要解决的，毕竟之前搞好了又搞丢了对一个强迫症来说超心塞）（博客的背景还没设置）</p>
<p>&amp;emsp;&amp;emsp; 想想比起无聊地虚度一天今天还是蛮有意义的，（如果不算花了 25 块钱买了个域名的话），期间呢，还去了两次学校手球场那看了通院办的传统文化活动，用之前的兑奖券换了糖人，香囊，布艺和小灯笼（/ 拍桌，我能说实物和样图严重不符吗， / 哭， 本来想好看的话寄给小姐姐的。）哈哈哈，突然想起今天是 12 点断网，不用麻烦地连热点再发这篇文章啦，开心。</p>
<p>&amp;emsp;&amp;emsp; 零零散散，闲言碎语，这篇建站记就写到这里吧。再不睡觉小姐姐要打我惹，晚安～</p>
<p align="right">2018 年 4 月 27 日 23:21:44</p>

<p align="right">于宿舍</p>

<p align="right">之伊丶</p>

<p><img src="https://raw.githubusercontent.com/MoonChasing/photo/master/photos/2018-5-2_1522420460423.jpg" alt="花"></p>
]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>HelloWorld</title>
    <url>/2018/04/27/HelloWorld/</url>
    <content><![CDATA[<h2 id="程序员的第一篇博客文章，当然是-Hello-world-啦"><a href="#程序员的第一篇博客文章，当然是-Hello-world-啦" class="headerlink" title="程序员的第一篇博客文章，当然是 Hello, world! 啦~"></a>程序员的第一篇博客文章，当然是 Hello, world! 啦～</h2><figure class="highlight c"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">{</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello, world!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

]]></content>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
